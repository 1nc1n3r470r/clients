{"version":3,"file":"app/main.b890e5e6be84267a5b6c.js","mappings":"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B,IAAYC,E,iBAAZ,SAAYA,GACV,mBACA,0BACD,CAHD,CAAYA,IAAAA,EAAkB,I,+BCA9B,IAAYC,E,iBAAZ,SAAYA,GACV,qBACA,+BACA,mBACA,0BACD,CALD,CAAYA,IAAAA,EAAU,I,+BCAtB,IAAYC,E,iBAAZ,SAAYA,GACV,qCACA,2DACA,2DACA,uDACA,mDACA,6EACA,wEACD,CARD,CAAYA,IAAAA,EAAc,I,+BCA1B,IAAYC,E,iBAAZ,SAAYA,GACV,uCACA,sDACA,4CACA,8CACA,gDACA,8CACA,oDACA,8DACA,8DACA,0EAEA,0CACA,0CACA,0CACA,8DACA,8DACA,wCACA,gEACA,oDACA,oFACA,0FACA,oFACA,oEACA,0EACA,oEACA,4DACA,kDACA,4CACA,wFAEA,kDACA,kDACA,kDAEA,wCACA,wCACA,wCAEA,8DACA,kEACA,8DACA,8DACA,0EACA,sEACA,wFACA,4FACA,oFACA,wEACA,0EACA,8DACA,gEAEA,sDACA,8DACA,8EACA,kEACA,4DACA,8DACA,8EACA,gFACA,4EAEA,0CAEA,sDACA,0DACA,sDACA,sDAEA,sEACA,kEACA,sEACA,iFACD,CA1ED,CAAYA,IAAAA,EAAS,I,+BCArB,IAAYC,E,iBAAZ,SAAYA,GACV,mBACA,uBACA,yBACA,sBACD,CALD,CAAYA,IAAAA,EAAS,I,+BCArB,IAAYC,E,6CAAZ,SAAYA,GACV,oCACD,CAFD,CAAYA,IAAAA,EAAO,KAIZ,MAAMC,EAAmBD,EAAQE,cAC3BC,EAAyB,IACzBC,EAAsB,G,+BCHnC,IAAYC,EAMAC,EAUAC,E,oCAhBZ,SAAYF,GACV,6BACA,4BACD,CAHD,CAAYA,IAAAA,EAAa,KAMzB,SAAYC,GACV,yCACA,6BACA,2BACA,qBACA,uBACA,wBACD,CAPD,CAAYA,IAAAA,EAAY,KAUxB,SAAYC,GACV,uBACA,iCACA,6BACA,6BACA,6BACA,qBACA,uBACA,iCACA,2BACA,2BACA,uBACA,uBACA,mBACA,6BACA,yCACA,uCACA,+BACA,6BACA,4BACD,CApBD,CAAYA,IAAAA,EAAgB,I,+BCnB5B,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","sources":["webpack://@bitwarden/web-vault/webpack/runtime/chunk loaded","webpack://@bitwarden/web-vault/webpack/runtime/load script","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-create.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/guards/permissions.guard.ts","webpack://@bitwarden/web-vault/./src/app/shared/loose-components.module.ts","webpack://@bitwarden/web-vault/./src/app/shared/locales.ts","webpack://@bitwarden/web-vault/./src/app/shared/shared.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-badge.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/vault-filter-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/vault-filter.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/themeType.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/themeBuilder.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/theming.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/theming.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/abstractEncrypt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/account/account-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/account/account.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/appId.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/audit.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/auth.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/cryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/environment.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/folder/folder-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/formValidationErrors.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/messaging.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/notifications.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/policy/policy-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/provider.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/search.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/send.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/settings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/stateMigration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/storage.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/token.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/totp.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/twoFactor.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/stateVersion.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/usernameGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/accountFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/globalStateFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/stateFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/environmentUrls.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/account.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/windowState.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/globalState.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/deviceType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/deviceRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/tokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/apiTokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/tokenRequestTwoFactor.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/apiKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/attachmentResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/passwordHistoryResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/cipherResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/attachmentUploadDataResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billingResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billingHistoryResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billingPaymentResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/breachAccountResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/selectionReadOnlyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/collectionResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/deviceVerificationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/globalDomainResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/domainsResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/emergencyAccessResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/ssoEnums.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/eventResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/groupResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identityCaptchaResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identityTokenResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identityTwoFactorResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/keyConnectorUserKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/listResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/ssoConfigApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization/organizationSsoResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationApiKeyInformationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationAutoEnrollStatusResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationConnectionResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationExportResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/keysResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationKeysResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/planResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationSponsorshipSyncStatusResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/subscriptionResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationSubscriptionResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationUserBulkPublicKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationUserBulkResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/permissionsApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationUserResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profileOrganizationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profileProviderOrganizationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profileProviderResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profileResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/paymentResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/policyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/preloginResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerOrganizationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerUserBulkPublicKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerUserBulkResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerUserResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/sendFileApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/sendTextApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sendAccessResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sendFileDownloadDataResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sendResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sendFileUploadDataResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/ssoPreValidateResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/folderResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/syncResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/taxInfoResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/taxRateResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorAuthenticatorResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorDuoResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorEmailResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorProviderResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorRescoverResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorWebAuthnResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorYubiKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/userKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/htmlStorageLocation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/audit.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/throttle.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authenticationStatus.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authenticationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/keySuffixOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/twoFactorProviderType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/authResult.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/keysRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/logIn.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/hashPurpose.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/apiLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/passwordTokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/passwordLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/ssoTokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/ssoLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/preloginRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/sequentialize.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encArrayBuffer.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sortedCiphersCache.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherBulkDeleteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherBulkMoveRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherBulkRestoreRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherWithIdRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherBulkShareRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherCollectionsRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherCreateRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherShareRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cipher.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/wordlist.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encryptedOrganizationKey.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/crypto.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encryptedObject.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/eventData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/eventRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/eventExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/fileUploadType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/azureFileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/bitwardenFileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/folderData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationUserType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/account/setKeyConnectorKeyRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/keyConnectorUserKeyRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/notificationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/notificationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationUserStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/organization.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/generatedPasswordHistory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/policyData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/policy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/resetPasswordPolicyOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/providerUserStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/providerUserType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/provider.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/sendType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/search.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/sendFileData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/sendTextData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/sendData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sendFileView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sendTextView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sendView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sendFile.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sendText.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/sendRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/settings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/storageLocation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/providerData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/state.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/token.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/stateMigration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/organizationData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/sync.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/totp.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/twoFactor.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/account/verifyOTPRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/secretVerificationRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/usernameGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/decryptParameters.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/auth.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/lock.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/unauth.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/modal.ref.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/dynamic-modal.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/modal-injector.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/modal.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/jslib-services.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/appId.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/auth.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/folder/folder.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/folder/folder-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/account/account-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/account/account.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/environment.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/fileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/export.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/notifications.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/webCryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/encrypt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/event.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/policy/policy.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/policy/policy-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/send.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/keyConnector.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/userVerification.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/provider.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/formValidationErrors.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/memoryStorage.service.ts","webpack://@bitwarden/web-vault/./src/app/core/broadcaster-messaging.service.ts","webpack://@bitwarden/web-vault/./src/app/core/event.service.ts","webpack://@bitwarden/web-vault/./src/app/core/html-storage.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/container.service.ts","webpack://@bitwarden/web-vault/./src/app/core/init.service.ts","webpack://@bitwarden/web-vault/./src/app/core/modal.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/a11y-title.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/blur-click.directive.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.html","webpack://@bitwarden/web-vault/./src/app/core/password-reprompt.service.ts","webpack://@bitwarden/web-vault/./src/app/core/policy-list.service.ts","webpack://@bitwarden/web-vault/./src/app/core/router.service.ts","webpack://@bitwarden/web-vault/./src/app/core/state/account.ts","webpack://@bitwarden/web-vault/./src/app/core/state/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileDownload/fileDownloadBuilder.ts","webpack://@bitwarden/web-vault/./src/app/core/web-file-download.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/clientType.ts","webpack://@bitwarden/web-vault/./src/app/core/web-platform-utils.service.ts","webpack://@bitwarden/web-vault/./src/app/core/core.module.ts","webpack://@bitwarden/web-vault/./src/utils/flags.ts","webpack://@bitwarden/web-vault/./src/app/core/state/global-state.ts","webpack://@bitwarden/web-vault/./src/app/core/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/i18n.service.ts","webpack://@bitwarden/web-vault/./src/app/core/state-migration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessAcceptRequest.ts","webpack://@bitwarden/web-vault/./src/app/common/base.accept.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserAcceptRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/passwordHintRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/hint.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/lock.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/logInCredentials.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/captcha_iframe.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/iframe_component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/captchaProtected.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/login.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/login.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/deleteRecoverRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/twoFactorRecoveryRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/inputsFieldMatch.validator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/registerRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/register.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/referenceEventRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/shared/components/password-strength/password-strength.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/shared/components/password-strength/password-strength.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/label.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/submit-button/submit-button.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/submit-button/submit-button.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/register.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/register.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/remove-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserResetPasswordEnrollmentRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/setPasswordRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/change-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/set-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/sso.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/planType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/productType.ts","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-information.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-information.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/families-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/families-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/confirmation-details.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/paymentMethodType.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/confirmation-details.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationCreateRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationKeysRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUpgradeRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerOrganizationCreateRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.ts","webpack://@bitwarden/web-vault/./src/scss/export.module.scss","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/taxInfoUpdateRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationTaxInfoUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.html","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.html","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/billing.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/billing.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/webauthn_iframe.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/twoFactorEmailRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/two-factor.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/stop-click.directive.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/passwordRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/update-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserResetPasswordRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTempPasswordRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/update-temp-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verifyEmailRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verifyDeleteRecoverRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.html","webpack://@bitwarden/web-vault/./src/app/guards/home.guard.ts","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/services/navigation-permissions.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/avatar.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/stop-prop.directive.ts","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.html","webpack://@bitwarden/web-vault/./src/app/components/organization-switcher.component.html","webpack://@bitwarden/web-vault/./src/app/components/organization-switcher.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/layouts/organization-layout.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/layouts/organization-layout.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/selectionReadOnlyRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collection-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collection-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/eventView.ts","webpack://@bitwarden/web-vault/./src/app/common/base.events.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/events.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/groupRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserBulkRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserConfirmRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/common/base.people.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserBulkConfirmRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-remove.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-restore-revoke.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-restore-revoke.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-status.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-status.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/reset-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserInviteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/components/nested-checkbox.component.html","webpack://@bitwarden/web-vault/./src/app/components/nested-checkbox.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserUpdateGroupsRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/people.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/people.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/policyRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/base-policy.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policy-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policy-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policies.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policies.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.html","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/transactionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verifyBankRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/bitPayInvoiceRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/paymentRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-billing.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-billing.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationApiKeyType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationConnectionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/billingSyncConfigApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/billingSyncConfigRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationConnectionRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/billing-sync-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/billing-sync-key.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationApiKeyRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/billing-sync-api-key.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/billing-sync-api-key.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/storageRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.html","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationSubscriptionUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/adjust-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/adjust-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/change-plan.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/change-plan.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/download-license.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/download-license.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/image-subscription-hidden.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/image-subscription-hidden.component.svg","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorDuoRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/twoFactorProviderRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-base.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/deviceVerificationRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorAuthenticatorRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorEmailRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorWebAuthnDeleteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorWebAuthnRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorYubioOtpRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/not-premium.directive.ts","webpack://@bitwarden/web-vault/./src/app/components/premium-badge.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/true-false-value.directive.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.html","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/cipher-report.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/fallback-src.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/icon.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/icon.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/exposed-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/inactive-two-factor-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reused-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/tools.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/tools.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/unsecured-websites-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/weak-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/pipes/pipes.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/vault.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/vault-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-filter/vault-filter.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/models/vault-filter.model.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.html","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/attachments.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/ciphers.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/pipes/get-organization-name.pipe.ts","webpack://@bitwarden/web-vault/./src/app/vault/ciphers.component.html","webpack://@bitwarden/web-vault/./src/app/vault/ciphers.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/ciphers.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.html","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/collections.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/vault-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/collection-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/collection-filter/collection-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/collection-filter/collection-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/folder-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/folder-filter/folder-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/folder-filter/folder-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/status-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/status-filter/status-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/status-filter/status-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/type-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/type-filter/type-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/type-filter/type-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/organization-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/enroll-master-password-reset.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/enroll-master-password-reset.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/link-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/link-sso.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-options.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-options.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-filter/vault-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-delete.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-move.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-move.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-restore.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-restore.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-actions.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-actions.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/organization-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/planSponsorshipType.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/accept-family-sponsorship.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/accept-family-sponsorship.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization/organizationSponsorshipRedeemRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/shared/guards/has-premium.guard.ts","webpack://@bitwarden/web-vault/./src/app/reports/models/report-variant.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/breach-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/breach-report.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icons.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/report-card/report-card.component.html","webpack://@bitwarden/web-vault/./src/app/reports/report-card/report-card.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/report-list/report-list.component.html","webpack://@bitwarden/web-vault/./src/app/reports/report-list/report-list.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reports-home.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports-layout.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/reports-home.component.html","webpack://@bitwarden/web-vault/./src/app/reports/reports-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sendAccessView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sendAccess.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/sendAccessRequest.ts","webpack://@bitwarden/web-vault/./src/app/send/access.component.html","webpack://@bitwarden/web-vault/./src/app/send/access.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/send.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.html","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/send.component.html","webpack://@bitwarden/web-vault/./src/app/send/send.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.html","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emailTokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emailRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateProfileRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.html","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateDomainsRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.html","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/emergencyAccessStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/emergencyAccessType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessConfirmRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessInviteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessPasswordRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.html","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/preferences.component.html","webpack://@bitwarden/web-vault/./src/app/settings/preferences.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/folderWithIdRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/sendWithIdRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateKeyRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/kdfRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security-keys.component.html","webpack://@bitwarden/web-vault/./src/app/settings/security-keys.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security.component.html","webpack://@bitwarden/web-vault/./src/app/settings/security.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/notAllowedValueAsync.validator.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/payment-method.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment-method.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.html","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-billing-history.component.html","webpack://@bitwarden/web-vault/./src/app/settings/user-billing-history.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/subscription-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/generator.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/password-generator-history.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/select-copy.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/color-password.pipe.ts","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.html","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.html","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.html","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/share.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault.module.ts","webpack://@bitwarden/web-vault/./src/app/oss-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/organization-manage.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/organization-user.module.ts","webpack://@bitwarden/web-vault/./src/app/oss.module.ts","webpack://@bitwarden/web-vault/./src/app/wildcard-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerAddOrganizationRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/services/webProvider.service.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/add-organization.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/add-organization.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/guards/provider-type.guard.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/guards/provider.guard.ts","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.html","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/clients.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/clients.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/create-organization.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/create-organization.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserAcceptRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/accept-provider.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/accept-provider.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/events.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/events.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/manage.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/manage.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserBulkRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserConfirmRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserBulkConfirmRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserInviteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserUpdateRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/people.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/people.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-layout.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-layout.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUpdateRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/account.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/account.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/settings.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup-provider.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup-provider.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerSetupRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-routing.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.html","webpack://@bitwarden/web-vault/./src/app/app.component.ts","webpack://@bitwarden/web-vault/./src/app/app.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/disable-personal-vault-export.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/disable-personal-vault-export.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/maximum-vault-timeout.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/maximum-vault-timeout.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/scimConfigApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/scimConfigRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/scim.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/scim.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/dirty.validator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization/organizationSsoRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/ssoConfigView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/view.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/a11y-invalid.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/input-strip-spaces.directive.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/base-cva.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-checkbox.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-checkbox.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-text.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-text.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-text-readonly.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-text-readonly.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/select.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/select.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/sso.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/sso.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/organizations-routing.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/organizations.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/main.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/callout.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/callout.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/user-verification.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/user-verification.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/api-action.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/autofocus.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/input-verbatim.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/toastr.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/credit-card-number.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/jslib.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/i18n.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/search.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/user-name.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/validation.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/models/dynamic-tree-node.model.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/services/vault-filter.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/cipher.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/crypto.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/event.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/export.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileDownload/fileDownload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/folder/folder.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/keyConnector.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/log.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/platformUtils.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/policy/policy.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/sync.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/userVerification.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/cipherRepromptType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/cipherType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/encryptionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/eventType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/fieldType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/kdfType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/linkedIdType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/permissions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/policyType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/secureNoteType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/uriMatchType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/verificationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/linkedFieldOption.decorator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/treeNode.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/serviceUtils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/tldjs.noop.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/utils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/cardApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/fieldApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/identityApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/loginApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/loginUriApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/secureNoteApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/attachmentData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/cardData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/cipherData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/collectionData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/fieldData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/identityData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/loginData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/loginUriData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/passwordHistoryData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/secureNoteData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/attachment.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/card.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/cipher.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/collection.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/domainBase.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encString.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/field.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/folder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/identity.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/login.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/loginUri.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/masterPasswordPolicyOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/password.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/secureNote.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/symmetricCryptoKey.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cardExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/fieldExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/identityExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/loginUriExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/loginExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/secureNoteExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cipherExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cipherWithIdsExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/collectionExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/collectionWithIdExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/folderExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/folderWithIdExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/attachmentRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/collectionRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/folderRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/baseResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/errorResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/attachmentView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/cardView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/cipherView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/collectionView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/fieldView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/folderView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/identityView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/itemView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/loginUriView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/loginView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/passwordHistoryView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/secureNoteView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/logLevelType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/consoleLog.service.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge/badge.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/error-summary.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/error.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/hint.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/prefix.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/suffix.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge/badge.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/banner/banner.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/banner/banner.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/banner/banner.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/input/input.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/dialog.service.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/dialog.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/submit-button/submit-button.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/link/link.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/link/link.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tabs.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-item.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-item.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/toggle-group/toggle-group.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/toggle-group/toggle-group.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/toggle-group/toggle-group.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/input/input.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-divider.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-divider.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-item.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-trigger-for.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.component.ts","webpack://@bitwarden/web-vault/webpack/bootstrap","webpack://@bitwarden/web-vault/webpack/runtime/compat get default export","webpack://@bitwarden/web-vault/webpack/runtime/define property getters","webpack://@bitwarden/web-vault/webpack/runtime/ensure chunk","webpack://@bitwarden/web-vault/webpack/runtime/get javascript chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/get mini-css chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/global","webpack://@bitwarden/web-vault/webpack/runtime/hasOwnProperty shorthand","webpack://@bitwarden/web-vault/webpack/runtime/make namespace object","webpack://@bitwarden/web-vault/webpack/runtime/node module decorator","webpack://@bitwarden/web-vault/webpack/runtime/publicPath","webpack://@bitwarden/web-vault/webpack/runtime/jsonp chunk loading","webpack://@bitwarden/web-vault/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"@bitwarden/web-vault:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { RegisterFormComponent } from \"./register-form.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [RegisterFormComponent],\n  exports: [RegisterFormComponent],\n})\nexport class RegisterFormModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { OrganizationInformationComponent } from \"./organization-information.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [OrganizationInformationComponent],\n  exports: [OrganizationInformationComponent],\n})\nexport class OrganizationCreateModule {}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { Permissions } from \"@bitwarden/common/enums/permissions\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class PermissionsGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private syncService: SyncService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    // TODO: We need to fix this issue once and for all.\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n\n    const org = await this.organizationService.get(route.params.organizationId);\n    if (org == null) {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    if (!org.isOwner && !org.enabled) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"organizationIsDisabled\")\n      );\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    const permissions = route.data == null ? [] : (route.data.permissions as Permissions[]);\n    if (permissions != null && !org.hasAnyPermission(permissions)) {\n      // Handle linkable ciphers for organizations the user only has view access to\n      // https://bitwarden.atlassian.net/browse/EC-203\n      const cipherId =\n        state.root.queryParamMap.get(\"itemId\") || state.root.queryParamMap.get(\"cipherId\");\n      if (cipherId) {\n        return this.router.createUrlTree([\"/vault\"], {\n          queryParams: {\n            itemId: cipherId,\n          },\n        });\n      }\n\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"accessDenied\"));\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    return true;\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { UserVerificationComponent } from \"@bitwarden/angular/components/user-verification.component\";\n\nimport { AcceptEmergencyComponent } from \"../accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"../accounts/accept-organization.component\";\nimport { HintComponent } from \"../accounts/hint.component\";\nimport { LockComponent } from \"../accounts/lock.component\";\nimport { LoginComponent } from \"../accounts/login.component\";\nimport { RecoverDeleteComponent } from \"../accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"../accounts/recover-two-factor.component\";\nimport { RegisterFormModule } from \"../accounts/register-form/register-form.module\";\nimport { RegisterComponent } from \"../accounts/register.component\";\nimport { RemovePasswordComponent } from \"../accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"../accounts/set-password.component\";\nimport { SsoComponent } from \"../accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"../accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"../accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"../accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"../accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"../accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"../accounts/verify-recover-delete.component\";\nimport { NestedCheckboxComponent } from \"../components/nested-checkbox.component\";\nimport { OrganizationSwitcherComponent } from \"../components/organization-switcher.component\";\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\nimport { PremiumBadgeComponent } from \"../components/premium-badge.component\";\nimport { FooterComponent } from \"../layouts/footer.component\";\nimport { FrontendLayoutComponent } from \"../layouts/frontend-layout.component\";\nimport { NavbarComponent } from \"../layouts/navbar.component\";\nimport { UserLayoutComponent } from \"../layouts/user-layout.component\";\nimport { OrganizationCreateModule } from \"../organizations/create/organization-create.module\";\nimport { OrganizationLayoutComponent } from \"../organizations/layouts/organization-layout.component\";\nimport { BulkConfirmComponent as OrgBulkConfirmComponent } from \"../organizations/manage/bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent as OrgBulkRemoveComponent } from \"../organizations/manage/bulk/bulk-remove.component\";\nimport { BulkRestoreRevokeComponent as OrgBulkRestoreRevokeComponent } from \"../organizations/manage/bulk/bulk-restore-revoke.component\";\nimport { BulkStatusComponent as OrgBulkStatusComponent } from \"../organizations/manage/bulk/bulk-status.component\";\nimport { CollectionAddEditComponent as OrgCollectionAddEditComponent } from \"../organizations/manage/collection-add-edit.component\";\nimport { CollectionsComponent as OrgManageCollectionsComponent } from \"../organizations/manage/collections.component\";\nimport { EntityEventsComponent as OrgEntityEventsComponent } from \"../organizations/manage/entity-events.component\";\nimport { EventsComponent as OrgEventsComponent } from \"../organizations/manage/events.component\";\nimport { GroupAddEditComponent as OrgGroupAddEditComponent } from \"../organizations/manage/group-add-edit.component\";\nimport { GroupsComponent as OrgGroupsComponent } from \"../organizations/manage/groups.component\";\nimport { ManageComponent as OrgManageComponent } from \"../organizations/manage/manage.component\";\nimport { PeopleComponent as OrgPeopleComponent } from \"../organizations/manage/people.component\";\nimport { PoliciesComponent as OrgPoliciesComponent } from \"../organizations/manage/policies.component\";\nimport { PolicyEditComponent as OrgPolicyEditComponent } from \"../organizations/manage/policy-edit.component\";\nimport { ResetPasswordComponent as OrgResetPasswordComponent } from \"../organizations/manage/reset-password.component\";\nimport { UserAddEditComponent as OrgUserAddEditComponent } from \"../organizations/manage/user-add-edit.component\";\nimport { UserConfirmComponent as OrgUserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\nimport { UserGroupsComponent as OrgUserGroupsComponent } from \"../organizations/manage/user-groups.component\";\nimport { DisableSendPolicyComponent } from \"../organizations/policies/disable-send.component\";\nimport { MasterPasswordPolicyComponent } from \"../organizations/policies/master-password.component\";\nimport { PasswordGeneratorPolicyComponent } from \"../organizations/policies/password-generator.component\";\nimport { PersonalOwnershipPolicyComponent } from \"../organizations/policies/personal-ownership.component\";\nimport { RequireSsoPolicyComponent } from \"../organizations/policies/require-sso.component\";\nimport { ResetPasswordPolicyComponent } from \"../organizations/policies/reset-password.component\";\nimport { SendOptionsPolicyComponent } from \"../organizations/policies/send-options.component\";\nimport { SingleOrgPolicyComponent } from \"../organizations/policies/single-org.component\";\nimport { TwoFactorAuthenticationPolicyComponent } from \"../organizations/policies/two-factor-authentication.component\";\nimport { AccountComponent as OrgAccountComponent } from \"../organizations/settings/account.component\";\nimport { AdjustSubscription } from \"../organizations/settings/adjust-subscription.component\";\nimport { BillingSyncApiKeyComponent } from \"../organizations/settings/billing-sync-api-key.component\";\nimport { ChangePlanComponent } from \"../organizations/settings/change-plan.component\";\nimport { DeleteOrganizationComponent } from \"../organizations/settings/delete-organization.component\";\nimport { DownloadLicenseComponent } from \"../organizations/settings/download-license.component\";\nimport { ImageSubscriptionHiddenComponent as OrgSubscriptionHiddenComponent } from \"../organizations/settings/image-subscription-hidden.component\";\nimport { OrganizationBillingComponent } from \"../organizations/settings/organization-billing.component\";\nimport { OrganizationSubscriptionComponent } from \"../organizations/settings/organization-subscription.component\";\nimport { SettingsComponent as OrgSettingComponent } from \"../organizations/settings/settings.component\";\nimport { TwoFactorSetupComponent as OrgTwoFactorSetupComponent } from \"../organizations/settings/two-factor-setup.component\";\nimport { AcceptFamilySponsorshipComponent } from \"../organizations/sponsorships/accept-family-sponsorship.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"../organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent } from \"../organizations/tools/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent } from \"../organizations/tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent } from \"../organizations/tools/reused-passwords-report.component\";\nimport { ToolsComponent as OrgToolsComponent } from \"../organizations/tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent } from \"../organizations/tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent } from \"../organizations/tools/weak-passwords-report.component\";\nimport { AddEditComponent as OrgAddEditComponent } from \"../organizations/vault/add-edit.component\";\nimport { AttachmentsComponent as OrgAttachmentsComponent } from \"../organizations/vault/attachments.component\";\nimport { CollectionsComponent as OrgCollectionsComponent } from \"../organizations/vault/collections.component\";\nimport { ProvidersComponent } from \"../providers/providers.component\";\nimport { AccessComponent } from \"../send/access.component\";\nimport { AddEditComponent as SendAddEditComponent } from \"../send/add-edit.component\";\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"../send/efflux-dates.component\";\nimport { SendComponent } from \"../send/send.component\";\nimport { AccountComponent } from \"../settings/account.component\";\nimport { AddCreditComponent } from \"../settings/add-credit.component\";\nimport { AdjustPaymentComponent } from \"../settings/adjust-payment.component\";\nimport { AdjustStorageComponent } from \"../settings/adjust-storage.component\";\nimport { ApiKeyComponent } from \"../settings/api-key.component\";\nimport { BillingSyncKeyComponent } from \"../settings/billing-sync-key.component\";\nimport { ChangeEmailComponent } from \"../settings/change-email.component\";\nimport { ChangeKdfComponent } from \"../settings/change-kdf.component\";\nimport { ChangePasswordComponent } from \"../settings/change-password.component\";\nimport { CreateOrganizationComponent } from \"../settings/create-organization.component\";\nimport { DeauthorizeSessionsComponent } from \"../settings/deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"../settings/delete-account.component\";\nimport { DomainRulesComponent } from \"../settings/domain-rules.component\";\nimport { EmergencyAccessAddEditComponent } from \"../settings/emergency-access-add-edit.component\";\nimport { EmergencyAccessAttachmentsComponent } from \"../settings/emergency-access-attachments.component\";\nimport { EmergencyAccessConfirmComponent } from \"../settings/emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"../settings/emergency-access-takeover.component\";\nimport { EmergencyAccessViewComponent } from \"../settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"../settings/emergency-access.component\";\nimport { EmergencyAddEditComponent } from \"../settings/emergency-add-edit.component\";\nimport { OrganizationPlansComponent } from \"../settings/organization-plans.component\";\nimport { PaymentMethodComponent } from \"../settings/payment-method.component\";\nimport { PaymentComponent } from \"../settings/payment.component\";\nimport { PreferencesComponent } from \"../settings/preferences.component\";\nimport { PremiumComponent } from \"../settings/premium.component\";\nimport { ProfileComponent } from \"../settings/profile.component\";\nimport { PurgeVaultComponent } from \"../settings/purge-vault.component\";\nimport { SecurityKeysComponent } from \"../settings/security-keys.component\";\nimport { SecurityComponent } from \"../settings/security.component\";\nimport { SettingsComponent } from \"../settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"../settings/sponsored-families.component\";\nimport { SponsoringOrgRowComponent } from \"../settings/sponsoring-org-row.component\";\nimport { SubscriptionComponent } from \"../settings/subscription.component\";\nimport { TaxInfoComponent } from \"../settings/tax-info.component\";\nimport { TwoFactorAuthenticatorComponent } from \"../settings/two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"../settings/two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"../settings/two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"../settings/two-factor-recovery.component\";\nimport { TwoFactorSetupComponent } from \"../settings/two-factor-setup.component\";\nimport { TwoFactorVerifyComponent } from \"../settings/two-factor-verify.component\";\nimport { TwoFactorWebAuthnComponent } from \"../settings/two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"../settings/two-factor-yubikey.component\";\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\nimport { UpdateLicenseComponent } from \"../settings/update-license.component\";\nimport { UserBillingHistoryComponent } from \"../settings/user-billing-history.component\";\nimport { UserSubscriptionComponent } from \"../settings/user-subscription.component\";\nimport { VaultTimeoutInputComponent } from \"../settings/vault-timeout-input.component\";\nimport { VerifyEmailComponent } from \"../settings/verify-email.component\";\nimport { GeneratorComponent } from \"../tools/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"../tools/password-generator-history.component\";\nimport { ToolsComponent } from \"../tools/tools.component\";\nimport { AddEditCustomFieldsComponent } from \"../vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"../vault/add-edit.component\";\nimport { AttachmentsComponent } from \"../vault/attachments.component\";\nimport { BulkActionsComponent } from \"../vault/bulk-actions.component\";\nimport { BulkDeleteComponent } from \"../vault/bulk-delete.component\";\nimport { BulkMoveComponent } from \"../vault/bulk-move.component\";\nimport { BulkRestoreComponent } from \"../vault/bulk-restore.component\";\nimport { BulkShareComponent } from \"../vault/bulk-share.component\";\nimport { CollectionsComponent } from \"../vault/collections.component\";\nimport { FolderAddEditComponent } from \"../vault/folder-add-edit.component\";\nimport { OrganizationBadgeModule } from \"../vault/organization-badge/organization-badge.module\";\nimport { ShareComponent } from \"../vault/share.component\";\nimport { VaultFilterModule } from \"../vault/vault-filter/vault-filter.module\";\n\nimport { SharedModule } from \".\";\n\n// Please do not add to this list of declarations - we should refactor these into modules when doing so makes sense until there are none left.\n// If you are building new functionality, please create or extend a feature module instead.\n@NgModule({\n  imports: [\n    SharedModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    OrganizationCreateModule,\n    RegisterFormModule,\n  ],\n  declarations: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptFamilySponsorshipComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    AdjustSubscription,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    BillingSyncApiKeyComponent,\n    BillingSyncKeyComponent,\n    BulkActionsComponent,\n    BulkDeleteComponent,\n    BulkMoveComponent,\n    BulkRestoreComponent,\n    BulkShareComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    ChangePlanComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DeleteOrganizationComponent,\n    DisableSendPolicyComponent,\n    DomainRulesComponent,\n    DownloadLicenseComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    HintComponent,\n    LockComponent,\n    LoginComponent,\n    MasterPasswordPolicyComponent,\n    NavbarComponent,\n    NestedCheckboxComponent,\n    OrganizationSwitcherComponent,\n    OrgAccountComponent,\n    OrgAddEditComponent,\n    OrganizationBillingComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrganizationSubscriptionComponent,\n    OrgAttachmentsComponent,\n    OrgBulkConfirmComponent,\n    OrgBulkRestoreRevokeComponent,\n    OrgBulkRemoveComponent,\n    OrgBulkStatusComponent,\n    OrgCollectionAddEditComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEventsComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgGroupAddEditComponent,\n    OrgGroupsComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgPeopleComponent,\n    OrgPoliciesComponent,\n    OrgPolicyEditComponent,\n    OrgResetPasswordComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgSettingComponent,\n    OrgToolsComponent,\n    OrgTwoFactorSetupComponent,\n    OrgSubscriptionHiddenComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserAddEditComponent,\n    OrgUserConfirmComponent,\n    OrgUserGroupsComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordGeneratorPolicyComponent,\n    PasswordRepromptComponent,\n    PaymentComponent,\n    PaymentMethodComponent,\n    PersonalOwnershipPolicyComponent,\n    PreferencesComponent,\n    PremiumBadgeComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RegisterComponent,\n    RemovePasswordComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    SecurityComponent,\n    SecurityKeysComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SendOptionsPolicyComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SingleOrgPolicyComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    SubscriptionComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    UserBillingHistoryComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n  ],\n  exports: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    AdjustSubscription,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    BulkActionsComponent,\n    BulkDeleteComponent,\n    BulkMoveComponent,\n    BulkRestoreComponent,\n    BulkShareComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    ChangePlanComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DeleteOrganizationComponent,\n    DisableSendPolicyComponent,\n    DomainRulesComponent,\n    DownloadLicenseComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    HintComponent,\n    LockComponent,\n    LoginComponent,\n    MasterPasswordPolicyComponent,\n    NavbarComponent,\n    NestedCheckboxComponent,\n    OrganizationSwitcherComponent,\n    OrgAccountComponent,\n    OrgAddEditComponent,\n    OrganizationBillingComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrganizationSubscriptionComponent,\n    OrgAttachmentsComponent,\n    OrgBulkConfirmComponent,\n    OrgBulkRestoreRevokeComponent,\n    OrgBulkRemoveComponent,\n    OrgBulkStatusComponent,\n    OrgCollectionAddEditComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEventsComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgGroupAddEditComponent,\n    OrgGroupsComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgPeopleComponent,\n    OrgPoliciesComponent,\n    OrgPolicyEditComponent,\n    OrgResetPasswordComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgSettingComponent,\n    OrgToolsComponent,\n    OrgTwoFactorSetupComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserAddEditComponent,\n    OrgUserConfirmComponent,\n    OrgUserGroupsComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordGeneratorPolicyComponent,\n    PasswordRepromptComponent,\n    PaymentComponent,\n    PaymentMethodComponent,\n    PersonalOwnershipPolicyComponent,\n    PreferencesComponent,\n    PremiumBadgeComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RegisterComponent,\n    RemovePasswordComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    SecurityComponent,\n    SecurityKeysComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SendOptionsPolicyComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SingleOrgPolicyComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    SubscriptionComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    UserBillingHistoryComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n  ],\n})\nexport class LooseComponentsModule {}\n","import { registerLocaleData } from \"@angular/common\";\nimport localeAf from \"@angular/common/locales/af\";\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBe from \"@angular/common/locales/be\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeBn from \"@angular/common/locales/bn\";\nimport localeBs from \"@angular/common/locales/bs\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEo from \"@angular/common/locales/eo\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFil from \"@angular/common/locales/fil\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHi from \"@angular/common/locales/hi\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKa from \"@angular/common/locales/ka\";\nimport localeKm from \"@angular/common/locales/km\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localeNn from \"@angular/common/locales/nn\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSi from \"@angular/common/locales/si\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSl from \"@angular/common/locales/sl\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeVi from \"@angular/common/locales/vi\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\n\nregisterLocaleData(localeAf, \"af\");\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBe, \"be\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeBn, \"bn\");\nregisterLocaleData(localeBs, \"bs\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEo, \"eo\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFil, \"fil\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHi, \"hi\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKa, \"ka\");\nregisterLocaleData(localeKm, \"km\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localeNn, \"nn\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSi, \"si\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSl, \"sl\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeVi, \"vi\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { DatePipe, CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\nimport { ToastrModule } from \"ngx-toastr\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport {\n  BadgeModule,\n  ButtonModule,\n  CalloutModule,\n  FormFieldModule,\n  SubmitButtonModule,\n  MenuModule,\n  IconModule,\n} from \"@bitwarden/components\";\n\n// Register the locales for the application\nimport \"./locales\";\n\n/**\n * This NgModule should contain the most basic shared directives, pipes, and components. They\n * should be widely used by other modules to be considered for adding to this module. If in doubt\n * do not add to this module.\n *\n * See: https://angular.io/guide/module-types#shared-ngmodules\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    InfiniteScrollModule,\n    JslibModule,\n    ReactiveFormsModule,\n    RouterModule,\n    BadgeModule,\n    ButtonModule,\n    CalloutModule,\n    ToastrModule,\n    BadgeModule,\n    ButtonModule,\n    MenuModule,\n    FormFieldModule,\n    SubmitButtonModule,\n    IconModule,\n  ],\n  exports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    InfiniteScrollModule,\n    JslibModule,\n    ReactiveFormsModule,\n    RouterModule,\n    BadgeModule,\n    ButtonModule,\n    CalloutModule,\n    ToastrModule,\n    BadgeModule,\n    ButtonModule,\n    MenuModule,\n    FormFieldModule,\n    SubmitButtonModule,\n    IconModule,\n  ],\n  providers: [DatePipe],\n  bootstrap: [],\n})\nexport class SharedModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { OrganizationNameBadgeComponent } from \"./organization-name-badge.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [OrganizationNameBadgeComponent],\n  exports: [OrganizationNameBadgeComponent],\n})\nexport class OrganizationBadgeModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\n\nimport { CollectionFilterComponent } from \"./collection-filter/collection-filter.component\";\nimport { FolderFilterComponent } from \"./folder-filter/folder-filter.component\";\nimport { StatusFilterComponent } from \"./status-filter/status-filter.component\";\nimport { TypeFilterComponent } from \"./type-filter/type-filter.component\";\nimport { VaultFilterService } from \"./vault-filter.service\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [\n    CollectionFilterComponent,\n    FolderFilterComponent,\n    StatusFilterComponent,\n    TypeFilterComponent,\n  ],\n  exports: [\n    SharedModule,\n    CollectionFilterComponent,\n    FolderFilterComponent,\n    StatusFilterComponent,\n    TypeFilterComponent,\n  ],\n  providers: [VaultFilterService],\n})\nexport class VaultFilterSharedModule {}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { DynamicTreeNode } from \"@bitwarden/angular/vault/vault-filter/models/dynamic-tree-node.model\";\nimport { VaultFilterService as BaseVaultFilterService } from \"@bitwarden/angular/vault/vault-filter/services/vault-filter.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collectionResponse\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Injectable()\nexport class VaultFilterService extends BaseVaultFilterService {\n  private _collapsedFilterNodes = new BehaviorSubject<Set<string>>(null);\n  collapsedFilterNodes$: Observable<Set<string>> = this._collapsedFilterNodes.asObservable();\n\n  constructor(\n    stateService: StateService,\n    organizationService: OrganizationService,\n    folderService: FolderService,\n    cipherService: CipherService,\n    collectionService: CollectionService,\n    policyService: PolicyService,\n    private i18nService: I18nService,\n    protected apiService: ApiService\n  ) {\n    super(\n      stateService,\n      organizationService,\n      folderService,\n      cipherService,\n      collectionService,\n      policyService\n    );\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    const nodes = await super.buildCollapsedFilterNodes();\n    this._collapsedFilterNodes.next(nodes);\n    return nodes;\n  }\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await super.storeCollapsedFilterNodes(collapsedFilterNodes);\n    this._collapsedFilterNodes.next(collapsedFilterNodes);\n  }\n\n  async ensureVaultFiltersAreExpanded() {\n    const collapsedFilterNodes = await super.buildCollapsedFilterNodes();\n    if (!collapsedFilterNodes.has(\"vaults\")) {\n      return;\n    }\n    collapsedFilterNodes.delete(\"vaults\");\n    await this.storeCollapsedFilterNodes(collapsedFilterNodes);\n  }\n\n  async buildAdminCollections(organizationId: string) {\n    let result: CollectionView[] = [];\n    const collectionResponse = await this.apiService.getCollections(organizationId);\n    if (collectionResponse?.data != null && collectionResponse.data.length) {\n      const collectionDomains = collectionResponse.data.map(\n        (r: CollectionDetailsResponse) => new Collection(new CollectionData(r))\n      );\n      result = await this.collectionService.decryptMany(collectionDomains);\n    }\n\n    const noneCollection = new CollectionView();\n    noneCollection.name = this.i18nService.t(\"unassigned\");\n    noneCollection.organizationId = organizationId;\n    result.push(noneCollection);\n\n    const nestedCollections = await this.collectionService.getAllNested(result);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: result,\n      nestedList: nestedCollections,\n    });\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { LinkSsoComponent } from \"./organization-filter/link-sso.component\";\nimport { OrganizationFilterComponent } from \"./organization-filter/organization-filter.component\";\nimport { OrganizationOptionsComponent } from \"./organization-filter/organization-options.component\";\nimport { VaultFilterSharedModule } from \"./shared/vault-filter-shared.module\";\nimport { VaultFilterComponent } from \"./vault-filter.component\";\n\n@NgModule({\n  imports: [VaultFilterSharedModule],\n  declarations: [\n    VaultFilterComponent,\n    OrganizationFilterComponent,\n    OrganizationOptionsComponent,\n    LinkSsoComponent,\n  ],\n  exports: [VaultFilterComponent],\n})\nexport class VaultFilterModule {}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport class ThemeBuilder implements Theme {\n  get effectiveTheme(): ThemeType {\n    return this.configuredTheme != ThemeType.System ? this.configuredTheme : this.systemTheme;\n  }\n\n  constructor(readonly configuredTheme: ThemeType, readonly systemTheme: ThemeType) {}\n\n  updateSystemTheme(systemTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(this.configuredTheme, systemTheme);\n  }\n\n  updateConfiguredTheme(configuredTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(configuredTheme, this.systemTheme);\n  }\n}\n","import { DOCUMENT } from \"@angular/common\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, filter, fromEvent, Observable } from \"rxjs\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { WINDOW } from \"../jslib-services.module\";\n\nimport { Theme } from \"./theme\";\nimport { ThemeBuilder } from \"./themeBuilder\";\nimport { AbstractThemingService } from \"./theming.service.abstraction\";\n\n@Injectable()\nexport class ThemingService implements AbstractThemingService {\n  private _theme = new BehaviorSubject<ThemeBuilder | null>(null);\n  theme$: Observable<Theme> = this._theme.pipe(filter((x) => x !== null));\n\n  constructor(\n    private stateService: StateService,\n    @Inject(WINDOW) private window: Window,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.monitorThemeChanges();\n  }\n\n  async monitorThemeChanges(): Promise<void> {\n    this._theme.next(\n      new ThemeBuilder(await this.stateService.getTheme(), await this.getSystemTheme())\n    );\n    this.monitorConfiguredThemeChanges();\n    this.monitorSystemThemeChanges();\n  }\n\n  updateSystemTheme(systemTheme: ThemeType): void {\n    this._theme.next(this._theme.getValue().updateSystemTheme(systemTheme));\n  }\n\n  async updateConfiguredTheme(theme: ThemeType): Promise<void> {\n    await this.stateService.setTheme(theme);\n    this._theme.next(this._theme.getValue().updateConfiguredTheme(theme));\n  }\n\n  protected monitorConfiguredThemeChanges(): void {\n    this.theme$.subscribe((theme: Theme) => {\n      this.document.documentElement.classList.remove(\n        \"theme_\" + ThemeType.Light,\n        \"theme_\" + ThemeType.Dark,\n        \"theme_\" + ThemeType.Nord,\n        \"theme_\" + ThemeType.SolarizedDark\n      );\n      this.document.documentElement.classList.add(\"theme_\" + theme.effectiveTheme);\n    });\n  }\n\n  // We use a media match query for monitoring the system theme on web and browser, but this doesn't work for electron apps on Linux.\n  // In desktop we override these methods to track systemTheme with the electron renderer instead, which works for all OSs.\n  protected async getSystemTheme(): Promise<ThemeType> {\n    return this.window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ? ThemeType.Dark\n      : ThemeType.Light;\n  }\n\n  protected monitorSystemThemeChanges(): void {\n    fromEvent<MediaQueryListEvent>(\n      this.window.matchMedia(\"(prefers-color-scheme: dark)\"),\n      \"change\"\n    ).subscribe((event) => {\n      this.updateSystemTheme(event.matches ? ThemeType.Dark : ThemeType.Light);\n    });\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport abstract class AbstractThemingService {\n  theme$: Observable<Theme>;\n  monitorThemeChanges: () => Promise<void>;\n  updateSystemTheme: (systemTheme: ThemeType) => void;\n  updateConfiguredTheme: (theme: ThemeType) => Promise<void>;\n}\n","import { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { IEncrypted } from \"../interfaces/IEncrypted\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport abstract class AbstractEncryptService {\n  abstract encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString>;\n  abstract encryptToBytes: (\n    plainValue: ArrayBuffer,\n    key?: SymmetricCryptoKey\n  ) => Promise<EncArrayBuffer>;\n  abstract decryptToUtf8: (encString: EncString, key: SymmetricCryptoKey) => Promise<string>;\n  abstract decryptToBytes: (encThing: IEncrypted, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  abstract resolveLegacyKey: (key: SymmetricCryptoKey, encThing: IEncrypted) => SymmetricCryptoKey;\n}\n","import { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\n\nexport abstract class AccountApiService {\n  abstract deleteAccount(request: SecretVerificationRequest): Promise<void>;\n}\n","import { Verification } from \"../../types/verification\";\n\nexport abstract class AccountService {\n  abstract delete(verification: Verification): Promise<any>;\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\n\nexport abstract class AuthService {\n  masterPasswordHash: string;\n  email: string;\n  logIn: (\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ) => Promise<AuthResult>;\n  logOut: (callback: () => void) => void;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n  getAuthStatus: (userId?: string) => Promise<AuthenticationStatus>;\n}\n","export abstract class BroadcasterService {\n  send: (message: any, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: any) => any) => void;\n  unsubscribe: (id: string) => void;\n}\n","import { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n  scim?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  getScimUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n}\n","import { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","import { Folder } from \"@bitwarden/common/models/domain/folder\";\nimport { FolderResponse } from \"@bitwarden/common/models/response/folderResponse\";\n\nexport class FolderApiServiceAbstraction {\n  save: (folder: Folder) => Promise<any>;\n  delete: (id: string) => Promise<any>;\n  get: (id: string) => Promise<FolderResponse>;\n}\n","import { AbstractControl } from \"@angular/forms\";\nexport interface AllValidationErrors {\n  controlName: string;\n  errorName: string;\n}\n\nexport interface FormGroupControls {\n  [key: string]: AbstractControl;\n}\n\nexport abstract class FormValidationErrorsService {\n  getFormValidationErrors: (controls: FormGroupControls) => AllValidationErrors[];\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\n\nexport abstract class PasswordGenerationService {\n  generatePassword: (options: any) => Promise<string>;\n  generatePassphrase: (options: any) => Promise<string>;\n  getOptions: () => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: any\n  ) => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: any) => Promise<any>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) => void;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","import { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nexport class PolicyApiServiceAbstraction {\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPolicyForOrganization: (policyType: PolicyType, organizationId: string) => Promise<Policy>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  putPolicy: (organizationId: string, type: PolicyType, request: PolicyRequest) => Promise<any>;\n}\n","import { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","import { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","export abstract class SettingsService {\n  clearCache: () => Promise<void>;\n  getEquivalentDomains: () => Promise<any>;\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  clear: (userId?: string) => Promise<void>;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { StorageOptions } from \"../models/domain/storageOptions\";\n\nexport abstract class AbstractStorageService {\n  abstract get<T>(key: string, options?: StorageOptions): Promise<T>;\n  abstract has(key: string, options?: StorageOptions): Promise<boolean>;\n  abstract save<T>(key: string, obj: T, options?: StorageOptions): Promise<void>;\n  abstract remove(key: string, options?: StorageOptions): Promise<void>;\n}\n","import { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  setTwoFactorToken: (tokenResponse: IdentityTokenResponse) => Promise<any>;\n  getTwoFactorToken: () => Promise<string>;\n  clearTwoFactorToken: () => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n}\n","import { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport interface TwoFactorProviderDetails {\n  type: TwoFactorProviderType;\n  name: string;\n  description: string;\n  priority: number;\n  sort: number;\n  premium: boolean;\n}\n\nexport abstract class TwoFactorService {\n  init: () => void;\n  getSupportedProviders: (win: Window) => TwoFactorProviderDetails[];\n  getDefaultProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  setSelectedProvider: (type: TwoFactorProviderType) => void;\n  clearSelectedProvider: () => void;\n\n  setProviders: (response: IdentityTwoFactorResponse) => void;\n  clearProviders: () => void;\n  getProviders: () => Map<TwoFactorProviderType, { [key: string]: string }>;\n}\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Five = 5, // Migrate to new storage of encrypted organization keys\n  Six = 6, // Delete account.keys.legacyEtmKey property\n  Latest = Six,\n}\n","export abstract class UsernameGenerationService {\n  generateUsername: (options: any) => Promise<string>;\n  generateWord: (options: any) => Promise<string>;\n  generateSubaddress: (options: any) => Promise<string>;\n  generateCatchall: (options: any) => Promise<string>;\n  generateForwarded: (options: any) => Promise<string>;\n  getOptions: () => Promise<any>;\n  saveOptions: (options: any) => Promise<void>;\n}\n","export abstract class VaultTimeoutService {\n  checkVaultTimeout: () => Promise<void>;\n  lock: (allowSoftLock?: boolean, userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: () => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<any>;\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/globalState\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/globalState\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","export class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n}\n","import { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CollectionData } from \"../data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../data/eventData\";\nimport { FolderData } from \"../data/folderData\";\nimport { OrganizationData } from \"../data/organizationData\";\nimport { PolicyData } from \"../data/policyData\";\nimport { ProviderData } from \"../data/providerData\";\nimport { SendData } from \"../data/sendData\";\nimport { CipherView } from \"../view/cipherView\";\nimport { CollectionView } from \"../view/collectionView\";\nimport { SendView } from \"../view/sendView\";\n\nimport { EncString } from \"./encString\";\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { GeneratedPasswordHistory } from \"./generatedPasswordHistory\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n  decryptedSerialized?: string;\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\n// This is a temporary structure to handle migrated `DataEncryptionPair` to\n//  avoid needing a data migration at this stage. It should be replaced with\n//  proper data migrations when `DataEncryptionPair` is deprecated.\nexport class TemporaryDataEncryption<TEncrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders? = new TemporaryDataEncryption<FolderData>();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Map<string, SymmetricCryptoKey>\n  > = new EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Map<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  publicKey?: ArrayBuffer;\n  publicKeySerialized?: string;\n  apiKeyClientSecret?: string;\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  hasPremiumFromOrganization?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  enableGravitars?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  usernameGenerationOptions?: any;\n  generatorOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: any; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n}\n\nexport class AccountTokens {\n  accessToken?: string;\n  decodedToken?: any;\n  refreshToken?: string;\n  securityStamp?: string;\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { WindowState } from \"./windowState\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string;\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","import { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n\n  constructor(protected twoFactor: TokenRequestTwoFactor, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenRequestTwoFactor) {\n    this.twoFactor = twoFactor;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    if (this.twoFactor.token && this.twoFactor.provider != null) {\n      obj.twoFactorToken = this.twoFactor.token;\n      obj.twoFactorProvider = this.twoFactor.provider;\n      obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n    }\n\n    return obj;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class ApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","import { TwoFactorProviderType } from \"../../../enums/twoFactorProviderType\";\n\nexport class TokenRequestTwoFactor {\n  constructor(\n    public provider: TwoFactorProviderType = null,\n    public token: string = null,\n    public remember: boolean = false\n  ) {}\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nimport { AttachmentResponse } from \"./attachmentResponse\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { PasswordHistoryResponse } from \"./passwordHistoryResponse\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { BillingInvoiceResponse, BillingTransactionResponse } from \"./billingResponse\";\n\nexport class BillingHistoryResponse extends BaseResponse {\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { BillingSourceResponse } from \"./billingResponse\";\n\nexport class BillingPaymentResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class DeviceVerificationResponse extends BaseResponse {\n  isDeviceVerificationSectionEnabled: boolean;\n  unknownDeviceVerificationEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.isDeviceVerificationSectionEnabled = this.getResponseProperty(\n      \"IsDeviceVerificationSectionEnabled\"\n    );\n    this.unknownDeviceVerificationEnabled = this.getResponseProperty(\n      \"UnknownDeviceVerificationEnabled\"\n    );\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { GlobalDomainResponse } from \"./globalDomainResponse\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n  installationId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n    this.installationId = this.getResponseProperty(\"InstallationId\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { BaseResponse } from \"../response/baseResponse\";\nimport { SsoConfigView } from \"../view/ssoConfigView\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: boolean;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationApiKeyInformationResponse extends BaseResponse {\n  keyType: OrganizationApiKeyType;\n\n  constructor(response: any) {\n    super(response);\n    this.keyType = this.getResponseProperty(\"KeyType\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\nimport { BillingSyncConfigApi } from \"../api/billingSyncConfigApi\";\nimport { ScimConfigApi } from \"../api/scimConfigApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\n/**API response config types for OrganizationConnectionResponse */\nexport type OrganizationConnectionConfigApis = BillingSyncConfigApi | ScimConfigApi;\n\nexport class OrganizationConnectionResponse<\n  TConfig extends OrganizationConnectionConfigApis\n> extends BaseResponse {\n  id: string;\n  type: OrganizationConnectionType;\n  organizationId: string;\n  enabled: boolean;\n  config: TConfig;\n\n  constructor(response: any, configType: { new (response: any): TConfig }) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const rawConfig = this.getResponseProperty(\"Config\");\n    this.config = rawConfig == null ? null : new configType(rawConfig);\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionResponse } from \"./collectionResponse\";\nimport { ListResponse } from \"./listResponse\";\n\nexport class OrganizationExportResponse extends BaseResponse {\n  collections: ListResponse<CollectionResponse>;\n  ciphers: ListResponse<CipherResponse>;\n\n  constructor(response: any) {\n    super(response);\n    this.collections = this.getResponseProperty(\"Collections\");\n    this.ciphers = this.getResponseProperty(\"Ciphers\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keysResponse\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { PlanResponse } from \"./planResponse\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationSponsorshipSyncStatusResponse extends BaseResponse {\n  lastSyncDate?: Date;\n\n  constructor(response: any) {\n    super(response);\n    const lastSyncDate = this.getResponseProperty(\"LastSyncDate\");\n    if (lastSyncDate) {\n      this.lastSyncDate = new Date(lastSyncDate);\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { OrganizationResponse } from \"./organizationResponse\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscriptionResponse\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n  manageScim: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n    this.manageScim = this.getResponseProperty(\"ManageScim\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useScim = this.getResponseProperty(\"UseScim\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n    const familySponsorshipLastSyncDateString = this.getResponseProperty(\n      \"FamilySponsorshipLastSyncDate\"\n    );\n    if (familySponsorshipLastSyncDateString) {\n      this.familySponsorshipLastSyncDate = new Date(familySponsorshipLastSyncDateString);\n    }\n    const familySponsorshipValidUntilString = this.getResponseProperty(\n      \"FamilySponsorshipValidUntil\"\n    );\n    if (familySponsorshipValidUntilString) {\n      this.familySponsorshipValidUntil = new Date(familySponsorshipValidUntilString);\n    }\n    this.familySponsorshipToDelete = this.getResponseProperty(\"FamilySponsorshipToDelete\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"./profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"./profileProviderResponse\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premiumPersonally: boolean;\n  premiumFromOrganization: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premiumPersonally = this.getResponseProperty(\"Premium\");\n    this.premiumFromOrganization = this.getResponseProperty(\"PremiumFromOrganization\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n  userCount: number;\n  seats?: number;\n  plan?: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.userCount = this.getResponseProperty(\"UserCount\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.plan = this.getResponseProperty(\"Plan\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../organizationUserBulkPublicKeyResponse\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissionsApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SsoPreValidateResponse extends BaseResponse {\n  token: string;\n\n  constructor(response: any) {\n    super(response);\n    this.token = this.getResponseProperty(\"Token\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionDetailsResponse } from \"./collectionResponse\";\nimport { DomainsResponse } from \"./domainsResponse\";\nimport { FolderResponse } from \"./folderResponse\";\nimport { PolicyResponse } from \"./policyResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","export enum AuthenticationStatus {\n  LoggedOut = 0,\n  Locked = 1,\n  Unlocked = 2,\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  Api = 2,\n}\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../../models/domain/logInCredentials\";\nimport { DeviceRequest } from \"../../models/request/deviceRequest\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\nimport { KeysRequest } from \"../../models/request/keysRequest\";\nimport { IdentityCaptchaResponse } from \"../../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../../models/response/identityTwoFactorResponse\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult>;\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected onSuccessfulLogin(response: IdentityTokenResponse): Promise<void> {\n    // Implemented in subclass if required\n    return null;\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenRequestTwoFactor) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return new TokenRequestTwoFactor(TwoFactorProviderType.Remember, storedTwoFactorToken, false);\n    }\n\n    return new TokenRequestTwoFactor();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    await this.onSuccessfulLogin(response);\n\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { ApiLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class ApiLogInStrategy extends LogInStrategy {\n  tokenRequest: ApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: ApiLogInCredentials) {\n    this.tokenRequest = new ApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","import { ClientType } from \"../../../enums/clientType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captchaProtectedRequest\";\nimport { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { SsoLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { EncryptionType } from \"@bitwarden/common/enums/encryptionType\";\nimport { IEncrypted } from \"@bitwarden/common/interfaces/IEncrypted\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nconst ENC_TYPE_LENGTH = 1;\nconst IV_LENGTH = 16;\nconst MAC_LENGTH = 32;\nconst MIN_DATA_LENGTH = 1;\n\nexport class EncArrayBuffer implements IEncrypted {\n  readonly encryptionType: EncryptionType = null;\n  readonly dataBytes: ArrayBuffer = null;\n  readonly ivBytes: ArrayBuffer = null;\n  readonly macBytes: ArrayBuffer = null;\n\n  constructor(readonly buffer: ArrayBuffer) {\n    const encBytes = new Uint8Array(buffer);\n    const encType = encBytes[0];\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.macBytes = encBytes.slice(\n          ENC_TYPE_LENGTH + IV_LENGTH,\n          ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH\n        ).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH).buffer;\n        break;\n      }\n      case EncryptionType.AesCbc256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        break;\n      }\n      default:\n        this.throwDecryptionError();\n    }\n\n    this.encryptionType = encType;\n  }\n\n  private throwDecryptionError() {\n    throw new Error(\n      \"Error parsing encrypted ArrayBuffer: data is corrupted or has an invalid format.\"\n    );\n  }\n\n  static async fromResponse(response: {\n    arrayBuffer: () => Promise<ArrayBuffer>;\n  }): Promise<EncArrayBuffer> {\n    const buffer = await response.arrayBuffer();\n    if (buffer == null) {\n      throw new Error(\"Cannot create EncArrayBuffer from Response - Response is empty\");\n    }\n    return new EncArrayBuffer(buffer);\n  }\n\n  static fromB64(b64: string) {\n    const buffer = Utils.fromB64ToArray(b64).buffer;\n    return new EncArrayBuffer(buffer);\n  }\n}\n","import { CipherView } from \"../view/cipherView\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipherWithIdRequest\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domainBase\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/loginUri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secureNote\";\nimport { SortedCiphersCache } from \"../models/domain/sortedCiphersCache\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { AttachmentView } from \"../models/view/attachmentView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { PasswordHistoryView } from \"../models/view/passwordHistoryView\";\nimport { View } from \"../models/view/view\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    const userId = await this.stateService.getUserId();\n    if ((await this.getDecryptedCipherCache()) != null) {\n      if (\n        this.searchService != null &&\n        (this.searchService().indexedEntityId ?? userId) !== userId\n      ) {\n        await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n      }\n      return await this.getDecryptedCipherCache();\n    }\n\n    const decCiphers: CipherView[] = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: any[] = [];\n    const ciphers = await this.getAll();\n    ciphers.forEach(async (cipher) => {\n      promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.getLocaleSortingFunction());\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : this.settingsService.getEquivalentDomains().then((eqDomains: any[][]) => {\n            let matches: any[] = [];\n            eqDomains.forEach((eqDomain) => {\n              if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                matches = matches.concat(eqDomain);\n              }\n            });\n\n            if (!matches.length) {\n              matches.push(domain);\n            }\n\n            return matches;\n          });\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n    if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n      const decCiphers: CipherView[] = [];\n      const promises: any[] = [];\n      ciphers.data.forEach((r) => {\n        const data = new CipherData(r);\n        const cipher = new Cipher(data);\n        promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n      });\n      await Promise.all(promises);\n      decCiphers.sort(this.getLocaleSortingFunction());\n      return decCiphers;\n    } else {\n      return [];\n    }\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async saveWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.id == null) {\n      if (cipher.collectionIds != null) {\n        const request = new CipherCreateRequest(cipher);\n        response = await this.apiService.postCipherCreate(request);\n      } else {\n        const request = new CipherRequest(cipher);\n        response = await this.apiService.postCipher(request);\n      }\n      cipher.id = response.id;\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    await this.upsert(encCiphers.map((c) => c.toCipherData()));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(response, cipher.collectionIds);\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData();\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const encBuf = await EncArrayBuffer.fromResponse(attachmentResponse);\n    const decBuf = await this.cryptoService.decryptFromBytes(encBuf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptedOrganizationKeyData } from \"../../models/data/encryptedOrganizationKeyData\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport abstract class BaseEncryptedOrganizationKey {\n  decrypt: (cryptoService: CryptoService) => Promise<SymmetricCryptoKey>;\n\n  static fromData(data: EncryptedOrganizationKeyData) {\n    switch (data.type) {\n      case \"organization\":\n        return new EncryptedOrganizationKey(data.key);\n\n      case \"provider\":\n        return new ProviderEncryptedOrganizationKey(data.key, data.providerId);\n\n      default:\n        return null;\n    }\n  }\n}\n\nexport class EncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const decValue = await cryptoService.rsaDecrypt(this.key);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"organization\",\n      key: this.key,\n    };\n  }\n}\n\nexport class ProviderEncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string, private providerId: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const providerKey = await cryptoService.getProviderKey(this.providerId);\n    const decValue = await cryptoService.decryptToBytes(new EncString(this.key), providerKey);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"provider\",\n      key: this.key,\n      providerId: this.providerId,\n    };\n  }\n}\n","import * as bigInt from \"big-integer\";\n\nimport { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { BaseEncryptedOrganizationKey } from \"../models/domain/encryptedOrganizationKey\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private encryptService: AbstractEncryptService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[] = [],\n    providerOrgs: ProfileProviderOrganizationResponse[] = []\n  ): Promise<void> {\n    const encOrgKeyData: { [orgId: string]: EncryptedOrganizationKeyData } = {};\n\n    orgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"organization\",\n        key: org.key,\n      };\n    });\n\n    providerOrgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"provider\",\n        providerId: org.providerId,\n        key: org.key,\n      };\n    });\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(encOrgKeyData);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const result: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeyData = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeyData == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId of Object.keys(encOrgKeyData)) {\n      if (result.has(orgId)) {\n        continue;\n      }\n\n      const encOrgKey = BaseEncryptedOrganizationKey.fromData(encOrgKeyData[orgId]);\n      const decOrgKey = await encOrgKey.decrypt(this);\n      result.set(orgId, decOrgKey);\n\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(result);\n    }\n\n    return result;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForUserEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encrypt\n   */\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.encrypt(plainValue, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encryptToBytes\n   */\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    key = await this.getKeyForUserEncryption(key);\n    return this.encryptService.encryptToBytes(plainValue, key);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForUserEncryption(key);\n    return this.encryptService.decryptToBytes(encString, keyForEnc);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToUtf8\n   */\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.decryptToUtf8(encString, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptFromBytes(encBuffer: EncArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuffer == null) {\n      throw new Error(\"No buffer provided for decryption.\");\n    }\n\n    key = await this.getKeyForUserEncryption(key);\n\n    return this.encryptService.decryptToBytes(encBuffer, key);\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // ---HELPERS---\n\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  async getKeyForUserEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    // Legacy support: encryption used to be done with the user key (derived from master password).\n    // Users who have not migrated will have a null encKey and must use the user key instead.\n    return await this.getKey();\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EEFLongWordList.length);\n      hashNumber = hashNumber.divide(EEFLongWordList.length);\n      phrase.push(EEFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","import { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/eventView\";\n\nexport class EventExport {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n  installationId: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n    this.installationId = event.installationId;\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport class BitwardenFileUploadService {\n  constructor(private apiService: ApiService) {}\n\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { FolderResponse } from \"../response/folderResponse\";\n\nexport class FolderData {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse) {\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../keysRequest\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n}\n","import { NotificationType } from \"../../enums/notificationType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1,\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { Permissions } from \"../../enums/permissions\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { OrganizationData } from \"../data/organizationData\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useScim = obj.useScim;\n    this.useResetPassword = obj.useResetPassword;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = obj.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = obj.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = obj.familySponsorshipToDelete;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return this.isAdmin || this.permissions.accessEventLogs;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return this.isAdmin || this.permissions.manageGroups;\n  }\n\n  get canManageSso() {\n    return this.isAdmin || this.permissions.manageSso;\n  }\n\n  get canManageScim() {\n    return (this.isAdmin || this.permissions.manageScim) && this.useScim;\n  }\n\n  get canManagePolicies() {\n    return this.isAdmin || this.permissions.managePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n\n  hasAnyPermission(permissions: Permissions[]) {\n    const specifiedPermissions =\n      (permissions.includes(Permissions.AccessEventLogs) && this.canAccessEventLogs) ||\n      (permissions.includes(Permissions.AccessImportExport) && this.canAccessImportExport) ||\n      (permissions.includes(Permissions.AccessReports) && this.canAccessReports) ||\n      (permissions.includes(Permissions.CreateNewCollections) && this.canCreateNewCollections) ||\n      (permissions.includes(Permissions.EditAnyCollection) && this.canEditAnyCollection) ||\n      (permissions.includes(Permissions.DeleteAnyCollection) && this.canDeleteAnyCollection) ||\n      (permissions.includes(Permissions.EditAssignedCollections) &&\n        this.canEditAssignedCollections) ||\n      (permissions.includes(Permissions.DeleteAssignedCollections) &&\n        this.canDeleteAssignedCollections) ||\n      (permissions.includes(Permissions.ManageGroups) && this.canManageGroups) ||\n      (permissions.includes(Permissions.ManageOrganization) && this.isOwner) ||\n      (permissions.includes(Permissions.ManagePolicies) && this.canManagePolicies) ||\n      (permissions.includes(Permissions.ManageUsers) && this.canManageUsers) ||\n      (permissions.includes(Permissions.ManageUsersPassword) && this.canManageUsersPassword) ||\n      (permissions.includes(Permissions.ManageSso) && this.canManageSso) ||\n      (permissions.includes(Permissions.ManageScim) && this.canManageScim) ||\n      (permissions.includes(Permissions.ManageBilling) && this.canManageBilling);\n\n    return specifiedPermissions && (this.enabled || this.isOwner);\n  }\n\n  get canManageBilling() {\n    return this.isOwner && (this.isProviderUser || !this.hasProvider);\n  }\n\n  get hasProvider() {\n    return this.providerId != null || this.providerName != null;\n  }\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncString } from \"../models/domain/encString\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\n\nconst DefaultOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: any): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EEFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EEFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: any\n  ): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies: Policy[] =\n      this.policyService == null\n        ? null\n        : await this.policyService.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<any> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    await this.stateService.setDecryptedPasswordGenerationHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policyResponse\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policyData\";\n\nimport Domain from \"./domainBase\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1, // Not used, compile-time support only\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/providerData\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private readonly immediateSearchLocales: string[] = [\"zh-CN\", \"zh-TW\", \"ja\", \"ko\", \"vi\"];\n  private readonly defaultSearchableMinLength: number = 2;\n  private searchableMinLength: number = this.defaultSearchableMinLength;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    this.i18nService.locale$.subscribe((locale) => {\n      if (this.immediateSearchLocales.indexOf(locale) !== -1) {\n        this.searchableMinLength = 1;\n      } else {\n        this.searchableMinLength = this.defaultSearchableMinLength;\n      }\n    });\n\n    //register lunr pipeline function\n    lunr.Pipeline.registerFunction(this.normalizeAccentsPipelineFunction, \"normalizeAccents\");\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    query = SearchService.normalizeSearchQuery(query);\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.logService.time(\"search indexing\");\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.pipeline.add(this.normalizeAccentsPipelineFunction);\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", {\n      boost: 10,\n    });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.timeEnd(\"search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        c.login &&\n        c.login.hasUris &&\n        c.login.uris.some((loginUri) => loginUri.uri.toLowerCase().indexOf(query) > -1)\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLocaleLowerCase());\n    if (query === null) {\n      return sends;\n    }\n    const sendsMatched: SendView[] = [];\n    const lowPriorityMatched: SendView[] = [];\n    sends.forEach((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        sendsMatched.push(s);\n      } else if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        lowPriorityMatched.push(s);\n      } else if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      }\n    });\n    return sendsMatched.concat(lowPriorityMatched);\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n\n  private normalizeAccentsPipelineFunction(token: lunr.Token): any {\n    const searchableFields = [\"name\", \"login.username\", \"subtitle\", \"notes\"];\n    const fields = (token as any).metadata[\"fields\"];\n    const checkFields = fields.every((i: any) => searchableFields.includes(i));\n\n    if (checkFields) {\n      return SearchService.normalizeSearchQuery(token.toString());\n    }\n\n    return token;\n  }\n\n  // Remove accents/diacritics characters from text. This regex is equivalent to the Diacritic unicode property escape, i.e. it will match all diacritic characters.\n  static normalizeSearchQuery(query: string): string {\n    return query?.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n}\n","import { SendFileApi } from \"../api/sendFileApi\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/sendResponse\";\n\nimport { SendFileData } from \"./sendFileData\";\nimport { SendTextData } from \"./sendTextData\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SendFile } from \"../domain/sendFile\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { SendText } from \"../domain/sendText\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n}\n","import { SendFileData } from \"../data/sendFileData\";\nimport { SendFileView } from \"../view/sendFileView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/sendTextData\";\nimport { SendTextView } from \"../view/sendTextView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/sendData\";\nimport { SendView } from \"../view/sendView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      [\"id\", \"accessId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nconst Keys = {\n  settingsPrefix: \"settings_\",\n  equivalentDomains: \"equivalentDomains\",\n};\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setSettings(null);\n  }\n\n  getEquivalentDomains(): Promise<any> {\n    return this.getSettingsKey(Keys.equivalentDomains);\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    await this.setSettingsKey(Keys.equivalentDomains, equivalentDomains);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n\n  // Helpers\n\n  private async getSettings(): Promise<any> {\n    const settings = await this.stateService.getSettings();\n    if (settings == null) {\n      // eslint-disable-next-line\n      const userId = await this.stateService.getUserId();\n    }\n    return settings;\n  }\n\n  private async getSettingsKey(key: string): Promise<any> {\n    const settings = await this.getSettings();\n    if (settings != null && settings[key]) {\n      return settings[key];\n    }\n    return null;\n  }\n\n  private async setSettingsKey(key: string, value: any): Promise<void> {\n    let settings = await this.getSettings();\n    if (!settings) {\n      settings = {};\n    }\n\n    settings[key] = value;\n    await this.stateService.setSettings(settings);\n  }\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profileProviderResponse\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { Account } from \"./account\";\nimport { GlobalState } from \"./globalState\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountData, AccountSettings } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { SendView } from \"../models/view/sendView\";\n\nconst keys = {\n  state: \"state\",\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  accounts = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  activeAccount = new BehaviorSubject<string>(null);\n  activeAccountUnlocked = new BehaviorSubject<boolean>(false);\n\n  private hasBeenInited = false;\n  private isRecoveredSession = false;\n\n  private accountDiskCache = new Map<string, TAccount>();\n\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected memoryStorageService: AbstractStorageService,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {\n    // If the account gets changed, verify the new account is unlocked\n    this.activeAccount.subscribe(async (userId) => {\n      if (userId == null && this.activeAccountUnlocked.getValue() == false) {\n        return;\n      } else if (userId == null) {\n        this.activeAccountUnlocked.next(false);\n      }\n\n      // FIXME: This should be refactored into AuthService or a similar service,\n      //  as checking for the existance of the crypto key is a low level\n      //  implementation detail.\n      this.activeAccountUnlocked.next((await this.getCryptoMasterKey()) != null);\n    });\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.state().then(async (state) => {\n      if (state == null) {\n        await this.setState(new State<TGlobalState, TAccount>(this.createGlobals()));\n      } else {\n        this.isRecoveredSession = true;\n      }\n    });\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    if (this.isRecoveredSession) {\n      return;\n    }\n\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts =\n        (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n      for (const i in state.authenticatedAccounts) {\n        if (i != null) {\n          await this.syncAccountFromDisk(state.authenticatedAccounts[i]);\n        }\n      }\n      const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n      if (storedActiveUser != null) {\n        state.activeUserId = storedActiveUser;\n      }\n      await this.pushAccounts();\n      this.activeAccount.next(state.activeUserId);\n\n      return state;\n    });\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    await this.updateState(async (state) => {\n      state.accounts[userId] = this.createAccount();\n      const diskAccount = await this.getAccountFromDisk({ userId: userId });\n      state.accounts[userId].profile = diskAccount.profile;\n      return state;\n    });\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts.push(account.profile.userId);\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n      state.accounts[account.profile.userId] = account;\n      return state;\n    });\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccount.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    await this.updateState(async (state) => {\n      state.activeUserId = userId;\n      await this.storageService.save(keys.activeUserId, userId);\n      this.activeAccount.next(state.activeUserId);\n      return state;\n    });\n\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === (await this.state())?.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    return (\n      (await this.getHasPremiumPersonally(options)) ||\n      (await this.getHasPremiumFromOrganization(options))\n    );\n  }\n\n  async getHasPremiumPersonally(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.profile?.hasPremiumPersonally;\n  }\n\n  async setHasPremiumPersonally(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumPersonally = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getHasPremiumFromOrganization(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    if (account.profile?.hasPremiumFromOrganization) {\n      return true;\n    }\n\n    // TODO: older server versions won't send the hasPremiumFromOrganization flag, so we're keeping the old logic\n    // for backwards compatibility. It can be removed after everyone has upgraded.\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async setHasPremiumFromOrganization(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumFromOrganization = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototype(SymmetricCryptoKey, SymmetricCryptoKey.fromJSON)\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n\n    if (options.userId == this.activeAccount.getValue()) {\n      const nextValue = value != null;\n\n      // Avoid emitting if we are already unlocked\n      if (this.activeAccountUnlocked.getValue() != nextValue) {\n        this.activeAccountUnlocked.next(nextValue);\n      }\n    }\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.autoKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  async getDecodedToken(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.tokens?.decodedToken;\n  }\n\n  async setDecodedToken(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.tokens.decodedToken = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(CipherView)\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(CollectionView)\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototype(SymmetricCryptoKey, SymmetricCryptoKey.fromJSON)\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForMap(SymmetricCryptoKey, SymmetricCryptoKey.fromJSON)\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.organizationKeys?.decrypted;\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.organizationKeys.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototype(EncString)\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(Policy)\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    const privateKey = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.privateKey;\n    let result = privateKey?.decrypted;\n    if (result == null && privateKey?.decryptedSerialized != null) {\n      result = Utils.fromByteStringToArray(privateKey.decryptedSerialized);\n    }\n    return result;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.privateKey.decrypted = value;\n    account.keys.privateKey.decryptedSerialized =\n      value == null ? null : Utils.fromBufferToByteString(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForMap(SymmetricCryptoKey, SymmetricCryptoKey.fromJSON)\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.providerKeys?.decrypted;\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.providerKeys.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(SendView)\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.email = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableGravitars(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableGravitars ?? false\n    );\n  }\n\n  async setEnableGravitars(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableGravitars = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CipherData)\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CollectionData)\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(FolderData)\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<{ [orgId: string]: EncryptedOrganizationKeyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(PolicyData)\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(SendData)\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  @withPrototype(EnvironmentUrls)\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if ((await this.state())?.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(EventData)\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n  async setLocalData(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUsernameGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.usernameGenerationOptions;\n  }\n\n  async setUsernameGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.usernameGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getGeneratorOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.generatorOptions;\n  }\n\n  async setGeneratorOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.generatorOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(ProviderData)\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    const keys = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys;\n    let result = keys?.publicKey;\n    if (result == null && keys?.publicKeySerialized != null) {\n      result = Utils.fromByteStringToArray(keys.publicKeySerialized);\n    }\n    return result;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.publicKey = value;\n    account.keys.publicKeySerialized = value == null ? null : Utils.fromBufferToByteString(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getSettings(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = await this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected async getGlobalsFromMemory(): Promise<TGlobalState> {\n    return (await this.state()).globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected async saveGlobalsToMemory(globals: TGlobalState): Promise<void> {\n    await this.updateState(async (state) => {\n      state.globals = globals;\n      return state;\n    });\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = await this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async getAccountFromMemory(options: StorageOptions): Promise<TAccount> {\n    return await this.state().then(async (state) => {\n      if (state.accounts == null) {\n        return null;\n      }\n      return state.accounts[await this.getUserIdFromMemory(options)];\n    });\n  }\n\n  protected async getUserIdFromMemory(options: StorageOptions): Promise<string> {\n    return await this.state().then((state) => {\n      return options?.userId != null\n        ? state.accounts[options.userId]?.profile?.userId\n        : state.activeUserId;\n    });\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && (await this.state())?.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.get(options.userId);\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.set(options.userId, account);\n    }\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(options.userId);\n    }\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      await this.updateState((state) => {\n        return new Promise((resolve) => {\n          state.accounts[account.profile.userId] = account;\n          resolve(state);\n        });\n      });\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<AccountSettings>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    await this.state().then((state) => {\n      if (state.accounts == null || Object.keys(state.accounts).length < 1) {\n        this.accounts.next(null);\n        return;\n      }\n\n      this.accounts.next(state.accounts);\n    });\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected async defaultInMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Memory,\n      userId: (await this.state()).activeUserId,\n    };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: (await this.state())?.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected async removeAccountFromMemory(userId: string = null): Promise<void> {\n    await this.updateState(async (state) => {\n      userId = userId ?? state.activeUserId;\n      delete state.accounts[userId];\n\n      if (this.useAccountCache) {\n        this.accountDiskCache.delete(userId);\n      }\n\n      return state;\n    });\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in (await this.state())?.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        await this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected async clearDecryptedDataForActiveUser(): Promise<void> {\n    await this.updateState(async (state) => {\n      const userId = state?.activeUserId;\n      if (userId != null && state?.accounts[userId]?.data != null) {\n        state.accounts[userId].data = new AccountData();\n      }\n\n      return state;\n    });\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string): Promise<void> {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts = state.authenticatedAccounts.filter((id) => id !== userId);\n\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n\n      return state;\n    });\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    const accounts = (await this.state())?.accounts;\n    if (accounts == null || Object.keys(accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? await this.defaultInMemoryOptions()\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n\n  protected state(): Promise<State<TGlobalState, TAccount>> {\n    return this.memoryStorageService.get<State<TGlobalState, TAccount>>(keys.state);\n  }\n\n  private async setState(state: State<TGlobalState, TAccount>): Promise<void> {\n    await this.memoryStorageService.save(keys.state, state);\n  }\n\n  protected async updateState(\n    stateUpdater: (state: State<TGlobalState, TAccount>) => Promise<State<TGlobalState, TAccount>>\n  ) {\n    await this.state().then(async (state) => {\n      const updatedState = await stateUpdater(state);\n      if (updatedState == null) {\n        throw new Error(\"Attempted to update state to null value\");\n      }\n\n      await this.setState(updatedState);\n    });\n  }\n}\n\nexport function withPrototype<T>(\n  constructor: new (...args: any[]) => T,\n  converter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<T> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          return result == null ||\n            result.constructor.name === constructor.prototype.constructor.name\n            ? converter(result as T)\n            : converter(\n                Object.create(constructor.prototype, Object.getOwnPropertyDescriptors(result)) as T\n              );\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForArrayMembers<T>(\n  memberConstructor: new (...args: any[]) => T,\n  memberConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T[]> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<any[]> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else if (!(result instanceof Array)) {\n            throw new Error(\n              `Attempted to retrieve non array type from state as an array for method ${String(\n                propertyKey\n              )}`\n            );\n          } else {\n            return result.map((r) => {\n              return r == null ||\n                r.constructor.name === memberConstructor.prototype.constructor.name\n                ? memberConverter(r)\n                : memberConverter(\n                    Object.create(memberConstructor.prototype, Object.getOwnPropertyDescriptors(r))\n                  );\n            });\n          }\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForObjectValues<T>(\n  valuesConstructor: new (...args: any[]) => T,\n  valuesConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<{ [key: string]: T }> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<{ [key: string]: T }> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else {\n            for (const [key, val] of Object.entries(result)) {\n              result[key] =\n                val == null || val.constructor.name === valuesConstructor.prototype.constructor.name\n                  ? valuesConverter(val)\n                  : valuesConverter(\n                      Object.create(\n                        valuesConstructor.prototype,\n                        Object.getOwnPropertyDescriptors(val)\n                      )\n                    );\n            }\n\n            return result as { [key: string]: T };\n          }\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForMap<T>(\n  valuesConstructor: new (...args: any[]) => T,\n  valuesConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<Map<string, T>> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<any> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else if (result instanceof Map) {\n            return result;\n          } else {\n            for (const key in Object.keys(result)) {\n              result[key] =\n                result[key] == null ||\n                result[key].constructor.name === valuesConstructor.prototype.constructor.name\n                  ? valuesConverter(result[key])\n                  : valuesConverter(\n                      Object.create(\n                        valuesConstructor.prototype,\n                        Object.getOwnPropertyDescriptors(result[key])\n                      )\n                    );\n            }\n            return new Map<string, T>(Object.entries(result));\n          }\n        });\n      },\n    };\n  };\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { Utils } from \"../misc/utils\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    const storedToken = await this.stateService.getDecodedToken();\n    if (token === null && storedToken != null) {\n      return storedToken;\n    }\n\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountSettings } from \"../models/domain/account\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableGravatars: \"enableGravatars\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n        case StateVersion.Four: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom4To5(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Five);\n          break;\n        }\n        case StateVersion.Five: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom5To6(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Six);\n          break;\n        }\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      enableGravitars:\n        (await this.get<boolean>(v1Keys.enableGravatars)) ??\n        defaultAccount.settings.enableGravitars,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      },\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings: userId == null ? null : await this.get<any>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateAccountFrom4To5(account: TAccount): Promise<TAccount> {\n    const encryptedOrgKeys = account.keys?.organizationKeys?.encrypted;\n    if (encryptedOrgKeys != null) {\n      for (const [orgId, encKey] of Object.entries(encryptedOrgKeys)) {\n        encryptedOrgKeys[orgId] = {\n          type: \"organization\",\n          key: encKey as unknown as string, // Account v4 does not reflect the current account model so we have to cast\n        };\n      }\n    }\n\n    return account;\n  }\n\n  protected async migrateAccountFrom5To6(account: TAccount): Promise<TAccount> {\n    delete (account as any).keys?.legacyEtmKey;\n    return account;\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n\n  protected async setCurrentStateVersion(newVersion: StateVersion): Promise<void> {\n    const globals = await this.getGlobals();\n    globals.stateVersion = newVersion;\n    await this.set(keys.global, globals);\n  }\n\n  protected async getAuthenticatedAccounts(): Promise<TAccount[]> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    return Promise.all(authenticatedUserIds.map((id) => this.get<TAccount>(id)));\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { ProfileOrganizationResponse } from \"../response/profileOrganizationResponse\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useScim = response.useScim;\n    this.useResetPassword = response.useResetPassword;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = response.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = response.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = response.familySponsorshipToDelete;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderApiServiceAbstraction } from \"../abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { InternalPolicyService } from \"../abstractions/policy/policy.service.abstraction\";\nimport { ProviderService } from \"../abstractions/provider.service\";\nimport { SendService } from \"../abstractions/send.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../abstractions/sync.service\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: InternalFolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: InternalPolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    private folderApiService: FolderApiServiceAbstraction,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  @sequentialize(() => \"fullSync\")\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(response.ciphers);\n      await this.syncSends(response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.folderApiService.get(notification.id);\n          if (remoteFolder != null) {\n            await this.folderService.upsert(new FolderData(remoteFolder));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getFullCipherDetails(notification.id);\n          if (remoteCipher != null) {\n            await this.cipherService.upsert(new CipherData(remoteCipher));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            await this.sendService.upsert(new SendData(remoteSend));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setHasPremiumPersonally(response.premiumPersonally);\n    await this.stateService.setHasPremiumFromOrganization(response.premiumFromOrganization);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.save(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { UsernameGenerationService as BaseUsernameGenerationService } from \"../abstractions/usernameGeneration.service\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\n\nconst DefaultOptions = {\n  type: \"word\",\n  wordCapitalize: true,\n  wordIncludeNumber: true,\n  subaddressType: \"random\",\n  catchallType: \"random\",\n  forwardedService: \"simplelogin\",\n  forwardedAnonAddyDomain: \"anonaddy.me\",\n};\n\nexport class UsernameGenerationService implements BaseUsernameGenerationService {\n  constructor(\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  generateUsername(options: any): Promise<string> {\n    if (options.type === \"catchall\") {\n      return this.generateCatchall(options);\n    } else if (options.type === \"subaddress\") {\n      return this.generateSubaddress(options);\n    } else if (options.type === \"forwarded\") {\n      return this.generateForwarded(options);\n    } else {\n      return this.generateWord(options);\n    }\n  }\n\n  async generateWord(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.wordCapitalize == null) {\n      o.wordCapitalize = true;\n    }\n    if (o.wordIncludeNumber == null) {\n      o.wordIncludeNumber = true;\n    }\n\n    const wordIndex = await this.cryptoService.randomNumber(0, EEFLongWordList.length - 1);\n    let word = EEFLongWordList[wordIndex];\n    if (o.wordCapitalize) {\n      word = word.charAt(0).toUpperCase() + word.slice(1);\n    }\n    if (o.wordIncludeNumber) {\n      const num = await this.cryptoService.randomNumber(1, 9999);\n      word = word + this.zeroPad(num.toString(), 4);\n    }\n    return word;\n  }\n\n  async generateSubaddress(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    const subaddressEmail = o.subaddressEmail;\n    if (subaddressEmail == null || subaddressEmail.length < 3) {\n      return o.subaddressEmail;\n    }\n    const atIndex = subaddressEmail.indexOf(\"@\");\n    if (atIndex < 1 || atIndex >= subaddressEmail.length - 1) {\n      return subaddressEmail;\n    }\n    if (o.subaddressType == null) {\n      o.subaddressType = \"random\";\n    }\n\n    const emailBeginning = subaddressEmail.substr(0, atIndex);\n    const emailEnding = subaddressEmail.substr(atIndex + 1, subaddressEmail.length);\n\n    let subaddressString = \"\";\n    if (o.subaddressType === \"random\") {\n      subaddressString = await this.randomString(8);\n    } else if (o.subaddressType === \"website-name\") {\n      subaddressString = o.website;\n    }\n    return emailBeginning + \"+\" + subaddressString + \"@\" + emailEnding;\n  }\n\n  async generateCatchall(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.catchallDomain == null || o.catchallDomain === \"\") {\n      return null;\n    }\n    if (o.catchallType == null) {\n      o.catchallType = \"random\";\n    }\n\n    let startString = \"\";\n    if (o.catchallType === \"random\") {\n      startString = await this.randomString(8);\n    } else if (o.catchallType === \"website-name\") {\n      startString = o.website;\n    }\n    return startString + \"@\" + o.catchallDomain;\n  }\n\n  async generateForwarded(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.forwardedService == null) {\n      return null;\n    }\n\n    if (o.forwardedService === \"simplelogin\") {\n      if (o.forwardedSimpleLoginApiKey == null || o.forwardedSimpleLoginApiKey === \"\") {\n        return null;\n      }\n      return this.generateSimpleLoginAlias(o.forwardedSimpleLoginApiKey, o.website);\n    } else if (o.forwardedService === \"anonaddy\") {\n      if (\n        o.forwardedAnonAddyApiToken == null ||\n        o.forwardedAnonAddyApiToken === \"\" ||\n        o.forwardedAnonAddyDomain == null ||\n        o.forwardedAnonAddyDomain == \"\"\n      ) {\n        return null;\n      }\n      return this.generateAnonAddyAlias(\n        o.forwardedAnonAddyApiToken,\n        o.forwardedAnonAddyDomain,\n        o.website\n      );\n    } else if (o.forwardedService === \"firefoxrelay\") {\n      if (o.forwardedFirefoxApiToken == null || o.forwardedFirefoxApiToken === \"\") {\n        return null;\n      }\n      return this.generateFirefoxRelayAlias(o.forwardedFirefoxApiToken, o.website);\n    }\n\n    return null;\n  }\n\n  async getOptions(): Promise<any> {\n    let options = await this.stateService.getUsernameGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setUsernameGenerationOptions(options);\n    return options;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setUsernameGenerationOptions(options);\n  }\n\n  private async randomString(length: number) {\n    let str = \"\";\n    const charSet = \"abcdefghijklmnopqrstuvwxyz1234567890\";\n    for (let i = 0; i < length; i++) {\n      const randomCharIndex = await this.cryptoService.randomNumber(0, charSet.length - 1);\n      str += charSet.charAt(randomCharIndex);\n    }\n    return str;\n  }\n\n  // ref: https://stackoverflow.com/a/10073788\n  private zeroPad(number: string, width: number) {\n    return number.length >= width\n      ? number\n      : new Array(width - number.length + 1).join(\"0\") + number;\n  }\n\n  private async generateSimpleLoginAlias(apiKey: string, website: string): Promise<string> {\n    if (apiKey == null || apiKey === \"\") {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authentication: apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    let url = \"https://app.simplelogin.io/api/alias/random/new\";\n    if (website != null) {\n      url += \"?hostname=\" + website;\n    }\n    requestInit.body = JSON.stringify({\n      note: (website != null ? \"Website: \" + website + \". \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await this.apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json.alias;\n    }\n    if (response.status === 401) {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    try {\n      const json = await response.json();\n      if (json?.error != null) {\n        throw \"SimpleLogin error:\" + json.error;\n      }\n    } catch {\n      // Do nothing...\n    }\n    throw \"Unknown SimpleLogin error occurred.\";\n  }\n\n  private async generateAnonAddyAlias(\n    apiToken: string,\n    domain: string,\n    websiteNote: string\n  ): Promise<string> {\n    if (apiToken == null || apiToken === \"\") {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + apiToken,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://app.anonaddy.com/api/v1/aliases\";\n    requestInit.body = JSON.stringify({\n      domain: domain,\n      description:\n        (websiteNote != null ? \"Website: \" + websiteNote + \". \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await this.apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.data?.email;\n    }\n    if (response.status === 401) {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    throw \"Unknown AnonAddy error occurred.\";\n  }\n\n  private async generateFirefoxRelayAlias(apiToken: string, website: string): Promise<string> {\n    if (apiToken == null || apiToken === \"\") {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Token \" + apiToken,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://relay.firefox.com/api/v1/relayaddresses/\";\n    requestInit.body = JSON.stringify({\n      enabled: true,\n      generated_for: website,\n      description: (website != null ? website + \" - \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await this.apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.full_address;\n    }\n    if (response.status === 401) {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    throw \"Unknown Firefox Relay error occurred.\";\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      this.messagingService.send(\"authBlocked\", { url: routerState.url });\n      return false;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      return this.router.createUrlTree([\"lock\"], { queryParams: { promptBiometric: true } });\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      return this.router.createUrlTree([\"/remove-password\"]);\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class LockGuard implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return true;\n    }\n\n    const redirectUrl =\n      authStatus === AuthenticationStatus.LoggedOut ? this.loginpage : this.homepage;\n\n    return this.router.createUrlTree([redirectUrl]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class UnauthGuard implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return true;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"lock\"]);\n    }\n\n    return this.router.createUrlTree([this.homepage]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"@bitwarden/common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import { BroadcasterService as BroadcasterServiceAbstraction } from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: any) => any> = new Map<string, (message: any) => any>();\n\n  send(message: any, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: any) => any) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","import { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals?: boolean;\n  replaceTopModal?: boolean;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config: ModalConfig = {}) {\n    const { replaceTopModal = false, allowMultipleModals = false } = config;\n\n    if (this.modalCount > 0 && replaceTopModal) {\n      this.topModal.instance.close();\n    }\n\n    if (this.modalCount > 0 && !allowMultipleModals) {\n      return;\n    }\n\n    const [modalRef] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  closeAll(): void {\n    this.modalList.forEach((modal) => modal.instance.close());\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", () => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationComponent for any other situation where you need to verify the user's identity.\n */\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\nimport { ModalService } from \"./modal.service\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationService for any other situation where you need to verify the user's identity.\n */\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { InjectionToken, Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { ThemingService } from \"@bitwarden/angular/services/theming/theming.service\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { AbstractEncryptService } from \"@bitwarden/common/abstractions/abstractEncrypt.service\";\nimport { AccountApiService as AccountApiServiceAbstraction } from \"@bitwarden/common/abstractions/account/account-api.service.abstraction\";\nimport { AccountService as AccountServiceAbstraction } from \"@bitwarden/common/abstractions/account/account.service.abstraction\";\nimport { ApiService as ApiServiceAbstraction } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService as CipherServiceAbstraction } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport {\n  FolderService as FolderServiceAbstraction,\n  InternalFolderService,\n} from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FormValidationErrorsService as FormValidationErrorsServiceAbstraction } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport {\n  PolicyService as PolicyServiceAbstraction,\n  InternalPolicyService,\n} from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { ProviderService as ProviderServiceAbstraction } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"@bitwarden/common/abstractions/sync.service\";\nimport { TokenService as TokenServiceAbstraction } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { Account } from \"@bitwarden/common/models/domain/account\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/globalState\";\nimport { AccountApiService } from \"@bitwarden/common/services/account/account-api.service\";\nimport { AccountService } from \"@bitwarden/common/services/account/account.service\";\nimport { ApiService } from \"@bitwarden/common/services/api.service\";\nimport { AppIdService } from \"@bitwarden/common/services/appId.service\";\nimport { AuditService } from \"@bitwarden/common/services/audit.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { CipherService } from \"@bitwarden/common/services/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/services/collection.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { CryptoService } from \"@bitwarden/common/services/crypto.service\";\nimport { EncryptService } from \"@bitwarden/common/services/encrypt.service\";\nimport { EnvironmentService } from \"@bitwarden/common/services/environment.service\";\nimport { EventService } from \"@bitwarden/common/services/event.service\";\nimport { ExportService } from \"@bitwarden/common/services/export.service\";\nimport { FileUploadService } from \"@bitwarden/common/services/fileUpload.service\";\nimport { FolderApiService } from \"@bitwarden/common/services/folder/folder-api.service\";\nimport { FolderService } from \"@bitwarden/common/services/folder/folder.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/services/formValidationErrors.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/services/keyConnector.service\";\nimport { NotificationsService } from \"@bitwarden/common/services/notifications.service\";\nimport { OrganizationService } from \"@bitwarden/common/services/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/services/passwordGeneration.service\";\nimport { PolicyApiService } from \"@bitwarden/common/services/policy/policy-api.service\";\nimport { PolicyService } from \"@bitwarden/common/services/policy/policy.service\";\nimport { ProviderService } from \"@bitwarden/common/services/provider.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\nimport { SendService } from \"@bitwarden/common/services/send.service\";\nimport { SettingsService } from \"@bitwarden/common/services/settings.service\";\nimport { StateService } from \"@bitwarden/common/services/state.service\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\nimport { SyncService } from \"@bitwarden/common/services/sync.service\";\nimport { TokenService } from \"@bitwarden/common/services/token.service\";\nimport { TotpService } from \"@bitwarden/common/services/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/services/twoFactor.service\";\nimport { UserVerificationService } from \"@bitwarden/common/services/userVerification.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/services/usernameGeneration.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout.service\";\nimport { WebCryptoFunctionService } from \"@bitwarden/common/services/webCryptoFunction.service\";\n\nimport { AuthGuard } from \"../guards/auth.guard\";\nimport { LockGuard } from \"../guards/lock.guard\";\nimport { UnauthGuard } from \"../guards/unauth.guard\";\n\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./passwordReprompt.service\";\nimport { ValidationService } from \"./validation.service\";\n\nexport const WINDOW = new InjectionToken<Window>(\"WINDOW\");\nexport const MEMORY_STORAGE = new InjectionToken<AbstractStorageService>(\"MEMORY_STORAGE\");\nexport const SECURE_STORAGE = new InjectionToken<AbstractStorageService>(\"SECURE_STORAGE\");\nexport const STATE_FACTORY = new InjectionToken<StateFactory>(\"STATE_FACTORY\");\nexport const STATE_SERVICE_USE_CACHE = new InjectionToken<boolean>(\"STATE_SERVICE_USE_CACHE\");\nexport const LOGOUT_CALLBACK = new InjectionToken<(expired: boolean, userId?: string) => void>(\n  \"LOGOUT_CALLBACK\"\n);\nexport const LOCKED_CALLBACK = new InjectionToken<() => void>(\"LOCKED_CALLBACK\");\nexport const CLIENT_TYPE = new InjectionToken<boolean>(\"CLIENT_TYPE\");\nexport const LOCALES_DIRECTORY = new InjectionToken<string>(\"LOCALES_DIRECTORY\");\nexport const SYSTEM_LANGUAGE = new InjectionToken<string>(\"SYSTEM_LANGUAGE\");\nexport const LOG_MAC_FAILURES = new InjectionToken<string>(\"LOG_MAC_FAILURES\");\n\n@NgModule({\n  declarations: [],\n  providers: [\n    ValidationService,\n    AuthGuard,\n    UnauthGuard,\n    LockGuard,\n    ModalService,\n    { provide: WINDOW, useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    {\n      provide: LOCALES_DIRECTORY,\n      useValue: \"./locales\",\n    },\n    {\n      provide: SYSTEM_LANGUAGE,\n      useFactory: (window: Window) => window.navigator.language,\n      deps: [WINDOW],\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: true,\n    },\n    {\n      provide: LOGOUT_CALLBACK,\n      useFactory:\n        (messagingService: MessagingServiceAbstraction) => (expired: boolean, userId?: string) =>\n          messagingService.send(\"logout\", { expired: expired, userId: userId }),\n      deps: [MessagingServiceAbstraction],\n    },\n    {\n      provide: LOCKED_CALLBACK,\n      useValue: null,\n    },\n    {\n      provide: LOG_MAC_FAILURES,\n      useValue: true,\n    },\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [AbstractStorageService],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        I18nServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: InternalFolderService,\n      useExisting: FolderServiceAbstraction,\n    },\n    {\n      provide: FolderApiServiceAbstraction,\n      useClass: FolderApiService,\n      deps: [FolderServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AccountApiServiceAbstraction,\n      useClass: AccountApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: AccountServiceAbstraction,\n      useClass: AccountService,\n      deps: [\n        AccountApiServiceAbstraction,\n        UserVerificationServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n      ],\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        AbstractEncryptService,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: UsernameGenerationServiceAbstraction,\n      useClass: UsernameGenerationService,\n      deps: [CryptoServiceAbstraction, StateServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useClass: ApiService,\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        AppIdServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useClass: SyncService,\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n        ProviderServiceAbstraction,\n        FolderApiServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useClass: VaultTimeoutService,\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n        LOCKED_CALLBACK,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useClass: StateService,\n      deps: [\n        AbstractStorageService,\n        SECURE_STORAGE,\n        MEMORY_STORAGE,\n        LogService,\n        StateMigrationServiceAbstraction,\n        STATE_FACTORY,\n        STATE_SERVICE_USE_CACHE,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useClass: NotificationsService,\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        LOGOUT_CALLBACK,\n        LogService,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [WINDOW],\n    },\n    {\n      provide: AbstractEncryptService,\n      useClass: EncryptService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, LOG_MAC_FAILURES],\n    },\n    {\n      provide: EventServiceAbstraction,\n      useClass: EventService,\n      deps: [\n        ApiServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction],\n    },\n    {\n      provide: InternalPolicyService,\n      useExisting: PolicyServiceAbstraction,\n    },\n    {\n      provide: PolicyApiServiceAbstraction,\n      useClass: PolicyApiService,\n      deps: [\n        PolicyServiceAbstraction,\n        ApiServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, ApiServiceAbstraction],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TwoFactorServiceAbstraction,\n      useClass: TwoFactorService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: AbstractThemingService,\n      useClass: ThemingService,\n    },\n    {\n      provide: FormValidationErrorsServiceAbstraction,\n      useClass: FormValidationErrorsService,\n    },\n  ],\n})\nexport class JslibServicesModule {}\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: AbstractStorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/twoFactor.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthenticationType } from \"../enums/authenticationType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { ApiLogInStrategy } from \"../misc/logInStrategies/apiLogin.strategy\";\nimport { PasswordLogInStrategy } from \"../misc/logInStrategies/passwordLogin.strategy\";\nimport { SsoLogInStrategy } from \"../misc/logInStrategies/ssoLogin.strategy\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy ? this.logInStrategy.email : null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  private logInStrategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n  private sessionTimeout: any;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService\n  ) {}\n\n  async logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n\n    if (credentials.type === AuthenticationType.Password) {\n      strategy = new PasswordLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this\n      );\n    } else if (credentials.type === AuthenticationType.Sso) {\n      strategy = new SsoLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.keyConnectorService\n      );\n    } else if (credentials.type === AuthenticationType.Api) {\n      strategy = new ApiLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.environmentService,\n        this.keyConnectorService\n      );\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithApiKey(): boolean {\n    return this.logInStrategy instanceof ApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  async getAuthStatus(userId?: string): Promise<AuthenticationStatus> {\n    const isAuthenticated = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!isAuthenticated) {\n      return AuthenticationStatus.LoggedOut;\n    }\n\n    // Keys aren't stored for a device that is locked or logged out\n    // Make sure we're logged in before checking this, otherwise we could mix up those states\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    const hasKeyInMemory = await this.cryptoService.hasKeyInMemory(userId);\n    if (!hasKeyInMemory) {\n      return AuthenticationStatus.Locked;\n    }\n\n    return AuthenticationStatus.Unlocked;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  private saveState(strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { InternalFolderService as InternalFolderServiceAbstraction } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { CipherData } from \"../../models/data/cipherData\";\nimport { FolderData } from \"../../models/data/folderData\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { FolderView } from \"../../models/view/folderView\";\n\nexport class FolderService implements InternalFolderServiceAbstraction {\n  private _folders: BehaviorSubject<Folder[]> = new BehaviorSubject([]);\n  private _folderViews: BehaviorSubject<FolderView[]> = new BehaviorSubject([]);\n\n  folders$ = this._folders.asObservable();\n  folderViews$ = this._folderViews.asObservable();\n\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {\n    this.stateService.activeAccountUnlocked.subscribe(async (unlocked) => {\n      if ((Utils.global as any).bitwardenContainerService == null) {\n        return;\n      }\n\n      if (!unlocked) {\n        this._folders.next([]);\n        this._folderViews.next([]);\n        return;\n      }\n\n      const data = await this.stateService.getEncryptedFolders();\n\n      await this.updateObservables(data);\n    });\n  }\n\n  async clearCache(): Promise<void> {\n    this._folderViews.next([]);\n  }\n\n  // TODO: This should be moved to EncryptService or something\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = this._folders.getValue();\n\n    return folders.find((folder) => folder.id === id);\n  }\n\n  /**\n   * @deprecated Only use in CLI!\n   */\n  async getAllDecryptedFromState(): Promise<FolderView[]> {\n    const data = await this.stateService.getEncryptedFolders();\n    const folders = Object.values(data || {}).map((f) => new Folder(f));\n\n    return this.decryptFolders(folders);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<void> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<void> {\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._folders.next([]);\n      this._folderViews.next([]);\n    }\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  private async updateObservables(foldersMap: { [id: string]: FolderData }) {\n    const folders = Object.values(foldersMap || {}).map((f) => new Folder(f));\n\n    this._folders.next(folders);\n\n    if (await this.cryptoService.hasKey()) {\n      this._folderViews.next(await this.decryptFolders(folders));\n    }\n  }\n\n  private async decryptFolders(folders: Folder[]) {\n    const decryptFolderPromises = folders.map((f) => f.decrypt());\n    const decryptedFolders = await Promise.all(decryptFolderPromises);\n\n    decryptedFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decryptedFolders.push(noneFolder);\n\n    return decryptedFolders;\n  }\n}\n","import { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FolderData } from \"@bitwarden/common/models/data/folderData\";\nimport { Folder } from \"@bitwarden/common/models/domain/folder\";\nimport { FolderRequest } from \"@bitwarden/common/models/request/folderRequest\";\nimport { FolderResponse } from \"@bitwarden/common/models/response/folderResponse\";\n\nexport class FolderApiService implements FolderApiServiceAbstraction {\n  constructor(private folderService: InternalFolderService, private apiService: ApiService) {}\n\n  async save(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.putFolder(folder.id, request);\n    }\n\n    const data = new FolderData(response);\n    await this.folderService.upsert(data);\n  }\n\n  async delete(id: string): Promise<any> {\n    await this.deleteFolder(id);\n    await this.folderService.delete(id);\n  }\n\n  async get(id: string): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  private async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  private deleteFolder(id: string): Promise<any> {\n    return this.apiService.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n}\n","import { AccountApiService as AccountApiServiceAbstraction } from \"@bitwarden/common/abstractions/account/account-api.service.abstraction\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\n\nexport class AccountApiService implements AccountApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  deleteAccount(request: SecretVerificationRequest): Promise<void> {\n    return this.apiService.send(\"DELETE\", \"/accounts\", request, true, false);\n  }\n}\n","import { AccountApiService } from \"@bitwarden/common/abstractions/account/account-api.service.abstraction\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\n\nimport { AccountService as AccountServiceAbstraction } from \"../../abstractions/account/account.service.abstraction\";\nimport { Verification } from \"../../types/verification\";\n\nexport class AccountService implements AccountServiceAbstraction {\n  constructor(\n    private accountApiService: AccountApiService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async delete(verification: Verification): Promise<any> {\n    try {\n      const verificationRequest = await this.userVerificationService.buildRequest(verification);\n      await this.accountApiService.deleteAccount(verificationRequest);\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  protected baseUrl: string;\n  protected webVaultUrl: string;\n  protected apiUrl: string;\n  protected identityUrl: string;\n  protected iconsUrl: string;\n  protected notificationsUrl: string;\n  protected eventsUrl: string;\n  private keyConnectorUrl: string;\n  private scimUrl: string = null;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount.subscribe(async () => {\n      await this.setUrlsFromStorage();\n    });\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  getScimUrl() {\n    if (this.scimUrl != null) {\n      return this.scimUrl + \"/v2\";\n    }\n\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://scim.bitwarden.com/v2\"\n      : this.getWebVaultUrl() + \"/scim/v2\";\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    // scimUrl is not saved to storage\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    // scimUrl cannot be cleared\n    urls.scim = this.formatUrl(urls.scim) ?? this.scimUrl;\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n      // scimUrl is not saved to storage\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    this.scimUrl = urls.scim;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n      scim: this.scimUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n}\n","import { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { OrganizationApiKeyType } from \"../enums/organizationApiKeyType\";\nimport { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { Utils } from \"../misc/utils\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { DeviceRequest } from \"../models/request/deviceRequest\";\nimport { DeviceVerificationRequest } from \"../models/request/deviceVerificationRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationApiKeyRequest } from \"../models/request/organizationApiKeyRequest\";\nimport { OrganizationConnectionRequest } from \"../models/request/organizationConnectionRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingHistoryResponse } from \"../models/response/billingHistoryResponse\";\nimport { BillingPaymentResponse } from \"../models/response/billingPaymentResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DeviceVerificationResponse } from \"../models/response/deviceVerificationResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationApiKeyInformationResponse } from \"../models/response/organizationApiKeyInformationResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organizationConnectionResponse\";\nimport { OrganizationExportResponse } from \"../models/response/organizationExportResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organizationSponsorshipSyncStatusResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SsoPreValidateResponse } from \"../models/response/ssoPreValidateResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  TwoFactorWebAuthnResponse,\n  ChallengeResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport class ApiService implements ApiServiceAbstraction {\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private appIdService: AppIdService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof ApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  postRegister(request: RegisterRequest): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      false,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postAccountRequestOTP(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Account Billing APIs\n\n  async getUserBillingHistory(): Promise<BillingHistoryResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/history\", null, true, true);\n    return new BillingHistoryResponse(r);\n  }\n\n  async getUserBillingPayment(): Promise<BillingPaymentResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/payment-method\", null, true, true);\n    return new BillingPaymentResponse(r);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getFullCipherDetails(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/details\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Organization User APIs\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getOrganizationUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  async getOrganizationAutoEnrollStatus(\n    identifier: string\n  ): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  revokeOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/revoke\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async revokeManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/revoke\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  restoreOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/restore\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async restoreManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/restore\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, false, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postImportDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + organizationId + \"/import\", request, true, false);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  async getDeviceVerificationSettings(): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/two-factor/get-device-verification-settings\",\n      null,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async putDeviceVerificationSettings(\n    request: DeviceVerificationRequest\n  ): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/two-factor/device-verification-settings\",\n      request,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getOrganization(id: string): Promise<OrganizationResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getOrganizationBilling(id: string): Promise<BillingResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/billing\", null, true, true);\n    return new BillingResponse(r);\n  }\n\n  async getOrganizationSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/subscription\", null, true, true);\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getCloudCommunicationsEnabled(): Promise<boolean> {\n    const r = await this.send(\"GET\", \"/organizations/connections/enabled\", null, true, true);\n    return r as boolean;\n  }\n\n  async getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"GET\", `/organizations/connections/${id}/${type}`, null, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"POST\", \"/organizations/connections/\", request, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId?: string\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/connections/\" + organizationConnectionId,\n      request,\n      true,\n      true\n    );\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async deleteOrganizationConnection(id: string): Promise<void> {\n    return this.send(\"DELETE\", \"/organizations/connections/\" + id, null, true, false);\n  }\n\n  async getOrganizationLicense(id: string, installationId: string): Promise<any> {\n    return this.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getOrganizationTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async getOrganizationSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganization(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations\", request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganization(\n    id: string,\n    request: OrganizationUpdateRequest\n  ): Promise<OrganizationResponse> {\n    const r = await this.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganizationTaxInfo(\n    id: string,\n    request: OrganizationTaxInfoUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  postLeaveOrganization(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n  }\n\n  async postOrganizationLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async postOrganizationLicenseUpdate(id: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async postOrganizationApiKey(\n    id: string,\n    request: OrganizationApiKeyRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async getOrganizationApiKeyInformation(\n    id: string,\n    type: OrganizationApiKeyType = null\n  ): Promise<ListResponse<OrganizationApiKeyInformationResponse>> {\n    const uri =\n      type === null\n        ? \"/organizations/\" + id + \"/api-key-information\"\n        : \"/organizations/\" + id + \"/api-key-information/\" + type;\n    const r = await this.send(\"GET\", uri, null, true, true);\n    return new ListResponse(r, OrganizationApiKeyInformationResponse);\n  }\n\n  async postOrganizationRotateApiKey(\n    id: string,\n    request: OrganizationApiKeyRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async postOrganizationSso(\n    id: string,\n    request: OrganizationSsoRequest\n  ): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/sso\", request, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganizationUpgrade(\n    id: string,\n    request: OrganizationUpgradeRequest\n  ): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/upgrade\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationUpdateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/subscription\", request, true, false);\n  }\n\n  async postOrganizationSeat(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/seat\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postOrganizationPayment(id: string, request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  postOrganizationVerifyBank(id: string, request: VerifyBankRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/verify-bank\", request, true, false);\n  }\n\n  postOrganizationCancel(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  postOrganizationReinstate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  deleteOrganization(id: string, request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n  }\n\n  async getOrganizationKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async postOrganizationKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/keys\", request, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getOrganizationExport(organizationId: string): Promise<OrganizationExportResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/export\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationExportResponse(r);\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersion()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<SsoPreValidateResponse> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      const body = await response.json();\n      return new SsoPreValidateResponse(body);\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoredOrgId +\n        \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getSponsorshipSyncStatus(\n    sponsoredOrgId: string\n  ): Promise<OrganizationSponsorshipSyncStatusResponse> {\n    const response = await this.send(\n      \"GET\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/sync-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSponsorshipSyncStatusResponse(response);\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const appId = await this.appIdService.getAppId();\n    const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n    const tokenRequest = new ApiTokenRequest(\n      clientId,\n      clientSecret,\n      new TokenRequestTwoFactor(),\n      deviceRequest\n    );\n\n    const response = await this.postIdentityToken(tokenRequest);\n    if (!(response instanceof IdentityTokenResponse)) {\n      throw new Error(\"Invalid response received when refreshing api token\");\n    }\n\n    await this.tokenService.setToken(response.accessToken);\n  }\n\n  async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    if (hasResponse && response.status === 200) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    if (\n      authed &&\n      ((tokenError && response.status === 400) ||\n        response.status === 401 ||\n        response.status === 403)\n    ) {\n      await this.logoutCallback(true);\n      return null;\n    }\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService(apiService);\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { AuthService } from \"../abstractions/auth.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { PolicyService } from \"../abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../abstractions/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { PolicyType } from \"../enums/policyType\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private authService: AuthService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (expired: boolean, userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    for (const userId in this.stateService.accounts.getValue()) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(allowSoftLock = false, userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      await this.folderService.clearCache();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(false, userId);\n    }\n  }\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    const authStatus = await this.authService.getAuthStatus(userId);\n    if (\n      authStatus === AuthenticationStatus.Locked ||\n      authStatus === AuthenticationStatus.LoggedOut\n    ) {\n      return false;\n    }\n\n    const vaultTimeout = await this.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(true, userId);\n  }\n}\n","import * as papa from \"papaparse\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\nimport { CipherWithIdExport as CipherExport } from \"../models/export/cipherWithIdsExport\";\nimport { CollectionWithIdExport as CollectionExport } from \"../models/export/collectionWithIdExport\";\nimport { EventExport } from \"../models/export/eventExport\";\nimport { FolderWithIdExport as FolderExport } from \"../models/export/folderWithIdExport\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { EventView } from \"../models/view/eventView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfIterations\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfIterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new EventExport(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      firstValueFrom(this.folderService.folderViews$).then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      firstValueFrom(this.folderService.folders$).then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getOrganizationExport(organizationId).then((exportData) => {\n        const exportPromises: any = [];\n        if (exportData != null) {\n          if (\n            exportData.collections != null &&\n            exportData.collections.data != null &&\n            exportData.collections.data.length > 0\n          ) {\n            exportData.collections.data.forEach((c) => {\n              const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n              exportPromises.push(\n                collection.decrypt().then((decCol) => {\n                  decCollections.push(decCol);\n                })\n              );\n            });\n          }\n          if (\n            exportData.ciphers != null &&\n            exportData.ciphers.data != null &&\n            exportData.ciphers.data.length > 0\n          ) {\n            exportData.ciphers.data\n              .filter((c) => c.deletedDate === null)\n              .forEach((c) => {\n                const cipher = new Cipher(new CipherData(c));\n                exportPromises.push(\n                  cipher.decrypt().then((decCipher) => {\n                    decCiphers.push(decCipher);\n                  })\n                );\n              });\n          }\n        }\n        return Promise.all(exportPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { NotificationType } from \"../enums/notificationType\";\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService,\n    private authService: AuthService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    // eslint-disable-next-line\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback(true);\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    const authStatus = await this.authService.getAuthStatus();\n    return authStatus >= AuthenticationStatus.Unlocked;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n\n  constructor(win: Window) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = forge.util.createBuffer(parameters.data);\n    const decipher = forge.cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { EncryptedObject } from \"@bitwarden/common/models/domain/encryptedObject\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { IEncrypted } from \"../interfaces/IEncrypted\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport class EncryptService implements AbstractEncryptService {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService,\n    private logMacFailures: boolean\n  ) {}\n\n  async encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async decryptToUtf8(encString: EncString, key: SymmetricCryptoKey): Promise<string> {\n    if (key == null) {\n      throw new Error(\"No key provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encString);\n\n    if (key.macKey != null && encString?.mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (key.encType !== encString.encryptionType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  async decryptToBytes(encThing: IEncrypted, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (encThing == null) {\n      throw new Error(\"Nothing provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encThing);\n\n    if (key.macKey != null && encThing.macBytes == null) {\n      return null;\n    }\n\n    if (key.encType !== encThing.encryptionType) {\n      return null;\n    }\n\n    if (key.macKey != null && encThing.macBytes != null) {\n      const macData = new Uint8Array(encThing.ivBytes.byteLength + encThing.dataBytes.byteLength);\n      macData.set(new Uint8Array(encThing.ivBytes), 0);\n      macData.set(new Uint8Array(encThing.dataBytes), encThing.ivBytes.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        key.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(encThing.macBytes, computedMac);\n      if (!macsMatch) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    const result = await this.cryptoFunctionService.aesDecrypt(\n      encThing.dataBytes,\n      encThing.ivBytes,\n      key.encKey\n    );\n\n    return result ?? null;\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = key;\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private logMacFailed(msg: string) {\n    if (this.logMacFailures) {\n      this.logService.error(msg);\n    }\n  }\n\n  /**\n   * Transform into new key for the old encrypt-then-mac scheme if required, otherwise return the current key unchanged\n   * @param encThing The encrypted object (e.g. encString or encArrayBuffer) that you want to decrypt\n   */\n  resolveLegacyKey(key: SymmetricCryptoKey, encThing: IEncrypted): SymmetricCryptoKey {\n    if (\n      encThing.encryptionType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      return new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n    }\n\n    return key;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { EventService as EventServiceAbstraction } from \"../abstractions/event.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EventType } from \"../enums/eventType\";\nimport { EventData } from \"../models/data/eventData\";\nimport { EventRequest } from \"../models/request/eventRequest\";\n\nexport class EventService implements EventServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private apiService: ApiService,\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false,\n    organizationId: string = null\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    if (organizationId != null) {\n      if (!orgIds.has(organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    event.organizationId = organizationId;\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.uploadEvents();\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      req.organizationId = e.organizationId;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import { OrganizationService } from \"../../abstractions/organization.service\";\nimport { InternalPolicyService as InternalPolicyServiceAbstraction } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/masterPasswordPolicyOptions\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { PolicyResponse } from \"../../models/response/policyResponse\";\n\nexport class PolicyService implements InternalPolicyServiceAbstraction {\n  policyCache: Policy[];\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        // eslint-disable-next-line\n        if (diskPolicies.hasOwnProperty(id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\n    let enforcedOptions: MasterPasswordPolicyOptions = null;\n\n    if (policies == null) {\n      policies = await this.getAll(PolicyType.MasterPassword);\n    } else {\n      policies = policies.filter((p) => p.type === PolicyType.MasterPassword);\n    }\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new MasterPasswordPolicyOptions();\n      }\n\n      if (\n        currentPolicy.data.minComplexity != null &&\n        currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n      ) {\n        enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.requireUpper) {\n        enforcedOptions.requireUpper = true;\n      }\n\n      if (currentPolicy.data.requireLower) {\n        enforcedOptions.requireLower = true;\n      }\n\n      if (currentPolicy.data.requireNumbers) {\n        enforcedOptions.requireNumbers = true;\n      }\n\n      if (currentPolicy.data.requireSpecial) {\n        enforcedOptions.requireSpecial = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n    const organizations = await this.organizationService.getAll(userId);\n    let filteredPolicies;\n\n    if (policyFilter != null) {\n      filteredPolicies = policies.filter((p) => p.enabled && policyFilter(p));\n    } else {\n      filteredPolicies = policies.filter((p) => p.enabled);\n    }\n\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.enabled &&\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        !this.isExcemptFromPolicies(o, policyType) &&\n        policySet.has(o.id)\n    );\n  }\n\n  async upsert(policy: PolicyData): Promise<any> {\n    let policies = await this.stateService.getEncryptedPolicies();\n    if (policies == null) {\n      policies = {};\n    }\n\n    policies[policy.id] = policy;\n\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n}\n","import { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nexport class PolicyApiService implements PolicyApiServiceAbstraction {\n  constructor(\n    private policyService: InternalPolicyService,\n    private apiService: ApiService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPolicyForOrganization(policyType: PolicyType, organizationId: string): Promise<Policy> {\n    const org = await this.organizationService.get(organizationId);\n    if (org?.isProviderUser) {\n      const orgPolicies = await this.getPolicies(organizationId);\n      const policy = orgPolicies.data.find((p) => p.organizationId === organizationId);\n\n      if (policy == null) {\n        return null;\n      }\n\n      return new Policy(new PolicyData(policy));\n    }\n\n    const policies = await this.policyService.getAll(policyType);\n    return policies.find((p) => p.organizationId === organizationId);\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.policyService.mapPoliciesFromToken(response);\n    return this.policyService.getMasterPasswordPolicyOptions(policies);\n  }\n\n  async putPolicy(organizationId: string, type: PolicyType, request: PolicyRequest): Promise<any> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    const response = new PolicyResponse(r);\n    const data = new PolicyData(response);\n    await this.policyService.upsert(data);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SEND_KDF_ITERATIONS } from \"../enums/kdfType\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/sendFile\";\nimport { SendText } from \"../models/domain/sendText\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { Utils } from \"../misc/utils\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private logoutCallback: (expired: boolean, userId?: string) => void\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      kdfIterations\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n\n  private handleKeyConnectorError(e: any) {\n    this.logService.error(e);\n    if (this.logoutCallback != null) {\n      this.logoutCallback(false);\n    }\n    throw new Error(\"Key Connector error\");\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../abstractions/userVerification.service\";\nimport { VerificationType } from \"../enums/verificationType\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { Verification } from \"../types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Use it to verify the input collected by UserVerificationComponent.\n */\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  /**\n   * Create a new request model to be used for server-side verification\n   * @param verification User-supplied verification data (Master Password or OTP)\n   * @param requestClass The request model to create\n   * @param alreadyHashed Whether the master password is already hashed\n   */\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  /**\n   * Used to verify the Master Password client-side, or send the OTP to the server for verification (with no other data)\n   * Generally used for client-side verification only.\n   * @param verification User-supplied verification data (Master Password or OTP)\n   */\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.apiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.apiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPassRequired\"));\n      }\n    }\n  }\n}\n","import { OrganizationService as OrganizationServiceAbstraction } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport class OrganizationService implements OrganizationServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Organization> {\n    const organizations = await this.stateService.getOrganizations();\n    // eslint-disable-next-line\n    if (organizations == null || !organizations.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Organization(organizations[id]);\n  }\n\n  async getByIdentifier(identifier: string): Promise<Organization> {\n    const organizations = await this.getAll();\n    if (organizations == null || organizations.length === 0) {\n      return null;\n    }\n\n    return organizations.find((o) => o.identifier === identifier);\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizations = await this.stateService.getOrganizations({ userId: userId });\n    const response: Organization[] = [];\n    for (const id in organizations) {\n      // eslint-disable-next-line\n      if (organizations.hasOwnProperty(id) && !organizations[id].isProviderUser) {\n        response.push(new Organization(organizations[id]));\n      }\n    }\n    const sortedResponse = response.sort((a, b) => a.name.localeCompare(b.name));\n    return sortedResponse;\n  }\n\n  async save(organizations: { [id: string]: OrganizationData }) {\n    return await this.stateService.setOrganizations(organizations);\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const orgs = await this.getAll();\n    return orgs.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  async hasOrganizations(userId?: string): Promise<boolean> {\n    const organizations = await this.getAll(userId);\n    return organizations.length > 0;\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import { UntypedFormGroup, ValidationErrors } from \"@angular/forms\";\n\nimport {\n  FormGroupControls,\n  FormValidationErrorsService as FormValidationErrorsAbstraction,\n  AllValidationErrors,\n} from \"../abstractions/formValidationErrors.service\";\n\nexport class FormValidationErrorsService implements FormValidationErrorsAbstraction {\n  getFormValidationErrors(controls: FormGroupControls): AllValidationErrors[] {\n    let errors: AllValidationErrors[] = [];\n    Object.keys(controls).forEach((key) => {\n      const control = controls[key];\n      if (control instanceof UntypedFormGroup) {\n        errors = errors.concat(this.getFormValidationErrors(control.controls));\n      }\n\n      const controlErrors: ValidationErrors = controls[key].errors;\n      if (controlErrors !== null) {\n        Object.keys(controlErrors).forEach((keyError) => {\n          errors.push({\n            controlName: key,\n            errorName: keyError,\n          });\n        });\n      }\n    });\n\n    return errors;\n  }\n}\n","import { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\n\nexport class MemoryStorageService implements AbstractStorageService {\n  private store = new Map<string, any>();\n\n  get<T>(key: string): Promise<T> {\n    if (this.store.has(key)) {\n      const obj = this.store.get(key);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string): Promise<boolean> {\n    return this.get(key) != null;\n  }\n\n  save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      return this.remove(key);\n    }\n    this.store.set(key, obj);\n    return Promise.resolve();\n  }\n\n  remove(key: string): Promise<any> {\n    this.store.delete(key);\n    return Promise.resolve();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\n@Injectable()\nexport class BroadcasterMessagingService implements MessagingService {\n  constructor(private broadcasterService: BroadcasterService) {}\n\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    this.broadcasterService.send(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\n\n@Injectable()\nexport class EventService {\n  constructor(private i18nService: I18nService, private policyService: PolicyService) {}\n\n  getDefaultDateFilters() {\n    const d = new Date();\n    const end = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59);\n    d.setDate(d.getDate() - 30);\n    const start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0);\n    return [this.toDateTimeLocalString(start), this.toDateTimeLocalString(end)];\n  }\n\n  formatDateFilters(filterStart: string, filterEnd: string) {\n    const start: Date = new Date(filterStart);\n    const end: Date = new Date(filterEnd + \":59.999\");\n    if (isNaN(start.getTime()) || isNaN(end.getTime()) || end < start) {\n      throw new Error(\"Invalid date range.\");\n    }\n    return [start.toISOString(), end.toISOString()];\n  }\n\n  async getEventInfo(ev: EventResponse, options = new EventOptions()): Promise<EventInfo> {\n    const appInfo = this.getAppInfo(ev.deviceType);\n    const { message, humanReadableMessage } = await this.getEventMessage(ev, options);\n    return {\n      message: message,\n      humanReadableMessage: humanReadableMessage,\n      appIcon: appInfo[0],\n      appName: appInfo[1],\n    };\n  }\n\n  private async getEventMessage(ev: EventResponse, options: EventOptions) {\n    let msg = \"\";\n    let humanReadableMsg = \"\";\n    switch (ev.type) {\n      // User\n      case EventType.User_LoggedIn:\n        msg = humanReadableMsg = this.i18nService.t(\"loggedIn\");\n        break;\n      case EventType.User_ChangedPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"changedPassword\");\n        break;\n      case EventType.User_Updated2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledUpdated2fa\");\n        break;\n      case EventType.User_Disabled2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"disabled2fa\");\n        break;\n      case EventType.User_Recovered2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"recovered2fa\");\n        break;\n      case EventType.User_FailedLogIn:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin\");\n        break;\n      case EventType.User_FailedLogIn2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin2fa\");\n        break;\n      case EventType.User_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedVault\");\n        break;\n      case EventType.User_UpdatedTempPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"updatedMasterPassword\");\n        break;\n      case EventType.User_MigratedKeyToKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"migratedKeyConnector\");\n        break;\n      // Cipher\n      case EventType.Cipher_Created:\n        msg = this.i18nService.t(\"createdItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"createdItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Updated:\n        msg = this.i18nService.t(\"editedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"editedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Deleted:\n        msg = this.i18nService.t(\"permanentlyDeletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"permanentlyDeletedItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_SoftDeleted:\n        msg = this.i18nService.t(\"deletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"deletedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Restored:\n        msg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        break;\n      case EventType.Cipher_AttachmentCreated:\n        msg = this.i18nService.t(\"createdAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"createdAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_AttachmentDeleted:\n        msg = this.i18nService.t(\"deletedAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_Shared:\n        msg = this.i18nService.t(\"movedItemIdToOrg\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"movedItemIdToOrg\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientViewed:\n        msg = this.i18nService.t(\"viewedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledPasswordVisible:\n        msg = this.i18nService.t(\"viewedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledHiddenFieldVisible:\n        msg = this.i18nService.t(\"viewedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientToggledCardCodeVisible:\n        msg = this.i18nService.t(\"viewedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedHiddenField:\n        msg = this.i18nService.t(\"copiedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedPassword:\n        msg = this.i18nService.t(\"copiedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"copiedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientCopiedCardCode:\n        msg = this.i18nService.t(\"copiedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientAutofilled:\n        msg = this.i18nService.t(\"autofilledItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"autofilledItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_UpdatedCollections:\n        msg = this.i18nService.t(\"editedCollectionsForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionsForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      // Collection\n      case EventType.Collection_Created:\n        msg = this.i18nService.t(\"createdCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Updated:\n        msg = this.i18nService.t(\"editedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Deleted:\n        msg = this.i18nService.t(\"deletedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      // Group\n      case EventType.Group_Created:\n        msg = this.i18nService.t(\"createdGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"createdGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Updated:\n        msg = this.i18nService.t(\"editedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Deleted:\n        msg = this.i18nService.t(\"deletedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"deletedGroupId\", this.getShortId(ev.groupId));\n        break;\n      // Org user\n      case EventType.OrganizationUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"invitedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UpdatedGroups:\n        msg = this.i18nService.t(\"editedGroupsForUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedGroupsForUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UnlinkedSso:\n        msg = this.i18nService.t(\"unlinkedSsoUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"unlinkedSsoUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Enroll:\n        msg = this.i18nService.t(\"eventEnrollPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventEnrollPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Withdraw:\n        msg = this.i18nService.t(\"eventWithdrawPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventWithdrawPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_AdminResetPassword:\n        msg = this.i18nService.t(\"eventAdminPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventAdminPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetSsoLink:\n        msg = this.i18nService.t(\"eventResetSsoLink\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventResetSsoLink\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_FirstSsoLogin:\n        msg = this.i18nService.t(\"firstSsoLogin\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"firstSsoLogin\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Revoked:\n        msg = this.i18nService.t(\"revokedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"revokedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Restored:\n        msg = this.i18nService.t(\"restoredUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"restoredUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      // Org\n      case EventType.Organization_Updated:\n        msg = humanReadableMsg = this.i18nService.t(\"editedOrgSettings\");\n        break;\n      case EventType.Organization_PurgedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"purgedOrganizationVault\");\n        break;\n      case EventType.Organization_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedOrganizationVault\");\n        break;\n      case EventType.Organization_VaultAccessed:\n        msg = humanReadableMsg = this.i18nService.t(\"vaultAccessedByProvider\");\n        break;\n      case EventType.Organization_EnabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledSso\");\n        break;\n      case EventType.Organization_DisabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledSso\");\n        break;\n      case EventType.Organization_EnabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledKeyConnector\");\n        break;\n      case EventType.Organization_DisabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledKeyConnector\");\n        break;\n      case EventType.Organization_SponsorshipsSynced:\n        msg = humanReadableMsg = this.i18nService.t(\"sponsorshipsSynced\");\n        break;\n      // Policies\n      case EventType.Policy_Updated: {\n        msg = this.i18nService.t(\"modifiedPolicyId\", this.formatPolicyId(ev));\n\n        const policies = await this.policyService.getAll();\n        const policy = policies.filter((p) => p.id === ev.policyId)[0];\n        let p1 = this.getShortId(ev.policyId);\n        if (policy != null) {\n          p1 = PolicyType[policy.type];\n        }\n\n        humanReadableMsg = this.i18nService.t(\"modifiedPolicyId\", p1);\n        break;\n      }\n      // Provider users:\n      case EventType.ProviderUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"invitedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.providerUserId)\n        );\n        break;\n      case EventType.ProviderUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"removedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderOrganization_Created:\n        msg = this.i18nService.t(\"createdOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Added:\n        msg = this.i18nService.t(\"addedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"addedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Removed:\n        msg = this.i18nService.t(\"removedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_VaultAccessed:\n        msg = this.i18nService.t(\"accessedClientVault\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"accessedClientVault\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      default:\n        break;\n    }\n    return {\n      message: msg === \"\" ? null : msg,\n      humanReadableMessage: humanReadableMsg === \"\" ? null : humanReadableMsg,\n    };\n  }\n\n  private getAppInfo(deviceType: DeviceType): [string, string] {\n    switch (deviceType) {\n      case DeviceType.Android:\n        return [\"bwi-android\", this.i18nService.t(\"mobile\") + \" - Android\"];\n      case DeviceType.iOS:\n        return [\"bwi-apple\", this.i18nService.t(\"mobile\") + \" - iOS\"];\n      case DeviceType.UWP:\n        return [\"bwi-windows\", this.i18nService.t(\"mobile\") + \" - Windows\"];\n      case DeviceType.ChromeExtension:\n        return [\"bwi-chrome\", this.i18nService.t(\"extension\") + \" - Chrome\"];\n      case DeviceType.FirefoxExtension:\n        return [\"bwi-firefox\", this.i18nService.t(\"extension\") + \" - Firefox\"];\n      case DeviceType.OperaExtension:\n        return [\"bwi-opera\", this.i18nService.t(\"extension\") + \" - Opera\"];\n      case DeviceType.EdgeExtension:\n        return [\"bwi-edge\", this.i18nService.t(\"extension\") + \" - Edge\"];\n      case DeviceType.VivaldiExtension:\n        return [\"bwi-puzzle\", this.i18nService.t(\"extension\") + \" - Vivaldi\"];\n      case DeviceType.SafariExtension:\n        return [\"bwi-safari\", this.i18nService.t(\"extension\") + \" - Safari\"];\n      case DeviceType.WindowsDesktop:\n        return [\"bwi-windows\", this.i18nService.t(\"desktop\") + \" - Windows\"];\n      case DeviceType.MacOsDesktop:\n        return [\"bwi-apple\", this.i18nService.t(\"desktop\") + \" - macOS\"];\n      case DeviceType.LinuxDesktop:\n        return [\"bwi-linux\", this.i18nService.t(\"desktop\") + \" - Linux\"];\n      case DeviceType.ChromeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Chrome\"];\n      case DeviceType.FirefoxBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Firefox\"];\n      case DeviceType.OperaBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Opera\"];\n      case DeviceType.SafariBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Safari\"];\n      case DeviceType.VivaldiBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Vivaldi\"];\n      case DeviceType.EdgeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Edge\"];\n      case DeviceType.IEBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - IE\"];\n      case DeviceType.UnknownBrowser:\n        return [\n          \"bwi-globe\",\n          this.i18nService.t(\"webVault\") + \" - \" + this.i18nService.t(\"unknown\"),\n        ];\n      default:\n        return [\"bwi-globe\", this.i18nService.t(\"unknown\")];\n    }\n  }\n\n  private formatCipherId(ev: EventResponse, options: EventOptions) {\n    const shortId = this.getShortId(ev.cipherId);\n    if (ev.organizationId == null || !options.cipherInfo) {\n      return \"<code>\" + shortId + \"</code>\";\n    }\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/vault?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.cipherId\n    );\n    return a.outerHTML;\n  }\n\n  private formatGroupId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.groupId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/groups?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatCollectionId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.collectionId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/collections?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatOrgUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.organizationUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.organizationUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/providers/\" +\n        ev.providerId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.providerUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderOrganizationId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerOrganizationId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\"href\", \"#/providers/\" + ev.providerId + \"/clients?search=\" + shortId);\n    return a.outerHTML;\n  }\n\n  private formatPolicyId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.policyId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/policies?policyId=\" + ev.policyId\n    );\n    return a.outerHTML;\n  }\n\n  private makeAnchor(shortId: string) {\n    const a = document.createElement(\"a\");\n    a.title = this.i18nService.t(\"view\");\n    a.innerHTML = \"<code>\" + shortId + \"</code>\";\n    return a;\n  }\n\n  private getShortId(id: string) {\n    return id?.substring(0, 8);\n  }\n\n  private toDateTimeLocalString(date: Date) {\n    return (\n      date.getFullYear() +\n      \"-\" +\n      this.pad(date.getMonth() + 1) +\n      \"-\" +\n      this.pad(date.getDate()) +\n      \"T\" +\n      this.pad(date.getHours()) +\n      \":\" +\n      this.pad(date.getMinutes())\n    );\n  }\n\n  private pad(num: number) {\n    const norm = Math.floor(Math.abs(num));\n    return (norm < 10 ? \"0\" : \"\") + norm;\n  }\n}\n\nexport class EventInfo {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n}\n\nexport class EventOptions {\n  cipherInfo = true;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"@bitwarden/common/enums/htmlStorageLocation\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storageOptions\";\n\n@Injectable()\nexport class HtmlStorageService implements AbstractStorageService {\n  get defaultOptions(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Session };\n  }\n\n  get<T>(key: string, options: StorageOptions = this.defaultOptions): Promise<T> {\n    let json: string = null;\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        json = window.localStorage.getItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        json = window.sessionStorage.getItem(key);\n        break;\n    }\n\n    if (json != null) {\n      const obj = JSON.parse(json);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string, options: StorageOptions = this.defaultOptions): Promise<boolean> {\n    return (await this.get(key, options)) != null;\n  }\n\n  save(key: string, obj: any, options: StorageOptions = this.defaultOptions): Promise<any> {\n    if (obj == null) {\n      return this.remove(key, options);\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const json = JSON.stringify(obj);\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.setItem(key, json);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.setItem(key, json);\n        break;\n    }\n    return Promise.resolve();\n  }\n\n  remove(key: string, options: StorageOptions = this.defaultOptions): Promise<any> {\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.removeItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.removeItem(key);\n        break;\n    }\n    return Promise.resolve();\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService) {}\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  getCryptoService(): CryptoService {\n    return this.cryptoService;\n  }\n}\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport { WINDOW } from \"@bitwarden/angular/services/jslib-services.module\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventService as EventLoggingServiceAbstraction } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { ContainerService } from \"@bitwarden/common/services/container.service\";\nimport { EventService as EventLoggingService } from \"@bitwarden/common/services/event.service\";\nimport { VaultTimeoutService as VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout.service\";\n\nimport { I18nService } from \"./i18n.service\";\n\n@Injectable()\nexport class InitService {\n  constructor(\n    @Inject(WINDOW) private win: Window,\n    private environmentService: EnvironmentServiceAbstraction,\n    private notificationsService: NotificationsServiceAbstraction,\n    private vaultTimeoutService: VaultTimeoutServiceAbstraction,\n    private i18nService: I18nServiceAbstraction,\n    private eventLoggingService: EventLoggingServiceAbstraction,\n    private twoFactorService: TwoFactorServiceAbstraction,\n    private stateService: StateServiceAbstraction,\n    private cryptoService: CryptoServiceAbstraction,\n    private themingService: AbstractThemingService\n  ) {}\n\n  init() {\n    return async () => {\n      await this.stateService.init();\n\n      const urls = process.env.URLS as Urls;\n      urls.base ??= this.win.location.origin;\n      this.environmentService.setUrls(urls);\n\n      setTimeout(() => this.notificationsService.init(), 3000);\n      (this.vaultTimeoutService as VaultTimeoutService).init(true);\n      const locale = await this.stateService.getLocale();\n      await (this.i18nService as I18nService).init(locale);\n      (this.eventLoggingService as EventLoggingService).init(true);\n      this.twoFactorService.init();\n      const htmlEl = this.win.document.documentElement;\n      htmlEl.classList.add(\"locale_\" + this.i18nService.translationLocale);\n      await this.themingService.monitorThemeChanges();\n      const containerService = new ContainerService(this.cryptoService);\n      containerService.attachToGlobal(this.win);\n    };\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, Injectable, Injector } from \"@angular/core\";\nimport * as jq from \"jquery\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService as BaseModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Injectable()\nexport class ModalService extends BaseModalService {\n  el: any = null;\n  modalOpen = false;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    applicationRef: ApplicationRef,\n    injector: Injector,\n    private messagingService: MessagingService\n  ) {\n    super(componentFactoryResolver, applicationRef, injector);\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    modalRef.onCreated.pipe(first()).subscribe(() => {\n      const modals = Array.from(document.querySelectorAll(\".modal\"));\n      if (modals.length > 0) {\n        this.el = jq(modals[0]);\n        this.el.modal(\"show\");\n\n        this.el.on(\"show.bs.modal\", () => {\n          modalRef.show();\n          this.messagingService.send(\"modalShow\");\n        });\n        this.el.on(\"shown.bs.modal\", () => {\n          modalRef.shown();\n          this.messagingService.send(\"modalShown\");\n          if (!Utils.isMobileBrowser) {\n            this.el.find(\"*[appAutoFocus]\").focus();\n          }\n        });\n        this.el.on(\"hide.bs.modal\", () => {\n          this.messagingService.send(\"modalClose\");\n        });\n        this.el.on(\"hidden.bs.modal\", () => {\n          modalRef.closed();\n          this.messagingService.send(\"modalClosed\");\n        });\n      }\n    });\n\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      if (this.el != null) {\n        this.el.modal(\"hide\");\n      }\n    });\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appBlurClick]\",\n})\nexport class BlurClickDirective {\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"click\") onClick() {\n    this.el.nativeElement.blur();\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"@bitwarden/angular/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"passwordConfirmation\" | i18n }}\n        </h2>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"passwordConfirmationDesc\" | i18n }}\n\n        <div class=\"form-group\">\n          <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n          <div class=\"d-flex\">\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n            <button\n              type=\"button\"\n              class=\"ml-1 btn btn-link\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" appBlurClick>\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"@bitwarden/angular/services/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","import { BasePolicy } from \"../organizations/policies/base-policy.component\";\n\nexport class PolicyListService {\n  private policies: BasePolicy[] = [];\n\n  addPolicies(policies: BasePolicy[]) {\n    this.policies.push(...policies);\n  }\n\n  getPolicies(): BasePolicy[] {\n    return this.policies;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { ActivatedRoute, NavigationEnd, Router } from \"@angular/router\";\nimport { filter } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Injectable()\nexport class RouterService {\n  private previousUrl: string = undefined;\n  private currentUrl: string = undefined;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n    i18nService: I18nService\n  ) {\n    this.currentUrl = this.router.url;\n\n    router.events\n      .pipe(filter((e) => e instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => {\n        this.currentUrl = event.url;\n\n        let title = i18nService.t(\"pageTitle\", \"Bitwarden\");\n        let child = this.activatedRoute.firstChild;\n        while (child.firstChild) {\n          child = child.firstChild;\n        }\n\n        const titleId: string = child?.snapshot?.data?.titleId;\n        const rawTitle: string = child?.snapshot?.data?.title;\n        const updateUrl = !child?.snapshot?.data?.doNotSaveUrl ?? true;\n\n        if (titleId != null || rawTitle != null) {\n          const newTitle = rawTitle != null ? rawTitle : i18nService.t(titleId);\n          if (newTitle != null && newTitle !== \"\") {\n            title = newTitle + \" | \" + title;\n          }\n        }\n        this.titleService.setTitle(title);\n        if (updateUrl) {\n          this.setPreviousUrl(this.currentUrl);\n        }\n      });\n  }\n\n  getPreviousUrl() {\n    return this.previousUrl;\n  }\n\n  setPreviousUrl(url: string) {\n    this.previousUrl = url;\n  }\n}\n","import {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"@bitwarden/common/models/domain/account\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout: number = process.env.NODE_ENV === \"development\" ? null : 15;\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n  }\n}\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport {\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n} from \"@bitwarden/angular/services/jslib-services.module\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateMigrationService } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { FolderData } from \"@bitwarden/common/models/data/folderData\";\nimport { SendData } from \"@bitwarden/common/models/data/sendData\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storageOptions\";\nimport { StateService as BaseStateService } from \"@bitwarden/common/services/state.service\";\n\nimport { Account } from \"./account\";\nimport { GlobalState } from \"./global-state\";\n\n@Injectable()\nexport class StateService extends BaseStateService<GlobalState, Account> {\n  constructor(\n    storageService: AbstractStorageService,\n    @Inject(SECURE_STORAGE) secureStorageService: AbstractStorageService,\n    @Inject(MEMORY_STORAGE) memoryStorageService: AbstractStorageService,\n    logService: LogService,\n    stateMigrationService: StateMigrationService,\n    @Inject(STATE_FACTORY) stateFactory: StateFactory<GlobalState, Account>,\n    @Inject(STATE_SERVICE_USE_CACHE) useAccountCache = true\n  ) {\n    super(\n      storageService,\n      secureStorageService,\n      memoryStorageService,\n      logService,\n      stateMigrationService,\n      stateFactory,\n      useAccountCache\n    );\n  }\n\n  async addAccount(account: Account) {\n    // Apply web overrides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getRememberEmail(options?: StorageOptions) {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberEmail;\n  }\n\n  async setRememberEmail(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedCiphers(options);\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedCiphers(value, options);\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedCollections(options);\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedCollections(value, options);\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedFolders(options);\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedFolders(value, options);\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedSends(options);\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedSends(value, options);\n  }\n\n  override async getLastSync(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getLastSync(options);\n  }\n\n  override async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setLastSync(value, options);\n  }\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport class FileDownloadBuilder {\n  get blobOptions(): any {\n    const options = this._request.blobOptions ?? {};\n    if (options.type == null) {\n      options.type = this.fileType;\n    }\n    return options;\n  }\n\n  get blob(): Blob {\n    if (this.blobOptions != null) {\n      return new Blob([this._request.blobData], this.blobOptions);\n    } else {\n      return new Blob([this._request.blobData]);\n    }\n  }\n\n  get downloadMethod(): \"save\" | \"open\" {\n    if (this._request.downloadMethod != null) {\n      return this._request.downloadMethod;\n    }\n    return this.fileType != \"application/pdf\" ? \"save\" : \"open\";\n  }\n\n  private get fileType() {\n    const fileNameLower = this._request.fileName.toLowerCase();\n    if (fileNameLower.endsWith(\".pdf\")) {\n      return \"application/pdf\";\n    } else if (fileNameLower.endsWith(\".xlsx\")) {\n      return \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    } else if (fileNameLower.endsWith(\".docx\")) {\n      return \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n    } else if (fileNameLower.endsWith(\".pptx\")) {\n      return \"application/vnd.openxmlformats-officedocument.presentationml.presentation\";\n    } else if (fileNameLower.endsWith(\".csv\")) {\n      return \"text/csv\";\n    } else if (fileNameLower.endsWith(\".png\")) {\n      return \"image/png\";\n    } else if (fileNameLower.endsWith(\".jpg\") || fileNameLower.endsWith(\".jpeg\")) {\n      return \"image/jpeg\";\n    } else if (fileNameLower.endsWith(\".gif\")) {\n      return \"image/gif\";\n    }\n    return null;\n  }\n\n  constructor(private readonly _request: FileDownloadRequest) {}\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FileDownloadBuilder } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadBuilder\";\nimport { FileDownloadRequest } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadRequest\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Injectable()\nexport class WebFileDownloadService implements FileDownloadService {\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  download(request: FileDownloadRequest): void {\n    const builder = new FileDownloadBuilder(request);\n    const a = window.document.createElement(\"a\");\n    if (builder.downloadMethod === \"save\") {\n      a.download = request.fileName;\n    } else if (!this.platformUtilsService.isSafari()) {\n      a.target = \"_blank\";\n    }\n    a.href = URL.createObjectURL(builder.blob);\n    a.style.position = \"fixed\";\n    window.document.body.appendChild(a);\n    a.click();\n    window.document.body.removeChild(a);\n  }\n}\n","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","import { Injectable } from \"@angular/core\";\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ClientType } from \"@bitwarden/common/enums/clientType\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\n\n@Injectable()\nexport class WebPlatformUtilsService implements PlatformUtilsService {\n  private browserCache: DeviceType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.browserCache != null) {\n      return this.browserCache;\n    }\n\n    if (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    ) {\n      this.browserCache = DeviceType.FirefoxBrowser;\n    } else if (navigator.userAgent.indexOf(\" OPR/\") >= 0) {\n      this.browserCache = DeviceType.OperaBrowser;\n    } else if (navigator.userAgent.indexOf(\" Edg/\") !== -1) {\n      this.browserCache = DeviceType.EdgeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Vivaldi/\") !== -1) {\n      this.browserCache = DeviceType.VivaldiBrowser;\n    } else if (\n      navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n      navigator.userAgent.indexOf(\"Chrome\") === -1\n    ) {\n      this.browserCache = DeviceType.SafariBrowser;\n    } else if ((window as any).chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1) {\n      this.browserCache = DeviceType.ChromeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Trident/\") !== -1) {\n      this.browserCache = DeviceType.IEBrowser;\n    } else {\n      this.browserCache = DeviceType.UnknownBrowser;\n    }\n\n    return this.browserCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"browser\", \"\");\n  }\n\n  getClientType() {\n    return ClientType.Web;\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxBrowser;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeBrowser;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeBrowser;\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaBrowser;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiBrowser;\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariBrowser;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  isViewOpen(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  launchUri(uri: string, options?: any): void {\n    const a = document.createElement(\"a\");\n    a.href = uri;\n    if (options == null || !options.sameWindow) {\n      a.target = \"_blank\";\n      a.rel = \"noreferrer noopener\";\n    }\n    a.classList.add(\"d-none\");\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(process.env.APPLICATION_VERSION || \"-\");\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  async showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml = false\n  ) {\n    let iconClasses: string = null;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const bootstrapModal = document.querySelector(\"div.modal\");\n    if (bootstrapModal != null) {\n      bootstrapModal.removeAttribute(\"tabindex\");\n    }\n\n    const iconHtmlStr =\n      iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml: iconHtmlStr,\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      titleText: title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n    });\n\n    if (bootstrapModal != null) {\n      bootstrapModal.setAttribute(\"tabindex\", \"-1\");\n    }\n\n    return confirmed.value;\n  }\n\n  isDev(): boolean {\n    return process.env.NODE_ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return process.env.ENV.toString() === \"selfhosted\";\n  }\n\n  copyToClipboard(text: string, options?: any): void | boolean {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      let copyEl = doc.body;\n      // For some reason copy command won't work when modal is open if appending to body\n      if (doc.body.classList.contains(\"modal-open\")) {\n        copyEl = doc.body.querySelector<HTMLElement>(\".modal\");\n      }\n      copyEl.appendChild(textarea);\n      textarea.select();\n      let success = false;\n      try {\n        // Security exception may be thrown by some browsers.\n        success = doc.execCommand(\"copy\");\n        if (!success) {\n          this.logService.debug(\"Copy command unsupported or disabled.\");\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        copyEl.removeChild(textarea);\n      }\n      return success;\n    }\n  }\n\n  readFromClipboard(options?: any): Promise<string> {\n    throw new Error(\"Cannot read from clipboard on web.\");\n  }\n\n  supportsBiometric() {\n    return Promise.resolve(false);\n  }\n\n  authenticateBiometric() {\n    return Promise.resolve(false);\n  }\n\n  supportsSecureStorage() {\n    return false;\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { APP_INITIALIZER, NgModule, Optional, SkipSelf } from \"@angular/core\";\n\nimport {\n  JslibServicesModule,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n  LOCALES_DIRECTORY,\n  SYSTEM_LANGUAGE,\n  MEMORY_STORAGE,\n} from \"@bitwarden/angular/services/jslib-services.module\";\nimport { ModalService as ModalServiceAbstraction } from \"@bitwarden/angular/services/modal.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { MemoryStorageService } from \"@bitwarden/common/services/memoryStorage.service\";\n\nimport { BroadcasterMessagingService } from \"./broadcaster-messaging.service\";\nimport { EventService } from \"./event.service\";\nimport { HtmlStorageService } from \"./html-storage.service\";\nimport { I18nService } from \"./i18n.service\";\nimport { InitService } from \"./init.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./password-reprompt.service\";\nimport { PolicyListService } from \"./policy-list.service\";\nimport { RouterService } from \"./router.service\";\nimport { Account, GlobalState, StateService } from \"./state\";\nimport { StateMigrationService } from \"./state-migration.service\";\nimport { WebFileDownloadService } from \"./web-file-download.service\";\nimport { WebPlatformUtilsService } from \"./web-platform-utils.service\";\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, JslibServicesModule],\n  providers: [\n    InitService,\n    RouterService,\n    EventService,\n    PolicyListService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (initService: InitService) => initService.init(),\n      deps: [InitService],\n      multi: true,\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: false,\n    },\n    {\n      provide: I18nServiceAbstraction,\n      useClass: I18nService,\n      deps: [SYSTEM_LANGUAGE, LOCALES_DIRECTORY],\n    },\n    { provide: AbstractStorageService, useClass: HtmlStorageService },\n    {\n      provide: SECURE_STORAGE,\n      // TODO: platformUtilsService.isDev has a helper for this, but using that service here results in a circular dependency.\n      // We have a tech debt item in the backlog to break up platformUtilsService, but in the meantime simply checking the environement here is less cumbersome.\n      useClass: process.env.NODE_ENV === \"development\" ? HtmlStorageService : MemoryStorageService,\n    },\n    {\n      provide: MEMORY_STORAGE,\n      useClass: MemoryStorageService,\n    },\n    {\n      provide: PlatformUtilsServiceAbstraction,\n      useClass: WebPlatformUtilsService,\n    },\n    { provide: MessagingServiceAbstraction, useClass: BroadcasterMessagingService },\n    { provide: ModalServiceAbstraction, useClass: ModalService },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    StateService,\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateService,\n    },\n    {\n      provide: PasswordRepromptServiceAbstraction,\n      useClass: PasswordRepromptService,\n    },\n    {\n      provide: FileDownloadService,\n      useClass: WebFileDownloadService,\n    },\n  ],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule?: CoreModule) {\n    if (parentModule) {\n      throw new Error(\"CoreModule is already loaded. Import it in the AppModule only\");\n    }\n  }\n}\n","export type Flags = {\n  showTrial?: boolean;\n  scim?: boolean;\n};\n\nexport type FlagName = keyof Flags;\n\nexport function flagEnabled(flag: FlagName): boolean {\n  return flags()[flag] == null || flags()[flag];\n}\n\nfunction flags(): Flags {\n  const envFlags = process.env.FLAGS as string | Flags;\n\n  if (typeof envFlags === \"string\") {\n    return JSON.parse(envFlags) as Flags;\n  } else {\n    return envFlags as Flags;\n  }\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { GlobalState as BaseGlobalState } from \"@bitwarden/common/models/domain/globalState\";\n\nexport class GlobalState extends BaseGlobalState {\n  theme?: ThemeType = ThemeType.Light;\n  rememberEmail = true;\n}\n","import { I18nService as BaseI18nService } from \"@bitwarden/common/services/i18n.service\";\n\nexport class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string, localesDirectory: string) {\n    super(systemLanguage || \"en-US\", localesDirectory, async (formattedLocale: string) => {\n      const filePath =\n        this.localesDirectory +\n        \"/\" +\n        formattedLocale +\n        \"/messages.json?cache=\" +\n        process.env.CACHE_TAG;\n      const localesResult = await fetch(filePath);\n      const locales = await localesResult.json();\n      return locales;\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"af\",\n      \"az\",\n      \"be\",\n      \"bg\",\n      \"bn\",\n      \"bs\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"en-GB\",\n      \"en-IN\",\n      \"eo\",\n      \"es\",\n      \"et\",\n      \"fi\",\n      \"fil\",\n      \"fr\",\n      \"he\",\n      \"hi\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"ka\",\n      \"km\",\n      \"kn\",\n      \"ko\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"nn\",\n      \"pl\",\n      \"pt-PT\",\n      \"pt-BR\",\n      \"ro\",\n      \"ru\",\n      \"si\",\n      \"sk\",\n      \"sl\",\n      \"sr\",\n      \"sv\",\n      \"tr\",\n      \"uk\",\n      \"vi\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n}\n","import { Observable, ReplaySubject } from \"rxjs\";\n\nimport { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  private _locale = new ReplaySubject<string>(1);\n  locale$: Observable<string> = this._locale.asObservable();\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.translationLocale = locale != null ? locale : this.systemLanguage;\n    this._locale.next(this.translationLocale);\n\n    try {\n      this.collator = new Intl.Collator(this.translationLocale, {\n        numeric: true,\n        sensitivity: \"base\",\n      });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1);\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2);\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3);\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { StateMigrationService as BaseStateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\n\nimport { Account } from \"./state/account\";\nimport { GlobalState } from \"./state/global-state\";\n\nexport class StateMigrationService extends BaseStateMigrationService<GlobalState, Account> {\n  protected async migrationStateFrom1To2(): Promise<void> {\n    await super.migrateStateFrom1To2();\n    const globals = (await this.get<GlobalState>(\"global\")) ?? this.stateFactory.createGlobal(null);\n    globals.rememberEmail = (await this.get<boolean>(\"rememberEmail\")) ?? globals.rememberEmail;\n    await this.set(\"global\", globals);\n  }\n}\n","export class EmergencyAccessAcceptRequest {\n  token: string;\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Directive()\nexport abstract class BaseAcceptComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  actionPromise: Promise<any>;\n\n  protected requiredParameters: string[] = [];\n  protected failedShortMessage = \"inviteAcceptFailedShort\";\n  protected failedMessage = \"inviteAcceptFailed\";\n\n  constructor(\n    protected router: Router,\n    protected platformUtilService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService\n  ) {}\n\n  abstract authedHandler(qParams: Params): Promise<void>;\n  abstract unauthedHandler(qParams: Params): Promise<void>;\n\n  ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      let error = this.requiredParameters.some((e) => qParams?.[e] == null || qParams[e] === \"\");\n      let errorMessage: string = null;\n      if (!error) {\n        this.authed = await this.stateService.getIsAuthenticated();\n\n        if (this.authed) {\n          try {\n            await this.authedHandler(qParams);\n          } catch (e) {\n            error = true;\n            errorMessage = e.message;\n          }\n        } else {\n          this.email = qParams.email;\n          await this.unauthedHandler(qParams);\n        }\n      }\n\n      if (error) {\n        const message =\n          errorMessage != null\n            ? this.i18nService.t(this.failedShortMessage, errorMessage)\n            : this.i18nService.t(this.failedMessage);\n        this.platformUtilService.showToast(\"error\", null, message, { timeout: 10000 });\n        this.router.navigate([\"/\"]);\n      }\n\n      this.loading = false;\n    });\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"emergencyAccess\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ name }}\n          </p>\n          <p>{{ \"acceptEmergencyAccess\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmergencyAccessAcceptRequest } from \"@bitwarden/common/models/request/emergencyAccessAcceptRequest\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-emergency\",\n  templateUrl: \"accept-emergency.component.html\",\n})\nexport class AcceptEmergencyComponent extends BaseAcceptComponent {\n  name: string;\n\n  protected requiredParameters: string[] = [\"id\", \"name\", \"email\", \"token\"];\n  protected failedShortMessage = \"emergencyInviteAcceptFailedShort\";\n  protected failedMessage = \"emergencyInviteAcceptFailed\";\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    const request = new EmergencyAccessAcceptRequest();\n    request.token = qParams.token;\n    this.actionPromise = this.apiService.postEmergencyAccessAccept(qParams.id, request);\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"emergencyInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    this.name = qParams.name;\n    if (this.name != null) {\n      // Fix URL encoding of space issue with Angular\n      this.name = this.name.replace(/\\+/g, \" \");\n    }\n  }\n}\n","export class OrganizationUserAcceptRequest {\n  token: string;\n  // Used to auto-enroll in master password reset\n  resetPasswordKey: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img src=\"../../images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinOrganization\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ orgName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinOrganizationDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { OrganizationUserAcceptRequest } from \"@bitwarden/common/models/request/organizationUserAcceptRequest\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-organization\",\n  templateUrl: \"accept-organization.component.html\",\n})\nexport class AcceptOrganizationComponent extends BaseAcceptComponent {\n  orgName: string;\n\n  protected requiredParameters: string[] = [\"organizationId\", \"organizationUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService,\n    private cryptoService: CryptoService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    private logService: LogService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    this.actionPromise = this.prepareAcceptRequest(qParams).then(async (request) => {\n      await this.apiService.postOrganizationUserAccept(\n        qParams.organizationId,\n        qParams.organizationUserId,\n        request\n      );\n    });\n\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"inviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n\n    await this.stateService.setOrganizationInvitation(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    this.orgName = qParams.organizationName;\n    if (this.orgName != null) {\n      // Fix URL encoding of space issue with Angular\n      this.orgName = this.orgName.replace(/\\+/g, \" \");\n    }\n    await this.stateService.setOrganizationInvitation(qParams);\n  }\n\n  private async prepareAcceptRequest(qParams: Params): Promise<OrganizationUserAcceptRequest> {\n    const request = new OrganizationUserAcceptRequest();\n    request.token = qParams.token;\n\n    if (await this.performResetPasswordAutoEnroll(qParams)) {\n      const response = await this.apiService.getOrganizationKeys(qParams.organizationId);\n\n      if (response == null) {\n        throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n      }\n\n      const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n      // RSA Encrypt user's encKey.key with organization public key\n      const encKey = await this.cryptoService.getEncKey();\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Add reset password key to accept request\n      request.resetPasswordKey = encryptedKey.encryptedString;\n    }\n    return request;\n  }\n\n  private async performResetPasswordAutoEnroll(qParams: any): Promise<boolean> {\n    let policyList: Policy[] = null;\n    try {\n      const policies = await this.policyApiService.getPoliciesByToken(\n        qParams.organizationId,\n        qParams.token,\n        qParams.email,\n        qParams.organizationUserId\n      );\n      policyList = this.policyService.mapPoliciesFromToken(policies);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (policyList != null) {\n      const result = this.policyService.getResetPasswordPolicyOptions(\n        policyList,\n        qParams.organizationId\n      );\n      // Return true if policy enabled and auto-enroll enabled\n      return result[1] && result[0].autoEnrollEnabled;\n    }\n\n    return false;\n  }\n}\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { HintComponent as BaseHintComponent } from \"@bitwarden/angular/components/hint.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService);\n  }\n}\n","import { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PasswordHintRequest } from \"@bitwarden/common/models/request/passwordHintRequest\";\n\nexport class HintComponent {\n  email = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"passwordHint\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n            <small class=\"form-text text-muted\">{{ \"enterEmailToGetHint\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"@bitwarden/common/enums/keySuffixOptions\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\n\n@Directive()\nexport class LockComponent implements OnInit {\n  masterPassword = \"\";\n  pin = \"\";\n  showPassword = false;\n  email: string;\n  pinLock = false;\n  webVaultHostname = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    protected logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    // Load the first and observe updates\n    await this.load();\n    this.stateService.activeAccount.subscribe(async () => {\n      await this.load();\n    });\n  }\n\n  async submit() {\n    if (this.pinLock && (this.pin == null || this.pin === \"\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n    if (!this.pinLock && (this.masterPassword == null || this.masterPassword === \"\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n\n    if (this.pinLock) {\n      let failed = true;\n      try {\n        if (this.pinSet[0]) {\n          const key = await this.cryptoService.makeKeyFromPin(\n            this.pin,\n            this.email,\n            kdf,\n            kdfIterations,\n            await this.stateService.getDecryptedPinProtected()\n          );\n          const encKey = await this.cryptoService.getEncKey(key);\n          const protectedPin = await this.stateService.getProtectedPin();\n          const decPin = await this.cryptoService.decryptToUtf8(\n            new EncString(protectedPin),\n            encKey\n          );\n          failed = decPin !== this.pin;\n          if (!failed) {\n            await this.setKeyAndContinue(key);\n          }\n        } else {\n          const key = await this.cryptoService.makeKeyFromPin(\n            this.pin,\n            this.email,\n            kdf,\n            kdfIterations\n          );\n          failed = false;\n          await this.setKeyAndContinue(key);\n        }\n      } catch {\n        failed = true;\n      }\n\n      if (failed) {\n        this.invalidPinAttempts++;\n        if (this.invalidPinAttempts >= 5) {\n          this.messagingService.send(\"logout\");\n          return;\n        }\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"invalidPin\")\n        );\n      }\n    } else {\n      const key = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email,\n        kdf,\n        kdfIterations\n      );\n      const storedKeyHash = await this.cryptoService.getKeyHash();\n\n      let passwordValid = false;\n\n      if (storedKeyHash != null) {\n        passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n      } else {\n        const request = new SecretVerificationRequest();\n        const serverKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.ServerAuthorization\n        );\n        request.masterPasswordHash = serverKeyHash;\n        try {\n          this.formPromise = this.apiService.postAccountVerifyPassword(request);\n          await this.formPromise;\n          passwordValid = true;\n          const localKeyHash = await this.cryptoService.hashPassword(\n            this.masterPassword,\n            key,\n            HashPurpose.LocalAuthorization\n          );\n          await this.cryptoService.setKeyHash(localKeyHash);\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n\n      if (passwordValid) {\n        if (this.pinSet[0]) {\n          const protectedPin = await this.stateService.getProtectedPin();\n          const encKey = await this.cryptoService.getEncKey(key);\n          const decPin = await this.cryptoService.decryptToUtf8(\n            new EncString(protectedPin),\n            encKey\n          );\n          const pinKey = await this.cryptoService.makePinKey(\n            decPin,\n            this.email,\n            kdf,\n            kdfIterations\n          );\n          await this.stateService.setDecryptedPinProtected(\n            await this.cryptoService.encrypt(key.key, pinKey)\n          );\n        }\n        await this.setKeyAndContinue(key);\n      } else {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"invalidMasterPassword\")\n        );\n      }\n    }\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LockComponent as BaseLockComponent } from \"@bitwarden/angular/components/lock.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\n\nimport { RouterService } from \"../core\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    environmentService: EnvironmentService,\n    private routerService: RouterService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.onSuccessfulSubmit = async () => {\n      const previousUrl = this.routerService.getPreviousUrl();\n      if (previousUrl && previousUrl !== \"/\" && previousUrl.indexOf(\"lock\") === -1) {\n        this.successRoute = previousUrl;\n      }\n      this.router.navigateByUrl(this.successRoute);\n    };\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"text-center mb-4\">\n        <i class=\"bwi bwi-lock bwi-4x text-muted\" aria-hidden=\"true\"></i>\n      </p>\n      <p class=\"lead text-center mx-4 mb-4\">{{ \"yourVaultIsLocked\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appAutofocus\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n            <small class=\"text-muted form-text\">\n              {{ \"loggedInAsEmailOn\" | i18n: email:webVaultHostname }}\n            </small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-unlock\" aria-hidden=\"true\"></i> {{ \"unlock\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { AuthenticationType } from \"../../enums/authenticationType\";\nimport { TokenRequestTwoFactor } from \"../request/identityToken/tokenRequestTwoFactor\";\n\nexport class PasswordLogInCredentials {\n  readonly type = AuthenticationType.Password;\n\n  constructor(\n    public email: string,\n    public masterPassword: string,\n    public captchaToken?: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class SsoLogInCredentials {\n  readonly type = AuthenticationType.Sso;\n\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUrl: string,\n    public orgId: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class ApiLogInCredentials {\n  readonly type = AuthenticationType.Api;\n\n  constructor(public clientId: string, public clientSecret: string) {}\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\n\nimport { IFrameComponent } from \"./iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","export abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CaptchaIFrame } from \"@bitwarden/common/misc/captcha_iframe\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","import { Directive, Input, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() email = \"\";\n  @Input() rememberEmail = true;\n\n  masterPassword = \"\";\n  showPassword = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected alwaysRememberEmail = false;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n  }\n\n  get selfHostedDomain() {\n    return this.environmentService.hasBaseUrl() ? this.environmentService.getWebVaultUrl() : null;\n  }\n\n  async ngOnInit() {\n    if (this.email == null || this.email === \"\") {\n      this.email = await this.stateService.getRememberedEmail();\n      if (this.email == null) {\n        this.email = \"\";\n      }\n    }\n    if (!this.alwaysRememberEmail) {\n      this.rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n    }\n    if (Utils.isBrowser && !Utils.isNode) {\n      this.focusInput();\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    try {\n      const credentials = new PasswordLogInCredentials(\n        this.email,\n        this.masterPassword,\n        this.captchaToken,\n        null\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (this.rememberEmail || this.alwaysRememberEmail) {\n        await this.stateService.setRememberedEmail(this.email);\n      } else {\n        await this.stateService.setRememberedEmail(null);\n      }\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n\n  protected focusInput() {\n    document\n      .getElementById(this.email == null || this.email === \"\" ? \"email\" : \"masterPassword\")\n      .focus();\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <img class=\"mb-2 logo logo-themed\" alt=\"Bitwarden\" />\n      <p class=\"lead text-center mx-4 mb-4\">{{ \"loginOrCreateNewAccount\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout\n            type=\"warning\"\n            title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n            *ngIf=\"showResetPasswordAutoEnrollWarning\"\n          >\n            {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n          </app-callout>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n            <small class=\"form-text\">\n              <a routerLink=\"/hint\">{{ \"getMasterPasswordHint\" | i18n }}</a>\n            </small>\n          </div>\n          <div class=\"form-check mb-3\">\n            <input\n              type=\"checkbox\"\n              class=\"form-check-input\"\n              id=\"rememberEmail\"\n              name=\"RememberEmail\"\n              [(ngModel)]=\"rememberEmail\"\n            />\n            <label class=\"form-check-label\" for=\"rememberEmail\">{{ \"rememberEmail\" | i18n }}</label>\n          </div>\n          <div class=\"mb-n3\" [hidden]=\"!showCaptcha()\">\n            <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"logIn\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n            >\n              <i class=\"bwi bwi-pencil-square\" aria-hidden=\"true\"></i>\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n          <div class=\"d-flex\">\n            <a routerLink=\"/sso\" class=\"btn btn-outline-secondary btn-block mt-2\">\n              <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i> {{ \"enterpriseSingleSignOn\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { LoginComponent as BaseLoginComponent } from \"@bitwarden/angular/components/login.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nimport { RouterService, StateService } from \"../core\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\nexport class LoginComponent extends BaseLoginComponent {\n  showResetPasswordAutoEnrollWarning = false;\n  enforcedPasswordPolicyOptions: MasterPasswordPolicyOptions;\n  policies: ListResponse<PolicyResponse>;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    private route: ActivatedRoute,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: InternalPolicyService,\n    logService: LogService,\n    ngZone: NgZone,\n    protected stateService: StateService,\n    private messagingService: MessagingService,\n    private routerService: RouterService\n  ) {\n    super(\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone\n    );\n    this.onSuccessfulLogin = async () => {\n      this.messagingService.send(\"setFullWidth\");\n    };\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n      if (qParams.premium != null) {\n        this.routerService.setPreviousUrl(\"/settings/premium\");\n      } else if (qParams.org != null) {\n        const route = this.router.createUrlTree([\"create-organization\"], {\n          queryParams: { plan: qParams.org },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n          queryParams: { token: qParams.sponsorshipToken },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      await super.ngOnInit();\n      this.rememberEmail = await this.stateService.getRememberEmail();\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      let policyList: Policy[] = null;\n      try {\n        this.policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        policyList = this.policyService.mapPoliciesFromToken(this.policies);\n      } catch (e) {\n        this.logService.error(e);\n      }\n\n      if (policyList != null) {\n        const resetPasswordPolicy = this.policyService.getResetPasswordPolicyOptions(\n          policyList,\n          invite.organizationId\n        );\n        // Set to true if policy enabled and auto-enroll enabled\n        this.showResetPasswordAutoEnrollWarning =\n          resetPasswordPolicy[1] && resetPasswordPolicy[0].autoEnrollEnabled;\n\n        this.enforcedPasswordPolicyOptions =\n          await this.policyService.getMasterPasswordPolicyOptions(policyList);\n      }\n    }\n  }\n\n  async goAfterLogIn() {\n    // Check master password against policy\n    if (this.enforcedPasswordPolicyOptions != null) {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      const masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n\n      // If invalid, save policies and require update\n      if (\n        !this.policyService.evaluateMasterPassword(\n          masterPasswordScore,\n          this.masterPassword,\n          this.enforcedPasswordPolicyOptions\n        )\n      ) {\n        const policiesData: { [id: string]: PolicyData } = {};\n        this.policies.data.map((p) => (policiesData[p.id] = new PolicyData(p)));\n        await this.policyService.replace(policiesData);\n        this.router.navigate([\"update-password\"]);\n        return;\n      }\n    }\n\n    const previousUrl = this.routerService.getPreviousUrl();\n    if (previousUrl) {\n      this.router.navigateByUrl(previousUrl);\n    } else {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  async submit() {\n    await this.stateService.setRememberEmail(this.rememberEmail);\n    if (!this.rememberEmail) {\n      await this.stateService.setRememberedEmail(null);\n    }\n    await super.submit();\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","export class DeleteRecoverRequest {\n  email: string;\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { DeleteRecoverRequest } from \"@bitwarden/common/models/request/deleteRecoverRequest\";\n\n@Component({\n  selector: \"app-recover-delete\",\n  templateUrl: \"recover-delete.component.html\",\n})\nexport class RecoverDeleteComponent {\n  email: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new DeleteRecoverRequest();\n      request.email = this.email.trim().toLowerCase();\n      this.formPromise = this.apiService.postAccountRecoverDelete(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deleteRecoverEmailSent\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>{{ \"deleteRecoverDesc\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorRecoveryRequest extends SecretVerificationRequest {\n  recoveryCode: string;\n  email: string;\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorRecoveryRequest } from \"@bitwarden/common/models/request/twoFactorRecoveryRequest\";\n\n@Component({\n  selector: \"app-recover-two-factor\",\n  templateUrl: \"recover-two-factor.component.html\",\n})\nexport class RecoverTwoFactorComponent {\n  email: string;\n  masterPassword: string;\n  recoveryCode: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new TwoFactorRecoveryRequest();\n      request.recoveryCode = this.recoveryCode.replace(/\\s/g, \"\").toLowerCase();\n      request.email = this.email.trim().toLowerCase();\n      const key = await this.authService.makePreloginKey(this.masterPassword, request.email);\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n      this.formPromise = this.apiService.postTwoFactorRecover(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"twoStepRecoverDisabled\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"recoverAccountTwoStep\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>\n            {{ \"recoverAccountTwoStepDesc\" | i18n }}\n            <a\n              href=\"https://bitwarden.com/help/lost-two-step-device/\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              >{{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"password\"\n              name=\"MasterPassword\"\n              class=\"form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"recoveryCode\">{{ \"recoveryCodeTitle\" | i18n }}</label>\n            <input\n              id=\"recoveryCode\"\n              class=\"text-monospace form-control\"\n              type=\"text\"\n              name=\"RecoveryCode\"\n              [(ngModel)]=\"recoveryCode\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { AbstractControl, UntypedFormGroup, ValidatorFn } from \"@angular/forms\";\n\nimport { FormGroupControls } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\n\nexport class InputsFieldMatch {\n  //check to ensure two fields do not have the same value\n  static validateInputsDoesntMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? {\n              inputsMatchError: {\n                message: errorMessage,\n              },\n            }\n          : null;\n      }\n\n      return null;\n    };\n  }\n\n  //check to ensure two fields have the same value\n  static validateInputsMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? null\n          : {\n              inputsDoesntMatchError: {\n                message: errorMessage,\n              },\n            };\n      }\n\n      return null;\n    };\n  }\n\n  //checks the formGroup if two fields have the same value and validation is controlled from either field\n  static validateFormInputsMatch(field: string, fieldMatchTo: string, errorMessage: string) {\n    return (formGroup: UntypedFormGroup) => {\n      const fieldCtrl = formGroup.controls[field];\n      const fieldMatchToCtrl = formGroup.controls[fieldMatchTo];\n\n      if (fieldCtrl.value !== fieldMatchToCtrl.value) {\n        fieldMatchToCtrl.setErrors({\n          inputsDoesntMatchError: {\n            message: errorMessage,\n          },\n        });\n      } else {\n        fieldMatchToCtrl.setErrors(null);\n      }\n    };\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { CaptchaProtectedRequest } from \"./captchaProtectedRequest\";\nimport { KeysRequest } from \"./keysRequest\";\nimport { ReferenceEventRequest } from \"./referenceEventRequest\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { AbstractControl, UntypedFormBuilder, ValidatorFn, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { InputsFieldMatch } from \"@bitwarden/angular/validators/inputsFieldMatch.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keysRequest\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/referenceEventRequest\";\nimport { RegisterRequest } from \"@bitwarden/common/models/request/registerRequest\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() isInTrialFlow = false;\n  @Output() createdAccount = new EventEmitter<string>();\n\n  showPassword = false;\n  formPromise: Promise<any>;\n  referenceData: ReferenceEventRequest;\n  showTerms = true;\n  showErrorSummary = false;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  formGroup = this.formBuilder.group(\n    {\n      email: [\"\", [Validators.required, Validators.email]],\n      name: [\"\"],\n      masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      confirmMasterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      hint: [\n        null,\n        [\n          InputsFieldMatch.validateInputsDoesntMatch(\n            \"masterPassword\",\n            this.i18nService.t(\"hintEqualsPassword\")\n          ),\n        ],\n      ],\n      acceptPolicies: [false, [this.acceptPoliciesValidation()]],\n    },\n    {\n      validator: InputsFieldMatch.validateFormInputsMatch(\n        \"masterPassword\",\n        \"confirmMasterPassword\",\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      ),\n    }\n  );\n\n  protected successRoute = \"login\";\n\n  constructor(\n    protected formValidationErrorService: FormValidationErrorsService,\n    protected formBuilder: UntypedFormBuilder,\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    protected logService: LogService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = !platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  async submit(showToast = true) {\n    let email = this.formGroup.get(\"email\")?.value;\n    let name = this.formGroup.get(\"name\")?.value;\n    const masterPassword = this.formGroup.get(\"masterPassword\")?.value;\n    const hint = this.formGroup.get(\"hint\")?.value;\n\n    this.formGroup.markAllAsTouched();\n    this.showErrorSummary = true;\n\n    if (this.formGroup.get(\"acceptPolicies\").hasError(\"required\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesRequired\")\n      );\n      return;\n    }\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return;\n    }\n\n    //desktop, browser\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return;\n    }\n\n    if (this.passwordStrengthResult != null && this.passwordStrengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return;\n      }\n    }\n\n    name = name === \"\" ? null : name;\n    email = email.trim().toLowerCase();\n    const kdf = DEFAULT_KDF_TYPE;\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      email,\n      name,\n      hashedPassword,\n      hint,\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      this.referenceData,\n      this.captchaToken\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n\n    try {\n      this.formPromise = this.apiService.postRegister(request);\n      try {\n        await this.formPromise;\n      } catch (e) {\n        if (this.handleCaptchaRequired(e)) {\n          return;\n        } else {\n          throw e;\n        }\n      }\n\n      if (this.isInTrialFlow) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"trialAccountCreated\")\n        );\n        //login user here\n        const credentials = new PasswordLogInCredentials(\n          email,\n          masterPassword,\n          this.captchaToken,\n          null\n        );\n        await this.authService.logIn(credentials);\n\n        this.createdAccount.emit(this.formGroup.get(\"email\")?.value);\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"newAccountCreated\")\n        );\n        this.router.navigate([this.successRoute], { queryParams: { email: email } });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        case \"inputsDoesntMatchError\":\n          return this.i18nService.t(\"masterPassDoesntMatch\");\n        case \"inputsMatchError\":\n          return this.i18nService.t(\"hintEqualsPassword\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  //validation would be ignored on selfhosted\n  private acceptPoliciesValidation(): ValidatorFn {\n    return (control: AbstractControl) => {\n      const ctrlValue = control.value;\n\n      return !ctrlValue && this.showTerms ? { required: true } : null;\n    };\n  }\n}\n","export class ReferenceEventRequest {\n  id: string;\n  layout: string;\n  flow: string;\n}\n","<div class=\"progress\">\n  <div\n    class=\"progress-bar {{ color }}\"\n    role=\"progressbar\"\n    [ngStyle]=\"{ width: scoreWidth + '%' }\"\n    attr.aria-valuenow=\"{{ scoreWidth }}\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n  >\n    <ng-container *ngIf=\"showText && text\">\n      {{ text }}\n    </ng-container>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\n\nexport interface PasswordColorText {\n  color: string;\n  text: string;\n}\n\n@Component({\n  selector: \"app-password-strength\",\n  templateUrl: \"password-strength.component.html\",\n})\nexport class PasswordStrengthComponent implements OnChanges {\n  @Input() showText = false;\n  @Input() email: string;\n  @Input() password: string;\n  @Input() name: string;\n\n  @Output() passwordStrengthResult = new EventEmitter<any>();\n  @Output() passwordScoreColor = new EventEmitter<PasswordColorText>();\n\n  masterPasswordScore: number;\n  scoreWidth = 0;\n  color = \"bg-danger\";\n  text: string;\n\n  private masterPasswordStrengthTimeout: any;\n\n  //used by desktop and browser to display strength text color\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  //used by desktop and browser to display strength text\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  constructor(\n    private i18nService: I18nService,\n    private passwordGenerationService: PasswordGenerationService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      this.updatePasswordStrength(changes.password?.currentValue);\n\n      this.scoreWidth = this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n\n      switch (this.masterPasswordScore) {\n        case 4:\n          this.color = \"bg-success\";\n          this.text = this.i18nService.t(\"strong\");\n          break;\n        case 3:\n          this.color = \"bg-primary\";\n          this.text = this.i18nService.t(\"good\");\n          break;\n        case 2:\n          this.color = \"bg-warning\";\n          this.text = this.i18nService.t(\"weak\");\n          break;\n        default:\n          this.color = \"bg-danger\";\n          this.text = this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n          break;\n      }\n\n      this.setPasswordScoreText(this.color, this.text);\n    }, 100);\n  }\n\n  updatePasswordStrength(password: string) {\n    const masterPassword = password;\n\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    this.passwordStrengthResult.emit(strengthResult);\n\n    this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n  }\n\n  getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const email = this.email;\n    const name = this.name;\n    const atPosition = email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (name != null && name !== \"\") {\n      userInput = userInput.concat(name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n\n  setPasswordScoreText(color: string, text: string) {\n    color = color.slice(3);\n    this.passwordScoreColor.emit({ color: color, text: text });\n  }\n}\n","import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"bit-label\",\n})\nexport class BitLabel {}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ButtonTypes } from \"../button\";\n\n@Component({\n  selector: \"bit-submit-button\",\n  templateUrl: \"./submit-button.component.html\",\n})\nexport class SubmitButtonComponent {\n  @Input() buttonType: ButtonTypes = \"primary\";\n  @Input() disabled = false;\n  @Input() loading: boolean;\n}\n","<button bitButton type=\"submit\" [buttonType]=\"buttonType\" [disabled]=\"loading || disabled\">\n  <span class=\"tw-relative\">\n    <span [ngClass]=\"{ 'tw-invisible': loading }\">\n      <ng-content></ng-content>\n    </span>\n    <span class=\"tw-absolute tw-inset-0\" [ngClass]=\"{ 'tw-invisible': !loading }\">\n      <i class=\"bwi bwi-spinner bwi-lg bwi-spin tw-align-baseline\" aria-hidden=\"true\"></i>\n    </span>\n  </span>\n</button>\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"tw-container tw-mx-auto\"\n  [formGroup]=\"formGroup\"\n>\n  <div>\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"emailAddress\" | i18n }}</bit-label>\n        <input id=\"register-form_input_email\" bitInput type=\"email\" formControlName=\"email\" />\n        <bit-hint>{{ \"emailAddressDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"name\" | i18n }}</bit-label>\n        <input id=\"register-form_input_name\" bitInput type=\"text\" formControlName=\"name\" />\n        <bit-hint>{{ \"yourNameDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <app-callout\n        type=\"info\"\n        [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n        *ngIf=\"enforcedPolicyOptions\"\n      >\n      </app-callout>\n      <bit-form-field>\n        <bit-label>{{ \"masterPass\" | i18n }}</bit-label>\n        <input\n          id=\"register-form_input_master-password\"\n          bitInput\n          type=\"{{ showPassword ? 'text' : 'password' }}\"\n          formControlName=\"masterPassword\"\n        />\n        <button type=\"button\" bitSuffix bitButton (click)=\"togglePassword()\">\n          <i\n            aria-hidden=\"true\"\n            class=\"bwi bwi-lg bwi-eye\"\n            [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n          ></i>\n        </button>\n        <bit-hint>\n          <span class=\"tw-font-semibold\">Important:</span>\n          {{ \"masterPassImportant\" | i18n }}\n        </bit-hint>\n      </bit-form-field>\n      <app-password-strength\n        [password]=\"formGroup.get('masterPassword')?.value\"\n        [email]=\"formGroup.get('email')?.value\"\n        [name]=\"formGroup.get('name')?.value\"\n        [showText]=\"true\"\n        (passwordStrengthResult)=\"getStrengthResult($event)\"\n      >\n      </app-password-strength>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"reTypeMasterPass\" | i18n }}</bit-label>\n        <input\n          id=\"register-form_input_confirm-master-password\"\n          bitInput\n          type=\"{{ showPassword ? 'text' : 'password' }}\"\n          formControlName=\"confirmMasterPassword\"\n        />\n        <button type=\"button\" bitSuffix bitButton (click)=\"togglePassword()\">\n          <i\n            aria-hidden=\"true\"\n            class=\"bwi bwi-lg bwi-eye\"\n            [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n          ></i>\n        </button>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"masterPassHint\" | i18n }}</bit-label>\n        <input id=\"register-form_input_hint\" bitInput type=\"text\" formControlName=\"hint\" />\n        <bit-hint>{{ \"masterPassHintDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div [hidden]=\"!showCaptcha()\">\n      <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n    </div>\n\n    <div class=\"tw-mb-3 tw-flex tw-items-start\" *ngIf=\"showTerms\">\n      <div class=\"tw-flex tw-h-6 tw-items-center\">\n        <input\n          id=\"register-form_input_accept-policies\"\n          class=\"tw-border-gray-300 tw-w-4 tw-rounded tw-border\"\n          bitInput\n          type=\"checkbox\"\n          formControlName=\"acceptPolicies\"\n        />\n      </div>\n      <bit-label class=\"ml-2\">\n        {{ \"acceptPolicies\" | i18n }}<br />\n        <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n          \"termsOfService\" | i18n\n        }}</a\n        >,\n        <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n          \"privacyPolicy\" | i18n\n        }}</a>\n      </bit-label>\n    </div>\n\n    <div class=\"tw-mb-3 tw-flex\">\n      <bit-submit-button [loading]=\"form.loading\">{{ \"createAccount\" | i18n }}</bit-submit-button>\n      <a\n        bitButton\n        buttonType=\"secondary\"\n        routerLink=\"/login\"\n        class=\"tw-ml-3 tw-inline-flex tw-items-center tw-px-3\"\n      >\n        <i class=\"bwi bwi-sign-in tw-mr-2\"></i>\n        {{ \"logIn\" | i18n }}\n      </a>\n    </div>\n    <bit-error-summary *ngIf=\"showErrorSummary\" [formGroup]=\"formGroup\"></bit-error-summary>\n  </div>\n</form>\n","import { Component, Input } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"@bitwarden/angular/components/register.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\n\n@Component({\n  selector: \"app-register-form\",\n  templateUrl: \"./register-form.component.html\",\n})\nexport class RegisterFormComponent extends BaseRegisterComponent {\n  @Input() queryParamEmail: string;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n  showErrorSummary = false;\n\n  constructor(\n    formValidationErrorService: FormValidationErrorsService,\n    formBuilder: UntypedFormBuilder,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      formValidationErrorService,\n      formBuilder,\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n\n    if (this.queryParamEmail) {\n      this.formGroup.get(\"email\")?.setValue(this.queryParamEmail);\n    }\n  }\n\n  async submit() {\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.passwordStrengthResult.score,\n        this.formGroup.get(\"masterPassword\")?.value,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    await super.submit(false);\n  }\n}\n","<div class=\"layout\" [ngClass]=\"['layout', layout]\">\n  <!-- TEAMS 1 Header -->\n  <header\n    class=\"header\"\n    *ngIf=\"\n      layout === 'default' ||\n      layout === 'teams' ||\n      layout === 'teams1' ||\n      layout === 'teams2' ||\n      layout === 'enterprise' ||\n      layout === 'enterprise1' ||\n      layout === 'enterprise2' ||\n      layout === 'cnetcmpgnent' ||\n      layout === 'cnetcmpgnteams' ||\n      layout === 'cnetcmpgnind'\n    \"\n  >\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-7\">\n          <img\n            alt=\"Bitwarden\"\n            class=\"logo mb-2\"\n            src=\"../../images/register-layout/logo-horizontal-white.svg\"\n          />\n        </div>\n      </div>\n    </div>\n  </header>\n\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-7\" *ngIf=\"layout\">\n        <div class=\"mt-5\">\n          <!-- Default Body -->\n          <div\n            *ngIf=\"\n              layout === 'teams' ||\n              layout === 'enterprise' ||\n              layout === 'enterprise1' ||\n              layout === 'default'\n            \"\n          >\n            <h1>The Bitwarden Password Manager</h1>\n            <h2>\n              Trusted by millions of individuals, teams, and organizations worldwide for secure\n              password storage and sharing.\n            </h2>\n            <p>Store logins, secure notes, and more</p>\n            <p>Collaborate and share securely</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- Teams & Enterprise Body -->\n          <div *ngIf=\"layout === 'teams1' || layout === 'teams2' || layout === 'enterprise2'\">\n            <h1>\n              Start Your <span *ngIf=\"layout === 'teams1' || layout === 'teams1'\">Teams<br /></span\n              ><span *ngIf=\"layout === 'enterprise2'\">Enterprise</span> Free Trial Now\n            </h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Collaborate and share securely</p>\n            <p>Deploy and manage quickly and easily</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- CNET Campaign Teams & Enterprise Body -->\n          <div *ngIf=\"layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnent'\">\n            <h1>\n              Start Your <span *ngIf=\"layout === 'cnetcmpgnteams'\">Teams<br /></span\n              ><span *ngIf=\"layout === 'cnetcmpgnent'\">Enterprise</span> Free Trial Now\n            </h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Collaborate and share securely</p>\n            <p>Deploy and manage quickly and easily</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- CNET Campaign Premium Body -->\n          <div *ngIf=\"layout === 'cnetcmpgnind'\">\n            <h1>Start Your Premium Account Now</h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Store logins, secure notes, and more</p>\n            <p>Secure your account with advanced two-step login</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n        </div>\n      </div>\n      <div [ngClass]=\"{ 'col-5': layout, 'col-12': !layout }\">\n        <div class=\"row justify-content-md-center mt-5\">\n          <div [ngClass]=\"{ 'col-5': !layout, 'col-12': layout }\">\n            <h1 class=\"lead text-center mb-4\" *ngIf=\"!layout\">{{ \"createAccount\" | i18n }}</h1>\n            <div class=\"card d-block\">\n              <div class=\"card-body\">\n                <app-callout\n                  title=\"{{ 'createOrganizationStep1' | i18n }}\"\n                  type=\"info\"\n                  icon=\"bwi bwi-thumb-tack\"\n                  *ngIf=\"showCreateOrgMessage\"\n                >\n                  {{ \"createOrganizationCreatePersonalAccount\" | i18n }}\n                </app-callout>\n                <app-register-form\n                  [queryParamEmail]=\"email\"\n                  [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n                ></app-register-form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-7 d-flex align-items-center\">\n        <div\n          *ngIf=\"\n            layout === 'cnetcmpgnent' || layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnind'\n          \"\n        >\n          <figure>\n            <figcaption>\n              <cite>\n                <img\n                  src=\"../../images/register-layout/cnet-logo.svg\"\n                  class=\"w-25 d-block mx-auto\"\n                  alt=\"cnet logo\"\n                />\n              </cite>\n            </figcaption>\n            <blockquote class=\"mx-auto text-center px-4\">\n              \"No more excuses; start using Bitwarden today. The identity you save could be your\n              own. The money definitely will be.\"\n            </blockquote>\n          </figure>\n        </div>\n\n        <div\n          *ngIf=\"\n            layout === 'teams' ||\n            layout === 'teams1' ||\n            layout === 'teams2' ||\n            layout === 'enterprise' ||\n            layout === 'enterprise1' ||\n            layout === 'enterprise2' ||\n            layout === 'default'\n          \"\n        >\n          <figure>\n            <figcaption>\n              <cite>\n                <img\n                  src=\"../../images/register-layout/forbes-logo.svg\"\n                  class=\"w-25 d-block mx-auto\"\n                  alt=\"Forbes Logo\"\n                />\n              </cite>\n            </figcaption>\n            <blockquote class=\"mx-auto text-center px-4\">\n              “Bitwarden boasts the backing of some of the world's best security experts and an\n              attractive, easy-to-use interface”\n            </blockquote>\n          </figure>\n        </div>\n      </div>\n      <div\n        *ngIf=\"\n          layout === 'cnetcmpgnent' || layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnind'\n        \"\n        class=\"col-5 d-flex align-items-center justify-content-center\"\n      >\n        <img\n          src=\"../../images/register-layout/usnews-360-badge.svg\"\n          class=\"w-50 d-block\"\n          alt=\"US News 360 Reviews Best Password Manager\"\n        />\n      </div>\n      <div\n        *ngIf=\"\n          layout === 'teams' ||\n          layout === 'teams1' ||\n          layout === 'teams2' ||\n          layout === 'enterprise' ||\n          layout === 'enterprise1' ||\n          layout === 'enterprise2' ||\n          layout === 'default'\n        \"\n        class=\"col-5 d-flex align-items-center justify-content-center\"\n      >\n        <img\n          src=\"../../images/register-layout/usnews-360-badge.svg\"\n          class=\"w-50 d-block\"\n          alt=\"US News 360 Reviews Best Password Manager\"\n        />\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"@bitwarden/angular/components/register.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/referenceEventRequest\";\n\nimport { RouterService } from \"../core\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"register.component.html\",\n})\nexport class RegisterComponent extends BaseRegisterComponent {\n  email = \"\";\n  showCreateOrgMessage = false;\n  layout = \"\";\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n  private policies: Policy[];\n\n  constructor(\n    formValidationErrorService: FormValidationErrorsService,\n    formBuilder: UntypedFormBuilder,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    environmentService: EnvironmentService,\n    logService: LogService,\n    private routerService: RouterService\n  ) {\n    super(\n      formValidationErrorService,\n      formBuilder,\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      this.referenceData = new ReferenceEventRequest();\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n      if (qParams.premium != null) {\n        this.routerService.setPreviousUrl(\"/settings/premium\");\n      } else if (qParams.org != null) {\n        this.showCreateOrgMessage = true;\n        this.referenceData.flow = qParams.org;\n        const route = this.router.createUrlTree([\"create-organization\"], {\n          queryParams: { plan: qParams.org },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      if (qParams.layout != null) {\n        this.layout = this.referenceData.layout = qParams.layout;\n      }\n      if (qParams.reference != null) {\n        this.referenceData.id = qParams.reference;\n      } else {\n        this.referenceData.id = (\"; \" + document.cookie)\n          .split(\"; reference=\")\n          .pop()\n          .split(\";\")\n          .shift();\n      }\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        // After logging in redirect them to setup the families sponsorship\n        const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n          queryParams: { plan: qParams.sponsorshipToken },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      if (this.referenceData.id === \"\") {\n        this.referenceData.id = null;\n      }\n    });\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      try {\n        const policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        if (policies.data != null) {\n          const policiesData = policies.data.map((p) => new PolicyData(p));\n          this.policies = policiesData.map((p) => new Policy(p));\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (this.policies != null) {\n      this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(\n        this.policies\n      );\n    }\n\n    await super.ngOnInit();\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<any>;\n  continuing = false;\n  leaving = false;\n\n  loading = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.apiService.postLeaveOrganization(this.organization.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"removeMasterPassword\" | i18n }}</p>\n      <hr />\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-block\"\n            (click)=\"convert()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"continuing\"\n            ></i>\n            {{ \"removeMasterPassword\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-block\"\n            (click)=\"leave()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"leaving\"\n            ></i>\n            {{ \"leaveOrganization\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"@bitwarden/angular/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class OrganizationUserResetPasswordEnrollmentRequest extends SecretVerificationRequest {\n  resetPasswordKey: string;\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { KeysRequest } from \"./keysRequest\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfIterations: number;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.enforcedPolicyOptions ??= await this.policyService.getMasterPasswordPolicyOptions();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfIterations == null) {\n      this.kdfIterations = await this.stateService.getKdfIterations();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordStrengthResult;\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keysRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { SetPasswordRequest } from \"@bitwarden/common/models/request/setPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading = true;\n  showPassword = false;\n  hint = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.apiService.getOrganizationAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyApiService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = DEFAULT_KDF_TYPE;\n    this.kdfIterations = DEFAULT_KDF_ITERATIONS;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.kdf,\n      this.kdfIterations,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString)\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.apiService.getOrganizationKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.masterPasswordHash = masterPasswordHash;\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.apiService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfIterations(this.kdfIterations);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body text-center\" *ngIf=\"syncLoading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!syncLoading\">\n          <app-callout type=\"info\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n          <app-callout\n            type=\"warning\"\n            title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n            *ngIf=\"resetPasswordAutoEnroll\"\n          >\n            {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n          </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength\n                  [password]=\"masterPassword\"\n                  [email]=\"email\"\n                  [showText]=\"true\"\n                  (passwordStrengthResult)=\"getStrengthResult($event)\"\n                >\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n            <small class=\"form-text text-muted\">{{ \"masterPassDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"@bitwarden/angular/components/set-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyApiService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService\n    );\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { SsoLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\nimport { SsoPreValidateResponse } from \"@bitwarden/common/models/response/ssoPreValidateResponse\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<SsoPreValidateResponse>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return;\n    }\n\n    this.initiateSsoFormPromise = this.apiService.preValidateSso(this.identifier);\n    const response = await this.initiateSsoFormPromise;\n\n    const authorizeUrl = await this.buildAuthorizeUrl(\n      returnUri,\n      includeUserIdentifier,\n      response.token\n    );\n    this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean,\n    token?: string\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier) +\n      \"&ssoToken=\" +\n      encodeURIComponent(token);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      const credentials = new SsoLogInCredentials(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n\n      // TODO: Key Connector Service should pass this error message to the logout callback instead of displaying here\n      if (e.message === \"Key Connector error\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorError\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","export enum PlanType {\n  Free = 0,\n  FamiliesAnnually2019 = 1,\n  TeamsMonthly2019 = 2,\n  TeamsAnnually2019 = 3,\n  EnterpriseMonthly2019 = 4,\n  EnterpriseAnnually2019 = 5,\n  Custom = 6,\n  FamiliesAnnually = 7,\n  TeamsMonthly = 8,\n  TeamsAnnually = 9,\n  EnterpriseMonthly = 10,\n  EnterpriseAnnually = 11,\n}\n","export enum ProductType {\n  Free = 0,\n  Families = 1,\n  Teams = 2,\n  Enterprise = 3,\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  class=\"container\"\n  [appApiAction]=\"initiateSsoFormPromise\"\n  ngNativeValidate\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <img class=\"logo mb-2 logo-themed\" alt=\"Bitwarden\" />\n      <div class=\"card d-block mt-4\">\n        <div class=\"card-body\" *ngIf=\"loggingIn\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loggingIn\">\n          <p>{{ \"ssoLogInWithOrgIdentifier\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"identifier\">{{ \"organizationIdentifier\" | i18n }}</label>\n            <input\n              id=\"identifier\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Identifier\"\n              [(ngModel)]=\"identifier\"\n              required\n              appAutofocus\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"logIn\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SsoComponent as BaseSsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      } else {\n        const storedIdentifier = await this.stateService.getSsoOrgIdentifier();\n        if (storedIdentifier != null) {\n          this.identifier = storedIdentifier;\n        }\n      }\n    });\n  }\n\n  async submit() {\n    await this.stateService.setSsoOrganizationIdentifier(this.identifier);\n    if (this.clientId === \"browser\") {\n      document.cookie = `ssoHandOffMessage=${this.i18nService.t(\"ssoHandOff\")};SameSite=strict`;\n    }\n    super.submit();\n  }\n}\n","<ng-template>\n  <div\n    class=\"tw-inline-block tw-w-11/12 tw-pl-7\"\n    [ngClass]=\"{ 'tw-border-0 tw-border-l tw-border-solid tw-border-secondary-300': applyBorder }\"\n  >\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { CdkStep } from \"@angular/cdk/stepper\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-vertical-step\",\n  templateUrl: \"vertical-step.component.html\",\n  providers: [{ provide: CdkStep, useExisting: VerticalStep }],\n})\nexport class VerticalStep extends CdkStep {\n  @Input() subLabel = \"\";\n  @Input() applyBorder = true;\n}\n","<div class=\"tw-m-2.5 tw-h-16 tw-text-center\">\n  <button\n    (click)=\"selectStep()\"\n    [disabled]=\"disabled\"\n    class=\"tw-flex tw-w-full tw-items-center tw-border-none tw-bg-transparent\"\n    [ngClass]=\"{\n      'hover:tw-bg-secondary-100': !disabled && step.editable\n    }\"\n    [attr.aria-expanded]=\"selected\"\n  >\n    <span\n      class=\"tw-mr-3.5 tw-w-9 tw-rounded-full tw-font-bold tw-leading-9\"\n      *ngIf=\"!step.completed\"\n      [ngClass]=\"{\n        'tw-bg-primary-500 tw-text-contrast': selected,\n        'tw-bg-secondary-300 tw-text-main': !selected && !disabled && step.editable,\n        'tw-bg-transparent tw-text-muted': disabled\n      }\"\n    >\n      {{ stepNumber }}\n    </span>\n    <span\n      class=\"tw-mr-3.5 tw-w-9 tw-rounded-full tw-bg-primary-500 tw-font-bold tw-leading-9 tw-text-contrast\"\n      *ngIf=\"step.completed\"\n    >\n      <i class=\"bwi bwi-fw bwi-check tw-p-1\" aria-hidden=\"true\"></i>\n    </span>\n    <div\n      class=\"tw-txt-main tw-mt-3.5 tw-h-12 tw-text-left tw-leading-snug\"\n      [ngClass]=\"{\n        'tw-font-bold': selected\n      }\"\n    >\n      <p\n        class=\"main-label text tw-mb-1 tw-text-main\"\n        [ngClass]=\"{\n          'tw-mt-1': !step.subLabel\n        }\"\n      >\n        {{ step.label }}\n      </p>\n      <p class=\"sub-label small tw-text-muted\">{{ step.subLabel }}</p>\n    </div>\n  </button>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { VerticalStep } from \"./vertical-step.component\";\n\n@Component({\n  selector: \"app-vertical-step-content\",\n  templateUrl: \"vertical-step-content.component.html\",\n})\nexport class VerticalStepContentComponent {\n  @Output() onSelectStep = new EventEmitter<void>();\n\n  @Input() disabled = false;\n  @Input() selected = false;\n  @Input() step: VerticalStep;\n  @Input() stepNumber: number;\n\n  selectStep() {\n    this.onSelectStep.emit();\n  }\n}\n","<div>\n  <ul class=\"tw-flex tw-list-none tw-flex-col tw-flex-wrap tw-p-5\">\n    <li *ngFor=\"let step of steps; let i = index; let isLast = last\">\n      <app-vertical-step-content\n        [disabled]=\"isStepDisabled(i)\"\n        [selected]=\"selectedIndex === i\"\n        [step]=\"step\"\n        [stepNumber]=\"i + 1\"\n        (onSelectStep)=\"selectStepByIndex(i)\"\n      ></app-vertical-step-content>\n      <div\n        class=\"tw-inline-block tw-pl-7\"\n        *ngIf=\"selectedIndex === i\"\n        [ngTemplateOutlet]=\"selected ? selected.content : null\"\n      ></div>\n      <div\n        class=\"tw-ml-8 tw-h-6 tw-border-0 tw-border-l tw-border-solid tw-border-secondary-300\"\n        *ngIf=\"!isLast && !(selectedIndex === i)\"\n      ></div>\n    </li>\n  </ul>\n</div>\n","import { CdkStepper } from \"@angular/cdk/stepper\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-vertical-stepper\",\n  templateUrl: \"vertical-stepper.component.html\",\n  providers: [{ provide: CdkStepper, useExisting: VerticalStepperComponent }],\n})\nexport class VerticalStepperComponent extends CdkStepper {\n  @Input()\n  activeClass = \"active\";\n\n  isNextButtonHidden() {\n    return !(this.steps.length === this.selectedIndex + 1);\n  }\n\n  isStepDisabled(index: number) {\n    if (this.selectedIndex !== index) {\n      return this.selectedIndex === index - 1\n        ? !this.steps.find((_, i) => i == index - 1)?.completed\n        : true;\n    }\n    return false;\n  }\n\n  selectStepByIndex(index: number): void {\n    this.selectedIndex = index;\n  }\n}\n","<form #form [formGroup]=\"formGroup\" *ngIf=\"nameOnly\">\n  <bit-form-field>\n    <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"name\" />\n  </bit-form-field>\n</form>\n<form #form [formGroup]=\"formGroup\" *ngIf=\"!nameOnly\">\n  <h2>{{ \"generalInformation\" | i18n }}</h2>\n  <div class=\"tw-flex tw-w-full tw-space-x-4\" *ngIf=\"createOrganization\">\n    <bit-form-field class=\"tw-w-1/2\">\n      <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n      <input bitInput type=\"text\" formControlName=\"name\" />\n    </bit-form-field>\n    <bit-form-field class=\"tw-w-1/2\">\n      <bit-label>{{ \"billingEmail\" | i18n }}</bit-label>\n      <input bitInput type=\"email\" formControlName=\"billingEmail\" />\n    </bit-form-field>\n    <bit-form-field class=\"tw-w-1/2\" *ngIf=\"isProvider\">\n      <bit-label>{{ \"clientOwnerEmail\" | i18n }}</bit-label>\n      <input bitInput type=\"email\" formControlName=\"clientOwnerEmail\" />\n    </bit-form-field>\n  </div>\n  <div *ngIf=\"!isProvider && !acceptingSponsorship\">\n    <input\n      type=\"checkbox\"\n      name=\"businessOwned\"\n      formControlName=\"businessOwned\"\n      (change)=\"changedBusinessOwned.emit()\"\n    />\n    <bit-label for=\"businessOwned\" class=\"tw-mb-3\">{{ \"accountOwnedBusiness\" | i18n }}</bit-label>\n    <div class=\"tw-mt-4\" *ngIf=\"formGroup.controls['businessOwned'].value\">\n      <bit-form-field class=\"tw-w-1/2\">\n        <bit-label>{{ \"businessName\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"businessName\" />\n      </bit-form-field>\n    </div>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { UntypedFormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-org-info\",\n  templateUrl: \"organization-information.component.html\",\n})\nexport class OrganizationInformationComponent {\n  @Input() nameOnly = false;\n  @Input() createOrganization = true;\n  @Input() isProvider = false;\n  @Input() acceptingSponsorship = false;\n  @Input() formGroup: UntypedFormGroup;\n  @Output() changedBusinessOwned = new EventEmitter<void>();\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise-content\",\n  templateUrl: \"enterprise-content.component.html\",\n})\nexport class EnterpriseContentComponent {}\n","<h1 class=\"!tw-text-alt2\">You've chosen Bitwarden for Enterprise</h1>\n<div class=\"tw-pt-24\">\n  <h2>What you can do with Bitwarden for Enterprise</h2>\n</div>\n\n<div class=\"tw-mt-12 tw-text-3xl tw-text-main\">\n  <p class=\"tw-mt-2.5 tw-mb-20\">Collaborate and share securely</p>\n  <p class=\"tw-mt-2.5 tw-mb-20\">Deploy and manage quickly and easily</p>\n  <p class=\"tw-mt-2.5 tw-mb-20\">Access anywhere on any device</p>\n  <p class=\"tw-mt-2.5 tw-mb-20\">Create your account to get started</p>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-families-content\",\n  templateUrl: \"families-content.component.html\",\n})\nexport class FamiliesContentComponent {}\n","<h1 class=\"!tw-text-alt2\">You've chosen Bitwarden for Families</h1>\n<div class=\"tw-pt-24\">\n  <h2>\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<div class=\"tw-mt-12 tw-text-3xl tw-text-main\">\n  <p class=\"tw-mt-2.5 tw-mb-20\">Collaborate and share securely</p>\n  <p class=\"tw-mt-2.5 tw-mb-20\">Deploy and manage quickly and easily</p>\n  <p class=\"tw-mt-2.5 tw-mb-20\">Access anywhere on any device</p>\n  <p class=\"tw-mt-2.5 tw-mb-20\">Create your account to get started</p>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams-content\",\n  templateUrl: \"teams-content.component.html\",\n})\nexport class TeamsContentComponent {}\n","<h1 class=\"!tw-text-alt2\">You've chosen Bitwarden for Teams</h1>\n<div class=\"tw-pt-24\">\n  <h2>What you can do with Btiwarden for Teams</h2>\n</div>\n<div class=\"tw-mt-12 tw-text-3xl tw-text-main\">\n  <p class=\"tw-mt-2.5 tw-mb-20\">Collaborate and share securely</p>\n  <p class=\"tw-mt-2.5 tw-mb-20\">Deploy and manage quickly and easily</p>\n  <p class=\"tw-mt-2.5 tw-mb-20\">Access anywhere on any device</p>\n  <p class=\"tw-mt-2.5 tw-mb-20\">Create your account to get started</p>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-trial-confirmation-details\",\n  templateUrl: \"confirmation-details.component.html\",\n})\nexport class ConfirmationDetailsComponent {\n  @Input() email: string;\n  @Input() orgLabel: string;\n}\n","export enum PaymentMethodType {\n  Card = 0,\n  BankAccount = 1,\n  PayPal = 2,\n  BitPay = 3,\n  Credit = 4,\n  WireTransfer = 5,\n  AppleInApp = 6,\n  GoogleInApp = 7,\n  Check = 8,\n}\n","<div class=\"tw-pl-6 tw-pb-6\">\n  <p class=\"tw-text-xl\">{{ \"trialThankYou\" | i18n: orgLabel }}</p>\n  <ul class=\"tw-list-disc\">\n    <li>\n      <p>\n        {{ \"trialConfirmationEmail\" | i18n }}\n        <span class=\"tw-font-bold\">{{ email }}</span\n        >.\n      </p>\n    </li>\n    <li>\n      <p>\n        {{ \"trialPaidInfoMessage\" | i18n: orgLabel }}\n      </p>\n    </li>\n  </ul>\n</div>\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationCreateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  planType: PlanType;\n  key: string;\n  keys: OrganizationKeysRequest;\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n  additionalSeats: number;\n  maxAutoscaleSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  collectionName: string;\n  taxIdNumber: string;\n  billingAddressLine1: string;\n  billingAddressLine2: string;\n  billingAddressCity: string;\n  billingAddressState: string;\n  billingAddressPostalCode: string;\n  billingAddressCountry: string;\n}\n","import { KeysRequest } from \"./keysRequest\";\n\nexport class OrganizationKeysRequest extends KeysRequest {\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    super(publicKey, encryptedPrivateKey);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationUpgradeRequest {\n  businessName: string;\n  planType: PlanType;\n  additionalSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  billingAddressCountry: string;\n  billingAddressPostalCode: string;\n  keys: OrganizationKeysRequest;\n}\n","import { OrganizationCreateRequest } from \"../organizationCreateRequest\";\n\nexport class ProviderOrganizationCreateRequest {\n  constructor(\n    public clientOwnerEmail: string,\n    public organizationCreateRequest: OrganizationCreateRequest\n  ) {}\n}\n","<div class=\"mb-4 text-lg\" *ngIf=\"showOptions && showMethods\">\n  <div class=\"form-check form-check-inline mr-4\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-card\"\n      [value]=\"paymentMethodType.Card\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-card\">\n      <i class=\"bwi bwi-fw bwi-credit-card\" aria-hidden=\"true\"></i> {{ \"creditCard\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline mr-4\" *ngIf=\"!hideBank\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-bank\"\n      [value]=\"paymentMethodType.BankAccount\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-bank\">\n      <i class=\"bwi bwi-fw bwi-bank\" aria-hidden=\"true\"></i> {{ \"bankAccount\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hidePaypal\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-paypal\"\n      [value]=\"paymentMethodType.PayPal\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-paypal\">\n      <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hideCredit\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-credit\"\n      [value]=\"paymentMethodType.Credit\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-credit\">\n      <i class=\"bwi bwi-fw bwi-dollar\" aria-hidden=\"true\"></i> {{ \"accountCredit\" | i18n }}</label\n    >\n  </div>\n</div>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Card\">\n  <div class=\"row\">\n    <div [ngClass]=\"trialFlow ? 'col-5' : 'col-4'\" class=\"form-group\">\n      <label for=\"stripe-card-number-element\">{{ \"number\" | i18n }}</label>\n      <div id=\"stripe-card-number-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div *ngIf=\"!trialFlow\" class=\"form-group col-8 d-flex align-items-end\">\n      <img\n        src=\"../../images/cards.png\"\n        alt=\"Visa, MasterCard, Discover, AmEx, JCB, Diners Club, UnionPay\"\n        width=\"323\"\n        height=\"32\"\n      />\n    </div>\n    <div [ngClass]=\"trialFlow ? 'col-3' : 'col-4'\" class=\"form-group\">\n      <label for=\"stripe-card-expiry-element\">{{ \"expiration\" | i18n }}</label>\n      <div id=\"stripe-card-expiry-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div class=\"form-group col-4\">\n      <div class=\"d-flex\">\n        <label for=\"stripe-card-cvc-element\">\n          {{ \"securityCode\" | i18n }}\n        </label>\n        <a\n          href=\"https://www.cvvnumber.com/cvv.html\"\n          tabindex=\"-1\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          class=\"ml-auto\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n      <div id=\"stripe-card-cvc-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.BankAccount\">\n  <app-callout type=\"warning\" title=\"{{ 'verifyBankAccount' | i18n }}\">\n    {{ \"verifyBankAccountInitialDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"routing_number\">{{ \"routingNumber\" | i18n }}</label>\n      <input\n        id=\"routing_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"routing_number\"\n        [(ngModel)]=\"bank.routing_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_number\">{{ \"accountNumber\" | i18n }}</label>\n      <input\n        id=\"account_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_number\"\n        [(ngModel)]=\"bank.account_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_name\">{{ \"accountHolderName\" | i18n }}</label>\n      <input\n        id=\"account_holder_name\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_holder_name\"\n        [(ngModel)]=\"bank.account_holder_name\"\n        required\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_type\">{{ \"bankAccountType\" | i18n }}</label>\n      <select\n        id=\"account_holder_type\"\n        class=\"form-control\"\n        name=\"account_holder_type\"\n        [(ngModel)]=\"bank.account_holder_type\"\n        required\n      >\n        <option value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option value=\"company\">{{ \"bankAccountTypeCompany\" | i18n }}</option>\n        <option value=\"individual\">{{ \"bankAccountTypeIndividual\" | i18n }}</option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.PayPal\">\n  <div class=\"mb-3\">\n    <div id=\"bt-dropin-container\" class=\"mb-1\"></div>\n    <small class=\"text-muted\">{{ \"paypalClickSubmit\" | i18n }}</small>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Credit\">\n  <app-callout type=\"note\">\n    {{ \"makeSureEnoughCredit\" | i18n }}\n  </app-callout>\n</ng-container>\n","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport ThemeVariables from \"../../scss/export.module.scss\";\n\nconst lightInputColor = ThemeVariables.lightInputColor;\nconst lightInputPlaceholderColor = ThemeVariables.lightInputPlaceholderColor;\nconst darkInputColor = ThemeVariables.darkInputColor;\nconst darkInputPlaceholderColor = ThemeVariables.darkInputPlaceholderColor;\n\n@Component({\n  selector: \"app-payment\",\n  templateUrl: \"payment.component.html\",\n})\nexport class PaymentComponent implements OnInit, OnDestroy {\n  @Input() showMethods = true;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.Card;\n  @Input() hideBank = false;\n  @Input() hidePaypal = false;\n  @Input() hideCredit = false;\n  @Input() trialFlow = false;\n\n  private destroy$: Subject<void> = new Subject<void>();\n\n  bank: any = {\n    routing_number: null,\n    account_number: null,\n    account_holder_name: null,\n    account_holder_type: \"\",\n    currency: \"USD\",\n    country: \"US\",\n  };\n\n  paymentMethodType = PaymentMethodType;\n\n  private btScript: HTMLScriptElement;\n  private btInstance: any = null;\n  private stripeScript: HTMLScriptElement;\n  private stripe: any = null;\n  private stripeElements: any = null;\n  private stripeCardNumberElement: any = null;\n  private stripeCardExpiryElement: any = null;\n  private stripeCardCvcElement: any = null;\n  private StripeElementStyle: any;\n  private StripeElementClasses: any;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private themingService: AbstractThemingService\n  ) {\n    this.stripeScript = window.document.createElement(\"script\");\n    this.stripeScript.src = \"https://js.stripe.com/v3/\";\n    this.stripeScript.async = true;\n    this.stripeScript.onload = () => {\n      this.stripe = (window as any).Stripe(process.env.STRIPE_KEY);\n      this.stripeElements = this.stripe.elements();\n      this.setStripeElement();\n    };\n    this.btScript = window.document.createElement(\"script\");\n    this.btScript.src = `scripts/dropin.js?cache=${process.env.CACHE_TAG}`;\n    this.btScript.async = true;\n    this.StripeElementStyle = {\n      base: {\n        color: null,\n        fontFamily:\n          '\"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, ' +\n          '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n        fontSize: \"14px\",\n        fontSmoothing: \"antialiased\",\n        \"::placeholder\": {\n          color: null,\n        },\n      },\n      invalid: {\n        color: null,\n      },\n    };\n    this.StripeElementClasses = {\n      focus: \"is-focused\",\n      empty: \"is-empty\",\n      invalid: \"is-invalid\",\n    };\n  }\n\n  async ngOnInit() {\n    if (!this.showOptions) {\n      this.hidePaypal = this.method !== PaymentMethodType.PayPal;\n      this.hideBank = this.method !== PaymentMethodType.BankAccount;\n      this.hideCredit = this.method !== PaymentMethodType.Credit;\n    }\n    await this.setTheme();\n    window.document.head.appendChild(this.stripeScript);\n    if (!this.hidePaypal) {\n      window.document.head.appendChild(this.btScript);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    window.document.head.removeChild(this.stripeScript);\n    window.setTimeout(() => {\n      Array.from(window.document.querySelectorAll(\"iframe\")).forEach((el) => {\n        if (el.src != null && el.src.indexOf(\"stripe\") > -1) {\n          try {\n            window.document.body.removeChild(el);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      });\n    }, 500);\n    if (!this.hidePaypal) {\n      window.document.head.removeChild(this.btScript);\n      window.setTimeout(() => {\n        Array.from(window.document.head.querySelectorAll(\"script\")).forEach((el) => {\n          if (el.src != null && el.src.indexOf(\"paypal\") > -1) {\n            try {\n              window.document.head.removeChild(el);\n            } catch (e) {\n              this.logService.error(e);\n            }\n          }\n        });\n        const btStylesheet = window.document.head.querySelector(\"#braintree-dropin-stylesheet\");\n        if (btStylesheet != null) {\n          try {\n            window.document.head.removeChild(btStylesheet);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      }, 500);\n    }\n  }\n\n  changeMethod() {\n    this.btInstance = null;\n\n    if (this.method === PaymentMethodType.PayPal) {\n      window.setTimeout(() => {\n        (window as any).braintree.dropin.create(\n          {\n            authorization: process.env.BRAINTREE_KEY,\n            container: \"#bt-dropin-container\",\n            paymentOptionPriority: [\"paypal\"],\n            paypal: {\n              flow: \"vault\",\n              buttonStyle: {\n                label: \"pay\",\n                size: \"medium\",\n                shape: \"pill\",\n                color: \"blue\",\n                tagline: \"false\",\n              },\n            },\n          },\n          (createErr: any, instance: any) => {\n            if (createErr != null) {\n              // eslint-disable-next-line\n              console.error(createErr);\n              return;\n            }\n            this.btInstance = instance;\n          }\n        );\n      }, 250);\n    } else {\n      this.setStripeElement();\n    }\n  }\n\n  createPaymentToken(): Promise<[string, PaymentMethodType]> {\n    return new Promise((resolve, reject) => {\n      if (this.method === PaymentMethodType.Credit) {\n        resolve([null, this.method]);\n      } else if (this.method === PaymentMethodType.PayPal) {\n        this.btInstance\n          .requestPaymentMethod()\n          .then((payload: any) => {\n            resolve([payload.nonce, this.method]);\n          })\n          .catch((err: any) => {\n            reject(err.message);\n          });\n      } else if (\n        this.method === PaymentMethodType.Card ||\n        this.method === PaymentMethodType.BankAccount\n      ) {\n        if (this.method === PaymentMethodType.Card) {\n          this.apiService\n            .postSetupPayment()\n            .then((clientSecret) =>\n              this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n            )\n            .then((result: any) => {\n              if (result.error) {\n                reject(result.error.message);\n              } else if (result.setupIntent && result.setupIntent.status === \"succeeded\") {\n                resolve([result.setupIntent.payment_method, this.method]);\n              } else {\n                reject();\n              }\n            });\n        } else {\n          this.stripe.createToken(\"bank_account\", this.bank).then((result: any) => {\n            if (result.error) {\n              reject(result.error.message);\n            } else if (result.token && result.token.id != null) {\n              resolve([result.token.id, this.method]);\n            } else {\n              reject();\n            }\n          });\n        }\n      }\n    });\n  }\n\n  handleStripeCardPayment(clientSecret: string, successCallback: () => Promise<any>): Promise<any> {\n    return new Promise<void>((resolve, reject) => {\n      if (this.showMethods && this.stripeCardNumberElement == null) {\n        reject();\n        return;\n      }\n      const handleCardPayment = () =>\n        this.showMethods\n          ? this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n          : this.stripe.handleCardSetup(clientSecret);\n      return handleCardPayment().then(async (result: any) => {\n        if (result.error) {\n          reject(result.error.message);\n        } else if (result.paymentIntent && result.paymentIntent.status === \"succeeded\") {\n          if (successCallback != null) {\n            await successCallback();\n          }\n          resolve();\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n\n  private setStripeElement() {\n    window.setTimeout(() => {\n      if (this.showMethods && this.method === PaymentMethodType.Card) {\n        if (this.stripeCardNumberElement == null) {\n          this.stripeCardNumberElement = this.stripeElements.create(\"cardNumber\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        if (this.stripeCardExpiryElement == null) {\n          this.stripeCardExpiryElement = this.stripeElements.create(\"cardExpiry\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n          });\n        }\n        if (this.stripeCardCvcElement == null) {\n          this.stripeCardCvcElement = this.stripeElements.create(\"cardCvc\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        this.stripeCardNumberElement.mount(\"#stripe-card-number-element\");\n        this.stripeCardExpiryElement.mount(\"#stripe-card-expiry-element\");\n        this.stripeCardCvcElement.mount(\"#stripe-card-cvc-element\");\n      }\n    }, 50);\n  }\n\n  private async setTheme() {\n    this.themingService.theme$.pipe(takeUntil(this.destroy$)).subscribe((theme) => {\n      if (theme.effectiveTheme === ThemeType.Dark) {\n        this.StripeElementStyle.base.color = darkInputColor;\n        this.StripeElementStyle.base[\"::placeholder\"].color = darkInputPlaceholderColor;\n        this.StripeElementStyle.invalid.color = darkInputColor;\n      } else {\n        this.StripeElementStyle.base.color = lightInputColor;\n        this.StripeElementStyle.base[\"::placeholder\"].color = lightInputPlaceholderColor;\n        this.StripeElementStyle.invalid.color = lightInputColor;\n      }\n    });\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"darkInputColor\":\"#fff\",\"darkInputPlaceholderColor\":\"#bac0ce\",\"lightInputColor\":\"#465057\",\"lightInputPlaceholderColor\":\"#b6b8b8\"};","export class TaxInfoUpdateRequest {\n  country: string;\n  postalCode: string;\n}\n","import { TaxInfoUpdateRequest } from \"./taxInfoUpdateRequest\";\n\nexport class OrganizationTaxInfoUpdateRequest extends TaxInfoUpdateRequest {\n  taxId: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n}\n","<div class=\"row\">\n  <div [ngClass]=\"trialFlow ? 'col-7' : 'col-6'\">\n    <div class=\"form-group\">\n      <label for=\"addressCountry\">{{ \"country\" | i18n }}</label>\n      <select\n        id=\"addressCountry\"\n        class=\"form-control\"\n        [(ngModel)]=\"taxInfo.country\"\n        required\n        name=\"addressCountry\"\n        autocomplete=\"country\"\n        (change)=\"changeCountry()\"\n      >\n        <option value=\"\">-- Select --</option>\n        <option value=\"US\">United States</option>\n        <option value=\"CN\">China</option>\n        <option value=\"FR\">France</option>\n        <option value=\"DE\">Germany</option>\n        <option value=\"CA\">Canada</option>\n        <option value=\"GB\">United Kingdom</option>\n        <option value=\"AU\">Australia</option>\n        <option value=\"IN\">India</option>\n        <option value=\"-\" disabled></option>\n        <option value=\"AF\">Afghanistan</option>\n        <option value=\"AX\">Åland Islands</option>\n        <option value=\"AL\">Albania</option>\n        <option value=\"DZ\">Algeria</option>\n        <option value=\"AS\">American Samoa</option>\n        <option value=\"AD\">Andorra</option>\n        <option value=\"AO\">Angola</option>\n        <option value=\"AI\">Anguilla</option>\n        <option value=\"AQ\">Antarctica</option>\n        <option value=\"AG\">Antigua and Barbuda</option>\n        <option value=\"AR\">Argentina</option>\n        <option value=\"AM\">Armenia</option>\n        <option value=\"AW\">Aruba</option>\n        <option value=\"AT\">Austria</option>\n        <option value=\"AZ\">Azerbaijan</option>\n        <option value=\"BS\">Bahamas</option>\n        <option value=\"BH\">Bahrain</option>\n        <option value=\"BD\">Bangladesh</option>\n        <option value=\"BB\">Barbados</option>\n        <option value=\"BY\">Belarus</option>\n        <option value=\"BE\">Belgium</option>\n        <option value=\"BZ\">Belize</option>\n        <option value=\"BJ\">Benin</option>\n        <option value=\"BM\">Bermuda</option>\n        <option value=\"BT\">Bhutan</option>\n        <option value=\"BO\">Bolivia, Plurinational State of</option>\n        <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\n        <option value=\"BA\">Bosnia and Herzegovina</option>\n        <option value=\"BW\">Botswana</option>\n        <option value=\"BV\">Bouvet Island</option>\n        <option value=\"BR\">Brazil</option>\n        <option value=\"IO\">British Indian Ocean Territory</option>\n        <option value=\"BN\">Brunei Darussalam</option>\n        <option value=\"BG\">Bulgaria</option>\n        <option value=\"BF\">Burkina Faso</option>\n        <option value=\"BI\">Burundi</option>\n        <option value=\"KH\">Cambodia</option>\n        <option value=\"CM\">Cameroon</option>\n        <option value=\"CV\">Cape Verde</option>\n        <option value=\"KY\">Cayman Islands</option>\n        <option value=\"CF\">Central African Republic</option>\n        <option value=\"TD\">Chad</option>\n        <option value=\"CL\">Chile</option>\n        <option value=\"CX\">Christmas Island</option>\n        <option value=\"CC\">Cocos (Keeling) Islands</option>\n        <option value=\"CO\">Colombia</option>\n        <option value=\"KM\">Comoros</option>\n        <option value=\"CG\">Congo</option>\n        <option value=\"CD\">Congo, the Democratic Republic of the</option>\n        <option value=\"CK\">Cook Islands</option>\n        <option value=\"CR\">Costa Rica</option>\n        <option value=\"CI\">Côte d'Ivoire</option>\n        <option value=\"HR\">Croatia</option>\n        <option value=\"CU\">Cuba</option>\n        <option value=\"CW\">Curaçao</option>\n        <option value=\"CY\">Cyprus</option>\n        <option value=\"CZ\">Czech Republic</option>\n        <option value=\"DK\">Denmark</option>\n        <option value=\"DJ\">Djibouti</option>\n        <option value=\"DM\">Dominica</option>\n        <option value=\"DO\">Dominican Republic</option>\n        <option value=\"EC\">Ecuador</option>\n        <option value=\"EG\">Egypt</option>\n        <option value=\"SV\">El Salvador</option>\n        <option value=\"GQ\">Equatorial Guinea</option>\n        <option value=\"ER\">Eritrea</option>\n        <option value=\"EE\">Estonia</option>\n        <option value=\"ET\">Ethiopia</option>\n        <option value=\"FK\">Falkland Islands (Malvinas)</option>\n        <option value=\"FO\">Faroe Islands</option>\n        <option value=\"FJ\">Fiji</option>\n        <option value=\"FI\">Finland</option>\n        <option value=\"GF\">French Guiana</option>\n        <option value=\"PF\">French Polynesia</option>\n        <option value=\"TF\">French Southern Territories</option>\n        <option value=\"GA\">Gabon</option>\n        <option value=\"GM\">Gambia</option>\n        <option value=\"GE\">Georgia</option>\n        <option value=\"GH\">Ghana</option>\n        <option value=\"GI\">Gibraltar</option>\n        <option value=\"GR\">Greece</option>\n        <option value=\"GL\">Greenland</option>\n        <option value=\"GD\">Grenada</option>\n        <option value=\"GP\">Guadeloupe</option>\n        <option value=\"GU\">Guam</option>\n        <option value=\"GT\">Guatemala</option>\n        <option value=\"GG\">Guernsey</option>\n        <option value=\"GN\">Guinea</option>\n        <option value=\"GW\">Guinea-Bissau</option>\n        <option value=\"GY\">Guyana</option>\n        <option value=\"HT\">Haiti</option>\n        <option value=\"HM\">Heard Island and McDonald Islands</option>\n        <option value=\"VA\">Holy See (Vatican City State)</option>\n        <option value=\"HN\">Honduras</option>\n        <option value=\"HK\">Hong Kong</option>\n        <option value=\"HU\">Hungary</option>\n        <option value=\"IS\">Iceland</option>\n        <option value=\"ID\">Indonesia</option>\n        <option value=\"IR\">Iran, Islamic Republic of</option>\n        <option value=\"IQ\">Iraq</option>\n        <option value=\"IE\">Ireland</option>\n        <option value=\"IM\">Isle of Man</option>\n        <option value=\"IL\">Israel</option>\n        <option value=\"IT\">Italy</option>\n        <option value=\"JM\">Jamaica</option>\n        <option value=\"JP\">Japan</option>\n        <option value=\"JE\">Jersey</option>\n        <option value=\"JO\">Jordan</option>\n        <option value=\"KZ\">Kazakhstan</option>\n        <option value=\"KE\">Kenya</option>\n        <option value=\"KI\">Kiribati</option>\n        <option value=\"KP\">Korea, Democratic People's Republic of</option>\n        <option value=\"KR\">Korea, Republic of</option>\n        <option value=\"KW\">Kuwait</option>\n        <option value=\"KG\">Kyrgyzstan</option>\n        <option value=\"LA\">Lao People's Democratic Republic</option>\n        <option value=\"LV\">Latvia</option>\n        <option value=\"LB\">Lebanon</option>\n        <option value=\"LS\">Lesotho</option>\n        <option value=\"LR\">Liberia</option>\n        <option value=\"LY\">Libya</option>\n        <option value=\"LI\">Liechtenstein</option>\n        <option value=\"LT\">Lithuania</option>\n        <option value=\"LU\">Luxembourg</option>\n        <option value=\"MO\">Macao</option>\n        <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option>\n        <option value=\"MG\">Madagascar</option>\n        <option value=\"MW\">Malawi</option>\n        <option value=\"MY\">Malaysia</option>\n        <option value=\"MV\">Maldives</option>\n        <option value=\"ML\">Mali</option>\n        <option value=\"MT\">Malta</option>\n        <option value=\"MH\">Marshall Islands</option>\n        <option value=\"MQ\">Martinique</option>\n        <option value=\"MR\">Mauritania</option>\n        <option value=\"MU\">Mauritius</option>\n        <option value=\"YT\">Mayotte</option>\n        <option value=\"MX\">Mexico</option>\n        <option value=\"FM\">Micronesia, Federated States of</option>\n        <option value=\"MD\">Moldova, Republic of</option>\n        <option value=\"MC\">Monaco</option>\n        <option value=\"MN\">Mongolia</option>\n        <option value=\"ME\">Montenegro</option>\n        <option value=\"MS\">Montserrat</option>\n        <option value=\"MA\">Morocco</option>\n        <option value=\"MZ\">Mozambique</option>\n        <option value=\"MM\">Myanmar</option>\n        <option value=\"NA\">Namibia</option>\n        <option value=\"NR\">Nauru</option>\n        <option value=\"NP\">Nepal</option>\n        <option value=\"NL\">Netherlands</option>\n        <option value=\"NC\">New Caledonia</option>\n        <option value=\"NZ\">New Zealand</option>\n        <option value=\"NI\">Nicaragua</option>\n        <option value=\"NE\">Niger</option>\n        <option value=\"NG\">Nigeria</option>\n        <option value=\"NU\">Niue</option>\n        <option value=\"NF\">Norfolk Island</option>\n        <option value=\"MP\">Northern Mariana Islands</option>\n        <option value=\"NO\">Norway</option>\n        <option value=\"OM\">Oman</option>\n        <option value=\"PK\">Pakistan</option>\n        <option value=\"PW\">Palau</option>\n        <option value=\"PS\">Palestinian Territory, Occupied</option>\n        <option value=\"PA\">Panama</option>\n        <option value=\"PG\">Papua New Guinea</option>\n        <option value=\"PY\">Paraguay</option>\n        <option value=\"PE\">Peru</option>\n        <option value=\"PH\">Philippines</option>\n        <option value=\"PN\">Pitcairn</option>\n        <option value=\"PL\">Poland</option>\n        <option value=\"PT\">Portugal</option>\n        <option value=\"PR\">Puerto Rico</option>\n        <option value=\"QA\">Qatar</option>\n        <option value=\"RE\">Réunion</option>\n        <option value=\"RO\">Romania</option>\n        <option value=\"RU\">Russian Federation</option>\n        <option value=\"RW\">Rwanda</option>\n        <option value=\"BL\">Saint Barthélemy</option>\n        <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option>\n        <option value=\"KN\">Saint Kitts and Nevis</option>\n        <option value=\"LC\">Saint Lucia</option>\n        <option value=\"MF\">Saint Martin (French part)</option>\n        <option value=\"PM\">Saint Pierre and Miquelon</option>\n        <option value=\"VC\">Saint Vincent and the Grenadines</option>\n        <option value=\"WS\">Samoa</option>\n        <option value=\"SM\">San Marino</option>\n        <option value=\"ST\">Sao Tome and Principe</option>\n        <option value=\"SA\">Saudi Arabia</option>\n        <option value=\"SN\">Senegal</option>\n        <option value=\"RS\">Serbia</option>\n        <option value=\"SC\">Seychelles</option>\n        <option value=\"SL\">Sierra Leone</option>\n        <option value=\"SG\">Singapore</option>\n        <option value=\"SX\">Sint Maarten (Dutch part)</option>\n        <option value=\"SK\">Slovakia</option>\n        <option value=\"SI\">Slovenia</option>\n        <option value=\"SB\">Solomon Islands</option>\n        <option value=\"SO\">Somalia</option>\n        <option value=\"ZA\">South Africa</option>\n        <option value=\"GS\">South Georgia and the South Sandwich Islands</option>\n        <option value=\"SS\">South Sudan</option>\n        <option value=\"ES\">Spain</option>\n        <option value=\"LK\">Sri Lanka</option>\n        <option value=\"SD\">Sudan</option>\n        <option value=\"SR\">Suriname</option>\n        <option value=\"SJ\">Svalbard and Jan Mayen</option>\n        <option value=\"SZ\">Swaziland</option>\n        <option value=\"SE\">Sweden</option>\n        <option value=\"CH\">Switzerland</option>\n        <option value=\"SY\">Syrian Arab Republic</option>\n        <option value=\"TW\">Taiwan</option>\n        <option value=\"TJ\">Tajikistan</option>\n        <option value=\"TZ\">Tanzania, United Republic of</option>\n        <option value=\"TH\">Thailand</option>\n        <option value=\"TL\">Timor-Leste</option>\n        <option value=\"TG\">Togo</option>\n        <option value=\"TK\">Tokelau</option>\n        <option value=\"TO\">Tonga</option>\n        <option value=\"TT\">Trinidad and Tobago</option>\n        <option value=\"TN\">Tunisia</option>\n        <option value=\"TR\">Turkey</option>\n        <option value=\"TM\">Turkmenistan</option>\n        <option value=\"TC\">Turks and Caicos Islands</option>\n        <option value=\"TV\">Tuvalu</option>\n        <option value=\"UG\">Uganda</option>\n        <option value=\"UA\">Ukraine</option>\n        <option value=\"AE\">United Arab Emirates</option>\n        <option value=\"UM\">United States Minor Outlying Islands</option>\n        <option value=\"UY\">Uruguay</option>\n        <option value=\"UZ\">Uzbekistan</option>\n        <option value=\"VU\">Vanuatu</option>\n        <option value=\"VE\">Venezuela, Bolivarian Republic of</option>\n        <option value=\"VN\">Viet Nam</option>\n        <option value=\"VG\">Virgin Islands, British</option>\n        <option value=\"VI\">Virgin Islands, U.S.</option>\n        <option value=\"WF\">Wallis and Futuna</option>\n        <option value=\"EH\">Western Sahara</option>\n        <option value=\"YE\">Yemen</option>\n        <option value=\"ZM\">Zambia</option>\n        <option value=\"ZW\">Zimbabwe</option>\n      </select>\n    </div>\n  </div>\n  <div [ngClass]=\"trialFlow ? 'col-5' : 'col-3'\">\n    <div class=\"form-group\">\n      <label for=\"addressPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n      <input\n        id=\"addressPostalCode\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressPostalCode\"\n        [(ngModel)]=\"taxInfo.postalCode\"\n        [required]=\"taxInfo.country === 'US'\"\n        autocomplete=\"postal-code\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\" *ngIf=\"organizationId && taxInfo.country !== 'US'\">\n    <div class=\"form-group form-check\">\n      <input\n        class=\"form-check-input\"\n        id=\"addressIncludeTaxId\"\n        name=\"addressIncludeTaxId\"\n        type=\"checkbox\"\n        [(ngModel)]=\"taxInfo.includeTaxId\"\n      />\n      <label class=\"form-check-label\" for=\"addressIncludeTaxId\">{{ \"includeVAT\" | i18n }}</label>\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"taxId\">{{ \"taxIdNumber\" | i18n }}</label>\n      <input id=\"taxId\" class=\"form-control\" type=\"text\" name=\"taxId\" [(ngModel)]=\"taxInfo.taxId\" />\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine1\">{{ \"address1\" | i18n }}</label>\n      <input\n        id=\"addressLine1\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine1\"\n        [(ngModel)]=\"taxInfo.line1\"\n        autocomplete=\"address-line1\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine2\">{{ \"address2\" | i18n }}</label>\n      <input\n        id=\"addressLine2\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine2\"\n        [(ngModel)]=\"taxInfo.line2\"\n        autocomplete=\"address-line2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressCity\">{{ \"cityTown\" | i18n }}</label>\n      <input\n        id=\"addressCity\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressCity\"\n        [(ngModel)]=\"taxInfo.city\"\n        autocomplete=\"address-level2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressState\">{{ \"stateProvince\" | i18n }}</label>\n      <input\n        id=\"addressState\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressState\"\n        [(ngModel)]=\"taxInfo.state\"\n        autocomplete=\"address-level1\"\n      />\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationTaxInfoUpdateRequest } from \"@bitwarden/common/models/request/organizationTaxInfoUpdateRequest\";\nimport { TaxInfoUpdateRequest } from \"@bitwarden/common/models/request/taxInfoUpdateRequest\";\nimport { TaxRateResponse } from \"@bitwarden/common/models/response/taxRateResponse\";\n\n@Component({\n  selector: \"app-tax-info\",\n  templateUrl: \"tax-info.component.html\",\n})\nexport class TaxInfoComponent {\n  @Input() trialFlow = false;\n  @Output() onCountryChanged = new EventEmitter();\n\n  loading = true;\n  organizationId: string;\n  taxInfo: any = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  taxRates: TaxRateResponse[];\n\n  private pristine: any = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      if (this.organizationId) {\n        try {\n          const taxInfo = await this.apiService.getOrganizationTaxInfo(this.organizationId);\n          if (taxInfo) {\n            this.taxInfo.taxId = taxInfo.taxId;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.line1 = taxInfo.line1;\n            this.taxInfo.line2 = taxInfo.line2;\n            this.taxInfo.city = taxInfo.city;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n            this.taxInfo.includeTaxId =\n              this.taxInfo.country !== \"US\" &&\n              (!!taxInfo.taxId ||\n                !!taxInfo.line1 ||\n                !!taxInfo.line2 ||\n                !!taxInfo.city ||\n                !!taxInfo.state);\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      } else {\n        try {\n          const taxInfo = await this.apiService.getTaxInfo();\n          if (taxInfo) {\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.pristine = Object.assign({}, this.taxInfo);\n      // If not the default (US) then trigger onCountryChanged\n      if (this.taxInfo.country !== \"US\") {\n        this.onCountryChanged.emit();\n      }\n    });\n\n    try {\n      const taxRates = await this.apiService.getTaxRates();\n      if (taxRates) {\n        this.taxRates = taxRates.data;\n      }\n    } catch (e) {\n      this.logService.error(e);\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  get taxRate() {\n    if (this.taxRates != null) {\n      const localTaxRate = this.taxRates.find(\n        (x) => x.country === this.taxInfo.country && x.postalCode === this.taxInfo.postalCode\n      );\n      return localTaxRate?.rate ?? null;\n    }\n  }\n\n  getTaxInfoRequest(): TaxInfoUpdateRequest {\n    if (this.organizationId) {\n      const request = new OrganizationTaxInfoUpdateRequest();\n      request.taxId = this.taxInfo.taxId;\n      request.state = this.taxInfo.state;\n      request.line1 = this.taxInfo.line1;\n      request.line2 = this.taxInfo.line2;\n      request.city = this.taxInfo.city;\n      request.state = this.taxInfo.state;\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    } else {\n      const request = new TaxInfoUpdateRequest();\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    }\n  }\n\n  submitTaxInfo(): Promise<any> {\n    if (!this.hasChanged()) {\n      return new Promise<void>((resolve) => {\n        resolve();\n      });\n    }\n    const request = this.getTaxInfoRequest();\n    return this.organizationId\n      ? this.apiService.putOrganizationTaxInfo(\n          this.organizationId,\n          request as OrganizationTaxInfoUpdateRequest\n        )\n      : this.apiService.putTaxInfo(request);\n  }\n\n  changeCountry() {\n    if (this.taxInfo.country === \"US\") {\n      this.taxInfo.includeTaxId = false;\n      this.taxInfo.taxId = null;\n      this.taxInfo.line1 = null;\n      this.taxInfo.line2 = null;\n      this.taxInfo.city = null;\n      this.taxInfo.state = null;\n    }\n    this.onCountryChanged.emit();\n  }\n\n  private hasChanged(): boolean {\n    for (const key in this.taxInfo) {\n      // eslint-disable-next-line\n      if (this.pristine.hasOwnProperty(key) && this.pristine[key] !== this.taxInfo[key]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"createOrganization && selfHosted\">\n  <p>{{ \"uploadLicenseFileOrg\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_organization_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n  </form>\n</ng-container>\n<form\n  #form\n  [formGroup]=\"formGroup\"\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n  *ngIf=\"!loading && !selfHosted && this.plans\"\n  class=\"tw-pt-6\"\n>\n  <app-org-info\n    (changedBusinessOwned)=\"changedOwnedBusiness()\"\n    [formGroup]=\"formGroup\"\n    [createOrganization]=\"createOrganization\"\n    [isProvider]=\"!!providerId\"\n    [acceptingSponsorship]=\"acceptingSponsorship\"\n  ></app-org-info>\n  <h2 class=\"mt-5\">{{ \"chooseYourPlan\" | i18n }}</h2>\n  <div *ngFor=\"let selectableProduct of selectableProducts\" class=\"form-check form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"product\"\n      id=\"product{{ selectableProduct.product }}\"\n      [value]=\"selectableProduct.product\"\n      formControlName=\"product\"\n      (change)=\"changedProduct()\"\n    />\n    <label class=\"form-check-label\" for=\"product{{ selectableProduct.product }}\">\n      {{ selectableProduct.nameLocalizationKey | i18n }}\n      <small class=\"mb-1\">{{ selectableProduct.descriptionLocalizationKey | i18n: \"1\" }}</small>\n      <ng-container\n        *ngIf=\"selectableProduct.product === productTypes.Enterprise; else fullFeatureList\"\n      >\n        <small>• {{ \"includeAllTeamsFeatures\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSso\">• {{ \"includeSsoAuthentication\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasPolicies\"\n          >• {{ \"includeEnterprisePolicies\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-container>\n      <ng-template #fullFeatureList>\n        <small *ngIf=\"selectableProduct.product == productTypes.Free\"\n          >• {{ \"limitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"selectableProduct.product != productTypes.Free && selectableProduct.maxUsers\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxUsers\">• {{ \"addShareUnlimitedUsers\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.maxCollections\"\n          >• {{ \"limitedCollections\" | i18n: selectableProduct.maxCollections }}</small\n        >\n        <small *ngIf=\"selectableProduct.maxAdditionalSeats\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxAdditionalSeats }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxCollections\"\n          >• {{ \"createUnlimitedCollections\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.baseStorageGb\"\n          >• {{ \"gbEncryptedFileStorage\" | i18n: selectableProduct.baseStorageGb + \"GB\" }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasGroups\">• {{ \"controlAccessWithGroups\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasApi\">• {{ \"trackAuditLogs\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasDirectory\"\n          >• {{ \"syncUsersFromDirectory\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.usersGetPremium\">• {{ \"usersGetPremium\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.product != productTypes.Free\"\n          >• {{ \"priorityCustomerSupport\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-template>\n      <span *ngIf=\"selectableProduct.product != productTypes.Free\">\n        <ng-container *ngIf=\"selectableProduct.basePrice && !acceptingSponsorship\">\n          {{ selectableProduct.basePrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }},\n          {{ \"includesXUsers\" | i18n: selectableProduct.baseSeats }}\n          <ng-container *ngIf=\"selectableProduct.hasAdditionalSeatsOption\">\n            {{ (\"additionalUsers\" | i18n).toLowerCase() }}\n            {{ selectableProduct.seatPrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </ng-container>\n        </ng-container>\n      </span>\n      <span *ngIf=\"!selectableProduct.basePrice && selectableProduct.hasAdditionalSeatsOption\">\n        {{ \"costPerUser\" | i18n: (selectableProduct.seatPrice / 12 | currency: \"$\") }} /{{\n          \"month\" | i18n\n        }}\n      </span>\n      <span *ngIf=\"selectableProduct.product == productTypes.Free\">{{ \"freeForever\" | i18n }}</span>\n    </label>\n  </div>\n  <div *ngIf=\"formGroup.controls['product'].value !== productTypes.Free\">\n    <ng-container *ngIf=\"selectedPlan.hasAdditionalSeatsOption && !selectedPlan.baseSeats\">\n      <h2 class=\"mt-5\">{{ \"users\" | i18n }}</h2>\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <label for=\"additionalSeats\">{{ \"userSeats\" | i18n }}</label>\n          <input\n            id=\"additionalSeats\"\n            class=\"form-control\"\n            type=\"number\"\n            name=\"additionalSeats\"\n            formControlName=\"additionalSeats\"\n            placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n            required\n          />\n          <small class=\"text-muted form-text\">{{ \"userSeatsHowManyDesc\" | i18n }}</small>\n        </div>\n      </div>\n    </ng-container>\n    <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n    <div class=\"row\" *ngIf=\"selectedPlan.hasAdditionalSeatsOption && selectedPlan.baseSeats\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalSeats\">{{ \"additionalUserSeats\" | i18n }}</label>\n        <input\n          id=\"additionalSeats\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"additionalSeats\"\n          formControlName=\"additionalSeats\"\n          placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"userSeatsAdditionalDesc\"\n            | i18n: selectedPlan.baseSeats:(seatPriceMonthly(selectedPlan) | currency: \"$\")\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n        <input\n          id=\"additionalStorage\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"additionalStorageGb\"\n          formControlName=\"additionalStorage\"\n          step=\"1\"\n          placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"additionalStorageIntervalDesc\"\n            | i18n\n              : \"1 GB\"\n              : (additionalStoragePriceMonthly(selectedPlan) | currency: \"$\")\n              : (\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\" *ngIf=\"selectedPlan.hasPremiumAccessOption\">\n        <div class=\"form-check\">\n          <input\n            id=\"premiumAccess\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"premiumAccessAddon\"\n            formControlName=\"premiumAccessAddon\"\n          />\n          <label for=\"premiumAccess\" class=\"form-check-label bold\">{{\n            \"premiumAccess\" | i18n\n          }}</label>\n        </div>\n        <small class=\"text-muted form-text\">{{\n          \"premiumAccessDesc\" | i18n: (3.33 | currency: \"$\"):(\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n    <div class=\"form-check form-check-block\" *ngFor=\"let selectablePlan of selectablePlans\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"plan\"\n        id=\"interval{{ selectablePlan.type }}\"\n        [value]=\"selectablePlan.type\"\n        formControlName=\"plan\"\n      />\n      <label class=\"form-check-label\" for=\"interval{{ selectablePlan.type }}\">\n        <ng-container *ngIf=\"selectablePlan.isAnnual\">\n          {{ \"annually\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            <ng-container *ngIf=\"acceptingSponsorship; else notAcceptingSponsorship\">\n              <span style=\"text-decoration: line-through\">{{\n                selectablePlan.basePrice | currency: \"$\"\n              }}</span>\n              {{ \"freeWithSponsorship\" | i18n }}\n            </ng-container>\n            <ng-template #notAcceptingSponsorship>\n              {{ selectablePlan.basePrice | currency: \"$\" }}\n              /{{ \"year\" | i18n }}\n            </ng-template>\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ formGroup.controls[\"additionalSeats\"].value || 0 }} &times;\n            {{ selectablePlan.seatPrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} = {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{\n              \"year\" | i18n\n            }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}:\n            {{ formGroup.controls[\"additionalStorage\"].value || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"year\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\">\n            {{ \"premiumAccess\" | i18n }}:\n            {{ selectablePlan.premiumAccessOptionCost / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ 40 | currency: \"$\" }}\n            /{{ \"year\" | i18n }}\n          </small>\n        </ng-container>\n        <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n          {{ \"monthly\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ selectablePlan.basePrice | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ formGroup.controls[\"additionalSeats\"].value || 0 }} &times;\n            {{ selectablePlan.seatPrice | currency: \"$\" }} {{ \"monthAbbr\" | i18n }} =\n            {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}:\n            {{ formGroup.controls[\"additionalStorage\"].value || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n          <small\n            *ngIf=\"\n              selectablePlan.hasPremiumAccessOption &&\n              formGroup.controls['premiumAccessAddon'].value\n            \"\n          >\n            {{ \"premiumAccess\" | i18n }}:\n            {{ selectablePlan.premiumAccessOptionCost | currency: \"$\" }} {{ \"monthAbbr\" | i18n }} =\n            {{ 40 | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n        </ng-container>\n      </label>\n    </div>\n    <hr class=\"my-3\" />\n    <h2 class=\"spaced-header mb-4\">\n      {{ (createOrganization ? \"paymentInformation\" : \"billingInformation\") | i18n }}\n    </h2>\n    <small class=\"text-muted font-italic mb-3 d-block\">\n      {{ paymentDesc }}\n    </small>\n    <app-payment *ngIf=\"createOrganization\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    <div id=\"price\" class=\"my-4\">\n      <div class=\"text-muted text-sm\">\n        {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n        <br />\n        <ng-container>\n          {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n        </ng-container>\n      </div>\n      <hr class=\"my-1 col-3 ml-0\" />\n      <p class=\"text-lg\">\n        <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{\n          selectedPlanInterval | i18n\n        }}\n      </p>\n    </div>\n    <ng-container *ngIf=\"!createOrganization\">\n      <app-payment [showMethods]=\"false\"></app-payment>\n    </ng-container>\n  </div>\n  <div *ngIf=\"singleOrgPolicyBlock\" class=\"mt-4\">\n    <app-callout [type]=\"'error'\">{{ \"singleOrgBlockCreateMessage\" | i18n }}</app-callout>\n  </div>\n  <div class=\"mt-4\">\n    <bit-submit-button [loading]=\"form.loading\" [disabled]=\"!formGroup.valid\">{{\n      \"submit\" | i18n\n    }}</bit-submit-button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { OrganizationCreateRequest } from \"@bitwarden/common/models/request/organizationCreateRequest\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organizationKeysRequest\";\nimport { OrganizationUpgradeRequest } from \"@bitwarden/common/models/request/organizationUpgradeRequest\";\nimport { ProviderOrganizationCreateRequest } from \"@bitwarden/common/models/request/provider/providerOrganizationCreateRequest\";\nimport { PlanResponse } from \"@bitwarden/common/models/response/planResponse\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-organization-plans\",\n  templateUrl: \"organization-plans.component.html\",\n})\nexport class OrganizationPlansComponent implements OnInit {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxComponent: TaxInfoComponent;\n\n  @Input() organizationId: string;\n  @Input() showFree = true;\n  @Input() showCancel = false;\n  @Input() acceptingSponsorship = false;\n  @Input() product: ProductType = ProductType.Free;\n  @Input() plan: PlanType = PlanType.Free;\n  @Input() providerId: string;\n  @Output() onSuccess = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n  @Output() onTrialBillingSuccess = new EventEmitter();\n\n  loading = true;\n  selfHosted = false;\n  productTypes = ProductType;\n  formPromise: Promise<any>;\n  singleOrgPolicyBlock = false;\n  isInTrialFlow = false;\n  discount = 0;\n\n  formGroup = this.formBuilder.group({\n    name: [\"\"],\n    billingEmail: [\"\", [Validators.email]],\n    businessOwned: [false],\n    premiumAccessAddon: [false],\n    additionalStorage: [0, [Validators.min(0), Validators.max(99)]],\n    additionalSeats: [0, [Validators.min(0), Validators.max(100000)]],\n    clientOwnerEmail: [\"\", [Validators.email]],\n    businessName: [\"\"],\n    plan: [this.plan],\n    product: [this.product],\n  });\n\n  plans: PlanResponse[];\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private router: Router,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private organizationService: OrganizationService,\n    private logService: LogService,\n    private messagingService: MessagingService,\n    private formBuilder: UntypedFormBuilder\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    if (!this.selfHosted) {\n      const plans = await this.apiService.getPlans();\n      this.plans = plans.data;\n      if (this.product === ProductType.Enterprise || this.product === ProductType.Teams) {\n        this.formGroup.controls.businessOwned.setValue(true);\n      }\n    }\n\n    if (this.providerId) {\n      this.formGroup.controls.businessOwned.setValue(true);\n      this.changedOwnedBusiness();\n    }\n\n    if (!this.createOrganization || this.acceptingSponsorship) {\n      this.formGroup.controls.product.setValue(ProductType.Families);\n      this.changedProduct();\n    }\n\n    if (this.createOrganization) {\n      this.formGroup.controls.name.addValidators(Validators.required);\n      this.formGroup.controls.billingEmail.addValidators(Validators.required);\n    }\n\n    this.loading = false;\n  }\n\n  get createOrganization() {\n    return this.organizationId == null;\n  }\n\n  get selectedPlan() {\n    return this.plans.find((plan) => plan.type === this.formGroup.controls.plan.value);\n  }\n\n  get selectedPlanInterval() {\n    return this.selectedPlan.isAnnual ? \"year\" : \"month\";\n  }\n\n  get selectableProducts() {\n    let validPlans = this.plans.filter((plan) => plan.type !== PlanType.Custom);\n\n    if (this.formGroup.controls.businessOwned.value) {\n      validPlans = validPlans.filter((plan) => plan.canBeUsedByBusiness);\n    }\n\n    if (!this.showFree) {\n      validPlans = validPlans.filter((plan) => plan.product !== ProductType.Free);\n    }\n\n    validPlans = validPlans.filter(\n      (plan) =>\n        !plan.legacyYear &&\n        !plan.disabled &&\n        (plan.isAnnual || plan.product === this.productTypes.Free)\n    );\n\n    if (this.acceptingSponsorship) {\n      const familyPlan = this.plans.find((plan) => plan.type === PlanType.FamiliesAnnually);\n      this.discount = familyPlan.basePrice;\n      validPlans = [familyPlan];\n    }\n\n    return validPlans;\n  }\n\n  get selectablePlans() {\n    return this.plans?.filter(\n      (plan) =>\n        !plan.legacyYear && !plan.disabled && plan.product === this.formGroup.controls.product.value\n    );\n  }\n\n  additionalStoragePriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.additionalStoragePricePerGb;\n    }\n    return selectedPlan.additionalStoragePricePerGb / 12;\n  }\n\n  seatPriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.seatPrice;\n    }\n    return selectedPlan.seatPrice / 12;\n  }\n\n  additionalStorageTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalStorageOption) {\n      return 0;\n    }\n\n    return (\n      plan.additionalStoragePricePerGb *\n      Math.abs(this.formGroup.controls.additionalStorage.value || 0)\n    );\n  }\n\n  seatTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalSeatsOption) {\n      return 0;\n    }\n\n    return plan.seatPrice * Math.abs(this.formGroup.controls.additionalSeats.value || 0);\n  }\n\n  get subtotal() {\n    let subTotal = this.selectedPlan.basePrice;\n    if (\n      this.selectedPlan.hasAdditionalSeatsOption &&\n      this.formGroup.controls.additionalSeats.value\n    ) {\n      subTotal += this.seatTotal(this.selectedPlan);\n    }\n    if (\n      this.selectedPlan.hasAdditionalStorageOption &&\n      this.formGroup.controls.additionalStorage.value\n    ) {\n      subTotal += this.additionalStorageTotal(this.selectedPlan);\n    }\n    if (\n      this.selectedPlan.hasPremiumAccessOption &&\n      this.formGroup.controls.premiumAccessAddon.value\n    ) {\n      subTotal += this.selectedPlan.premiumAccessOptionPrice;\n    }\n    return subTotal - this.discount;\n  }\n\n  get freeTrial() {\n    return this.selectedPlan.trialPeriodDays != null;\n  }\n\n  get taxCharges() {\n    return this.taxComponent != null && this.taxComponent.taxRate != null\n      ? (this.taxComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total() {\n    return this.subtotal + this.taxCharges || 0;\n  }\n\n  get paymentDesc() {\n    if (this.acceptingSponsorship) {\n      return this.i18nService.t(\"paymentSponsored\");\n    } else if (this.freeTrial && this.createOrganization) {\n      return this.i18nService.t(\"paymentChargedWithTrial\");\n    } else {\n      return this.i18nService.t(\"paymentCharged\", this.i18nService.t(this.selectedPlanInterval));\n    }\n  }\n\n  changedProduct() {\n    this.formGroup.controls.plan.setValue(this.selectablePlans[0].type);\n    if (!this.selectedPlan.hasPremiumAccessOption) {\n      this.formGroup.controls.premiumAccessAddon.setValue(false);\n    }\n    if (!this.selectedPlan.hasAdditionalStorageOption) {\n      this.formGroup.controls.additionalStorage.setValue(0);\n    }\n    if (!this.selectedPlan.hasAdditionalSeatsOption) {\n      this.formGroup.controls.additionalSeats.setValue(0);\n    } else if (\n      !this.formGroup.controls.additionalSeats.value &&\n      !this.selectedPlan.baseSeats &&\n      this.selectedPlan.hasAdditionalSeatsOption\n    ) {\n      this.formGroup.controls.additionalSeats.setValue(1);\n    }\n  }\n\n  changedOwnedBusiness() {\n    if (!this.formGroup.controls.businessOwned.value || this.selectedPlan.canBeUsedByBusiness) {\n      return;\n    }\n    this.formGroup.controls.product.setValue(ProductType.Teams);\n    this.formGroup.controls.plan.setValue(PlanType.TeamsAnnually);\n    this.changedProduct();\n  }\n\n  changedCountry() {\n    this.paymentComponent.hideBank = this.taxComponent.taxInfo.country !== \"US\";\n    // Bank Account payments are only available for US customers\n    if (\n      this.paymentComponent.hideBank &&\n      this.paymentComponent.method === PaymentMethodType.BankAccount\n    ) {\n      this.paymentComponent.method = PaymentMethodType.Card;\n      this.paymentComponent.changeMethod();\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  async submit() {\n    this.singleOrgPolicyBlock = await this.userHasBlockingSingleOrgPolicy();\n\n    if (this.singleOrgPolicyBlock) {\n      return;\n    }\n\n    try {\n      const doSubmit = async (): Promise<string> => {\n        let orgId: string = null;\n        if (this.createOrganization) {\n          const shareKey = await this.cryptoService.makeShareKey();\n          const key = shareKey[0].encryptedString;\n          const collection = await this.cryptoService.encrypt(\n            this.i18nService.t(\"defaultCollection\"),\n            shareKey[1]\n          );\n          const collectionCt = collection.encryptedString;\n          const orgKeys = await this.cryptoService.makeKeyPair(shareKey[1]);\n\n          if (this.selfHosted) {\n            orgId = await this.createSelfHosted(key, collectionCt, orgKeys);\n          } else {\n            orgId = await this.createCloudHosted(key, collectionCt, orgKeys, shareKey[1]);\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            this.i18nService.t(\"organizationCreated\"),\n            this.i18nService.t(\"organizationReadyToGo\")\n          );\n        } else {\n          orgId = await this.updateOrganization(orgId);\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"organizationUpgraded\")\n          );\n        }\n\n        await this.apiService.refreshIdentityToken();\n        await this.syncService.fullSync(true);\n\n        if (!this.acceptingSponsorship && !this.isInTrialFlow) {\n          this.router.navigate([\"/organizations/\" + orgId]);\n        }\n\n        if (this.isInTrialFlow) {\n          this.onTrialBillingSuccess.emit({\n            orgId: orgId,\n            subLabelText: this.billingSubLabelText(),\n          });\n        }\n\n        return orgId;\n      };\n\n      this.formPromise = doSubmit();\n      const organizationId = await this.formPromise;\n      this.onSuccess.emit({ organizationId: organizationId });\n      this.messagingService.send(\"organizationCreated\", organizationId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async userHasBlockingSingleOrgPolicy() {\n    return this.policyService.policyAppliesToUser(PolicyType.SingleOrg);\n  }\n\n  private async updateOrganization(orgId: string) {\n    const request = new OrganizationUpgradeRequest();\n    request.businessName = this.formGroup.controls.businessOwned.value\n      ? this.formGroup.controls.businessName.value\n      : null;\n    request.additionalSeats = this.formGroup.controls.additionalSeats.value;\n    request.additionalStorageGb = this.formGroup.controls.additionalStorage.value;\n    request.premiumAccessAddon =\n      this.selectedPlan.hasPremiumAccessOption && this.formGroup.controls.premiumAccessAddon.value;\n    request.planType = this.selectedPlan.type;\n    request.billingAddressCountry = this.taxComponent.taxInfo.country;\n    request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n\n    // Retrieve org info to backfill pub/priv key if necessary\n    const org = await this.organizationService.get(this.organizationId);\n    if (!org.hasPublicAndPrivateKeys) {\n      const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n      const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n      request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    }\n\n    const result = await this.apiService.postOrganizationUpgrade(this.organizationId, request);\n    if (!result.success && result.paymentIntentClientSecret != null) {\n      await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n    }\n    return this.organizationId;\n  }\n\n  private async createCloudHosted(\n    key: string,\n    collectionCt: string,\n    orgKeys: [string, EncString],\n    orgKey: SymmetricCryptoKey\n  ) {\n    const request = new OrganizationCreateRequest();\n    request.key = key;\n    request.collectionName = collectionCt;\n    request.name = this.formGroup.controls.name.value;\n    request.billingEmail = this.formGroup.controls.billingEmail.value;\n    request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n\n    if (this.selectedPlan.type === PlanType.Free) {\n      request.planType = PlanType.Free;\n    } else {\n      const tokenResult = await this.paymentComponent.createPaymentToken();\n\n      request.paymentToken = tokenResult[0];\n      request.paymentMethodType = tokenResult[1];\n      request.businessName = this.formGroup.controls.businessOwned.value\n        ? this.formGroup.controls.businessName.value\n        : null;\n      request.additionalSeats = this.formGroup.controls.additionalSeats.value;\n      request.additionalStorageGb = this.formGroup.controls.additionalStorage.value;\n      request.premiumAccessAddon =\n        this.selectedPlan.hasPremiumAccessOption &&\n        this.formGroup.controls.premiumAccessAddon.value;\n      request.planType = this.selectedPlan.type;\n      request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n      request.billingAddressCountry = this.taxComponent.taxInfo.country;\n      if (this.taxComponent.taxInfo.includeTaxId) {\n        request.taxIdNumber = this.taxComponent.taxInfo.taxId;\n        request.billingAddressLine1 = this.taxComponent.taxInfo.line1;\n        request.billingAddressLine2 = this.taxComponent.taxInfo.line2;\n        request.billingAddressCity = this.taxComponent.taxInfo.city;\n        request.billingAddressState = this.taxComponent.taxInfo.state;\n      }\n    }\n\n    if (this.providerId) {\n      const providerRequest = new ProviderOrganizationCreateRequest(\n        this.formGroup.controls.clientOwnerEmail.value,\n        request\n      );\n      const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n      providerRequest.organizationCreateRequest.key = (\n        await this.cryptoService.encrypt(orgKey.key, providerKey)\n      ).encryptedString;\n      const orgId = (\n        await this.apiService.postProviderCreateOrganization(this.providerId, providerRequest)\n      ).organizationId;\n\n      return orgId;\n    } else {\n      return (await this.apiService.postOrganization(request)).id;\n    }\n  }\n\n  private async createSelfHosted(key: string, collectionCt: string, orgKeys: [string, EncString]) {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      throw new Error(this.i18nService.t(\"selectFile\"));\n    }\n\n    const fd = new FormData();\n    fd.append(\"license\", files[0]);\n    fd.append(\"key\", key);\n    fd.append(\"collectionName\", collectionCt);\n    const response = await this.apiService.postOrganizationLicense(fd);\n    const orgId = response.id;\n\n    await this.apiService.refreshIdentityToken();\n\n    // Org Keys live outside of the OrganizationLicense - add the keys to the org here\n    const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    await this.apiService.postOrganizationKeys(orgId, request);\n\n    return orgId;\n  }\n\n  private billingSubLabelText(): string {\n    const selectedPlan = this.selectedPlan;\n    const price = selectedPlan.basePrice === 0 ? selectedPlan.seatPrice : selectedPlan.basePrice;\n    let text = \"\";\n\n    if (selectedPlan.isAnnual) {\n      text += `${this.i18nService.t(\"annual\")} ($${price}/${this.i18nService.t(\"yr\")})`;\n    } else {\n      text += `${this.i18nService.t(\"monthly\")} ($${price}/${this.i18nService.t(\"monthAbbr\")})`;\n    }\n\n    return text;\n  }\n}\n","<form #form [formGroup]=\"formGroup\" [appApiAction]=\"formPromise\" (ngSubmit)=\"submit()\">\n  <div class=\"tw-container tw-mb-3\">\n    <div class=\"tw-mb-6\">\n      <h2 class=\"tw-mb-3 tw-text-base tw-font-semibold\">{{ \"billingPlanLabel\" | i18n }}</h2>\n      <div class=\"tw-mb-1 tw-items-center\" *ngFor=\"let selectablePlan of selectablePlans\">\n        <label class=\"tw- tw-block tw-text-main\" for=\"interval{{ selectablePlan.type }}\">\n          <input\n            checked\n            class=\"tw-h-4 tw-w-4 tw-align-middle\"\n            id=\"interval{{ selectablePlan.type }}\"\n            name=\"plan\"\n            type=\"radio\"\n            [value]=\"selectablePlan.type\"\n            formControlName=\"plan\"\n          />\n          <ng-container *ngIf=\"selectablePlan.isAnnual\">\n            {{ \"annual\" | i18n }} -\n            {{\n              (selectablePlan.basePrice === 0 ? selectablePlan.seatPrice : selectablePlan.basePrice)\n                | currency: \"$\"\n            }}\n            /{{ \"yr\" | i18n }}\n          </ng-container>\n          <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n            {{ \"monthly\" | i18n }} -\n            {{\n              (selectablePlan.basePrice === 0 ? selectablePlan.seatPrice : selectablePlan.basePrice)\n                | currency: \"$\"\n            }}\n            /{{ \"monthAbbr\" | i18n }}\n          </ng-container>\n        </label>\n      </div>\n    </div>\n\n    <div class=\"tw-mb-4\">\n      <h2 class=\"tw-mb-3 tw-text-base tw-font-semibold\">{{ \"paymentType\" | i18n }}</h2>\n      <app-payment [hideCredit]=\"true\" [trialFlow]=\"true\"></app-payment>\n      <app-tax-info [trialFlow]=\"true\" (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    </div>\n\n    <div class=\"tw-flex tw-space-x-2\">\n      <bit-submit-button [loading]=\"form.loading\">{{ \"startTrial\" | i18n }}</bit-submit-button>\n\n      <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"stepBack()\">Back</button>\n    </div>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { UntypedFormBuilder, FormGroup } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"../../settings/organization-plans.component\";\n\n@Component({\n  selector: \"app-billing\",\n  templateUrl: \"./billing.component.html\",\n})\nexport class BillingComponent extends OrganizationPlansComponent {\n  @Input() orgInfoForm: FormGroup;\n  @Output() previousStep = new EventEmitter();\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    router: Router,\n    syncService: SyncService,\n    policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    messagingService: MessagingService,\n    formBuilder: UntypedFormBuilder\n  ) {\n    super(\n      apiService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      router,\n      syncService,\n      policyService,\n      organizationService,\n      logService,\n      messagingService,\n      formBuilder\n    );\n  }\n\n  async ngOnInit() {\n    const additionalSeats = this.product == ProductType.Families ? 0 : 1;\n    this.formGroup.patchValue({\n      name: this.orgInfoForm.get(\"name\")?.value,\n      billingEmail: this.orgInfoForm.get(\"email\")?.value,\n      additionalSeats: additionalSeats,\n      plan: this.plan,\n      product: this.product,\n    });\n    this.isInTrialFlow = true;\n    await super.ngOnInit();\n  }\n\n  stepBack() {\n    this.previousStep.emit();\n  }\n}\n","<div *ngIf=\"accountCreateOnly\" class=\"\">\n  <h1 class=\"tw-mt-12 tw-text-center tw-text-xl\" *ngIf=\"!layout\">{{ \"createAccount\" | i18n }}</h1>\n  <div\n    class=\"tw-min-w-xl tw-m-auto tw-max-w-xl tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-8\"\n  >\n    <app-register-form\n      [queryParamEmail]=\"email\"\n      [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n    ></app-register-form>\n  </div>\n</div>\n<div *ngIf=\"!accountCreateOnly\">\n  <div\n    class=\"tw-absolute tw--z-10 tw--mt-48 tw-h-96 tw-w-full tw--skew-y-3 tw-bg-background-alt2\"\n  ></div>\n  <div class=\"tw-min-w-4xl tw-mx-auto tw-flex tw-max-w-screen-xl tw-px-4\">\n    <div class=\"tw-w-1/2\">\n      <img\n        alt=\"Bitwarden\"\n        style=\"height: 50px; width: 335px\"\n        class=\"tw-mt-6\"\n        src=\"../../images/register-layout/logo-horizontal-white.svg\"\n      />\n      <!-- This is to for illustrative purposes and content will be replaced by marketing -->\n      <div class=\"tw-pt-12\">\n        <!-- Teams Body -->\n        <app-teams-content *ngIf=\"org === 'teams'\"></app-teams-content>\n        <!-- Enterprise Body -->\n        <app-enterprise-content *ngIf=\"org === 'enterprise'\"></app-enterprise-content>\n        <!-- Families Body -->\n        <app-families-content *ngIf=\"org === 'families'\"></app-families-content>\n      </div>\n    </div>\n    <div class=\"tw-w-1/2\">\n      <div class=\"tw-pt-56\">\n        <div class=\"tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background\">\n          <div class=\"tw-flex tw-h-12 tw-w-full tw-items-center tw-rounded-t tw-bg-secondary-100\">\n            <h2 class=\"tw-mb-0 tw-pl-4 tw-text-base tw-font-bold tw-uppercase\">\n              Start your 7-Day free trial of Bitwarden for {{ org }}\n            </h2>\n          </div>\n          <app-vertical-stepper #stepper linear (selectionChange)=\"stepSelectionChange($event)\">\n            <app-vertical-step label=\"Create Account\" [editable]=\"false\" [subLabel]=\"email\">\n              <app-register-form\n                [isInTrialFlow]=\"true\"\n                (createdAccount)=\"createdAccount($event)\"\n              ></app-register-form>\n            </app-vertical-step>\n            <app-vertical-step label=\"Organization Information\" [subLabel]=\"orgInfoSubLabel\">\n              <app-org-info [nameOnly]=\"true\" [formGroup]=\"orgInfoFormGroup\"></app-org-info>\n              <button\n                bitButton\n                buttonType=\"primary\"\n                [disabled]=\"orgInfoFormGroup.get('name').hasError('required')\"\n                cdkStepperNext\n              >\n                Next\n              </button>\n            </app-vertical-step>\n            <app-vertical-step label=\"Billing\" [subLabel]=\"billingSubLabel\">\n              <app-billing\n                *ngIf=\"stepper.selectedIndex === 2\"\n                [plan]=\"plan\"\n                [product]=\"product\"\n                [orgInfoForm]=\"orgInfoFormGroup\"\n                (previousStep)=\"previousStep()\"\n                (onTrialBillingSuccess)=\"billingSuccess($event)\"\n              ></app-billing>\n            </app-vertical-step>\n            <app-vertical-step label=\"Confirmation Details\" [applyBorder]=\"false\">\n              <app-trial-confirmation-details\n                [email]=\"email\"\n                [orgLabel]=\"orgLabel\"\n              ></app-trial-confirmation-details>\n              <div class=\"tw-mb-3 tw-flex\">\n                <button bitButton buttonType=\"primary\" (click)=\"navigateToOrgVault()\">\n                  Get Started\n                </button>\n                <button\n                  bitButton\n                  buttonType=\"secondary\"\n                  (click)=\"navigateToOrgInvite()\"\n                  class=\"tw-ml-3 tw-inline-flex tw-items-center tw-px-3\"\n                >\n                  Invite Users\n                </button>\n              </div>\n            </app-vertical-step>\n          </app-vertical-stepper>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { StepperSelectionEvent } from \"@angular/cdk/stepper\";\nimport { TitleCasePipe } from \"@angular/common\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\nimport { VerticalStepperComponent } from \"./vertical-stepper/vertical-stepper.component\";\n\n@Component({\n  selector: \"app-trial\",\n  templateUrl: \"trial-initiation.component.html\",\n})\nexport class TrialInitiationComponent implements OnInit {\n  email = \"\";\n  org = \"\";\n  orgInfoSubLabel = \"\";\n  orgId = \"\";\n  orgLabel = \"\";\n  billingSubLabel = \"\";\n  plan: PlanType;\n  product: ProductType;\n  accountCreateOnly = true;\n  policies: Policy[];\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  validOrgs: string[] = [\"teams\", \"enterprise\", \"families\"];\n  @ViewChild(\"stepper\", { static: false }) verticalStepper: VerticalStepperComponent;\n\n  orgInfoFormGroup = this.formBuilder.group({\n    name: [\"\", [Validators.required]],\n    email: [\"\"],\n  });\n\n  constructor(\n    private route: ActivatedRoute,\n    protected router: Router,\n    private formBuilder: UntypedFormBuilder,\n    private titleCasePipe: TitleCasePipe,\n    private stateService: StateService,\n    private logService: LogService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n\n      if (!qParams.org) {\n        return;\n      }\n\n      if (this.validOrgs.includes(qParams.org)) {\n        this.org = qParams.org;\n      } else {\n        this.org = \"families\";\n      }\n\n      this.orgLabel = this.titleCasePipe.transform(this.org);\n      this.accountCreateOnly = false;\n\n      if (this.org === \"families\") {\n        this.plan = PlanType.FamiliesAnnually;\n        this.product = ProductType.Families;\n      } else if (this.org === \"teams\") {\n        this.plan = PlanType.TeamsAnnually;\n        this.product = ProductType.Teams;\n      } else if (this.org === \"enterprise\") {\n        this.plan = PlanType.EnterpriseAnnually;\n        this.product = ProductType.Enterprise;\n      }\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      try {\n        const policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        if (policies.data != null) {\n          const policiesData = policies.data.map((p) => new PolicyData(p));\n          this.policies = policiesData.map((p) => new Policy(p));\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (this.policies != null) {\n      this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(\n        this.policies\n      );\n    }\n  }\n\n  stepSelectionChange(event: StepperSelectionEvent) {\n    // Set org info sub label\n    if (event.selectedIndex === 1 && this.orgInfoFormGroup.controls.name.value === \"\") {\n      this.orgInfoSubLabel =\n        \"Enter your \" + this.titleCasePipe.transform(this.org) + \" organization information\";\n    } else if (event.previouslySelectedIndex === 1) {\n      this.orgInfoSubLabel = this.orgInfoFormGroup.controls.name.value;\n    }\n\n    //set billing sub label\n    if (event.selectedIndex === 2) {\n      this.billingSubLabel = this.i18nService.t(\"billingTrialSubLabel\");\n    }\n  }\n\n  createdAccount(email: string) {\n    this.email = email;\n    this.orgInfoFormGroup.get(\"email\")?.setValue(email);\n    this.verticalStepper.next();\n  }\n\n  billingSuccess(event: any) {\n    this.orgId = event?.orgId;\n    this.billingSubLabel = event?.subLabelText;\n    this.verticalStepper.next();\n  }\n\n  navigateToOrgVault() {\n    this.router.navigate([\"organizations\", this.orgId, \"vault\"]);\n  }\n\n  navigateToOrgInvite() {\n    this.router.navigate([\"organizations\", this.orgId, \"manage\", \"people\"]);\n  }\n\n  previousStep() {\n    this.verticalStepper.previous();\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function, // eslint-disable-line\n    private errorCallback: Function, // eslint-disable-line\n    private infoCallback: Function // eslint-disable-line\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n  deviceIdentifier: string;\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { WebAuthnIFrame } from \"@bitwarden/common/misc/webauthn_iframe\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { TokenRequestTwoFactor } from \"@bitwarden/common/models/request/identityToken/tokenRequestTwoFactor\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class TwoFactorComponent extends CaptchaProtectedComponent implements OnInit, OnDestroy {\n  token = \"\";\n  remember = false;\n  webAuthnReady = false;\n  webAuthnNewTab = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported = false;\n  webAuthn: WebAuthnIFrame = null;\n  title = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService,\n    protected twoFactorService: TwoFactorService,\n    protected appIdService: AppIdService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.twoFactorService.getProviders() == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.twoFactorService.getDefaultProvider(this.webAuthnSupported);\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.twoFactorService.getProviders().size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      new TokenRequestTwoFactor(this.selectedProviderType, this.token, this.remember),\n      this.captchaToken\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.handleCaptchaRequired(response)) {\n      return;\n    }\n    if (this.onSuccessfulLogin != null) {\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      request.deviceIdentifier = await this.appIdService.getAppId();\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithApiKey()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithApiKey();\n  }\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected twoFactorService: TwoFactorService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.twoFactorService.getSupportedProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://bitwarden.com/help/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"twoStepOptionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"twoStepOptionsTitle\">{{ \"twoStepOptions\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"list-group list-group-flush-2fa\">\n          <div *ngFor=\"let p of providers\" class=\"list-group-item list-group-item-action\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ p.name }}</h3>\n                {{ p.description }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-describedby]=\"p.name\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"choose(p)\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"list-group-item list-group-item-action\" (click)=\"recover()\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img class=\"recovery-code-img\" alt=\"rc logo\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ \"recoveryCodeTitle\" | i18n }}</h3>\n                {{ \"recoveryCodeDesc\" | i18n }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-descibedby]=\"'recoveryCodeTitle' | i18n\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"recover()\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"@bitwarden/angular/components/two-factor-options.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    twoFactorService: TwoFactorService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(twoFactorService, router, i18nService, platformUtilsService, window);\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"container\"\n  ngNativeValidate\n  autocomplete=\"off\"\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div\n      class=\"col-5\"\n      [ngClass]=\"{\n        'col-9':\n          selectedProviderType === providerType.Duo ||\n          selectedProviderType === providerType.OrganizationDuo\n      }\"\n    >\n      <p class=\"lead text-center mb-4\">{{ title }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Email ||\n              selectedProviderType === providerType.Authenticator\n            \"\n          >\n            <p *ngIf=\"selectedProviderType === providerType.Authenticator\">\n              {{ \"enterVerificationCodeApp\" | i18n }}\n            </p>\n            <p *ngIf=\"selectedProviderType === providerType.Email\">\n              {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n            </p>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"text\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                inputmode=\"tel\"\n                appInputVerbatim\n              />\n              <small class=\"form-text\" *ngIf=\"selectedProviderType === providerType.Email\">\n                <a\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"sendEmail(true)\"\n                  [appApiAction]=\"emailPromise\"\n                  *ngIf=\"selectedProviderType === providerType.Email\"\n                >\n                  {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n                </a>\n              </small>\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n            <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n            <picture>\n              <source srcset=\"../../images/yubikey.avif\" type=\"image/avif\" />\n              <source srcset=\"../../images/yubikey.webp\" type=\"image/webp\" />\n              <img src=\"../../images/yubikey.jpg\" class=\"rounded img-fluid mb-3\" alt=\"\" />\n            </picture>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"password\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn\">\n            <div id=\"web-authn-frame\" class=\"mb-3\">\n              <iframe id=\"webauthn_iframe\" [allow]=\"webAuthnAllow\"></iframe>\n            </div>\n          </ng-container>\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Duo ||\n              selectedProviderType === providerType.OrganizationDuo\n            \"\n          >\n            <div id=\"duo-frame\" class=\"mb-3\">\n              <iframe id=\"duo_iframe\"></iframe>\n            </div>\n          </ng-container>\n          <i\n            class=\"bwi bwi-spinner text-muted bwi-spin pull-right\"\n            title=\"{{ 'loading' | i18n }}\"\n            *ngIf=\"form.loading && selectedProviderType === providerType.WebAuthn\"\n            aria-hidden=\"true\"\n          ></i>\n          <div class=\"form-check\" *ngIf=\"selectedProviderType != null\">\n            <input\n              id=\"remember\"\n              type=\"checkbox\"\n              name=\"Remember\"\n              class=\"form-check-input\"\n              [(ngModel)]=\"remember\"\n            />\n            <label for=\"remember\" class=\"form-check-label\">{{ \"rememberMe\" | i18n }}</label>\n          </div>\n          <ng-container *ngIf=\"selectedProviderType == null\">\n            <p>{{ \"noTwoStepProviders\" | i18n }}</p>\n            <p>{{ \"noTwoStepProviders2\" | i18n }}</p>\n          </ng-container>\n          <hr />\n          <div [hidden]=\"!showCaptcha()\">\n            <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n          </div>\n          <div class=\"d-flex mb-3\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n              *ngIf=\"\n                selectedProviderType != null &&\n                selectedProviderType !== providerType.Duo &&\n                selectedProviderType !== providerType.OrganizationDuo &&\n                selectedProviderType !== providerType.WebAuthn\n              \"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n          <div class=\"text-center\">\n            <a href=\"#\" appStopClick (click)=\"anotherMethod()\">{{\n              \"useAnotherTwoStepMethod\" | i18n\n            }}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<ng-template #twoFactorOptions></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"@bitwarden/angular/components/two-factor.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { RouterService } from \"../core\";\n\nimport { TwoFactorOptionsComponent } from \"./two-factor-options.component\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  @ViewChild(\"twoFactorOptions\", { read: ViewContainerRef, static: true })\n  twoFactorOptionsModal: ViewContainerRef;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    private modalService: ModalService,\n    route: ActivatedRoute,\n    logService: LogService,\n    twoFactorService: TwoFactorService,\n    appIdService: AppIdService,\n    private routerService: RouterService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService,\n      twoFactorService,\n      appIdService\n    );\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n  }\n\n  async anotherMethod() {\n    const [modal] = await this.modalService.openViewRef(\n      TwoFactorOptionsComponent,\n      this.twoFactorOptionsModal,\n      (comp) => {\n        comp.onProviderSelected.subscribe(async (provider: TwoFactorProviderType) => {\n          modal.close();\n          this.selectedProviderType = provider;\n          await this.init();\n        });\n        comp.onRecoverSelected.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async goAfterLogIn() {\n    const previousUrl = this.routerService.getPreviousUrl();\n    if (previousUrl) {\n      this.router.navigateByUrl(previousUrl);\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class PasswordRequest extends SecretVerificationRequest {\n  newMasterPasswordHash: string;\n  masterPasswordHint: string;\n  key: string;\n}\n","import { Directive } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { PasswordRequest } from \"@bitwarden/common/models/request/passwordRequest\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdatePasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n  currentMasterPassword: string;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    protected router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async cancel() {\n    await this.stateService.setOrganizationInvitation(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n\n    const secret: Verification = {\n      type: VerificationType.MasterPassword,\n      secret: this.currentMasterPassword,\n    };\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return false;\n    }\n\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create Request\n      const request = new PasswordRequest();\n      request.masterPasswordHash = await this.cryptoService.hashPassword(\n        this.currentMasterPassword,\n        null\n      );\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.key = encKey[1].encryptedString;\n\n      // Update user's password\n      this.apiService.postPassword(request);\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"masterPasswordInvalidWarning\" | i18n }} </app-callout>\n          <app-callout\n            type=\"info\"\n            [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n            *ngIf=\"enforcedPolicyOptions\"\n          ></app-callout>\n\n          <form\n            #form\n            (ngSubmit)=\"submit()\"\n            [appApiAction]=\"formPromise\"\n            ngNativeValidate\n            autocomplete=\"off\"\n          >\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"currentMasterPassword\"\n                    type=\"password\"\n                    name=\"MasterPasswordHash\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"currentMasterPassword\"\n                    required\n                    appInputVerbatim\n                  />\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"newMasterPassword\"\n                    type=\"password\"\n                    name=\"NewMasterPasswordHash\"\n                    class=\"form-control mb-1\"\n                    [(ngModel)]=\"masterPassword\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                  <app-password-strength\n                    [password]=\"masterPassword\"\n                    [email]=\"email\"\n                    [showText]=\"true\"\n                  ></app-password-strength>\n                </div>\n              </div>\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"masterPasswordRetype\"\n                    type=\"password\"\n                    name=\"MasterPasswordRetype\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"masterPasswordRetype\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n              <i\n                class=\"fa fa-spinner fa-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"changeMasterPassword\" | i18n }}</span>\n            </button>\n            <button (click)=\"cancel()\" type=\"button\" class=\"btn btn-outline-secondary\">\n              <span>{{ \"cancel\" | i18n }}</span>\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { UpdatePasswordComponent as BaseUpdatePasswordComponent } from \"@bitwarden/angular/components/update-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\n\n@Component({\n  selector: \"app-update-password\",\n  templateUrl: \"update-password.component.html\",\n})\nexport class UpdatePasswordComponent extends BaseUpdatePasswordComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      userVerificationService,\n      logService\n    );\n  }\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { OrganizationUserResetPasswordRequest } from \"./organizationUserResetPasswordRequest\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { UpdateTempPasswordRequest } from \"@bitwarden/common/models/request/updateTempPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfIterations\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"updateMasterPasswordWarning\" | i18n }} </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength\n                  [password]=\"masterPassword\"\n                  [email]=\"email\"\n                  [showText]=\"true\"\n                >\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"@bitwarden/angular/components/update-temp-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    syncService: SyncService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","export class VerifyEmailRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VerifyEmailRequest } from \"@bitwarden/common/models/request/verifyEmailRequest\";\n\n@Component({\n  selector: \"app-verify-email-token\",\n  templateUrl: \"verify-email-token.component.html\",\n})\nexport class VerifyEmailTokenComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null) {\n        try {\n          await this.apiService.postAccountVerifyEmailToken(\n            new VerifyEmailRequest(qParams.userId, qParams.token)\n          );\n          if (await this.stateService.getIsAuthenticated()) {\n            await this.apiService.refreshIdentityToken();\n          }\n          this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailVerified\"));\n          this.router.navigate([\"/\"]);\n          return;\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"emailVerifiedFailed\"));\n      this.router.navigate([\"/\"]);\n    });\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","export class VerifyDeleteRecoverRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { VerifyDeleteRecoverRequest } from \"@bitwarden/common/models/request/verifyDeleteRecoverRequest\";\n\n@Component({\n  selector: \"app-verify-recover-delete\",\n  templateUrl: \"verify-recover-delete.component.html\",\n})\nexport class VerifyRecoverDeleteComponent implements OnInit {\n  email: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private token: string;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null && qParams.email != null) {\n        this.userId = qParams.userId;\n        this.token = qParams.token;\n        this.email = qParams.email;\n      } else {\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    try {\n      const request = new VerifyDeleteRecoverRequest(this.userId, this.token);\n      this.formPromise = this.apiService.postAccountRecoverDeleteToken(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n          <p class=\"text-center\">\n            <strong>{{ email }}</strong>\n          </p>\n          <p>{{ \"deleteRecoverConfirmDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-danger btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"deleteAccount\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HomeGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return this.router.createUrlTree([\"/login\"], { queryParams: route.queryParams });\n    }\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"/lock\"], { queryParams: route.queryParams });\n    }\n    return this.router.createUrlTree([\"/vault\"], { queryParams: route.queryParams });\n  }\n}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-frontend-layout\",\n  templateUrl: \"frontend-layout.component.html\",\n})\nexport class FrontendLayoutComponent implements OnInit, OnDestroy {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n    document.body.classList.add(\"layout_frontend\");\n  }\n\n  ngOnDestroy() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<router-outlet></router-outlet>\n<div class=\"container my-5 text-muted text-center\">\n  &copy; {{ year }} Bitwarden Inc. <br />\n  {{ \"versionNumber\" | i18n: version }}\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-footer\",\n  templateUrl: \"footer.component.html\",\n})\nexport class FooterComponent implements OnInit {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n  }\n}\n","<div class=\"container footer text-muted\">\n  <div class=\"row\">\n    <div class=\"col\">&copy; {{ year }} Bitwarden Inc.</div>\n    <div class=\"col text-center\"></div>\n    <div class=\"col text-right\">\n      {{ \"versionNumber\" | i18n: version }}\n    </div>\n  </div>\n</div>\n","import { Permissions } from \"@bitwarden/common/enums/permissions\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nconst permissions = {\n  manage: [\n    Permissions.CreateNewCollections,\n    Permissions.EditAnyCollection,\n    Permissions.DeleteAnyCollection,\n    Permissions.EditAssignedCollections,\n    Permissions.DeleteAssignedCollections,\n    Permissions.AccessEventLogs,\n    Permissions.ManageGroups,\n    Permissions.ManageUsers,\n    Permissions.ManagePolicies,\n    Permissions.ManageSso,\n    Permissions.ManageScim,\n  ],\n  tools: [Permissions.AccessImportExport, Permissions.AccessReports],\n  settings: [Permissions.ManageOrganization],\n};\n\nexport class NavigationPermissionsService {\n  static getPermissions(route: keyof typeof permissions | \"admin\") {\n    if (route === \"admin\") {\n      return Object.values(permissions).reduce((previous, current) => previous.concat(current), []);\n    }\n\n    return permissions[route];\n  }\n\n  static canAccessAdmin(organization: Organization): boolean {\n    return (\n      this.canAccessTools(organization) ||\n      this.canAccessSettings(organization) ||\n      this.canAccessManage(organization)\n    );\n  }\n\n  static canAccessTools(organization: Organization): boolean {\n    return organization.hasAnyPermission(NavigationPermissionsService.getPermissions(\"tools\"));\n  }\n\n  static canAccessSettings(organization: Organization): boolean {\n    return organization.hasAnyPermission(NavigationPermissionsService.getPermissions(\"settings\"));\n  }\n\n  static canAccessManage(organization: Organization): boolean {\n    return organization.hasAnyPermission(NavigationPermissionsService.getPermissions(\"manage\"));\n  }\n}\n","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-avatar\",\n  template:\n    '<img *ngIf=\"src\" [src]=\"sanitizer.bypassSecurityTrustResourceUrl(src)\" title=\"{{data}}\" ' +\n    \"[ngClass]=\\\"{'rounded-circle': circle}\\\">\",\n})\nexport class AvatarComponent implements OnChanges, OnInit {\n  @Input() data: string;\n  @Input() email: string;\n  @Input() size = 45;\n  @Input() charCount = 2;\n  @Input() textColor = \"#ffffff\";\n  @Input() fontSize = 20;\n  @Input() fontWeight = 300;\n  @Input() dynamic = false;\n  @Input() circle = false;\n\n  src: string;\n\n  constructor(\n    public sanitizer: DomSanitizer,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    if (!this.dynamic) {\n      this.generate();\n    }\n  }\n\n  ngOnChanges() {\n    if (this.dynamic) {\n      this.generate();\n    }\n  }\n\n  private async generate() {\n    const enableGravatars = await this.stateService.getEnableGravitars();\n    if (enableGravatars && this.email != null) {\n      const hashBytes = await this.cryptoFunctionService.hash(\n        this.email.toLowerCase().trim(),\n        \"md5\"\n      );\n      const hash = Utils.fromBufferToHex(hashBytes).toLowerCase();\n      this.src = \"https://www.gravatar.com/avatar/\" + hash + \"?s=\" + this.size + \"&r=pg&d=retro\";\n    } else {\n      let chars: string = null;\n      const upperData = this.data.toUpperCase();\n\n      if (this.charCount > 1) {\n        chars = this.getFirstLetters(upperData, this.charCount);\n      }\n      if (chars == null) {\n        chars = this.unicodeSafeSubstring(upperData, this.charCount);\n      }\n\n      // If the chars contain an emoji, only show it.\n      if (chars.match(Utils.regexpEmojiPresentation)) {\n        chars = chars.match(Utils.regexpEmojiPresentation)[0];\n      }\n\n      const charObj = this.getCharText(chars);\n      const color = this.stringToColor(upperData);\n      const svg = this.getSvg(this.size, color);\n      svg.appendChild(charObj);\n      const html = window.document.createElement(\"div\").appendChild(svg).outerHTML;\n      const svgHtml = window.btoa(unescape(encodeURIComponent(html)));\n      this.src = \"data:image/svg+xml;base64,\" + svgHtml;\n    }\n  }\n\n  private stringToColor(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return color;\n  }\n\n  private getFirstLetters(data: string, count: number): string {\n    const parts = data.split(\" \");\n    if (parts.length > 1) {\n      let text = \"\";\n      for (let i = 0; i < count; i++) {\n        text += this.unicodeSafeSubstring(parts[i], 1);\n      }\n      return text;\n    }\n    return null;\n  }\n\n  private getSvg(size: number, color: string): HTMLElement {\n    const svgTag = window.document.createElement(\"svg\");\n    svgTag.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    svgTag.setAttribute(\"pointer-events\", \"none\");\n    svgTag.setAttribute(\"width\", size.toString());\n    svgTag.setAttribute(\"height\", size.toString());\n    svgTag.style.backgroundColor = color;\n    svgTag.style.width = size + \"px\";\n    svgTag.style.height = size + \"px\";\n    return svgTag;\n  }\n\n  private getCharText(character: string): HTMLElement {\n    const textTag = window.document.createElement(\"text\");\n    textTag.setAttribute(\"text-anchor\", \"middle\");\n    textTag.setAttribute(\"y\", \"50%\");\n    textTag.setAttribute(\"x\", \"50%\");\n    textTag.setAttribute(\"dy\", \"0.35em\");\n    textTag.setAttribute(\"pointer-events\", \"auto\");\n    textTag.setAttribute(\"fill\", this.textColor);\n    textTag.setAttribute(\n      \"font-family\",\n      '\"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,' +\n        'sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"'\n    );\n    textTag.textContent = character;\n    textTag.style.fontWeight = this.fontWeight.toString();\n    textTag.style.fontSize = this.fontSize + \"px\";\n    return textTag;\n  }\n\n  private unicodeSafeSubstring(str: string, count: number) {\n    const characters = str.match(/./gu);\n    return characters != null ? characters.slice(0, count).join(\"\") : \"\";\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","<nav class=\"navbar navbar-expand navbar-dark\" [ngClass]=\"{ 'nav-background-alt': selfHosted }\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\" appA11yTitle=\"{{ 'pageTitle' | i18n: 'Bitwarden' }}\">\n      <i class=\"bwi bwi-shield\" aria-hidden=\"true\"></i>\n    </a>\n    <div class=\"collapse navbar-collapse\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/vault\">{{ \"vaults\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/sends\">{{ \"send\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/tools\">{{ \"tools\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/reports\">{{ \"reports\" | i18n }}</a>\n        </li>\n        <li *ngIf=\"organizations.length >= 1\" class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" [routerLink]=\"['/organizations', organizations[0].id]\">{{\n            \"organizations\" | i18n\n          }}</a>\n        </li>\n        <ng-container *ngIf=\"providers.length >= 1\">\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length == 1\">\n            <a class=\"nav-link\" [routerLink]=\"['/providers', providers[0].id]\">{{\n              \"provider\" | i18n\n            }}</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length > 1\">\n            <a class=\"nav-link\" routerLink=\"/providers\">{{ \"provider\" | i18n }}</a>\n          </li>\n        </ng-container>\n      </ul>\n    </div>\n    <ul class=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\">\n      <li>\n        <button\n          [bitMenuTriggerFor]=\"accountMenu\"\n          class=\"tw-border-0 tw-bg-transparent tw-text-alt2 tw-opacity-70 hover:tw-opacity-90\"\n        >\n          <i class=\"bwi bwi-user-circle bwi-lg\" aria-hidden=\"true\"></i>\n          <i class=\"bwi bwi-caret-down bwi-sm\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu class=\"dropdown-menu\" #accountMenu>\n          <div class=\"tw-flex tw-min-w-[200px] tw-max-w-[300px] tw-flex-col\">\n            <div\n              class=\"tw-flex tw-items-center tw-py-1 tw-px-4 tw-leading-tight tw-text-info\"\n              *ngIf=\"name\"\n              appStopProp\n            >\n              <app-avatar\n                [data]=\"name\"\n                [email]=\"email\"\n                size=\"25\"\n                fontSize=\"14\"\n                [circle]=\"true\"\n              ></app-avatar>\n              <div class=\"tw-ml-2 tw-block tw-overflow-hidden tw-whitespace-nowrap\">\n                <span>{{ \"loggedInAs\" | i18n }}</span>\n                <small class=\"tw-block tw-overflow-hidden tw-whitespace-nowrap tw-text-muted\">{{\n                  name\n                }}</small>\n              </div>\n            </div>\n            <bit-menu-divider></bit-menu-divider>\n            <a bitMenuItem routerLink=\"/settings/account\">\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"accountSettings\" | i18n }}\n            </a>\n            <a bitMenuItem href=\"https://bitwarden.com/help/\" target=\"_blank\" rel=\"noopener\">\n              <i class=\"bwi bwi-fw bwi-question-circle\" aria-hidden=\"true\"></i>\n              {{ \"getHelp\" | i18n }}\n            </a>\n            <a bitMenuItem href=\"https://bitwarden.com/download/\" target=\"_blank\" rel=\"noopener\">\n              <i class=\"bwi bwi-fw bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"getApps\" | i18n }}\n            </a>\n            <bit-menu-divider></bit-menu-divider>\n            <button bitMenuItem type=\"button\" (click)=\"lock()\">\n              <i class=\"bwi bwi-fw bwi-lock\" aria-hidden=\"true\"></i>\n              {{ \"lockNow\" | i18n }}\n            </button>\n            <button bitMenuItem type=\"button\" (click)=\"logOut()\">\n              <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </bit-menu>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, NgZone, OnInit } from \"@angular/core\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\nimport { NavigationPermissionsService as OrgNavigationPermissionsService } from \"../organizations/services/navigation-permissions.service\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"navbar.component.html\",\n})\nexport class NavbarComponent implements OnInit {\n  selfHosted = false;\n  name: string;\n  email: string;\n  providers: Provider[] = [];\n  organizations: Organization[] = [];\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private providerService: ProviderService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService,\n    private i18nService: I18nService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone\n  ) {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.name = await this.tokenService.getName();\n    this.email = await this.tokenService.getEmail();\n    if (this.name == null || this.name.trim() === \"\") {\n      this.name = this.email;\n    }\n\n    // Ensure providers and organizations are loaded\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n    this.providers = await this.providerService.getAll();\n\n    this.organizations = await this.buildOrganizations();\n\n    this.broadcasterService.subscribe(this.constructor.name, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"organizationCreated\":\n            if (this.organizations.length < 1) {\n              this.organizations = await this.buildOrganizations();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  async buildOrganizations() {\n    const allOrgs = await this.organizationService.getAll();\n    return allOrgs\n      .filter((org) => OrgNavigationPermissionsService.canAccessAdmin(org))\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  lock() {\n    this.messagingService.send(\"lockVault\");\n  }\n\n  logOut() {\n    this.messagingService.send(\"logout\");\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-user-layout\",\n  templateUrl: \"user-layout.component.html\",\n})\nexport class UserLayoutComponent implements OnInit {\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","<div *ngIf=\"loaded && activeOrganization != null\" class=\"tw-flex\">\n  <button\n    class=\"tw-flex tw-items-center tw-border-none tw-bg-background-alt\"\n    type=\"button\"\n    id=\"pickerButton\"\n    [appA11yTitle]=\"'organizationPicker' | i18n\"\n    [bitMenuTriggerFor]=\"orgPickerMenu\"\n  >\n    <app-avatar\n      [data]=\"activeOrganization.name\"\n      size=\"45\"\n      [circle]=\"true\"\n      [dynamic]=\"true\"\n    ></app-avatar>\n    <div class=\"tw-flex\">\n      <div class=\"org-name tw-ml-3\">\n        <span>{{ activeOrganization.name }}</span>\n        <small class=\"tw-text-muted\">{{ \"organization\" | i18n }}</small>\n      </div>\n      <div class=\"tw-ml-3\">\n        <i class=\"bwi bwi-angle-down tw-text-main\" aria-hidden=\"true\"></i>\n      </div>\n    </div>\n  </button>\n  <div>\n    <div\n      class=\"tw-ml-3 tw-rounded tw-border tw-border-solid tw-border-danger-500 tw-text-danger\"\n      *ngIf=\"!activeOrganization.enabled\"\n    >\n      <div class=\"tw-py-2 tw-px-5\">\n        <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n        {{ \"organizationIsDisabled\" | i18n }}\n      </div>\n    </div>\n    <div\n      class=\"tw-ml-3 tw-rounded tw-border tw-border-solid tw-border-info-500 tw-text-info\"\n      *ngIf=\"activeOrganization.isProviderUser\"\n    >\n      <div class=\"tw-py-2 tw-px-5\">\n        <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n        {{ \"accessingUsingProvider\" | i18n: activeOrganization.providerName }}\n      </div>\n    </div>\n  </div>\n\n  <bit-menu #orgPickerMenu>\n    <ul aria-labelledby=\"pickerButton\" class=\"tw-m-0 tw-p-0\">\n      <li *ngFor=\"let org of organizations\" class=\"tw-flex tw-list-none tw-flex-col\" role=\"none\">\n        <a bitMenuItem [routerLink]=\"['/organizations', org.id]\">\n          <i\n            class=\"bwi bwi-check mr-2\"\n            [ngClass]=\"org.id === activeOrganization.id ? 'visible' : 'invisible'\"\n          >\n            <span class=\"tw-sr-only\">{{ \"currentOrganization\" | i18n }}</span>\n          </i>\n          {{ org.name }}\n        </a>\n      </li>\n      <bit-menu-divider></bit-menu-divider>\n      <li class=\"tw-list-none\" role=\"none\">\n        <a bitMenuItem routerLink=\"/create-organization\">\n          <i class=\"bwi bwi-plus mr-2\"></i>\n          {{ \"newOrganization\" | i18n }}</a\n        >\n      </li>\n    </ul>\n  </bit-menu>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { NavigationPermissionsService } from \"../organizations/services/navigation-permissions.service\";\n\n@Component({\n  selector: \"app-organization-switcher\",\n  templateUrl: \"organization-switcher.component.html\",\n})\nexport class OrganizationSwitcherComponent implements OnInit {\n  constructor(private organizationService: OrganizationService, private i18nService: I18nService) {}\n\n  @Input() activeOrganization: Organization = null;\n  organizations: Organization[] = [];\n\n  loaded = false;\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    const orgs = await this.organizationService.getAll();\n    this.organizations = orgs\n      .filter((org) => NavigationPermissionsService.canAccessAdmin(org))\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    this.loaded = true;\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav\" *ngIf=\"organization\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <app-organization-switcher\n        class=\"my-auto pl-1\"\n        [activeOrganization]=\"organization\"\n      ></app-organization-switcher>\n      <ul class=\"nav nav-tabs\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"vault\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-lock\" aria-hidden=\"true\"></i>\n            {{ \"vault\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showManageTab\">\n          <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-sliders\" aria-hidden=\"true\"></i>\n            {{ \"manage\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showToolsTab\">\n          <a class=\"nav-link\" [routerLink]=\"toolsRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-wrench\" aria-hidden=\"true\"></i>\n            {{ \"tools\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showSettingsTab\">\n          <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-cogs\" aria-hidden=\"true\"></i>\n            {{ \"settings\" | i18n }}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { NavigationPermissionsService } from \"../services/navigation-permissions.service\";\n\nconst BroadcasterSubscriptionId = \"OrganizationLayoutComponent\";\n\n@Component({\n  selector: \"app-organization-layout\",\n  templateUrl: \"organization-layout.component.html\",\n})\nexport class OrganizationLayoutComponent implements OnInit, OnDestroy {\n  organization: Organization;\n  businessTokenPromise: Promise<any>;\n  private organizationId: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone\n  ) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    this.route.params.subscribe(async (params: any) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"updatedOrgLicense\":\n            await this.load();\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n  }\n\n  get showManageTab(): boolean {\n    return NavigationPermissionsService.canAccessManage(this.organization);\n  }\n\n  get showToolsTab(): boolean {\n    return NavigationPermissionsService.canAccessTools(this.organization);\n  }\n\n  get showSettingsTab(): boolean {\n    return NavigationPermissionsService.canAccessSettings(this.organization);\n  }\n\n  get toolsRoute(): string {\n    return this.organization.canAccessImportExport\n      ? \"tools/import\"\n      : \"tools/exposed-passwords-report\";\n  }\n\n  get manageRoute(): string {\n    let route: string;\n    switch (true) {\n      case this.organization.canManageUsers:\n        route = \"manage/people\";\n        break;\n      case this.organization.canViewAssignedCollections || this.organization.canViewAllCollections:\n        route = \"manage/collections\";\n        break;\n      case this.organization.canManageGroups:\n        route = \"manage/groups\";\n        break;\n      case this.organization.canManagePolicies:\n        route = \"manage/policies\";\n        break;\n      case this.organization.canManageSso:\n        route = \"manage/sso\";\n        break;\n      case this.organization.canManageScim:\n        route = \"manage/scim\";\n        break;\n      case this.organization.canAccessEventLogs:\n        route = \"manage/events\";\n        break;\n    }\n    return route;\n  }\n}\n","export class SelectionReadOnlyRequest {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(id: string, readOnly: boolean, hidePasswords: boolean) {\n    this.id = id;\n    this.readOnly = readOnly;\n    this.hidePasswords = hidePasswords;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"collectionAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <div class=\"form-group\">\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"name\"\n            required\n            appAutofocus\n            [disabled]=\"!this.canSave\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"externalId\">{{ \"externalId\" | i18n }}</label>\n          <input\n            id=\"externalId\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"ExternalId\"\n            [(ngModel)]=\"externalId\"\n            [disabled]=\"!this.canSave\"\n          />\n          <small class=\"form-text text-muted\">{{ \"externalIdDesc\" | i18n }}</small>\n        </div>\n        <ng-container *ngIf=\"accessGroups\">\n          <h3 class=\"mt-4 d-flex mb-0\">\n            {{ \"groupAccess\" | i18n }}\n            <div class=\"ml-auto\" *ngIf=\"groups && groups.length && this.canSave\">\n              <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"selectAll\" | i18n }}\n              </button>\n              <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"unselectAll\" | i18n }}\n              </button>\n            </div>\n          </h3>\n          <div *ngIf=\"!groups || !groups.length\">\n            {{ \"noGroupsInList\" | i18n }}\n          </div>\n          <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let g of groups; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.checked\"\n                    name=\"Groups[{{ i }}].Checked\"\n                    [disabled]=\"g.accessAll || !this.canSave\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(g)\">\n                  {{ g.name }}\n                  <ng-container *ngIf=\"g.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter text-muted bwi-fw\"\n                      title=\"{{ 'groupAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"groupAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.hidePasswords\"\n                    name=\"Groups[{{ i }}].HidePasswords\"\n                    [disabled]=\"!g.checked || g.accessAll || !this.canSave\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.readOnly\"\n                    name=\"Groups[{{ i }}].ReadOnly\"\n                    [disabled]=\"!g.checked || g.accessAll || !this.canSave\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"this.canSave\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"this.canDelete\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { CollectionRequest } from \"@bitwarden/common/models/request/collectionRequest\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selectionReadOnlyRequest\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/groupResponse\";\n\n@Component({\n  selector: \"app-collection-add-edit\",\n  templateUrl: \"collection-add-edit.component.html\",\n})\nexport class CollectionAddEditComponent implements OnInit {\n  @Input() collectionId: string;\n  @Input() organizationId: string;\n  @Input() canSave: boolean;\n  @Input() canDelete: boolean;\n  @Output() onSavedCollection = new EventEmitter();\n  @Output() onDeletedCollection = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  accessGroups = false;\n  title: string;\n  name: string;\n  externalId: string;\n  groups: GroupResponse[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  private orgKey: SymmetricCryptoKey;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    const organization = await this.organizationService.get(this.organizationId);\n    this.accessGroups = organization.useGroups;\n    this.editMode = this.loading = this.collectionId != null;\n    if (this.accessGroups) {\n      const groupsResponse = await this.apiService.getGroups(this.organizationId);\n      this.groups = groupsResponse.data\n        .map((r) => r)\n        .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    }\n    this.orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editCollection\");\n      try {\n        const collection = await this.apiService.getCollectionDetails(\n          this.organizationId,\n          this.collectionId\n        );\n        this.name = await this.cryptoService.decryptToUtf8(\n          new EncString(collection.name),\n          this.orgKey\n        );\n        this.externalId = collection.externalId;\n        if (collection.groups != null && this.groups.length > 0) {\n          collection.groups.forEach((s) => {\n            const group = this.groups.filter((g) => !g.accessAll && g.id === s.id);\n            if (group != null && group.length > 0) {\n              (group[0] as any).checked = true;\n              (group[0] as any).readOnly = s.readOnly;\n              (group[0] as any).hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"addCollection\");\n    }\n\n    this.groups.forEach((g) => {\n      if (g.accessAll) {\n        (g as any).checked = true;\n      }\n    });\n\n    this.loading = false;\n  }\n\n  check(g: GroupResponse, select?: boolean) {\n    if (g.accessAll) {\n      return;\n    }\n    (g as any).checked = select == null ? !(g as any).checked : select;\n    if (!(g as any).checked) {\n      (g as any).readOnly = false;\n      (g as any).hidePasswords = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.groups.forEach((g) => this.check(g, select));\n  }\n\n  async submit() {\n    if (this.orgKey == null) {\n      throw new Error(\"No encryption key for this organization.\");\n    }\n\n    const request = new CollectionRequest();\n    request.name = (await this.cryptoService.encrypt(this.name, this.orgKey)).encryptedString;\n    request.externalId = this.externalId;\n    request.groups = this.groups\n      .filter((g) => (g as any).checked && !g.accessAll)\n      .map(\n        (g) => new SelectionReadOnlyRequest(g.id, !!(g as any).readOnly, !!(g as any).hidePasswords)\n      );\n\n    try {\n      if (this.editMode) {\n        this.formPromise = this.apiService.putCollection(\n          this.organizationId,\n          this.collectionId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.postCollection(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedCollectionId\" : \"createdCollectionId\", this.name)\n      );\n      this.onSavedCollection.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteCollection(this.organizationId, this.collectionId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", this.name)\n      );\n      this.onDeletedCollection.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAccessTitle\">\n          {{ \"userAccess\" | i18n }}\n          <small>{{ entityName }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading || !users\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <cdk-virtual-scroll-viewport\n        itemSize=\"46\"\n        minBufferPx=\"600\"\n        maxBufferPx=\"1200\"\n        [style]=\"scrollViewportStyle\"\n      >\n        <div class=\"modal-body\" *ngIf=\"!loading && users && searchedUsers\">\n          <div class=\"d-flex\">\n            <div class=\"mr-3\">\n              <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n              <input\n                type=\"search\"\n                class=\"form-control form-control-sm\"\n                id=\"search\"\n                placeholder=\"{{ 'search' | i18n }}\"\n                name=\"SearchText\"\n                [(ngModel)]=\"searchText\"\n              />\n            </div>\n            <div class=\"btn-group btn-group-sm\" role=\"group\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{ active: !showSelected }\"\n                (click)=\"filterSelected(false)\"\n              >\n                {{ \"all\" | i18n }}\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{ active: showSelected }\"\n                (click)=\"filterSelected(true)\"\n              >\n                {{ \"selected\" | i18n }}\n                <span bitBadge badgeType=\"info\" *ngIf=\"selectedCount\">{{ selectedCount }}</span>\n              </button>\n            </div>\n          </div>\n          <ng-container *ngIf=\"!searchedUsers.length\">\n            <hr />\n            {{ \"noUsersInList\" | i18n }}\n          </ng-container>\n          <table class=\"table table-hover table-list mb-0\" [hidden]=\"!searchedUsers.length\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th *ngIf=\"entity === 'collection'\">&nbsp;</th>\n                <th>{{ \"userType\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"hidePasswords\" | i18n }}\n                </th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"readOnly\" | i18n }}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *cdkVirtualFor=\"let u of searchedUsers\" class=\"\">\n                <td class=\"table-list-checkbox\" (click)=\"check(u)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.checked\"\n                    name=\"{{ u.id.substr(0, 8) }}_Checked\"\n                    [disabled]=\"entity === 'collection' && u.accessAll\"\n                    (change)=\"selectedChanged(u)\"\n                    appStopProp\n                  />\n                </td>\n                <td width=\"30\" (click)=\"check(u)\">\n                  <app-avatar\n                    [data]=\"u | userName\"\n                    [email]=\"u.email\"\n                    size=\"25\"\n                    [circle]=\"true\"\n                    [fontSize]=\"14\"\n                  >\n                  </app-avatar>\n                </td>\n                <td>\n                  {{ u.email }}\n                  <span\n                    bitBadge\n                    badgeType=\"secondary\"\n                    *ngIf=\"u.status === organizationUserStatusType.Invited\"\n                    >{{ \"invited\" | i18n }}</span\n                  >\n                  <span\n                    bitBadge\n                    badgeType=\"warning\"\n                    *ngIf=\"u.status === organizationUserStatusType.Accepted\"\n                    >{{ \"accepted\" | i18n }}</span\n                  >\n                  <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n                </td>\n                <td *ngIf=\"entity === 'collection'\">\n                  <ng-container *ngIf=\"u.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter\"\n                      title=\"{{ 'userAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"userAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td>\n                  <span *ngIf=\"u.type === organizationUserType.Owner\">{{ \"owner\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Admin\">{{ \"admin\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Manager\">{{\n                    \"manager\" | i18n\n                  }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.User\">{{ \"user\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Custom\">{{ \"custom\" | i18n }}</span>\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.hidePasswords\"\n                    name=\"{{ u.id.substr(0, 8) }}_HidePasswords\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.readOnly\"\n                    name=\"{{ u.id.substr(0, 8) }}_ReadOnly\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </cdk-virtual-scroll-viewport>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selectionReadOnlyRequest\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/models/response/organizationUserResponse\";\n\n@Component({\n  selector: \"app-entity-users\",\n  templateUrl: \"entity-users.component.html\",\n  providers: [SearchPipe],\n})\nexport class EntityUsersComponent implements OnInit {\n  @Input() entity: \"group\" | \"collection\";\n  @Input() entityId: string;\n  @Input() entityName: string;\n  @Input() organizationId: string;\n  @Output() onEditedUsers = new EventEmitter();\n\n  organizationUserType = OrganizationUserType;\n  organizationUserStatusType = OrganizationUserStatusType;\n\n  showSelected = false;\n  loading = true;\n  formPromise: Promise<any>;\n  selectedCount = 0;\n  searchText: string;\n\n  private allUsers: OrganizationUserUserDetailsResponse[] = [];\n\n  constructor(\n    private search: SearchPipe,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.loadUsers();\n    this.loading = false;\n  }\n\n  get users() {\n    if (this.showSelected) {\n      return this.allUsers.filter((u) => (u as any).checked);\n    } else {\n      return this.allUsers;\n    }\n  }\n\n  get searchedUsers() {\n    return this.search.transform(this.users, this.searchText, \"name\", \"email\", \"id\");\n  }\n\n  get scrollViewportStyle() {\n    return `min-height: 120px; height: ${120 + this.searchedUsers.length * 46}px`;\n  }\n\n  async loadUsers() {\n    const users = await this.apiService.getOrganizationUsers(this.organizationId);\n    this.allUsers = users.data.map((r) => r).sort(Utils.getSortFunction(this.i18nService, \"email\"));\n    if (this.entity === \"group\") {\n      const response = await this.apiService.getGroupUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => u.id === s);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n          }\n        });\n      }\n    } else if (this.entity === \"collection\") {\n      const response = await this.apiService.getCollectionUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => !u.accessAll && u.id === s.id);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n            (user[0] as any).readOnly = s.readOnly;\n            (user[0] as any).hidePasswords = s.hidePasswords;\n          }\n        });\n      }\n    }\n\n    this.allUsers.forEach((u) => {\n      if (this.entity === \"collection\" && u.accessAll) {\n        (u as any).checked = true;\n      }\n      if ((u as any).checked) {\n        this.selectedCount++;\n      }\n    });\n  }\n\n  check(u: OrganizationUserUserDetailsResponse) {\n    if (this.entity === \"collection\" && u.accessAll) {\n      return;\n    }\n    (u as any).checked = !(u as any).checked;\n    this.selectedChanged(u);\n  }\n\n  selectedChanged(u: OrganizationUserUserDetailsResponse) {\n    if ((u as any).checked) {\n      this.selectedCount++;\n    } else {\n      if (this.entity === \"collection\") {\n        (u as any).readOnly = false;\n        (u as any).hidePasswords = false;\n      }\n      this.selectedCount--;\n    }\n  }\n\n  filterSelected(showSelected: boolean) {\n    this.showSelected = showSelected;\n  }\n\n  async submit() {\n    try {\n      if (this.entity === \"group\") {\n        const selections = this.users.filter((u) => (u as any).checked).map((u) => u.id);\n        this.formPromise = this.apiService.putGroupUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      } else {\n        const selections = this.users\n          .filter((u) => (u as any).checked && !u.accessAll)\n          .map(\n            (u) =>\n              new SelectionReadOnlyRequest(u.id, !!(u as any).readOnly, !!(u as any).hidePasswords)\n          );\n        this.formPromise = this.apiService.putCollectionUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedUsers\"));\n      this.onEditedUsers.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"collections\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button\n      type=\"button\"\n      *ngIf=\"this.canCreate\"\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"add()\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newCollection\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging()\n      ? pagedCollections\n      : (collections | search: searchText:'name':'id')) as searchedCollections\n  \"\n>\n  <p *ngIf=\"!searchedCollections.length\">{{ \"noCollectionsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedCollections.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of searchedCollections\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown *ngIf=\"this.canEdit(c) || this.canDelete(c)\">\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canEdit(c)\"\n                (click)=\"users(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item text-danger\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canDelete(c)\"\n                (click)=\"delete(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport {\n  CollectionDetailsResponse,\n  CollectionResponse,\n} from \"@bitwarden/common/models/response/collectionResponse\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\nimport { CollectionAddEditComponent } from \"./collection-add-edit.component\";\nimport { EntityUsersComponent } from \"./entity-users.component\";\n\n@Component({\n  selector: \"app-org-manage-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organization: Organization;\n  canCreate = false;\n  organizationId: string;\n  collections: CollectionView[];\n  assignedCollections: CollectionView[];\n  pagedCollections: CollectionView[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedCollectionsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private collectionService: CollectionService,\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    this.canCreate = this.organization.canCreateNewCollections;\n\n    const decryptCollections = async (r: ListResponse<CollectionResponse>) => {\n      const collections = r.data\n        .filter((c) => c.organizationId === this.organizationId)\n        .map((d) => new Collection(new CollectionData(d as CollectionDetailsResponse)));\n      return await this.collectionService.decryptMany(collections);\n    };\n\n    if (this.organization.canViewAssignedCollections) {\n      const response = await this.apiService.getUserCollections();\n      this.assignedCollections = await decryptCollections(response);\n    }\n\n    if (this.organization.canViewAllCollections) {\n      const response = await this.apiService.getCollections(this.organizationId);\n      this.collections = await decryptCollections(response);\n    } else {\n      this.collections = this.assignedCollections;\n    }\n\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.collections || this.collections.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCollections.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedCollectionsCount > this.pageSize) {\n      pagedSize = this.pagedCollectionsCount;\n    }\n    if (this.collections.length > pagedLength) {\n      this.pagedCollections = this.pagedCollections.concat(\n        this.collections.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCollectionsCount = this.pagedCollections.length;\n    this.didScroll = this.pagedCollections.length > this.pageSize;\n  }\n\n  async edit(collection: CollectionView) {\n    const canCreate = collection == null && this.canCreate;\n    const canEdit = collection != null && this.canEdit(collection);\n    const canDelete = collection != null && this.canDelete(collection);\n\n    if (!(canCreate || canEdit || canDelete)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      CollectionAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.collectionId = collection != null ? collection.id : null;\n        comp.canSave = canCreate || canEdit;\n        comp.canDelete = canDelete;\n        comp.onSavedCollection.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedCollection.subscribe(() => {\n          modal.close();\n          this.removeCollection(collection);\n        });\n      }\n    );\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(collection: CollectionView) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      collection.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteCollection(this.organizationId, collection.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", collection.name)\n      );\n      this.removeCollection(collection);\n    } catch (e) {\n      this.logService.error(e);\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n    }\n  }\n\n  async users(collection: CollectionView) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"collection\";\n        comp.entityId = collection.id;\n        comp.entityName = collection.name;\n\n        comp.onEditedUsers.subscribe(() => {\n          this.load();\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedCollections = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.collections && this.collections.length > this.pageSize;\n  }\n\n  canEdit(collection: CollectionView) {\n    if (this.organization.canEditAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canEditAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  canDelete(collection: CollectionView) {\n    if (this.organization.canDeleteAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canDeleteAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  private removeCollection(collection: CollectionView) {\n    const index = this.collections.indexOf(collection);\n    if (index > -1) {\n      this.collections.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventView {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: EventType;\n  installationId: string;\n\n  constructor(data: Required<EventView>) {\n    this.message = data.message;\n    this.humanReadableMessage = data.humanReadableMessage;\n    this.appIcon = data.appIcon;\n    this.appName = data.appName;\n    this.userId = data.userId;\n    this.userName = data.userName;\n    this.userEmail = data.userEmail;\n    this.date = data.date;\n    this.ip = data.ip;\n    this.type = data.type;\n    this.installationId = data.installationId;\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { EventView } from \"@bitwarden/common/models/view/eventView\";\n\nimport { EventService } from \"../core\";\n\n@Directive()\nexport abstract class BaseEventsComponent {\n  loading = true;\n  loaded = false;\n  events: EventView[];\n  start: string;\n  end: string;\n  dirtyDates = true;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  exportPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  abstract readonly exportFileName: string;\n\n  constructor(\n    protected eventService: EventService,\n    protected i18nService: I18nService,\n    protected exportService: ExportService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected fileDownloadService: FileDownloadService\n  ) {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n  }\n\n  async exportEvents() {\n    if (this.appApiPromiseUnfulfilled() || this.dirtyDates) {\n      return;\n    }\n\n    this.loading = true;\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    try {\n      this.exportPromise = this.export(dates[0], dates[1]);\n\n      await this.exportPromise;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    this.exportPromise = null;\n    this.loading = false;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.appApiPromiseUnfulfilled()) {\n      return;\n    }\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    this.loading = true;\n    let events: EventView[] = [];\n    try {\n      const promise = this.loadAndParseEvents(\n        dates[0],\n        dates[1],\n        clearExisting ? null : this.continuationToken\n      );\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      const result = await promise;\n      this.continuationToken = result.continuationToken;\n      events = result.events;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.dirtyDates = false;\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n\n  protected abstract requestEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ): Promise<ListResponse<EventResponse>>;\n  protected abstract getUserName(r: EventResponse, userId: string): { name: string; email: string };\n\n  protected async loadAndParseEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ) {\n    const response = await this.requestEvents(startDate, endDate, continuationToken);\n\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user = this.getUserName(r, userId);\n        const userName = user != null ? user.name : this.i18nService.t(\"unknown\");\n\n        return new EventView({\n          message: eventInfo.message,\n          humanReadableMessage: eventInfo.humanReadableMessage,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: r.installationId != null ? `Installation: ${r.installationId}` : userName,\n          userEmail: user != null ? user.email : \"\",\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n          installationId: r.installationId,\n        });\n      })\n    );\n    return { continuationToken: response.continuationToken, events: events };\n  }\n\n  protected parseDates() {\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return null;\n    }\n    return dates;\n  }\n\n  protected appApiPromiseUnfulfilled() {\n    return this.refreshPromise != null || this.morePromise != null || this.exportPromise != null;\n  }\n\n  private async export(start: string, end: string) {\n    let continuationToken = this.continuationToken;\n    let events = [].concat(this.events);\n\n    while (continuationToken != null) {\n      const result = await this.loadAndParseEvents(start, end, continuationToken);\n      continuationToken = result.continuationToken;\n      events = events.concat(result.events);\n    }\n\n    const data = await this.exportService.getEventExport(events);\n    const fileName = this.exportService.getFileName(this.exportFileName, \"csv\");\n    this.fileDownloadService.download({\n      fileName,\n      blobData: data,\n      blobOptions: { type: \"text/plain\" },\n    });\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"eventLogs\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"form-inline\">\n      <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"start\"\n        placeholder=\"{{ 'startDate' | i18n }}\"\n        [(ngModel)]=\"start\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n      <span class=\"mx-2\">-</span>\n      <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"end\"\n        placeholder=\"{{ 'endDate' | i18n }}\"\n        [(ngModel)]=\"end\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n    </div>\n    <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary ml-3\"\n        (click)=\"loadEvents(true)\"\n        [disabled]=\"loaded && refreshForm.loading\"\n      >\n        <i\n          class=\"bwi bwi-refresh bwi-fw\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{ 'bwi-spin': loaded && refreshForm.loading }\"\n        ></i>\n        {{ \"refresh\" | i18n }}\n      </button>\n    </form>\n    <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\"\n        [ngClass]=\"{ loading: exportForm.loading }\"\n        (click)=\"exportEvents()\"\n        [disabled]=\"(loaded && exportForm.loading) || dirtyDates\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i>\n        <span>{{ \"export\" | i18n }}</span>\n      </button>\n    </form>\n  </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n  <p *ngIf=\"!events || !events.length\">{{ \"noEventsInList\" | i18n }}</p>\n  <table class=\"table table-hover\" *ngIf=\"events && events.length\">\n    <thead>\n      <tr>\n        <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n        <th class=\"border-top-0\" width=\"40\">\n          <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n        </th>\n        <th class=\"border-top-0\" width=\"150\">{{ \"user\" | i18n }}</th>\n        <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of events\">\n        <td>{{ e.date | date: \"medium\" }}</td>\n        <td>\n          <i\n            class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n            title=\"{{ e.appName }}, {{ e.ip }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n        </td>\n        <td>\n          <span title=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n        </td>\n        <td [innerHTML]=\"e.message\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <button\n    #moreBtn\n    [appApiAction]=\"morePromise\"\n    type=\"button\"\n    class=\"btn btn-block btn-link btn-submit\"\n    (click)=\"loadEvents(false)\"\n    [disabled]=\"loaded && moreBtn.loading\"\n    *ngIf=\"continuationToken\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"loadMore\" | i18n }}</span>\n  </button>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\n\nimport { BaseEventsComponent } from \"../../common/base.events.component\";\nimport { EventService } from \"../../core\";\n\n@Component({\n  selector: \"app-org-events\",\n  templateUrl: \"events.component.html\",\n})\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n  exportFileName = \"org-events\";\n  organizationId: string;\n  organization: Organization;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    eventService: EventService,\n    i18nService: I18nService,\n    exportService: ExportService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    logService: LogService,\n    private userNamePipe: UserNamePipe,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      eventService,\n      i18nService,\n      exportService,\n      platformUtilsService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.organization = await this.organizationService.get(this.organizationId);\n      if (this.organization == null || !this.organization.useEvents) {\n        this.router.navigate([\"/organizations\", this.organizationId]);\n        return;\n      }\n\n      await this.load();\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getOrganizationUsers(this.organizationId);\n    response.data.forEach((u) => {\n      const name = this.userNamePipe.transform(u);\n      this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n    });\n\n    if (this.organization.providerId != null) {\n      try {\n        const provider = await this.providerService.get(this.organization.providerId);\n        if (\n          provider != null &&\n          (await this.providerService.get(this.organization.providerId)).canManageUsers\n        ) {\n          const providerUsersResponse = await this.apiService.getProviderUsers(\n            this.organization.providerId\n          );\n          providerUsersResponse.data.forEach((u) => {\n            const name = this.userNamePipe.transform(u);\n            this.orgUsersUserIdMap.set(u.userId, {\n              name: `${name} (${this.organization.providerName})`,\n              email: u.email,\n            });\n          });\n        }\n      } catch (e) {\n        this.logService.warning(e);\n      }\n    }\n\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n    return this.apiService.getEventsOrganization(\n      this.organizationId,\n      startDate,\n      endDate,\n      continuationToken\n    );\n  }\n\n  protected getUserName(r: EventResponse, userId: string) {\n    if (userId == null) {\n      return null;\n    }\n\n    if (this.orgUsersUserIdMap.has(userId)) {\n      return this.orgUsersUserIdMap.get(userId);\n    }\n\n    if (r.providerId != null && r.providerId === this.organization.providerId) {\n      return {\n        name: this.organization.providerName,\n      };\n    }\n\n    return null;\n  }\n}\n","import { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class GroupRequest {\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n  collections: SelectionReadOnlyRequest[] = [];\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"groupAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <div class=\"form-group\">\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"name\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"externalId\">{{ \"externalId\" | i18n }}</label>\n          <input\n            id=\"externalId\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"ExternalId\"\n            [(ngModel)]=\"externalId\"\n          />\n          <small class=\"form-text text-muted\">{{ \"externalIdDesc\" | i18n }}</small>\n        </div>\n        <h3 class=\"mt-4 d-flex\">\n          <div class=\"mb-2\">\n            {{ \"accessControl\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/user-types-access-control/#access-control\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </h3>\n        <div class=\"form-group\" [ngClass]=\"{ 'mb-0': access !== 'selected' }\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessAll\"\n              value=\"all\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessAll\">\n              {{ \"groupAccessAllItems\" | i18n }}\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessSelected\"\n              value=\"selected\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessSelected\">\n              {{ \"groupAccessSelectedCollections\" | i18n }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"access === 'selected'\">\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(c)\">\n                  {{ c.name }}\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.hidePasswords\"\n                    name=\"Collection[{{ i }}].HidePasswords\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.readOnly\"\n                    name=\"Collection[{{ i }}].ReadOnly\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              aria-hidden=\"true\"\n              title=\"{{ 'loading' | i18n }}\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { GroupRequest } from \"@bitwarden/common/models/request/groupRequest\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selectionReadOnlyRequest\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collectionResponse\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-group-add-edit\",\n  templateUrl: \"group-add-edit.component.html\",\n})\nexport class GroupAddEditComponent implements OnInit {\n  @Input() groupId: string;\n  @Input() organizationId: string;\n  @Output() onSavedGroup = new EventEmitter();\n  @Output() onDeletedGroup = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  name: string;\n  externalId: string;\n  access: \"all\" | \"selected\" = \"selected\";\n  collections: CollectionView[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.groupId != null;\n    await this.loadCollections();\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editGroup\");\n      try {\n        const group = await this.apiService.getGroupDetails(this.organizationId, this.groupId);\n        this.access = group.accessAll ? \"all\" : \"selected\";\n        this.name = group.name;\n        this.externalId = group.externalId;\n        if (group.collections != null && this.collections != null) {\n          group.collections.forEach((s) => {\n            const collection = this.collections.filter((c) => c.id === s.id);\n            if (collection != null && collection.length > 0) {\n              (collection[0] as any).checked = true;\n              collection[0].readOnly = s.readOnly;\n              collection[0].hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"addGroup\");\n    }\n\n    this.loading = false;\n  }\n\n  async loadCollections() {\n    const response = await this.apiService.getCollections(this.organizationId);\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    this.collections = await this.collectionService.decryptMany(collections);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n    if (!(c as any).checked) {\n      c.readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n\n  async submit() {\n    const request = new GroupRequest();\n    request.name = this.name;\n    request.externalId = this.externalId;\n    request.accessAll = this.access === \"all\";\n    if (!request.accessAll) {\n      request.collections = this.collections\n        .filter((c) => (c as any).checked)\n        .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n    }\n\n    try {\n      if (this.editMode) {\n        this.formPromise = this.apiService.putGroup(this.organizationId, this.groupId, request);\n      } else {\n        this.formPromise = this.apiService.postGroup(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedGroupId\" : \"createdGroupId\", this.name)\n      );\n      this.onSavedGroup.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteGroup(this.organizationId, this.groupId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", this.name)\n      );\n      this.onDeletedGroup.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"groups\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newGroup\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedGroups : (groups | search: searchText:'name':'id')) as searchedGroups\n  \"\n>\n  <p *ngIf=\"!searchedGroups.length\">{{ \"noGroupsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedGroups.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let g of searchedGroups\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(g)\">{{ g.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"users(g)\">\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(g)\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/groupResponse\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\nimport { GroupAddEditComponent } from \"./group-add-edit.component\";\n\n@Component({\n  selector: \"app-org-groups\",\n  templateUrl: \"groups.component.html\",\n})\nexport class GroupsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  groups: GroupResponse[];\n  pagedGroups: GroupResponse[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedGroupsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private searchService: SearchService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      const organization = await this.organizationService.get(this.organizationId);\n      if (organization == null || !organization.useGroups) {\n        this.router.navigate([\"/organizations\", this.organizationId]);\n        return;\n      }\n      await this.load();\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getGroups(this.organizationId);\n    const groups = response.data != null && response.data.length > 0 ? response.data : [];\n    groups.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.groups = groups;\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.groups || this.groups.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedGroups.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedGroupsCount > this.pageSize) {\n      pagedSize = this.pagedGroupsCount;\n    }\n    if (this.groups.length > pagedLength) {\n      this.pagedGroups = this.pagedGroups.concat(\n        this.groups.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedGroupsCount = this.pagedGroups.length;\n    this.didScroll = this.pagedGroups.length > this.pageSize;\n  }\n\n  async edit(group: GroupResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      GroupAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.groupId = group != null ? group.id : null;\n        comp.onSavedGroup.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedGroup.subscribe(() => {\n          modal.close();\n          this.removeGroup(group);\n        });\n      }\n    );\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(group: GroupResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      group.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteGroup(this.organizationId, group.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", group.name)\n      );\n      this.removeGroup(group);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async users(group: GroupResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"group\";\n        comp.entityId = group.id;\n        comp.entityName = group.name;\n\n        comp.onEditedUsers.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedGroups = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.groups && this.groups.length > this.pageSize;\n  }\n\n  private removeGroup(group: GroupResponse) {\n    const index = this.groups.indexOf(group);\n    if (index > -1) {\n      this.groups.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"organization\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"people\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageUsers\"\n          >\n            {{ \"people\" | i18n }}\n          </a>\n          <a\n            routerLink=\"collections\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canViewAllCollections || organization.canViewAssignedCollections\"\n          >\n            {{ \"collections\" | i18n }}\n          </a>\n          <a\n            routerLink=\"groups\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageGroups && accessGroups\"\n          >\n            {{ \"groups\" | i18n }}\n          </a>\n          <a\n            routerLink=\"policies\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManagePolicies && accessPolicies\"\n          >\n            {{ \"policies\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sso\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageSso && accessSso\"\n          >\n            {{ \"singleSignOn\" | i18n }}\n          </a>\n          <a\n            routerLink=\"scim\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageScim && accessScim\"\n          >\n            {{ \"scim\" | i18n }}\n          </a>\n          <a\n            routerLink=\"events\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canAccessEventLogs && accessEvents\"\n          >\n            {{ \"eventLogs\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { flagEnabled } from \"../../../utils/flags\";\n\n@Component({\n  selector: \"app-org-manage\",\n  templateUrl: \"manage.component.html\",\n})\nexport class ManageComponent implements OnInit {\n  organization: Organization;\n  accessPolicies = false;\n  accessGroups = false;\n  accessEvents = false;\n  accessSso = false;\n  accessScim = false;\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.accessPolicies = this.organization.usePolicies;\n      this.accessSso = this.organization.useSso;\n      this.accessEvents = this.organization.useEvents;\n      this.accessGroups = this.organization.useGroups;\n\n      if (flagEnabled(\"scim\")) {\n        this.accessScim = this.organization.useScim;\n      } else {\n        this.accessScim = false;\n      }\n    });\n  }\n}\n","export class OrganizationUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class OrganizationUserConfirmRequest {\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-user-confirm\",\n  templateUrl: \"user-confirm.component.html\",\n})\nexport class UserConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() publicKey: Uint8Array;\n  @Output() onConfirmedUser = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      if (this.publicKey != null) {\n        const fingerprint = await this.cryptoService.getFingerprint(\n          this.userId,\n          this.publicKey.buffer\n        );\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    this.onConfirmedUser.emit();\n  }\n}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/models/response/organizationUserResponse\";\nimport { ProviderUserUserDetailsResponse } from \"@bitwarden/common/models/response/provider/providerUserResponse\";\n\nimport { UserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\n\ntype StatusType = OrganizationUserStatusType | ProviderUserStatusType;\n\nconst MaxCheckedCount = 500;\n\n@Directive()\nexport abstract class BasePeopleComponent<\n  UserType extends ProviderUserUserDetailsResponse | OrganizationUserUserDetailsResponse\n> {\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  get allCount() {\n    return this.activeUsers != null ? this.activeUsers.length : 0;\n  }\n\n  get invitedCount() {\n    return this.statusMap.has(this.userStatusType.Invited)\n      ? this.statusMap.get(this.userStatusType.Invited).length\n      : 0;\n  }\n\n  get acceptedCount() {\n    return this.statusMap.has(this.userStatusType.Accepted)\n      ? this.statusMap.get(this.userStatusType.Accepted).length\n      : 0;\n  }\n\n  get confirmedCount() {\n    return this.statusMap.has(this.userStatusType.Confirmed)\n      ? this.statusMap.get(this.userStatusType.Confirmed).length\n      : 0;\n  }\n\n  get revokedCount() {\n    return this.statusMap.has(this.userStatusType.Revoked)\n      ? this.statusMap.get(this.userStatusType.Revoked).length\n      : 0;\n  }\n\n  get showConfirmUsers(): boolean {\n    return (\n      this.activeUsers != null &&\n      this.statusMap != null &&\n      this.activeUsers.length > 1 &&\n      this.confirmedCount > 0 &&\n      this.confirmedCount < 3 &&\n      this.acceptedCount > 0\n    );\n  }\n\n  get showBulkConfirmUsers(): boolean {\n    return this.acceptedCount > 0;\n  }\n\n  abstract userType: typeof OrganizationUserType | typeof ProviderUserType;\n  abstract userStatusType: typeof OrganizationUserStatusType | typeof ProviderUserStatusType;\n\n  loading = true;\n  statusMap = new Map<StatusType, UserType[]>();\n  status: StatusType;\n  users: UserType[] = [];\n  pagedUsers: UserType[] = [];\n  searchText: string;\n  actionPromise: Promise<any>;\n\n  protected allUsers: UserType[] = [];\n  protected activeUsers: UserType[] = [];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedUsersCount = 0;\n\n  constructor(\n    protected apiService: ApiService,\n    private searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cryptoService: CryptoService,\n    protected validationService: ValidationService,\n    protected modalService: ModalService,\n    private logService: LogService,\n    private searchPipe: SearchPipe,\n    protected userNamePipe: UserNamePipe,\n    protected stateService: StateService\n  ) {}\n\n  abstract edit(user: UserType): void;\n  abstract getUsers(): Promise<ListResponse<UserType>>;\n  abstract deleteUser(id: string): Promise<any>;\n  abstract revokeUser(id: string): Promise<any>;\n  abstract restoreUser(id: string): Promise<any>;\n  abstract reinviteUser(id: string): Promise<any>;\n  abstract confirmUser(user: UserType, publicKey: Uint8Array): Promise<any>;\n\n  async load() {\n    const response = await this.getUsers();\n    this.statusMap.clear();\n    this.activeUsers = [];\n    for (const status of Utils.iterateEnum(this.userStatusType)) {\n      this.statusMap.set(status, []);\n    }\n\n    this.allUsers = response.data != null && response.data.length > 0 ? response.data : [];\n    this.allUsers.sort(Utils.getSortFunction(this.i18nService, \"email\"));\n    this.allUsers.forEach((u) => {\n      if (!this.statusMap.has(u.status)) {\n        this.statusMap.set(u.status, [u]);\n      } else {\n        this.statusMap.get(u.status).push(u);\n      }\n      if (u.status !== this.userStatusType.Revoked) {\n        this.activeUsers.push(u);\n      }\n    });\n    this.filter(this.status);\n    this.loading = false;\n  }\n\n  filter(status: StatusType) {\n    this.status = status;\n    if (this.status != null) {\n      this.users = this.statusMap.get(this.status);\n    } else {\n      this.users = this.activeUsers;\n    }\n    // Reset checkbox selecton\n    this.selectAll(false);\n    this.resetPaging();\n  }\n\n  loadMore() {\n    if (!this.users || this.users.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedUsers.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedUsersCount > this.pageSize) {\n      pagedSize = this.pagedUsersCount;\n    }\n    if (this.users.length > pagedLength) {\n      this.pagedUsers = this.pagedUsers.concat(\n        this.users.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedUsersCount = this.pagedUsers.length;\n    this.didScroll = this.pagedUsers.length > this.pageSize;\n  }\n\n  checkUser(user: OrganizationUserUserDetailsResponse, select?: boolean) {\n    (user as any).checked = select == null ? !(user as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n\n    const filteredUsers = this.searchPipe.transform(\n      this.users,\n      this.searchText,\n      \"name\",\n      \"email\",\n      \"id\"\n    );\n\n    const selectCount =\n      select && filteredUsers.length > MaxCheckedCount ? MaxCheckedCount : filteredUsers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkUser(filteredUsers[i], select);\n    }\n  }\n\n  async resetPaging() {\n    this.pagedUsers = [];\n    this.loadMore();\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  protected async removeUserConfirmationDialog(user: UserType) {\n    return this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(user),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n  }\n\n  async remove(user: UserType) {\n    const confirmed = await this.removeUserConfirmationDialog(user);\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.deleteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(user))\n      );\n      this.removeUser(user);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async revoke(user: UserType) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.revokeWarningMessage(),\n      this.i18nService.t(\"revokeUserId\", this.userNamePipe.transform(user)),\n      this.i18nService.t(\"revokeAccess\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.revokeUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"revokedUserId\", this.userNamePipe.transform(user))\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async restore(user: UserType) {\n    this.actionPromise = this.restoreUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"restoredUserId\", this.userNamePipe.transform(user))\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async reinvite(user: UserType) {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    this.actionPromise = this.reinviteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"hasBeenReinvited\", this.userNamePipe.transform(user))\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async confirm(user: UserType) {\n    function updateUser(self: BasePeopleComponent<UserType>) {\n      user.status = self.userStatusType.Confirmed;\n      const mapIndex = self.statusMap.get(self.userStatusType.Accepted).indexOf(user);\n      if (mapIndex > -1) {\n        self.statusMap.get(self.userStatusType.Accepted).splice(mapIndex, 1);\n        self.statusMap.get(self.userStatusType.Confirmed).push(user);\n      }\n    }\n\n    const confirmUser = async (publicKey: Uint8Array) => {\n      try {\n        this.actionPromise = this.confirmUser(user, publicKey);\n        await this.actionPromise;\n        updateUser(this);\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(user))\n        );\n      } catch (e) {\n        this.validationService.showError(e);\n        throw e;\n      } finally {\n        this.actionPromise = null;\n      }\n    };\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(user.userId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n      if (autoConfirm == null || !autoConfirm) {\n        const [modal] = await this.modalService.openViewRef(\n          UserConfirmComponent,\n          this.confirmModalRef,\n          (comp) => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.userId = user != null ? user.userId : null;\n            comp.publicKey = publicKey;\n            comp.onConfirmedUser.subscribe(async () => {\n              try {\n                comp.formPromise = confirmUser(publicKey);\n                await comp.formPromise;\n                modal.close();\n              } catch (e) {\n                this.logService.error(e);\n              }\n            });\n          }\n        );\n        return;\n      }\n\n      try {\n        const fingerprint = await this.cryptoService.getFingerprint(user.userId, publicKey.buffer);\n        this.logService.info(`User's fingerprint: ${fingerprint.join(\"-\")}`);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      await confirmUser(publicKey);\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.users && this.users.length > this.pageSize;\n  }\n\n  protected revokeWarningMessage(): string {\n    return this.i18nService.t(\"revokeUserConfirmation\");\n  }\n\n  protected getCheckedUsers() {\n    return this.users.filter((u) => (u as any).checked);\n  }\n\n  protected removeUser(user: UserType) {\n    let index = this.users.indexOf(user);\n    if (index > -1) {\n      this.users.splice(index, 1);\n      this.resetPaging();\n    }\n    if (this.statusMap.has(user.status)) {\n      index = this.statusMap.get(user.status).indexOf(user);\n      if (index > -1) {\n        this.statusMap.get(user.status).splice(index, 1);\n      }\n    }\n  }\n}\n","type OrganizationUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class OrganizationUserBulkConfirmRequest {\n  keys: OrganizationUserBulkRequestEntry[];\n\n  constructor(keys: OrganizationUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"confirmUsers\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <app-callout type=\"danger\" *ngIf=\"filteredUsers.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!loading && !done\">\n          <p>\n            {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n            <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n              {{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"fingerprint\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ fingerprints.get(user.id) }}\n              </td>\n            </tr>\n            <tr *ngFor=\"let user of excludedUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"!loading && done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { OrganizationUserBulkConfirmRequest } from \"@bitwarden/common/models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organizationUserBulkRequest\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-confirm\",\n  templateUrl: \"bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent implements OnInit {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  excludedUsers: BulkUserDetails[];\n  filteredUsers: BulkUserDetails[];\n  publicKeys: Map<string, Uint8Array> = new Map();\n  fingerprints: Map<string, string> = new Map();\n  statuses: Map<string, string> = new Map();\n\n  loading = true;\n  done = false;\n  error: string;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    this.excludedUsers = this.users.filter((u) => !this.isAccepted(u));\n    this.filteredUsers = this.users.filter((u) => this.isAccepted(u));\n\n    if (this.filteredUsers.length <= 0) {\n      this.done = true;\n    }\n\n    const response = await this.getPublicKeys();\n\n    for (const entry of response.data) {\n      const publicKey = Utils.fromB64ToArray(entry.key);\n      const fingerprint = await this.cryptoService.getFingerprint(entry.userId, publicKey.buffer);\n      if (fingerprint != null) {\n        this.publicKeys.set(entry.id, publicKey);\n        this.fingerprints.set(entry.id, fingerprint.join(\"-\"));\n      }\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.loading = true;\n    try {\n      const key = await this.getCryptoKey();\n      const userIdsWithKeys: any[] = [];\n      for (const user of this.filteredUsers) {\n        const publicKey = this.publicKeys.get(user.id);\n        if (publicKey == null) {\n          continue;\n        }\n        const encryptedKey = await this.cryptoService.rsaEncrypt(key.key, publicKey.buffer);\n        userIdsWithKeys.push({\n          id: user.id,\n          key: encryptedKey.encryptedString,\n        });\n      }\n      const response = await this.postConfirmRequest(userIdsWithKeys);\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkConfirmMessage\");\n        this.statuses.set(entry.id, error);\n      });\n\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n    this.loading = false;\n  }\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === OrganizationUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    const request = new OrganizationUserBulkRequest(this.filteredUsers.map((user) => user.id));\n    return await this.apiService.postOrganizationUsersPublicKey(this.organizationId, request);\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getOrgKey(this.organizationId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new OrganizationUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.apiService.postOrganizationUserBulkConfirm(this.organizationId, request);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"removeUsers\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"danger\" *ngIf=\"users.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!done\">\n          <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error\">\n            {{ removeUsersWarning }}\n          </app-callout>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done && users.length > 0\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"removeUsers\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organizationUserBulkRequest\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-remove\",\n  templateUrl: \"bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  statuses: Map<string, string> = new Map();\n\n  loading = false;\n  done = false;\n  error: string;\n\n  constructor(protected apiService: ApiService, protected i18nService: I18nService) {}\n\n  async submit() {\n    this.loading = true;\n    try {\n      const response = await this.deleteUsers();\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkRemovedMessage\");\n        this.statuses.set(entry.id, error);\n      });\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n\n    this.loading = false;\n  }\n\n  protected async deleteUsers() {\n    const request = new OrganizationUserBulkRequest(this.users.map((user) => user.id));\n    return await this.apiService.deleteManyOrganizationUsers(this.organizationId, request);\n  }\n\n  protected get removeUsersWarning() {\n    return this.i18nService.t(\"removeOrgUsersConfirmation\");\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ bulkTitle }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"danger\" *ngIf=\"users.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!done\">\n          <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error && isRevoking\">\n            {{ \"revokeUsersWarning\" | i18n }}\n          </app-callout>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done && users.length > 0\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ bulkTitle }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ModalConfig } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organizationUserBulkRequest\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-restore-revoke\",\n  templateUrl: \"bulk-restore-revoke.component.html\",\n})\nexport class BulkRestoreRevokeComponent {\n  isRevoking: boolean;\n  organizationId: string;\n  users: BulkUserDetails[];\n\n  statuses: Map<string, string> = new Map();\n\n  loading = false;\n  done = false;\n  error: string;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    config: ModalConfig\n  ) {\n    this.isRevoking = config.data.isRevoking;\n    this.organizationId = config.data.organizationId;\n    this.users = config.data.users;\n  }\n\n  get bulkTitle() {\n    const titleKey = this.isRevoking ? \"revokeUsers\" : \"restoreUsers\";\n    return this.i18nService.t(titleKey);\n  }\n\n  async submit() {\n    this.loading = true;\n    try {\n      const response = await this.performBulkUserAction();\n\n      const bulkMessage = this.isRevoking ? \"bulkRevokedMessage\" : \"bulkRestoredMessage\";\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(bulkMessage);\n        this.statuses.set(entry.id, error);\n      });\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n\n    this.loading = false;\n  }\n\n  protected async performBulkUserAction() {\n    const request = new OrganizationUserBulkRequest(this.users.map((user) => user.id));\n    if (this.isRevoking) {\n      return await this.apiService.revokeManyOrganizationUsers(this.organizationId, request);\n    } else {\n      return await this.apiService.restoreManyOrganizationUsers(this.organizationId, request);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"bulkConfirmStatus\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              <th>{{ \"status\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tr *ngFor=\"let item of users\">\n            <td width=\"30\">\n              <app-avatar\n                [data]=\"item.user | userName\"\n                [email]=\"item.user.email\"\n                size=\"25\"\n                [circle]=\"true\"\n                [fontSize]=\"14\"\n              ></app-avatar>\n            </td>\n            <td>\n              {{ item.user.email }}\n              <small class=\"text-muted d-block\" *ngIf=\"item.user.name\">{{ item.user.name }}</small>\n            </td>\n            <td class=\"text-danger\" *ngIf=\"item.error\">\n              {{ item.message }}\n            </td>\n            <td *ngIf=\"!item.error\">\n              {{ item.message }}\n            </td>\n          </tr>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\n\nexport interface BulkUserDetails {\n  id: string;\n  name: string;\n  email: string;\n  status: OrganizationUserStatusType | ProviderUserStatusType;\n}\n\ntype BulkStatusEntry = {\n  user: BulkUserDetails;\n  error: boolean;\n  message: string;\n};\n\n@Component({\n  selector: \"app-bulk-status\",\n  templateUrl: \"bulk-status.component.html\",\n})\nexport class BulkStatusComponent {\n  users: BulkStatusEntry[];\n  loading = false;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"eventLogsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"eventLogsTitle\">\n          {{ \"eventLogs\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loaded\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loaded\">\n        <div class=\"d-flex\">\n          <div class=\"form-inline\">\n            <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"start\"\n              placeholder=\"{{ 'startDate' | i18n }}\"\n              [(ngModel)]=\"start\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n            <span class=\"mx-2\">-</span>\n            <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"end\"\n              placeholder=\"{{ 'endDate' | i18n }}\"\n              [(ngModel)]=\"end\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n          </div>\n          <button\n            #refreshBtn\n            [appApiAction]=\"refreshPromise\"\n            type=\"button\"\n            class=\"btn btn-sm btn-outline-primary ml-3\"\n            (click)=\"loadEvents(true)\"\n            [disabled]=\"loaded && refreshBtn.loading\"\n          >\n            <i\n              class=\"bwi bwi-refresh bwi-fw\"\n              [ngClass]=\"{ 'bwi-spin': loaded && refreshBtn.loading }\"\n              aria-hidden=\"true\"\n            ></i>\n            {{ \"refresh\" | i18n }}\n          </button>\n        </div>\n        <hr />\n        <div *ngIf=\"!events || !events.length\">\n          {{ \"noEventsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover mb-0\" *ngIf=\"events && events.length\">\n          <thead>\n            <tr>\n              <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n              <th class=\"border-top-0\" width=\"40\">\n                <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n              </th>\n              <th class=\"border-top-0\" width=\"150\" *ngIf=\"showUser\">{{ \"user\" | i18n }}</th>\n              <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let e of events\">\n              <td>{{ e.date | date: \"medium\" }}</td>\n              <td>\n                <i\n                  class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n                  title=\"{{ e.appName }}, {{ e.ip }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n              </td>\n              <td *ngIf=\"showUser\">\n                <span appA11yTitle=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n              </td>\n              <td [innerHTML]=\"e.message\"></td>\n            </tr>\n          </tbody>\n        </table>\n        <button\n          #moreBtn\n          [appApiAction]=\"morePromise\"\n          type=\"button\"\n          class=\"btn btn-block btn-link btn-submit\"\n          (click)=\"loadEvents(false)\"\n          [disabled]=\"loaded && moreBtn.loading\"\n          *ngIf=\"continuationToken\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"loadMore\" | i18n }}</span>\n        </button>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\n\nimport { EventService } from \"../../core\";\n\n@Component({\n  selector: \"app-entity-events\",\n  templateUrl: \"entity-events.component.html\",\n})\nexport class EntityEventsComponent implements OnInit {\n  @Input() name: string;\n  @Input() entity: \"user\" | \"cipher\";\n  @Input() entityId: string;\n  @Input() organizationId: string;\n  @Input() providerId: string;\n  @Input() showUser = false;\n\n  loading = true;\n  loaded = false;\n  events: any[];\n  start: string;\n  end: string;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n  private orgUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private eventService: EventService,\n    private platformUtilsService: PlatformUtilsService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n    await this.load();\n  }\n\n  async load() {\n    if (this.showUser) {\n      const response = await this.apiService.getOrganizationUsers(this.organizationId);\n      response.data.forEach((u) => {\n        const name = this.userNamePipe.transform(u);\n        this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n        this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n      });\n    }\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.refreshPromise != null || this.morePromise != null) {\n      return;\n    }\n\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return;\n    }\n\n    this.loading = true;\n    let response: ListResponse<EventResponse>;\n    try {\n      let promise: Promise<any>;\n      if (this.entity === \"user\" && this.providerId) {\n        promise = this.apiService.getEventsProviderUser(\n          this.providerId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else if (this.entity === \"user\") {\n        promise = this.apiService.getEventsOrganizationUser(\n          this.organizationId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else {\n        promise = this.apiService.getEventsCipher(\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      }\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      response = await promise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.continuationToken = response.continuationToken;\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user =\n          this.showUser && userId != null && this.orgUsersUserIdMap.has(userId)\n            ? this.orgUsersUserIdMap.get(userId)\n            : null;\n        return {\n          message: eventInfo.message,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: user != null ? user.name : this.showUser ? this.i18nService.t(\"unknown\") : null,\n          userEmail: user != null ? user.email : this.showUser ? \"\" : null,\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n        };\n      })\n    );\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"resetPasswordTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"resetPasswordTitle\">\n          {{ \"resetPassword\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\"\n          >{{ \"resetPasswordLoggedOutWarning\" | i18n: loggedOutWarningName }}\n        </app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          enforcedPolicyMessage=\"{{ 'resetPasswordMasterPasswordPolicyInEffect' | i18n }}\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col form-group\">\n            <div class=\"d-flex\">\n              <label for=\"newPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"ml-auto d-flex\">\n                <a\n                  href=\"#\"\n                  class=\"d-block mr-2 bwi-icon-above-input\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                  (click)=\"generatePassword()\"\n                >\n                  <i class=\"bwi bwi-lg bwi-fw bwi-refresh\" aria-hidden=\"true\"></i>\n                </a>\n              </div>\n            </div>\n            <div class=\"input-group mb-1\">\n              <input\n                id=\"newPassword\"\n                class=\"form-control text-monospace\"\n                appAutofocus\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"NewPassword\"\n                [(ngModel)]=\"newPassword\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <div class=\"input-group-append\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword()\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                  (click)=\"copy(newPassword)\"\n                >\n                  <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n            <app-password-strength [password]=\"newPassword\" [email]=\"email\" [showText]=\"true\">\n            </app-password-strength>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from \"@angular/core\";\n\nimport { PasswordStrengthComponent } from \"@bitwarden/angular/shared/components/password-strength/password-strength.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { OrganizationUserResetPasswordRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordRequest\";\n\n@Component({\n  selector: \"app-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordComponent implements OnInit {\n  @Input() name: string;\n  @Input() email: string;\n  @Input() id: string;\n  @Input() organizationId: string;\n  @Output() onPasswordReset = new EventEmitter();\n  @ViewChild(PasswordStrengthComponent) passwordStrengthComponent: PasswordStrengthComponent;\n\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  newPassword: string = null;\n  showPassword = false;\n  masterPasswordScore: number;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    private cryptoService: CryptoService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // Get Enforced Policy Options\n    this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n  }\n\n  get loggedOutWarningName() {\n    return this.name != null ? this.name : this.i18nService.t(\"thisUser\");\n  }\n\n  async generatePassword() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    this.newPassword = await this.passwordGenerationService.generatePassword(options);\n    this.passwordStrengthComponent.updatePasswordStrength(this.newPassword);\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"newPassword\").focus();\n  }\n\n  copy(value: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  async submit() {\n    // Validation\n    if (this.newPassword == null || this.newPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n\n    if (this.newPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return false;\n    }\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.masterPasswordScore,\n        this.newPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    if (this.masterPasswordScore < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    // Get user Information (kdf type, kdf iterations, resetPasswordKey, private key) and change password\n    try {\n      this.formPromise = this.apiService\n        .getOrganizationUserResetPasswordDetails(this.organizationId, this.id)\n        .then(async (response) => {\n          if (response == null) {\n            throw new Error(this.i18nService.t(\"resetPasswordDetailsError\"));\n          }\n\n          const kdfType = response.kdf;\n          const kdfIterations = response.kdfIterations;\n          const resetPasswordKey = response.resetPasswordKey;\n          const encryptedPrivateKey = response.encryptedPrivateKey;\n\n          // Decrypt Organization's encrypted Private Key with org key\n          const orgSymKey = await this.cryptoService.getOrgKey(this.organizationId);\n          const decPrivateKey = await this.cryptoService.decryptToBytes(\n            new EncString(encryptedPrivateKey),\n            orgSymKey\n          );\n\n          // Decrypt User's Reset Password Key to get EncKey\n          const decValue = await this.cryptoService.rsaDecrypt(resetPasswordKey, decPrivateKey);\n          const userEncKey = new SymmetricCryptoKey(decValue);\n\n          // Create new key and hash new password\n          const newKey = await this.cryptoService.makeKey(\n            this.newPassword,\n            this.email.trim().toLowerCase(),\n            kdfType,\n            kdfIterations\n          );\n          const newPasswordHash = await this.cryptoService.hashPassword(this.newPassword, newKey);\n\n          // Create new encKey for the User\n          const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n          // Create request\n          const request = new OrganizationUserResetPasswordRequest();\n          request.key = newEncKey[1].encryptedString;\n          request.newMasterPasswordHash = newPasswordHash;\n\n          // Change user's password\n          return this.apiService.putOrganizationUserResetPassword(\n            this.organizationId,\n            this.id,\n            request\n          );\n        });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"resetPasswordSuccess\")\n      );\n      this.onPasswordReset.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class OrganizationUserInviteRequest {\n  emails: string[] = [];\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  permissions: PermissionsApi;\n}\n","import { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class OrganizationUserUpdateRequest {\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  permissions: PermissionsApi;\n}\n","<div class=\"form-group mb-0\">\n  <div class=\"form-check mt-1 form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      [name]=\"pascalize(parentId)\"\n      [id]=\"parentId\"\n      [(ngModel)]=\"parentChecked\"\n      [indeterminate]=\"parentIndeterminate\"\n    />\n    <label class=\"form-check-label font-weight-normal\" [for]=\"parentId\">\n      {{ parentId | i18n }}\n    </label>\n  </div>\n  <div class=\"form-group form-group-child-check mb-0\">\n    <div class=\"form-check mt-1\" *ngFor=\"let c of checkboxes\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        [name]=\"pascalize(c.id)\"\n        [id]=\"c.id\"\n        [ngModel]=\"c.get()\"\n        (ngModelChange)=\"c.set($event)\"\n      />\n      <label class=\"form-check-label font-weight-normal\" [for]=\"c.id\">\n        {{ c.id | i18n }}\n      </label>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-nested-checkbox\",\n  templateUrl: \"nested-checkbox.component.html\",\n})\nexport class NestedCheckboxComponent {\n  @Input() parentId: string;\n  @Input() checkboxes: { id: string; get: () => boolean; set: (v: boolean) => void }[];\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  get parentIndeterminate() {\n    return !this.parentChecked && this.checkboxes.some((c) => c.get());\n  }\n\n  get parentChecked() {\n    return this.checkboxes.every((c) => c.get());\n  }\n\n  set parentChecked(value: boolean) {\n    this.checkboxes.forEach((c) => {\n      c.set(value);\n    });\n  }\n\n  pascalize(s: string) {\n    return Utils.camelToPascalCase(s);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n          <span bitBadge badgeType=\"secondary\" *ngIf=\"isRevoked\">{{ \"revoked\" | i18n }}</span>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/user-types-access-control/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeUser\"\n            [value]=\"organizationUserType.User\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeUser\">\n            {{ \"user\" | i18n }}\n            <small>{{ \"userDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeManager\"\n            [value]=\"organizationUserType.Manager\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeManager\">\n            {{ \"manager\" | i18n }}\n            <small>{{ \"managerDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeAdmin\"\n            [value]=\"organizationUserType.Admin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeAdmin\">\n            {{ \"admin\" | i18n }}\n            <small>{{ \"adminDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeOwner\"\n            [value]=\"organizationUserType.Owner\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeOwner\">\n            {{ \"owner\" | i18n }}\n            <small>{{ \"ownerDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeCustom\"\n            [value]=\"organizationUserType.Custom\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeCustom\">\n            {{ \"custom\" | i18n }}\n            <small>{{ \"customDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <ng-container *ngIf=\"customUserTypeSelected\">\n          <h3 class=\"mt-4 d-flex\">\n            {{ \"permissions\" | i18n }}\n          </h3>\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <div class=\"mb-3\">\n                <label class=\"font-weight-bold mb-0\">Manager Permissions</label>\n                <hr class=\"my-0 mr-2\" />\n                <app-nested-checkbox\n                  parentId=\"manageAssignedCollections\"\n                  [checkboxes]=\"manageAssignedCollectionsCheckboxes\"\n                >\n                </app-nested-checkbox>\n              </div>\n            </div>\n            <div class=\"col-6\">\n              <div class=\"mb-3\">\n                <label class=\"font-weight-bold mb-0\">Admin Permissions</label>\n                <hr class=\"my-0 mr-2\" />\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessEventLogs\"\n                      id=\"accessEventLogs\"\n                      [(ngModel)]=\"permissions.accessEventLogs\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessEventLogs\">\n                      {{ \"accessEventLogs\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessImportExport\"\n                      id=\"accessImportExport\"\n                      [(ngModel)]=\"permissions.accessImportExport\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessImportExport\">\n                      {{ \"accessImportExport\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessReports\"\n                      id=\"accessReports\"\n                      [(ngModel)]=\"permissions.accessReports\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessReports\">\n                      {{ \"accessReports\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <app-nested-checkbox\n                  parentId=\"manageAllCollections\"\n                  [checkboxes]=\"manageAllCollectionsCheckboxes\"\n                >\n                </app-nested-checkbox>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageGroups\"\n                      id=\"manageGroups\"\n                      [(ngModel)]=\"permissions.manageGroups\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageGroups\">\n                      {{ \"manageGroups\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageSso\"\n                      id=\"managePolicies\"\n                      [(ngModel)]=\"permissions.manageSso\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageSso\">\n                      {{ \"manageSso\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"managePolicies\"\n                      id=\"managePolicies\"\n                      [(ngModel)]=\"permissions.managePolicies\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"managePolicies\">\n                      {{ \"managePolicies\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageUsers\"\n                      id=\"manageUsers\"\n                      [(ngModel)]=\"permissions.manageUsers\"\n                      (change)=\"handleDependentPermissions()\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageUsers\">\n                      {{ \"manageUsers\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageResetPassword\"\n                      id=\"manageResetPassword\"\n                      [(ngModel)]=\"permissions.manageResetPassword\"\n                      (change)=\"handleDependentPermissions()\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageResetPassword\">\n                      {{ \"manageResetPassword\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-4 d-flex\">\n          <div class=\"mb-3\">\n            {{ \"accessControl\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/user-types-access-control/#access-control\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </h3>\n        <div class=\"form-group\" [ngClass]=\"{ 'mb-0': access !== 'selected' }\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessAll\"\n              value=\"all\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessAll\">\n              {{ \"userAccessAllItems\" | i18n }}\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessSelected\"\n              value=\"selected\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessSelected\">\n              {{ \"userAccessSelectedCollections\" | i18n }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"access === 'selected'\">\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(c)\">\n                  {{ c.name }}\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.hidePasswords\"\n                    name=\"Collection[{{ i }}].HidePasswords\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.readOnly\"\n                    name=\"Collection[{{ i }}].ReadOnly\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            type=\"button\"\n            (click)=\"restore()\"\n            class=\"btn btn-outline-secondary\"\n            *ngIf=\"editMode && isRevoked\"\n            [disabled]=\"form.loading\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"restoreAccess\" | i18n }}</span>\n          </button>\n          <button\n            type=\"button\"\n            (click)=\"revoke()\"\n            class=\"btn btn-outline-secondary\"\n            *ngIf=\"editMode && !isRevoked\"\n            [disabled]=\"form.loading\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"revokeAccess\" | i18n }}</span>\n          </button>\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { PermissionsApi } from \"@bitwarden/common/models/api/permissionsApi\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { OrganizationUserInviteRequest } from \"@bitwarden/common/models/request/organizationUserInviteRequest\";\nimport { OrganizationUserUpdateRequest } from \"@bitwarden/common/models/request/organizationUserUpdateRequest\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selectionReadOnlyRequest\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collectionResponse\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() organizationUserId: string;\n  @Input() organizationId: string;\n  @Input() usesKeyConnector = false;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n  @Output() onRevokedUser = new EventEmitter();\n  @Output() onRestoredUser = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  isRevoked = false;\n  title: string;\n  emails: string;\n  type: OrganizationUserType = OrganizationUserType.User;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  collections: CollectionView[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  organizationUserType = OrganizationUserType;\n\n  manageAllCollectionsCheckboxes = [\n    {\n      id: \"createNewCollections\",\n      get: () => this.permissions.createNewCollections,\n      set: (v: boolean) => (this.permissions.createNewCollections = v),\n    },\n    {\n      id: \"editAnyCollection\",\n      get: () => this.permissions.editAnyCollection,\n      set: (v: boolean) => (this.permissions.editAnyCollection = v),\n    },\n    {\n      id: \"deleteAnyCollection\",\n      get: () => this.permissions.deleteAnyCollection,\n      set: (v: boolean) => (this.permissions.deleteAnyCollection = v),\n    },\n  ];\n\n  manageAssignedCollectionsCheckboxes = [\n    {\n      id: \"editAssignedCollections\",\n      get: () => this.permissions.editAssignedCollections,\n      set: (v: boolean) => (this.permissions.editAssignedCollections = v),\n    },\n    {\n      id: \"deleteAssignedCollections\",\n      get: () => this.permissions.deleteAssignedCollections,\n      set: (v: boolean) => (this.permissions.deleteAssignedCollections = v),\n    },\n  ];\n\n  get customUserTypeSelected(): boolean {\n    return this.type === OrganizationUserType.Custom;\n  }\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.organizationUserId != null;\n    await this.loadCollections();\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.apiService.getOrganizationUser(\n          this.organizationId,\n          this.organizationUserId\n        );\n        this.access = user.accessAll ? \"all\" : \"selected\";\n        this.type = user.type;\n        this.isRevoked = user.status === OrganizationUserStatusType.Revoked;\n        if (user.type === OrganizationUserType.Custom) {\n          this.permissions = user.permissions;\n        }\n        if (user.collections != null && this.collections != null) {\n          user.collections.forEach((s) => {\n            const collection = this.collections.filter((c) => c.id === s.id);\n            if (collection != null && collection.length > 0) {\n              (collection[0] as any).checked = true;\n              collection[0].readOnly = s.readOnly;\n              collection[0].hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async loadCollections() {\n    const response = await this.apiService.getCollections(this.organizationId);\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    this.collections = await this.collectionService.decryptMany(collections);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n    if (!(c as any).checked) {\n      c.readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n\n  setRequestPermissions(p: PermissionsApi, clearPermissions: boolean) {\n    Object.assign(p, clearPermissions ? new PermissionsApi() : this.permissions);\n    return p;\n  }\n\n  handleDependentPermissions() {\n    // Manage Password Reset must have Manage Users enabled\n    if (this.permissions.manageResetPassword && !this.permissions.manageUsers) {\n      this.permissions.manageUsers = true;\n      (document.getElementById(\"manageUsers\") as HTMLInputElement).checked = true;\n      this.platformUtilsService.showToast(\n        \"info\",\n        null,\n        this.i18nService.t(\"resetPasswordManageUsers\")\n      );\n    }\n  }\n\n  async submit() {\n    let collections: SelectionReadOnlyRequest[] = null;\n    if (this.access !== \"all\") {\n      collections = this.collections\n        .filter((c) => (c as any).checked)\n        .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n    }\n\n    try {\n      if (this.editMode) {\n        const request = new OrganizationUserUpdateRequest();\n        request.accessAll = this.access === \"all\";\n        request.type = this.type;\n        request.collections = collections;\n        request.permissions = this.setRequestPermissions(\n          request.permissions ?? new PermissionsApi(),\n          request.type !== OrganizationUserType.Custom\n        );\n        this.formPromise = this.apiService.putOrganizationUser(\n          this.organizationId,\n          this.organizationUserId,\n          request\n        );\n      } else {\n        const request = new OrganizationUserInviteRequest();\n        request.emails = [...new Set(this.emails.trim().split(/\\s*,\\s*/))];\n        request.accessAll = this.access === \"all\";\n        request.type = this.type;\n        request.permissions = this.setRequestPermissions(\n          request.permissions ?? new PermissionsApi(),\n          request.type !== OrganizationUserType.Custom\n        );\n        request.collections = collections;\n        this.formPromise = this.apiService.postOrganizationUserInvite(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const message = this.usesKeyConnector\n      ? \"removeUserConfirmationKeyConnector\"\n      : \"removeOrgUserConfirmation\";\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(message),\n      this.i18nService.t(\"removeUserIdAccess\", this.name),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async revoke() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"revokeUserConfirmation\"),\n      this.i18nService.t(\"revokeUserId\", this.name),\n      this.i18nService.t(\"revokeAccess\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.formPromise = this.apiService.revokeOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"revokedUserId\", this.name)\n      );\n      this.isRevoked = true;\n      this.onRevokedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async restore() {\n    if (!this.editMode) {\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.restoreOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"restoredUserId\", this.name)\n      );\n      this.isRevoked = false;\n      this.onRestoredUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export class OrganizationUserUpdateGroupsRequest {\n  groupIds: string[] = [];\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"groupAccessTitle\">\n          {{ \"groupAccess\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <p>{{ \"groupAccessUserDesc\" | i18n }}</p>\n        <div *ngIf=\"!groups || !groups.length\">\n          {{ \"noGroupsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n          <tbody>\n            <tr *ngFor=\"let g of groups; let i = index\">\n              <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"g.checked\"\n                  name=\"Groups[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td (click)=\"check(g)\">\n                {{ g.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { OrganizationUserUpdateGroupsRequest } from \"@bitwarden/common/models/request/organizationUserUpdateGroupsRequest\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/groupResponse\";\n\n@Component({\n  selector: \"app-user-groups\",\n  templateUrl: \"user-groups.component.html\",\n})\nexport class UserGroupsComponent implements OnInit {\n  @Input() name: string;\n  @Input() organizationUserId: string;\n  @Input() organizationId: string;\n  @Output() onSavedUser = new EventEmitter();\n\n  loading = true;\n  groups: GroupResponse[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const groupsResponse = await this.apiService.getGroups(this.organizationId);\n    const groups = groupsResponse.data.map((r) => r);\n    groups.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.groups = groups;\n\n    try {\n      const userGroups = await this.apiService.getOrganizationUserGroups(\n        this.organizationId,\n        this.organizationUserId\n      );\n      if (userGroups != null && this.groups != null) {\n        userGroups.forEach((ug) => {\n          const group = this.groups.filter((g) => g.id === ug);\n          if (group != null && group.length > 0) {\n            (group[0] as any).checked = true;\n          }\n        });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.loading = false;\n  }\n\n  check(g: GroupResponse, select?: boolean) {\n    (g as any).checked = select == null ? !(g as any).checked : select;\n    if (!(g as any).checked) {\n      (g as any).readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.groups.forEach((g) => this.check(g, select));\n  }\n\n  async submit() {\n    const request = new OrganizationUserUpdateGroupsRequest();\n    request.groupIds = this.groups.filter((g) => (g as any).checked).map((g) => g.id);\n\n    try {\n      this.formPromise = this.apiService.putOrganizationUserGroups(\n        this.organizationId,\n        this.organizationUserId,\n        request\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedGroupsForUser\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"people\" | i18n }}</h1>\n  <div class=\"mt-2 d-flex\">\n    <div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == null }\"\n        (click)=\"filter(null)\"\n      >\n        {{ \"all\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"allCount\">{{ allCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Invited }\"\n        (click)=\"filter(userStatusType.Invited)\"\n      >\n        {{ \"invited\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n        (click)=\"filter(userStatusType.Accepted)\"\n      >\n        {{ \"accepted\" | i18n }}\n        <span bitBadge badgeType=\"warning\" *ngIf=\"acceptedCount\">{{ acceptedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Revoked }\"\n        (click)=\"filter(userStatusType.Revoked)\"\n      >\n        {{ \"revoked\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"revokedCount\">{{ revokedCount }}</span>\n      </button>\n    </div>\n    <div class=\"ml-3\">\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <div class=\"dropdown ml-3\" appListDropdown>\n      <button\n        class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        appA11yTitle=\"{{ 'options' | i18n }}\"\n      >\n        <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n          <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n          {{ \"reinviteSelected\" | i18n }}\n        </button>\n        <button\n          class=\"dropdown-item text-success\"\n          appStopClick\n          (click)=\"bulkConfirm()\"\n          *ngIf=\"showBulkConfirmUsers\"\n        >\n          <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n          {{ \"confirmSelected\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkRestore()\">\n          <i class=\"bwi bwi-fw bwi-plus-circle\" aria-hidden=\"true\"></i>\n          {{ \"restoreAccess\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkRevoke()\">\n          <i class=\"bwi bwi-fw bwi-minus-circle\" aria-hidden=\"true\"></i>\n          {{ \"revokeAccess\" | i18n }}\n        </button>\n        <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n          <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n          {{ \"remove\" | i18n }}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n          <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n          <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"inviteUser\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n  \"\n>\n  <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedUsers.length\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'confirmUsers' | i18n }}\"\n      icon=\"bwi bwi-check-circle\"\n      *ngIf=\"showConfirmUsers\"\n    >\n      {{ \"usersNeedConfirmed\" | i18n }}\n    </app-callout>\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let u of searchedUsers\">\n          <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n            <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp />\n          </td>\n          <td width=\"30\">\n            <app-avatar\n              [data]=\"u | userName\"\n              [email]=\"u.email\"\n              size=\"25\"\n              [circle]=\"true\"\n              [fontSize]=\"14\"\n            >\n            </app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n              \"invited\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n              \"accepted\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Revoked\">{{\n              \"revoked\" | i18n\n            }}</span>\n            <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n          </td>\n          <td>\n            <ng-container *ngIf=\"u.twoFactorEnabled\">\n              <i\n                class=\"bwi bwi-lock\"\n                title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"showEnrolledStatus(u)\">\n              <i\n                class=\"bwi bwi-key\"\n                title=\"{{ 'enrolledPasswordReset' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"enrolledPasswordReset\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td>\n            <span *ngIf=\"u.type === userType.Owner\">{{ \"owner\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Admin\">{{ \"admin\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Manager\">{{ \"manager\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.User\">{{ \"user\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Custom\">{{ \"custom\" | i18n }}</span>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"reinvite(u)\"\n                  *ngIf=\"u.status === userStatusType.Invited\"\n                >\n                  <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                  {{ \"resendInvitation\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item text-success\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"confirm(u)\"\n                  *ngIf=\"u.status === userStatusType.Accepted\"\n                >\n                  <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                  {{ \"confirm\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"groups(u)\"\n                  *ngIf=\"accessGroups\"\n                >\n                  <i class=\"bwi bwi-fw bwi-sitemap\" aria-hidden=\"true\"></i>\n                  {{ \"groups\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"events(u)\"\n                  *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"\n                >\n                  <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                  {{ \"eventLogs\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"resetPassword(u)\"\n                  *ngIf=\"allowResetPassword(u)\"\n                >\n                  <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n                  {{ \"resetPassword\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"restore(u)\"\n                  *ngIf=\"u.status === userStatusType.Revoked\"\n                >\n                  <i class=\"bwi bwi-fw bwi-plus-circle\" aria-hidden=\"true\"></i>\n                  {{ \"restoreAccess\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"revoke(u)\"\n                  *ngIf=\"u.status !== userStatusType.Revoked\"\n                >\n                  <i class=\"bwi bwi-fw bwi-minus-circle\" aria-hidden=\"true\"></i>\n                  {{ \"revokeAccess\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #groupsTemplate></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n<ng-template #resetPasswordTemplate></ng-template>\n<ng-template #bulkStatusTemplate></ng-template>\n<ng-template #bulkConfirmTemplate></ng-template>\n<ng-template #bulkRemoveTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organizationKeysRequest\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"@bitwarden/common/models/request/organizationUserConfirmRequest\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { OrganizationUserBulkResponse } from \"@bitwarden/common/models/response/organizationUserBulkResponse\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/models/response/organizationUserResponse\";\n\nimport { BasePeopleComponent } from \"../../common/base.people.component\";\n\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { BulkRestoreRevokeComponent } from \"./bulk/bulk-restore-revoke.component\";\nimport { BulkStatusComponent } from \"./bulk/bulk-status.component\";\nimport { EntityEventsComponent } from \"./entity-events.component\";\nimport { ResetPasswordComponent } from \"./reset-password.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\nimport { UserGroupsComponent } from \"./user-groups.component\";\n\n@Component({\n  selector: \"app-org-people\",\n  templateUrl: \"people.component.html\",\n})\nexport class PeopleComponent\n  extends BasePeopleComponent<OrganizationUserUserDetailsResponse>\n  implements OnInit\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n  @ViewChild(\"resetPasswordTemplate\", { read: ViewContainerRef, static: true })\n  resetPasswordModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = OrganizationUserType;\n  userStatusType = OrganizationUserStatusType;\n\n  organizationId: string;\n  status: OrganizationUserStatusType = null;\n  accessEvents = false;\n  accessGroups = false;\n  canResetPassword = false; // User permission (admin/custom)\n  orgUseResetPassword = false; // Org plan ability\n  orgHasKeys = false; // Org public/private keys\n  orgResetPasswordPolicyEnabled = false;\n  callingUserType: OrganizationUserType = null;\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    private router: Router,\n    searchService: SearchService,\n    validationService: ValidationService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    private syncService: SyncService,\n    stateService: StateService,\n    private organizationService: OrganizationService\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      const organization = await this.organizationService.get(this.organizationId);\n      if (!organization.canManageUsers) {\n        this.router.navigate([\"../collections\"], { relativeTo: this.route });\n        return;\n      }\n      this.accessEvents = organization.useEvents;\n      this.accessGroups = organization.useGroups;\n      this.canResetPassword = organization.canManageUsersPassword;\n      this.orgUseResetPassword = organization.useResetPassword;\n      this.callingUserType = organization.type;\n      this.orgHasKeys = organization.hasPublicAndPrivateKeys;\n\n      // Backfill pub/priv key if necessary\n      if (this.canResetPassword && !this.orgHasKeys) {\n        const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n        const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n        const response = await this.apiService.postOrganizationKeys(this.organizationId, request);\n        if (response != null) {\n          this.orgHasKeys = response.publicKey != null && response.privateKey != null;\n          await this.syncService.fullSync(true); // Replace oganizations with new data\n        } else {\n          throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n        }\n      }\n\n      await this.load();\n\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n        if (qParams.viewEvents != null) {\n          const user = this.users.filter((u) => u.id === qParams.viewEvents);\n          if (user.length > 0 && user[0].status === OrganizationUserStatusType.Confirmed) {\n            this.events(user[0]);\n          }\n        }\n      });\n    });\n  }\n\n  async load() {\n    const resetPasswordPolicy = await this.policyApiService.getPolicyForOrganization(\n      PolicyType.ResetPassword,\n      this.organizationId\n    );\n    this.orgResetPasswordPolicyEnabled = resetPasswordPolicy?.enabled;\n    super.load();\n  }\n\n  getUsers(): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    return this.apiService.getOrganizationUsers(this.organizationId);\n  }\n\n  deleteUser(id: string): Promise<any> {\n    return this.apiService.deleteOrganizationUser(this.organizationId, id);\n  }\n\n  revokeUser(id: string): Promise<any> {\n    return this.apiService.revokeOrganizationUser(this.organizationId, id);\n  }\n\n  restoreUser(id: string): Promise<any> {\n    return this.apiService.restoreOrganizationUser(this.organizationId, id);\n  }\n\n  reinviteUser(id: string): Promise<any> {\n    return this.apiService.postOrganizationUserReinvite(this.organizationId, id);\n  }\n\n  async confirmUser(\n    user: OrganizationUserUserDetailsResponse,\n    publicKey: Uint8Array\n  ): Promise<any> {\n    const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n    const key = await this.cryptoService.rsaEncrypt(orgKey.key, publicKey.buffer);\n    const request = new OrganizationUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.apiService.postOrganizationUserConfirm(this.organizationId, user.id, request);\n  }\n\n  allowResetPassword(orgUser: OrganizationUserUserDetailsResponse): boolean {\n    // Hierarchy check\n    let callingUserHasPermission = false;\n\n    switch (this.callingUserType) {\n      case OrganizationUserType.Owner:\n        callingUserHasPermission = true;\n        break;\n      case OrganizationUserType.Admin:\n        callingUserHasPermission = orgUser.type !== OrganizationUserType.Owner;\n        break;\n      case OrganizationUserType.Custom:\n        callingUserHasPermission =\n          orgUser.type !== OrganizationUserType.Owner &&\n          orgUser.type !== OrganizationUserType.Admin;\n        break;\n    }\n\n    // Final\n    return (\n      this.canResetPassword &&\n      callingUserHasPermission &&\n      this.orgUseResetPassword &&\n      this.orgHasKeys &&\n      orgUser.resetPasswordEnrolled &&\n      this.orgResetPasswordPolicyEnabled &&\n      orgUser.status === OrganizationUserStatusType.Confirmed\n    );\n  }\n\n  showEnrolledStatus(orgUser: OrganizationUserUserDetailsResponse): boolean {\n    return (\n      this.orgUseResetPassword &&\n      orgUser.resetPasswordEnrolled &&\n      this.orgResetPasswordPolicyEnabled\n    );\n  }\n\n  async edit(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organizationId;\n        comp.organizationUserId = user != null ? user.id : null;\n        comp.usesKeyConnector = user?.usesKeyConnector;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n        comp.onRevokedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onRestoredUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n\n  async groups(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserGroupsComponent,\n      this.groupsModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organizationId;\n        comp.organizationUserId = user != null ? user.id : null;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkRevoke() {\n    await this.bulkRevokeOrRestore(true);\n  }\n\n  async bulkRestore() {\n    await this.bulkRevokeOrRestore(false);\n  }\n\n  async bulkRevokeOrRestore(isRevoking: boolean) {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const ref = this.modalService.open(BulkRestoreRevokeComponent, {\n      allowMultipleModals: true,\n      data: {\n        organizationId: this.organizationId,\n        users: this.getCheckedUsers(),\n        isRevoking: isRevoking,\n      },\n    });\n\n    await ref.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === OrganizationUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const request = new OrganizationUserBulkRequest(filteredUsers.map((user) => user.id));\n      const response = this.apiService.postManyOrganizationUserReinvite(\n        this.organizationId,\n        request\n      );\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async events(user: OrganizationUserUserDetailsResponse) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = this.userNamePipe.transform(user);\n      comp.organizationId = this.organizationId;\n      comp.entityId = user.id;\n      comp.showUser = false;\n      comp.entity = \"user\";\n    });\n  }\n\n  async resetPassword(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      ResetPasswordComponent,\n      this.resetPasswordModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.email = user != null ? user.email : null;\n        comp.organizationId = this.organizationId;\n        comp.id = user != null ? user.id : null;\n\n        comp.onPasswordReset.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n\n  protected async removeUserConfirmationDialog(user: OrganizationUserUserDetailsResponse) {\n    const warningMessage = user.usesKeyConnector\n      ? this.i18nService.t(\"removeUserConfirmationKeyConnector\")\n      : this.i18nService.t(\"removeOrgUserConfirmation\");\n\n    return this.platformUtilsService.showDialog(\n      warningMessage,\n      this.i18nService.t(\"removeUserIdAccess\", this.userNamePipe.transform(user)),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n  }\n\n  private async showBulkStatus(\n    users: OrganizationUserUserDetailsResponse[],\n    filteredUsers: OrganizationUserUserDetailsResponse[],\n    request: Promise<ListResponse<OrganizationUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          // eslint-disable-next-line\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id), // eslint-disable-line\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nexport class PolicyRequest {\n  type: PolicyType;\n  enabled: boolean;\n  data: any;\n}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nexport abstract class BasePolicy {\n  abstract name: string;\n  abstract description: string;\n  abstract type: PolicyType;\n  abstract component: any;\n\n  display(organization: Organization) {\n    return true;\n  }\n}\n\n@Directive()\nexport abstract class BasePolicyComponent implements OnInit {\n  @Input() policyResponse: PolicyResponse;\n  @Input() policy: BasePolicy;\n\n  enabled = new UntypedFormControl(false);\n  data: UntypedFormGroup = null;\n\n  ngOnInit(): void {\n    this.enabled.setValue(this.policyResponse.enabled);\n\n    if (this.policyResponse.data != null) {\n      this.loadData();\n    }\n  }\n\n  loadData() {\n    this.data.patchValue(this.policyResponse.data ?? {});\n  }\n\n  buildRequestData() {\n    if (this.data != null) {\n      return this.data.value;\n    }\n\n    return null;\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>) {\n    const request = new PolicyRequest();\n    request.enabled = this.enabled.value;\n    request.type = this.policy.type;\n    request.data = this.buildRequestData();\n\n    return Promise.resolve(request);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"policiesEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"policiesEditTitle\">\n          {{ \"editPolicy\" | i18n }} - {{ policy.name | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n\n      <div class=\"modal-body\">\n        <div class=\"modal-body\" *ngIf=\"loading\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div [hidden]=\"loading\">\n          <p>{{ policy.description | i18n }}</p>\n          <ng-template #policyForm></ng-template>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nimport { BasePolicy, BasePolicyComponent } from \"../policies/base-policy.component\";\n\n@Component({\n  selector: \"app-policy-edit\",\n  templateUrl: \"policy-edit.component.html\",\n})\nexport class PolicyEditComponent {\n  @Input() policy: BasePolicy;\n  @Input() organizationId: string;\n  @Input() policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n  @Output() onSavedPolicy = new EventEmitter();\n\n  @ViewChild(\"policyForm\", { read: ViewContainerRef, static: true })\n  policyFormRef: ViewContainerRef;\n\n  policyType = PolicyType;\n  loading = true;\n  enabled = false;\n  formPromise: Promise<any>;\n  defaultTypes: any[];\n  policyComponent: BasePolicyComponent;\n\n  private policyResponse: PolicyResponse;\n\n  constructor(\n    private policyApiService: PolicyApiServiceAbstraction,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private cdr: ChangeDetectorRef,\n    private logService: LogService\n  ) {}\n\n  async ngAfterViewInit() {\n    await this.load();\n    this.loading = false;\n\n    const factory = this.componentFactoryResolver.resolveComponentFactory(this.policy.component);\n    this.policyComponent = this.policyFormRef.createComponent(factory)\n      .instance as BasePolicyComponent;\n    this.policyComponent.policy = this.policy;\n    this.policyComponent.policyResponse = this.policyResponse;\n\n    this.cdr.detectChanges();\n  }\n\n  async load() {\n    try {\n      this.policyResponse = await this.policyApiService.getPolicy(\n        this.organizationId,\n        this.policy.type\n      );\n    } catch (e) {\n      if (e.statusCode === 404) {\n        this.policyResponse = new PolicyResponse({ Enabled: false });\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  async submit() {\n    let request: PolicyRequest;\n    try {\n      request = await this.policyComponent.buildRequest(this.policiesEnabledMap);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, e.message);\n      return;\n    }\n\n    try {\n      this.formPromise = this.policyApiService.putPolicy(\n        this.organizationId,\n        this.policy.type,\n        request\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedPolicyId\", this.i18nService.t(this.policy.name))\n      );\n      this.onSavedPolicy.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"policies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n  <tbody>\n    <tr *ngFor=\"let p of policies\">\n      <td *ngIf=\"p.display(organization)\">\n        <a href=\"#\" appStopClick (click)=\"edit(p)\">{{ p.name | i18n }}</a>\n        <span bitBadge badgeType=\"success\" *ngIf=\"policiesEnabledMap.get(p.type)\">{{\n          \"on\" | i18n\n        }}</span>\n        <small class=\"text-muted d-block\">{{ p.description | i18n }}</small>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<ng-template #editTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nimport { PolicyListService } from \"../../core\";\nimport { BasePolicy } from \"../policies/base-policy.component\";\n\nimport { PolicyEditComponent } from \"./policy-edit.component\";\n\n@Component({\n  selector: \"app-org-policies\",\n  templateUrl: \"policies.component.html\",\n})\nexport class PoliciesComponent implements OnInit {\n  @ViewChild(\"editTemplate\", { read: ViewContainerRef, static: true })\n  editModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  policies: BasePolicy[];\n  organization: Organization;\n\n  private orgPolicies: PolicyResponse[];\n  private policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n\n  constructor(\n    private route: ActivatedRoute,\n    private modalService: ModalService,\n    private organizationService: OrganizationService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyListService: PolicyListService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.organization = await this.organizationService.get(this.organizationId);\n      if (this.organization == null || !this.organization.usePolicies) {\n        this.router.navigate([\"/organizations\", this.organizationId]);\n        return;\n      }\n\n      this.policies = this.policyListService.getPolicies();\n\n      await this.load();\n\n      // Handle policies component launch from Event message\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        if (qParams.policyId != null) {\n          const policyIdFromEvents: string = qParams.policyId;\n          for (const orgPolicy of this.orgPolicies) {\n            if (orgPolicy.id === policyIdFromEvents) {\n              for (let i = 0; i < this.policies.length; i++) {\n                if (this.policies[i].type === orgPolicy.type) {\n                  this.edit(this.policies[i]);\n                  break;\n                }\n              }\n              break;\n            }\n          }\n        }\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.policyApiService.getPolicies(this.organizationId);\n    this.orgPolicies = response.data != null && response.data.length > 0 ? response.data : [];\n    this.orgPolicies.forEach((op) => {\n      this.policiesEnabledMap.set(op.type, op.enabled);\n    });\n\n    this.loading = false;\n  }\n\n  async edit(policy: BasePolicy) {\n    const [modal] = await this.modalService.openViewRef(\n      PolicyEditComponent,\n      this.editModalRef,\n      (comp) => {\n        comp.policy = policy;\n        comp.organizationId = this.organizationId;\n        comp.policiesEnabledMap = this.policiesEnabledMap;\n        comp.onSavedPolicy.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n}\n","import { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationUpdateRequest {\n  name: string;\n  identifier: string;\n  businessName: string;\n  billingEmail: string;\n  keys: OrganizationKeysRequest;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"apiKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"apiKeyTitle\">{{ apiKeyTitle | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ apiKeyDescription | i18n }}</p>\n        <app-user-verification\n          [(ngModel)]=\"masterPassword\"\n          ngDefaultControl\n          name=\"secret\"\n          *ngIf=\"!clientSecret\"\n        >\n        </app-user-verification>\n\n        <app-callout type=\"warning\" *ngIf=\"clientSecret\">{{ apiKeyWarning | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          title=\"{{ 'oauth2ClientCredentials' | i18n }}\"\n          icon=\"bwi bwi-key\"\n          *ngIf=\"clientSecret\"\n        >\n          <p class=\"mb-1\">\n            <strong>client_id:</strong><br />\n            <code>{{ clientId }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>client_secret:</strong><br />\n            <code>{{ clientSecret }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>scope:</strong><br />\n            <code>{{ scope }}</code>\n          </p>\n          <p class=\"mb-0\">\n            <strong>grant_type:</strong><br />\n            <code>{{ grantType }}</code>\n          </p>\n        </app-callout>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!clientSecret\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (isRotation ? \"rotateApiKey\" : \"viewApiKey\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/apiKeyResponse\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-api-key\",\n  templateUrl: \"api-key.component.html\",\n})\nexport class ApiKeyComponent {\n  keyType: string;\n  isRotation: boolean;\n  postKey: (entityId: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  entityId: string;\n  scope: string;\n  grantType: string;\n  apiKeyTitle: string;\n  apiKeyWarning: string;\n  apiKeyDescription: string;\n\n  masterPassword: Verification;\n  formPromise: Promise<ApiKeyResponse>;\n  clientId: string;\n  clientSecret: string;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.postKey(this.entityId, request));\n      const response = await this.formPromise;\n      this.clientSecret = response.apiKey;\n      this.clientId = `${this.keyType}.${this.entityId}`;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-purge-vault\",\n  templateUrl: \"purge-vault.component.html\",\n})\nexport class PurgeVaultComponent {\n  @Input() organizationId?: string = null;\n\n  masterPassword: Verification;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private router: Router,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postPurgeCiphers(request, this.organizationId));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"vaultPurged\"));\n      if (this.organizationId != null) {\n        this.router.navigate([\"organizations\", this.organizationId, \"vault\"]);\n      } else {\n        this.router.navigate([\"vault\"]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"purgeVaultTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"purgeVaultTitle\">{{ \"purgeVault\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ (organizationId ? \"purgeOrgVaultDesc\" : \"purgeVaultDesc\") | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"purgeVaultWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"purgeVault\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteOrganizationTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      *ngIf=\"loaded\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deleteOrganizationTitle\">{{ \"deleteOrganization\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{\n          \"deletingOrganizationIsPermanentWarning\" | i18n: organizationName\n        }}</app-callout>\n        <p id=\"organizationDeleteDescription\">\n          <ng-container\n            *ngIf=\"\n              deleteOrganizationRequestType === 'InvalidFamiliesForEnterprise';\n              else regularDelete\n            \"\n          >\n            {{ \"orgCreatedSponsorshipInvalid\" | i18n }}\n          </ng-container>\n          <ng-template #regularDelete>\n            <ng-container *ngIf=\"organizationContentSummary.totalItemCount > 0\">\n              {{ \"deletingOrganizationContentWarning\" | i18n: organizationName }}\n              <ul>\n                <li *ngFor=\"let type of organizationContentSummary.itemCountByType\">\n                  {{ type.count }} {{ type.localizationKey | i18n }}\n                </li>\n              </ul>\n              {{ \"deletingOrganizationActiveUserAccountsWarning\" | i18n }}\n            </ng-container>\n          </ng-template>\n        </p>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteOrganization\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\nclass CountBasedLocalizationKey {\n  singular: string;\n  plural: string;\n\n  getKey(count: number) {\n    return count == 1 ? this.singular : this.plural;\n  }\n\n  constructor(singular: string, plural: string) {\n    this.singular = singular;\n    this.plural = plural;\n  }\n}\n\nclass OrganizationContentSummaryItem {\n  count: number;\n  get localizationKey(): string {\n    return this.localizationKeyOptions.getKey(this.count);\n  }\n  private localizationKeyOptions: CountBasedLocalizationKey;\n  constructor(count: number, localizationKeyOptions: CountBasedLocalizationKey) {\n    this.count = count;\n    this.localizationKeyOptions = localizationKeyOptions;\n  }\n}\n\nclass OrganizationContentSummary {\n  totalItemCount = 0;\n  itemCountByType: OrganizationContentSummaryItem[] = [];\n}\n\n@Component({\n  selector: \"app-delete-organization\",\n  templateUrl: \"delete-organization.component.html\",\n})\nexport class DeleteOrganizationComponent implements OnInit {\n  organizationId: string;\n  loaded: boolean;\n  deleteOrganizationRequestType: \"InvalidFamiliesForEnterprise\" | \"RegularDelete\" = \"RegularDelete\";\n  organizationName: string;\n  organizationContentSummary: OrganizationContentSummary = new OrganizationContentSummary();\n  @Output() onSuccess: EventEmitter<any> = new EventEmitter();\n\n  masterPassword: Verification;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService,\n    private cipherService: CipherService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    await this.load();\n  }\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.deleteOrganization(this.organizationId, request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"organizationDeleted\"),\n        this.i18nService.t(\"organizationDeletedDesc\")\n      );\n      this.onSuccess.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async load() {\n    this.organizationName = (await this.organizationService.get(this.organizationId)).name;\n    this.organizationContentSummary = await this.buildOrganizationContentSummary();\n    this.loaded = true;\n  }\n\n  private async buildOrganizationContentSummary(): Promise<OrganizationContentSummary> {\n    const organizationContentSummary = new OrganizationContentSummary();\n    const organizationItems = (\n      await this.cipherService.getAllFromApiForOrganization(this.organizationId)\n    ).filter((item) => item.deletedDate == null);\n\n    if (organizationItems.length < 1) {\n      return organizationContentSummary;\n    }\n\n    organizationContentSummary.totalItemCount = organizationItems.length;\n    for (const cipherType of Utils.iterateEnum(CipherType)) {\n      const count = this.getOrganizationItemCountByType(organizationItems, cipherType);\n      if (count > 0) {\n        organizationContentSummary.itemCountByType.push(\n          new OrganizationContentSummaryItem(\n            count,\n            this.getOrganizationItemLocalizationKeysByType(CipherType[cipherType])\n          )\n        );\n      }\n    }\n\n    return organizationContentSummary;\n  }\n\n  private getOrganizationItemCountByType(items: CipherView[], type: CipherType) {\n    return items.filter((item) => item.type == type).length;\n  }\n\n  private getOrganizationItemLocalizationKeysByType(type: string): CountBasedLocalizationKey {\n    return new CountBasedLocalizationKey(`type${type}`, `type${type}Plural`);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myOrganization\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"organizationName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"org.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"org.billingEmail\"\n          [disabled]=\"selfHosted || !canManageBilling\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"businessName\">{{ \"businessName\" | i18n }}</label>\n        <input\n          id=\"businessName\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BusinessName\"\n          [(ngModel)]=\"org.businessName\"\n          [disabled]=\"selfHosted || !canManageBilling\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"identifier\">{{ \"identifier\" | i18n }}</label>\n        <input\n          id=\"identifier\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Identifier\"\n          [(ngModel)]=\"org.identifier\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <app-avatar data=\"{{ org.name }}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar>\n    </div>\n  </div>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"save\" | i18n }}\n  </bit-submit-button>\n</form>\n<ng-container *ngIf=\"canUseApi\">\n  <div class=\"secondary-header border-0 mb-0\">\n    <h1>{{ \"apiKey\" | i18n }}</h1>\n  </div>\n  <p>\n    {{ \"apiKeyDesc\" | i18n }}\n    <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noopener\">\n      {{ \"learnMore\" | i18n }}\n    </a>\n  </p>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewApiKey()\">\n    {{ \"viewApiKey\" | i18n }}\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateApiKey()\">\n    {{ \"rotateApiKey\" | i18n }}\n  </button>\n</ng-container>\n<div class=\"secondary-header border-0 mb-0\">\n  <h1>{{ \"taxInformation\" | i18n }}</h1>\n</div>\n<p>{{ \"taxInformationDesc\" | i18n }}</p>\n<div *ngIf=\"!org || loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #formTax\n  (ngSubmit)=\"submitTaxInfo()\"\n  [appApiAction]=\"taxFormPromise\"\n  ngNativeValidate\n>\n  <app-tax-info></app-tax-info>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"formTax.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteOrganization()\">\n      {{ \"deleteOrganization\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n<ng-template #purgeOrganizationTemplate></ng-template>\n<ng-template #apiKeyTemplate></ng-template>\n<ng-template #rotateApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organizationKeysRequest\";\nimport { OrganizationUpdateRequest } from \"@bitwarden/common/models/request/organizationUpdateRequest\";\nimport { OrganizationResponse } from \"@bitwarden/common/models/response/organizationResponse\";\n\nimport { ApiKeyComponent } from \"../../settings/api-key.component\";\nimport { PurgeVaultComponent } from \"../../settings/purge-vault.component\";\nimport { TaxInfoComponent } from \"../../settings/tax-info.component\";\n\nimport { DeleteOrganizationComponent } from \"./delete-organization.component\";\n\n@Component({\n  selector: \"app-org-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n  @ViewChild(\"purgeOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"apiKeyTemplate\", { read: ViewContainerRef, static: true })\n  apiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateApiKeyModalRef: ViewContainerRef;\n  @ViewChild(TaxInfoComponent) taxInfo: TaxInfoComponent;\n\n  selfHosted = false;\n  canManageBilling = true;\n  loading = true;\n  canUseApi = false;\n  org: OrganizationResponse;\n  formPromise: Promise<any>;\n  taxFormPromise: Promise<any>;\n\n  private organizationId: string;\n\n  constructor(\n    private modalService: ModalService,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private router: Router,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.canManageBilling = (\n        await this.organizationService.get(this.organizationId)\n      ).canManageBilling;\n      try {\n        this.org = await this.apiService.getOrganization(this.organizationId);\n        this.canUseApi = this.org.useApi;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationUpdateRequest();\n      request.name = this.org.name;\n      request.businessName = this.org.businessName;\n      request.billingEmail = this.org.billingEmail;\n      request.identifier = this.org.identifier;\n\n      // Backfill pub/priv key if necessary\n      if (!this.org.hasPublicAndPrivateKeys) {\n        const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n        request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n      }\n\n      this.formPromise = this.apiService.putOrganization(this.organizationId, request).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"organizationUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async submitTaxInfo() {\n    this.taxFormPromise = this.taxInfo.submitTaxInfo();\n    await this.taxFormPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"taxInfoUpdated\"));\n  }\n\n  async deleteOrganization() {\n    await this.modalService.openViewRef(\n      DeleteOrganizationComponent,\n      this.deleteModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.onSuccess.subscribe(() => {\n          this.router.navigate([\"/\"]);\n        });\n      }\n    );\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef, (comp) => {\n      comp.organizationId = this.organizationId;\n    });\n  }\n\n  async viewApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.apiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.entityId = this.organizationId;\n      comp.postKey = this.apiService.postOrganizationApiKey.bind(this.apiService);\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyDesc\";\n    });\n  }\n\n  async rotateApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateApiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.isRotation = true;\n      comp.entityId = this.organizationId;\n      comp.postKey = this.apiService.postOrganizationRotateApiKey.bind(this.apiService);\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","export enum TransactionType {\n  Charge = 0,\n  Credit = 1,\n  PromotionalCredit = 2,\n  ReferralCredit = 3,\n  Refund = 4,\n}\n","export class VerifyBankRequest {\n  amount1: number;\n  amount2: number;\n}\n","export class BitPayInvoiceRequest {\n  userId: string;\n  organizationId: string;\n  credit: boolean;\n  amount: number;\n  returnUrl: string;\n  name: string;\n  email: string;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"addCredit\" | i18n }}</h3>\n    <div class=\"mb-4 text-lg\" *ngIf=\"showOptions\">\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-paypal\"\n          [value]=\"paymentMethodType.PayPal\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-paypal\">\n          <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n        >\n      </div>\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-bitcoin\"\n          [value]=\"paymentMethodType.BitPay\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-bitcoin\">\n          <i class=\"bwi bwi-fw bwi-bitcoin\" aria-hidden=\"true\"></i> Bitcoin</label\n        >\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"row\">\n        <div class=\"col-4\">\n          <label for=\"creditAmount\">{{ \"amount\" | i18n }}</label>\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\"><span class=\"input-group-text\">$USD</span></div>\n            <input\n              id=\"creditAmount\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"CreditAmount\"\n              [(ngModel)]=\"creditAmount\"\n              (blur)=\"formatAmount()\"\n              required\n            />\n          </div>\n        </div>\n      </div>\n      <small class=\"form-text text-muted\">{{ \"creditDelayed\" | i18n }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading || ppLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n<form #ppButtonForm action=\"{{ ppButtonFormAction }}\" method=\"post\" target=\"_top\">\n  <input type=\"hidden\" name=\"cmd\" value=\"_xclick\" />\n  <input type=\"hidden\" name=\"business\" value=\"{{ ppButtonBusinessId }}\" />\n  <input type=\"hidden\" name=\"button_subtype\" value=\"services\" />\n  <input type=\"hidden\" name=\"no_note\" value=\"1\" />\n  <input type=\"hidden\" name=\"no_shipping\" value=\"1\" />\n  <input type=\"hidden\" name=\"rm\" value=\"1\" />\n  <input type=\"hidden\" name=\"return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"cancel_return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\n  <input type=\"hidden\" name=\"image_url\" value=\"https://bitwarden.com/images/paypal-banner.png\" />\n  <input type=\"hidden\" name=\"bn\" value=\"PP-BuyNowBF:btn_buynow_LG.gif:NonHosted\" />\n  <input type=\"hidden\" name=\"amount\" value=\"{{ creditAmount }}\" />\n  <input type=\"hidden\" name=\"custom\" value=\"{{ ppButtonCustomField }}\" />\n  <input type=\"hidden\" name=\"item_name\" value=\"Bitwarden Account Credit\" />\n  <input type=\"hidden\" name=\"item_number\" value=\"{{ subject }}\" />\n</form>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { PayPalConfig } from \"@bitwarden/common/abstractions/environment.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { BitPayInvoiceRequest } from \"@bitwarden/common/models/request/bitPayInvoiceRequest\";\n\n@Component({\n  selector: \"app-add-credit\",\n  templateUrl: \"add-credit.component.html\",\n})\nexport class AddCreditComponent implements OnInit {\n  @Input() creditAmount: string;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.PayPal;\n  @Input() organizationId: string;\n  @Output() onAdded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(\"ppButtonForm\", { read: ElementRef, static: true }) ppButtonFormRef: ElementRef;\n\n  paymentMethodType = PaymentMethodType;\n  ppButtonFormAction: string;\n  ppButtonBusinessId: string;\n  ppButtonCustomField: string;\n  ppLoading = false;\n  subject: string;\n  returnUrl: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private name: string;\n  private email: string;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {\n    const payPalConfig = process.env.PAYPAL_CONFIG as PayPalConfig;\n    this.ppButtonFormAction = payPalConfig.buttonAction;\n    this.ppButtonBusinessId = payPalConfig.businessId;\n  }\n\n  async ngOnInit() {\n    if (this.organizationId != null) {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"20.00\";\n      }\n      this.ppButtonCustomField = \"organization_id:\" + this.organizationId;\n      const org = await this.organizationService.get(this.organizationId);\n      if (org != null) {\n        this.subject = org.name;\n        this.name = org.name;\n      }\n    } else {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"10.00\";\n      }\n      this.userId = await this.stateService.getUserId();\n      this.subject = await this.stateService.getEmail();\n      this.email = this.subject;\n      this.ppButtonCustomField = \"user_id:\" + this.userId;\n    }\n    this.ppButtonCustomField += \",account_credit:1\";\n    this.returnUrl = window.location.href;\n  }\n\n  async submit() {\n    if (this.creditAmount == null || this.creditAmount === \"\") {\n      return;\n    }\n\n    if (this.method === PaymentMethodType.PayPal) {\n      this.ppButtonFormRef.nativeElement.submit();\n      this.ppLoading = true;\n      return;\n    }\n    if (this.method === PaymentMethodType.BitPay) {\n      try {\n        const req = new BitPayInvoiceRequest();\n        req.email = this.email;\n        req.name = this.name;\n        req.credit = true;\n        req.amount = this.creditAmountNumber;\n        req.organizationId = this.organizationId;\n        req.userId = this.userId;\n        req.returnUrl = this.returnUrl;\n        this.formPromise = this.apiService.postBitPayInvoice(req);\n        const bitPayUrl: string = await this.formPromise;\n        this.platformUtilsService.launchUri(bitPayUrl);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      return;\n    }\n    try {\n      this.onAdded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  formatAmount() {\n    try {\n      if (this.creditAmount != null && this.creditAmount !== \"\") {\n        const floatAmount = Math.abs(parseFloat(this.creditAmount));\n        if (floatAmount > 0) {\n          this.creditAmount = parseFloat((Math.round(floatAmount * 100) / 100).toString())\n            .toFixed(2)\n            .toString();\n          return;\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.creditAmount = \"\";\n  }\n\n  get creditAmountNumber(): number {\n    if (this.creditAmount != null && this.creditAmount !== \"\") {\n      try {\n        return parseFloat(this.creditAmount);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return null;\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../request/organizationTaxInfoUpdateRequest\";\n\nexport class PaymentRequest extends OrganizationTaxInfoUpdateRequest {\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n}\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { PaymentRequest } from \"@bitwarden/common/models/request/paymentRequest\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-adjust-payment\",\n  templateUrl: \"adjust-payment.component.html\",\n})\nexport class AdjustPaymentComponent {\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent, { static: true }) taxInfoComponent: TaxInfoComponent;\n\n  @Input() currentType?: PaymentMethodType;\n  @Input() organizationId: string;\n  @Output() onAdjusted = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  paymentMethodType = PaymentMethodType;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new PaymentRequest();\n      this.formPromise = this.paymentComponent.createPaymentToken().then((result) => {\n        request.paymentToken = result[0];\n        request.paymentMethodType = result[1];\n        request.postalCode = this.taxInfoComponent.taxInfo.postalCode;\n        request.country = this.taxInfoComponent.taxInfo.country;\n        if (this.organizationId == null) {\n          return this.apiService.postAccountPayment(request);\n        } else {\n          request.taxId = this.taxInfoComponent.taxInfo.taxId;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          request.line1 = this.taxInfoComponent.taxInfo.line1;\n          request.line2 = this.taxInfoComponent.taxInfo.line2;\n          request.city = this.taxInfoComponent.taxInfo.city;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          return this.apiService.postOrganizationPayment(this.organizationId, request);\n        }\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedPaymentMethod\")\n      );\n      this.onAdjusted.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  changeCountry() {\n    if (this.taxInfoComponent.taxInfo.country === \"US\") {\n      this.paymentComponent.hideBank = !this.organizationId;\n    } else {\n      this.paymentComponent.hideBank = true;\n      if (this.paymentComponent.method === PaymentMethodType.BankAccount) {\n        this.paymentComponent.method = PaymentMethodType.Card;\n        this.paymentComponent.changeMethod();\n      }\n    }\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">\n      {{ (currentType != null ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n    </h3>\n    <app-payment [hideBank]=\"!organizationId\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changeCountry()\"></app-tax-info>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","<div class=\"page-header d-flex\">\n  <h1>\n    {{ \"billing\" | i18n }}\n  </h1>\n  <button\n    (click)=\"load()\"\n    class=\"btn btn-sm btn-outline-primary ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ (isCreditBalance ? \"accountCredit\" : \"accountBalance\") | i18n }}</h2>\n  <p class=\"text-lg\">\n    <strong>{{ creditOrBalance | currency: \"$\" }}</strong>\n  </p>\n  <p>{{ \"creditAppliedDesc\" | i18n }}</p>\n  <button\n    type=\"button\"\n    class=\"btn btn-outline-secondary\"\n    (click)=\"addCredit()\"\n    *ngIf=\"!showAddCredit\"\n  >\n    {{ \"addCredit\" | i18n }}\n  </button>\n  <app-add-credit\n    [organizationId]=\"organizationId\"\n    (onAdded)=\"closeAddCredit(true)\"\n    (onCanceled)=\"closeAddCredit(false)\"\n    *ngIf=\"showAddCredit\"\n  >\n  </app-add-credit>\n  <h2 class=\"spaced-header\">{{ \"paymentMethod\" | i18n }}</h2>\n  <p *ngIf=\"!paymentSource\">{{ \"noPaymentMethod\" | i18n }}</p>\n  <ng-container *ngIf=\"paymentSource\">\n    <app-callout\n      type=\"warning\"\n      title=\"{{ 'verifyBankAccount' | i18n }}\"\n      *ngIf=\"\n        paymentSource.type === paymentMethodType.BankAccount && paymentSource.needsVerification\n      \"\n    >\n      <p>{{ \"verifyBankAccountDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}</p>\n      <form\n        #verifyForm\n        class=\"form-inline\"\n        (ngSubmit)=\"verifyBank()\"\n        [appApiAction]=\"verifyBankPromise\"\n        ngNativeValidate\n      >\n        <label class=\"sr-only\" for=\"verifyAmount1\">{{ \"amount\" | i18n: \"1\" }}</label>\n        <div class=\"input-group mr-2\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">$0.</div>\n          </div>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"verifyAmount1\"\n            placeholder=\"xx\"\n            name=\"Amount1\"\n            [(ngModel)]=\"verifyAmount1\"\n            min=\"1\"\n            max=\"99\"\n            step=\"1\"\n            required\n          />\n        </div>\n        <label class=\"sr-only\" for=\"verifyAmount2\">{{ \"amount\" | i18n: \"2\" }}</label>\n        <div class=\"input-group mr-2\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">$0.</div>\n          </div>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"verifyAmount2\"\n            placeholder=\"xx\"\n            name=\"Amount2\"\n            [(ngModel)]=\"verifyAmount2\"\n            min=\"1\"\n            max=\"99\"\n            step=\"1\"\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          class=\"btn btn-outline-primary btn-submit\"\n          [disabled]=\"verifyForm.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"verifyBankAccount\" | i18n }}</span>\n        </button>\n      </form>\n    </app-callout>\n    <p>\n      <i\n        class=\"bwi bwi-fw\"\n        [ngClass]=\"{\n          'bwi-credit-card': paymentSource.type === paymentMethodType.Card,\n          'bwi-bank': paymentSource.type === paymentMethodType.BankAccount,\n          'bwi-money': paymentSource.type === paymentMethodType.Check,\n          'bwi-paypal text-primary': paymentSource.type === paymentMethodType.PayPal,\n          'bwi-apple text-muted': paymentSource.type === paymentMethodType.AppleInApp,\n          'bwi-google text-muted': paymentSource.type === paymentMethodType.GoogleInApp\n        }\"\n      ></i>\n      <span *ngIf=\"paymentSourceInApp\">{{ \"inAppPurchase\" | i18n }}</span>\n      {{ paymentSource.description }}\n    </p>\n  </ng-container>\n  <button\n    type=\"button\"\n    class=\"btn btn-outline-secondary\"\n    (click)=\"changePayment()\"\n    *ngIf=\"!showAdjustPayment\"\n  >\n    {{ (paymentSource ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n  </button>\n  <app-adjust-payment\n    [currentType]=\"paymentSource != null ? paymentSource.type : null\"\n    [organizationId]=\"organizationId\"\n    (onAdjusted)=\"closePayment(true)\"\n    (onCanceled)=\"closePayment(false)\"\n    *ngIf=\"showAdjustPayment\"\n  >\n  </app-adjust-payment>\n  <h2 class=\"spaced-header\">{{ \"invoices\" | i18n }}</h2>\n  <p *ngIf=\"!invoices || !invoices.length\">{{ \"noInvoices\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n    <tbody>\n      <tr *ngFor=\"let i of invoices\">\n        <td>{{ i.date | date: \"mediumDate\" }}</td>\n        <td>\n          <a\n            href=\"{{ i.pdfUrl }}\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            class=\"mr-2\"\n            appA11yTitle=\"{{ 'downloadInvoice' | i18n }}\"\n          >\n            <i class=\"bwi bwi-file-pdf\" aria-hidden=\"true\"></i\n          ></a>\n          <a href=\"{{ i.url }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ 'viewInvoice' | i18n }}\">\n            {{ \"invoiceNumber\" | i18n: i.number }}</a\n          >\n        </td>\n        <td>{{ i.amount | currency: \"$\" }}</td>\n        <td>\n          <span *ngIf=\"i.paid\">\n            <i class=\"bwi bwi-check text-success\" aria-hidden=\"true\"></i>\n            {{ \"paid\" | i18n }}\n          </span>\n          <span *ngIf=\"!i.paid\">\n            <i class=\"bwi bwi-exclamation-circle text-muted\" aria-hidden=\"true\"></i>\n            {{ \"unpaid\" | i18n }}\n          </span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <h2 class=\"spaced-header\">{{ \"transactions\" | i18n }}</h2>\n  <p *ngIf=\"!transactions || !transactions.length\">{{ \"noTransactions\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n    <tbody>\n      <tr *ngFor=\"let t of transactions\">\n        <td>{{ t.createdDate | date: \"mediumDate\" }}</td>\n        <td>\n          <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n            {{ \"chargeNoun\" | i18n }}\n          </span>\n          <span *ngIf=\"t.type === transactionType.Refund\">{{ \"refundNoun\" | i18n }}</span>\n        </td>\n        <td>\n          <i\n            class=\"bwi bwi-fw\"\n            *ngIf=\"t.paymentMethodType\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-credit-card': t.paymentMethodType === paymentMethodType.Card,\n              'bwi-bank':\n                t.paymentMethodType === paymentMethodType.BankAccount ||\n                t.paymentMethodType === paymentMethodType.WireTransfer,\n              'bwi-bitcoin text-warning': t.paymentMethodType === paymentMethodType.BitPay,\n              'bwi-paypal text-primary': t.paymentMethodType === paymentMethodType.PayPal\n            }\"\n          ></i>\n          {{ t.details }}\n        </td>\n        <td\n          [ngClass]=\"{ 'text-strike': t.refunded }\"\n          title=\"{{ (t.refunded ? 'refunded' : '') | i18n }}\"\n        >\n          {{ t.amount | currency: \"$\" }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <small class=\"text-muted\">* {{ \"chargesStatement\" | i18n: \"BITWARDEN\" }}</small>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { TransactionType } from \"@bitwarden/common/enums/transactionType\";\nimport { VerifyBankRequest } from \"@bitwarden/common/models/request/verifyBankRequest\";\nimport { BillingResponse } from \"@bitwarden/common/models/response/billingResponse\";\n\n@Component({\n  selector: \"app-org-billing\",\n  templateUrl: \"./organization-billing.component.html\",\n})\nexport class OrganizationBillingComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  showAdjustPayment = false;\n  showAddCredit = false;\n  billing: BillingResponse;\n  paymentMethodType = PaymentMethodType;\n  transactionType = TransactionType;\n  organizationId: string;\n  verifyAmount1: number;\n  verifyAmount2: number;\n\n  verifyBankPromise: Promise<any>;\n\n  // TODO - Make sure to properly split out the billing/invoice and payment method/account during org admin refresh\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.firstLoaded = true;\n    });\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    if (this.organizationId != null) {\n      this.billing = await this.apiService.getOrganizationBilling(this.organizationId);\n    }\n    this.loading = false;\n  }\n\n  async verifyBank() {\n    if (this.loading) {\n      return;\n    }\n\n    try {\n      const request = new VerifyBankRequest();\n      request.amount1 = this.verifyAmount1;\n      request.amount2 = this.verifyAmount2;\n      this.verifyBankPromise = this.apiService.postOrganizationVerifyBank(\n        this.organizationId,\n        request\n      );\n      await this.verifyBankPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"verifiedBankAccount\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  addCredit() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"addCredit\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAddCredit = true;\n  }\n\n  closeAddCredit(load: boolean) {\n    this.showAddCredit = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  changePayment() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"changePaymentMethod\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAdjustPayment = true;\n  }\n\n  closePayment(load: boolean) {\n    this.showAdjustPayment = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get isCreditBalance() {\n    return this.billing == null || this.billing.balance <= 0;\n  }\n\n  get creditOrBalance() {\n    return Math.abs(this.billing != null ? this.billing.balance : 0);\n  }\n\n  get paymentSource() {\n    return this.billing != null ? this.billing.paymentSource : null;\n  }\n\n  get paymentSourceInApp() {\n    return (\n      this.paymentSource != null &&\n      (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n        this.paymentSource.type === PaymentMethodType.GoogleInApp)\n    );\n  }\n\n  get invoices() {\n    return this.billing != null ? this.billing.invoices : null;\n  }\n\n  get transactions() {\n    return this.billing != null ? this.billing.transactions : null;\n  }\n}\n","export enum OrganizationApiKeyType {\n  Default = 0,\n  BillingSync = 1,\n  Scim = 2,\n}\n","export enum OrganizationConnectionType {\n  CloudBillingSync = 1,\n  Scim = 2,\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class BillingSyncConfigApi extends BaseResponse {\n  billingSyncKey: string;\n\n  constructor(data: any) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.billingSyncKey = this.getResponseProperty(\"BillingSyncKey\");\n  }\n}\n","export class BillingSyncConfigRequest {\n  constructor(private billingSyncKey: string) {}\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\n\nimport { BillingSyncConfigRequest } from \"./billingSyncConfigRequest\";\nimport { ScimConfigRequest } from \"./scimConfigRequest\";\n\n/**API request config types for OrganizationConnectionRequest */\nexport type OrganizationConnectionRequestConfigs = BillingSyncConfigRequest | ScimConfigRequest;\n\nexport class OrganizationConnectionRequest {\n  constructor(\n    public organizationId: string,\n    public type: OrganizationConnectionType,\n    public enabled: boolean,\n    public config: OrganizationConnectionRequestConfigs\n  ) {}\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/enums/organizationConnectionType\";\nimport { BillingSyncConfigApi } from \"@bitwarden/common/models/api/billingSyncConfigApi\";\nimport { BillingSyncConfigRequest } from \"@bitwarden/common/models/request/billingSyncConfigRequest\";\nimport { OrganizationConnectionRequest } from \"@bitwarden/common/models/request/organizationConnectionRequest\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/models/response/organizationConnectionResponse\";\n\n@Component({\n  selector: \"app-billing-sync-key\",\n  templateUrl: \"billing-sync-key.component.html\",\n})\nexport class BillingSyncKeyComponent {\n  entityId: string;\n  existingConnectionId: string;\n  billingSyncKey: string;\n  setParentConnection: (connection: OrganizationConnectionResponse<BillingSyncConfigApi>) => void;\n\n  formPromise: Promise<OrganizationConnectionResponse<BillingSyncConfigApi>> | Promise<void>;\n\n  constructor(private apiService: ApiService, private logService: LogService) {}\n\n  async submit() {\n    try {\n      const request = new OrganizationConnectionRequest(\n        this.entityId,\n        OrganizationConnectionType.CloudBillingSync,\n        true,\n        new BillingSyncConfigRequest(this.billingSyncKey)\n      );\n      if (this.existingConnectionId == null) {\n        this.formPromise = this.apiService.createOrganizationConnection(\n          request,\n          BillingSyncConfigApi\n        );\n      } else {\n        this.formPromise = this.apiService.updateOrganizationConnection(\n          request,\n          BillingSyncConfigApi,\n          this.existingConnectionId\n        );\n      }\n      const response = (await this\n        .formPromise) as OrganizationConnectionResponse<BillingSyncConfigApi>;\n      this.existingConnectionId = response?.id;\n      this.billingSyncKey = response?.config?.billingSyncKey;\n      this.setParentConnection(response);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async deleteConnection() {\n    this.formPromise = this.apiService.deleteOrganizationConnection(this.existingConnectionId);\n    await this.formPromise;\n    this.setParentConnection(null);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"billingSyncTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"billingSyncTitle\">{{ \"manageBillingSync\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"billingSyncKeyDesc\" | i18n }}</p>\n        <div class=\"form-group\">\n          <label for=\"billingSyncKey\"\n            >{{ \"billingSyncKey\" | i18n }} <small>(</small><small>{{ \"required\" | i18n }}</small\n            ><small>)</small></label\n          >\n          <input\n            id=\"billingSyncKey\"\n            type=\"input\"\n            name=\"billingSyncKey\"\n            class=\"form-control\"\n            [(ngModel)]=\"billingSyncKey\"\n            required\n            appAutofocus\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"deleteConnection()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            [disabled]=\"form.loading\"\n          >\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"form.loading\" aria-hidden=\"true\"></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class OrganizationApiKeyRequest extends SecretVerificationRequest {\n  type: OrganizationApiKeyType = OrganizationApiKeyType.Default;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"billingSyncApiKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"billingSyncApiKeyTitle\">\n          {{ (hasBillingToken ? \"viewBillingSyncToken\" : \"generateBillingSyncToken\") | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-user-verification\n          [(ngModel)]=\"masterPassword\"\n          ngDefaultControl\n          name=\"secret\"\n          *ngIf=\"!clientSecret\"\n        >\n        </app-user-verification>\n        <ng-container *ngIf=\"clientSecret && showRotateScreen\">\n          <p>{{ \"rotateBillingSyncTokenTitle\" | i18n }}</p>\n          <app-callout type=\"warning\">\n            {{ \"rotateBillingSyncTokenWarning\" | i18n }}\n          </app-callout>\n        </ng-container>\n\n        <div *ngIf=\"clientSecret && !showRotateScreen\">\n          <p>{{ \"copyPasteBillingSync\" | i18n }}</p>\n          <label for=\"clientSecret\">Billing Sync Key</label>\n          <div class=\"input-group\">\n            <input\n              id=\"clientSecret\"\n              class=\"form-control text-monospace\"\n              type=\"text\"\n              [(ngModel)]=\"clientSecret\"\n              name=\"clientSecret\"\n              disabled\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                (click)=\"copy()\"\n                [appA11yTitle]=\"'copy' | i18n\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"small text-muted mt-2\" *ngIf=\"showLastSyncText\">\n            <b class=\"font-weight-semibold\">{{ \"lastSync\" | i18n }}:</b>\n            {{ lastSyncDate | date: \"medium\" }}\n          </div>\n          <div class=\"small text-danger mt-2\" *ngIf=\"showAwaitingSyncText\">\n            <i class=\"bwi bwi-error\"></i>\n            {{\n              (daysBetween === 1 ? \"awaitingSyncSingular\" : \"awaitingSyncPlural\")\n                | i18n: daysBetween\n            }}\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!clientSecret || showRotateScreen\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            *ngIf=\"form.loading\"\n          ></i>\n          <span>\n            {{ submitButtonText }}\n          </span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary\"\n          data-dismiss=\"modal\"\n          *ngIf=\"!showRotateScreen\"\n        >\n          {{ \"close\" | i18n }}\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary\"\n          *ngIf=\"showRotateScreen\"\n          (click)=\"cancelRotate()\"\n        >\n          {{ \"cancel\" | i18n }}\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary\"\n          *ngIf=\"clientSecret && !showRotateScreen\"\n          (click)=\"rotateToken()\"\n        >\n          {{ \"rotateToken\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/enums/organizationApiKeyType\";\nimport { OrganizationApiKeyRequest } from \"@bitwarden/common/models/request/organizationApiKeyRequest\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/apiKeyResponse\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-billing-sync-api-key\",\n  templateUrl: \"billing-sync-api-key.component.html\",\n})\nexport class BillingSyncApiKeyComponent {\n  organizationId: string;\n  hasBillingToken: boolean;\n\n  showRotateScreen: boolean;\n  masterPassword: Verification;\n  formPromise: Promise<ApiKeyResponse>;\n  clientSecret?: string;\n  keyRevisionDate?: Date;\n  lastSyncDate?: Date = null;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  copy() {\n    this.platformUtilsService.copyToClipboard(this.clientSecret);\n  }\n\n  async submit() {\n    if (this.showRotateScreen) {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword, OrganizationApiKeyRequest)\n        .then((request) => {\n          request.type = OrganizationApiKeyType.BillingSync;\n          return this.apiService.postOrganizationRotateApiKey(this.organizationId, request);\n        });\n      const response = await this.formPromise;\n      await this.load(response);\n      this.showRotateScreen = false;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"billingSyncApiKeyRotated\")\n      );\n    } else {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword, OrganizationApiKeyRequest)\n        .then((request) => {\n          request.type = OrganizationApiKeyType.BillingSync;\n          return this.apiService.postOrganizationApiKey(this.organizationId, request);\n        });\n      const response = await this.formPromise;\n      await this.load(response);\n    }\n  }\n\n  async load(response: ApiKeyResponse) {\n    this.clientSecret = response.apiKey;\n    this.keyRevisionDate = response.revisionDate;\n    this.hasBillingToken = true;\n    const syncStatus = await this.apiService.getSponsorshipSyncStatus(this.organizationId);\n    this.lastSyncDate = syncStatus.lastSyncDate;\n  }\n\n  cancelRotate() {\n    this.showRotateScreen = false;\n  }\n\n  rotateToken() {\n    this.showRotateScreen = true;\n  }\n\n  private dayDiff(date1: Date, date2: Date): number {\n    const diffTime = Math.abs(date2.getTime() - date1.getTime());\n    return Math.round(diffTime / (1000 * 60 * 60 * 24));\n  }\n\n  get submitButtonText(): string {\n    if (this.showRotateScreen) {\n      return this.i18nService.t(\"rotateToken\");\n    }\n\n    return this.i18nService.t(this.hasBillingToken ? \"continue\" : \"generateToken\");\n  }\n\n  get showLastSyncText(): boolean {\n    // If the keyRevisionDate is later than the lastSyncDate we need to show\n    // a warning that they need to put the billing sync key in their self hosted install\n    return this.lastSyncDate && this.lastSyncDate > this.keyRevisionDate;\n  }\n\n  get showAwaitingSyncText(): boolean {\n    return this.lastSyncDate && this.lastSyncDate <= this.keyRevisionDate;\n  }\n\n  get daysBetween(): number {\n    return this.dayDiff(this.keyRevisionDate, new Date());\n  }\n}\n","export class StorageRequest {\n  storageGbAdjustment: number;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ (add ? \"addStorage\" : \"removeStorage\") | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"storageAdjustment\">{{\n          (add ? \"gbStorageAdd\" : \"gbStorageRemove\") | i18n\n        }}</label>\n        <input\n          id=\"storageAdjustment\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"StroageGbAdjustment\"\n          [(ngModel)]=\"storageAdjustment\"\n          min=\"0\"\n          max=\"99\"\n          step=\"1\"\n          required\n        />\n      </div>\n    </div>\n    <div *ngIf=\"add\" class=\"mb-3\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ storageAdjustment || 0 }} GB &times;\n      {{ storageGbPrice | currency: \"$\" }} = {{ adjustedStorageTotal | currency: \"$\" }} /{{\n        interval | i18n\n      }}\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n    <small class=\"d-block text-muted mt-3\">\n      {{ (add ? \"storageAddNote\" : \"storageRemoveNote\") | i18n }}\n    </small>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StorageRequest } from \"@bitwarden/common/models/request/storageRequest\";\nimport { PaymentResponse } from \"@bitwarden/common/models/response/paymentResponse\";\n\nimport { PaymentComponent } from \"./payment.component\";\n\n@Component({\n  selector: \"app-adjust-storage\",\n  templateUrl: \"adjust-storage.component.html\",\n})\nexport class AdjustStorageComponent {\n  @Input() storageGbPrice = 0;\n  @Input() add = true;\n  @Input() organizationId: string;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter<number>();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n\n  storageAdjustment = 0;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new StorageRequest();\n      request.storageGbAdjustment = this.storageAdjustment;\n      if (!this.add) {\n        request.storageGbAdjustment *= -1;\n      }\n\n      let paymentFailed = false;\n      const action = async () => {\n        let response: Promise<PaymentResponse>;\n        if (this.organizationId == null) {\n          response = this.formPromise = this.apiService.postAccountStorage(request);\n        } else {\n          response = this.formPromise = this.apiService.postOrganizationStorage(\n            this.organizationId,\n            request\n          );\n        }\n        const result = await response;\n        if (result != null && result.paymentIntentClientSecret != null) {\n          try {\n            await this.paymentComponent.handleStripeCardPayment(\n              result.paymentIntentClientSecret,\n              null\n            );\n          } catch {\n            paymentFailed = true;\n          }\n        }\n      };\n      this.formPromise = action();\n      await this.formPromise;\n      this.onAdjusted.emit(this.storageAdjustment);\n      if (paymentFailed) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          null,\n          this.i18nService.t(\"couldNotChargeCardPayInvoice\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"../billing\"], { relativeTo: this.activatedRoute });\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"adjustedStorage\", request.storageGbAdjustment.toString())\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  get adjustedStorageTotal(): number {\n    return this.storageGbPrice * this.storageAdjustment;\n  }\n}\n","export class OrganizationSubscriptionUpdateRequest {\n  constructor(public seatAdjustment: number, public maxAutoscaleSeats?: number) {}\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationSubscriptionUpdateRequest } from \"@bitwarden/common/models/request/organizationSubscriptionUpdateRequest\";\n\n@Component({\n  selector: \"app-adjust-subscription\",\n  templateUrl: \"adjust-subscription.component.html\",\n})\nexport class AdjustSubscription {\n  @Input() organizationId: string;\n  @Input() maxAutoscaleSeats: number;\n  @Input() currentSeatCount: number;\n  @Input() seatPrice = 0;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter();\n\n  formPromise: Promise<any>;\n  limitSubscription: boolean;\n  newSeatCount: number;\n  newMaxSeats: number;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  ngOnInit() {\n    this.limitSubscription = this.maxAutoscaleSeats != null;\n    this.newSeatCount = this.currentSeatCount;\n    this.newMaxSeats = this.maxAutoscaleSeats;\n  }\n\n  async submit() {\n    try {\n      const seatAdjustment = this.newSeatCount - this.currentSeatCount;\n      const request = new OrganizationSubscriptionUpdateRequest(seatAdjustment, this.newMaxSeats);\n      this.formPromise = this.apiService.postOrganizationUpdateSubscription(\n        this.organizationId,\n        request\n      );\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"subscriptionUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.onAdjusted.emit();\n  }\n\n  limitSubscriptionChanged() {\n    if (!this.limitSubscription) {\n      this.newMaxSeats = null;\n    }\n  }\n\n  get adjustedSeatTotal(): number {\n    return this.newSeatCount * this.seatPrice;\n  }\n\n  get maxSeatTotal(): number {\n    return this.newMaxSeats * this.seatPrice;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"newSeatCount\">{{ \"subscriptionSeats\" | i18n }}</label>\n        <input\n          id=\"newSeatCount\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"NewSeatCount\"\n          [(ngModel)]=\"newSeatCount\"\n          min=\"0\"\n          step=\"1\"\n          required\n        />\n        <small class=\"d-block text-muted mb-4\">\n          <strong>{{ \"total\" | i18n }}:</strong> {{ newSeatCount || 0 }} &times;\n          {{ seatPrice | currency: \"$\" }} = {{ adjustedSeatTotal | currency: \"$\" }} /\n          {{ interval | i18n }}\n        </small>\n      </div>\n    </div>\n    <div class=\"row mb-4\">\n      <div class=\"form-group col-sm\">\n        <div class=\"form-check\">\n          <input\n            id=\"limitSubscription\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"LimitSubscription\"\n            [(ngModel)]=\"limitSubscription\"\n            (change)=\"limitSubscriptionChanged()\"\n          />\n          <label for=\"limitSubscription\">{{ \"limitSubscription\" | i18n }}</label>\n        </div>\n        <small class=\"d-block text-muted\">{{ \"limitSubscriptionDesc\" | i18n }}</small>\n      </div>\n    </div>\n    <div class=\"row mb-4\" [hidden]=\"!limitSubscription\">\n      <div class=\"form-group col-sm\">\n        <label for=\"maxAutoscaleSeats\">{{ \"maxSeatLimit\" | i18n }}</label>\n        <input\n          id=\"maxAutoscaleSeats\"\n          class=\"form-control col-6\"\n          type=\"number\"\n          name=\"MaxAutoscaleSeats\"\n          [(ngModel)]=\"newMaxSeats\"\n          [min]=\"newSeatCount == null ? 1 : newSeatCount\"\n          step=\"1\"\n          [required]=\"limitSubscription\"\n        />\n        <small class=\"d-block text-muted\">\n          <strong>{{ \"maxSeatCost\" | i18n }}:</strong> {{ newMaxSeats || 0 }} &times;\n          {{ seatPrice | currency: \"$\" }} = {{ maxSeatTotal | currency: \"$\" }} /\n          {{ interval | i18n }}\n        </small>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"save\" | i18n }}</span>\n    </button>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\n@Component({\n  selector: \"app-change-plan\",\n  templateUrl: \"change-plan.component.html\",\n})\nexport class ChangePlanComponent {\n  @Input() organizationId: string;\n  @Output() onChanged = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<any>;\n  defaultUpgradePlan: PlanType = PlanType.FamiliesAnnually;\n  defaultUpgradeProduct: ProductType = ProductType.Families;\n\n  constructor(private logService: LogService) {}\n\n  async submit() {\n    try {\n      this.onChanged.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<div class=\"card card-org-plans\">\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h2 class=\"card-body-header\">{{ \"changeBillingPlan\" | i18n }}</h2>\n    <p class=\"mb-0\">{{ \"changeBillingPlanUpgrade\" | i18n }}</p>\n    <app-organization-plans\n      [showFree]=\"false\"\n      [showCancel]=\"true\"\n      [plan]=\"defaultUpgradePlan\"\n      [product]=\"defaultUpgradeProduct\"\n      [organizationId]=\"organizationId\"\n      (onCanceled)=\"cancel()\"\n    >\n    </app-organization-plans>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\n\n@Component({\n  selector: \"app-download-license\",\n  templateUrl: \"download-license.component.html\",\n})\nexport class DownloadLicenseComponent {\n  @Input() organizationId: string;\n  @Output() onDownloaded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  installationId: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private fileDownloadService: FileDownloadService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    if (this.installationId == null || this.installationId === \"\") {\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.getOrganizationLicense(\n        this.organizationId,\n        this.installationId\n      );\n      const license = await this.formPromise;\n      const licenseString = JSON.stringify(license, null, 2);\n      this.fileDownloadService.download({\n        fileName: \"bitwarden_organization_license.json\",\n        blobData: licenseString,\n      });\n      this.onDownloaded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"downloadLicense\" | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <div class=\"d-flex\">\n          <label for=\"installationId\">{{ \"enterInstallationId\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/licensing-on-premise/#organization-account-sharing\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"installationId\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"InstallationId\"\n          [(ngModel)]=\"installationId\"\n          required\n        />\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\n\n// Component is used so that the SVG can embed CSS color variables\n@Component({\n  selector: \"app-image-org-subscription-hidden\",\n  templateUrl: \"image-subscription-hidden.component.svg\",\n})\nexport class ImageSubscriptionHiddenComponent {}\n","<svg width=\"216\" height=\"231\" viewBox=\"0 0 216 231\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M133.356 85.6618C133.136 85.43 132.871 85.2457 132.577 85.1198C132.283 84.9939 131.968 84.93 131.648 84.9318H87.8482C87.5289 84.93 87.2113 84.9939 86.9175 85.1198C86.6237 85.2457 86.359 85.43 86.14 85.6618C85.9083 85.8808 85.7239 86.1473 85.598 86.4411C85.4721 86.7349 85.4082 87.0506 85.41 87.37V116.57C85.4192 118.793 85.8499 120.994 86.6802 123.056C87.4705 125.091 88.5326 127.011 89.8375 128.761C91.1789 130.515 92.6808 132.137 94.3233 133.612C95.8472 135.01 97.4532 136.318 99.1304 137.528C100.59 138.565 102.123 139.547 103.729 140.474C105.335 141.401 106.469 142.027 107.131 142.354C107.799 142.682 108.339 142.941 108.741 143.113C109.055 143.264 109.4 143.339 109.748 143.332C110.091 143.337 110.431 143.257 110.737 143.102C111.146 142.923 111.679 142.671 112.354 142.343C113.03 142.014 114.179 141.386 115.756 140.463C117.333 139.539 118.884 138.554 120.355 137.517C122.034 136.306 123.642 134.999 125.169 133.601C126.814 132.128 128.316 130.504 129.655 128.75C130.958 126.998 132.021 125.08 132.813 123.045C133.645 120.983 134.075 118.782 134.083 116.559V87.3591C134.085 87.0415 134.021 86.7276 133.895 86.4356C133.769 86.1436 133.586 85.8808 133.356 85.6618ZM127.71 116.836C127.71 127.421 109.748 136.514 109.748 136.514V91.1879H127.71V116.836Z\" fill=\"var(--color-secondary-700)\"/>\n  <path d=\"M24.6216 122.3C24.7144 123.4 25.6819 124.217 26.7825 124.125C27.8832 124.032 28.7002 123.064 28.6074 121.964L24.6216 122.3ZM151.501 45.7445C152.57 45.4679 153.213 44.3768 152.936 43.3074L148.429 25.8809C148.152 24.8115 147.061 24.1688 145.992 24.4454C144.922 24.722 144.28 25.8131 144.556 26.8825L148.563 42.3728L133.073 46.3793C132.003 46.6559 131.361 47.747 131.637 48.8164C131.914 49.8858 133.005 50.5285 134.074 50.2519L151.501 45.7445ZM28.6074 121.964C26.6788 99.0874 34.4658 75.5543 51.9661 58.054L49.1377 55.2256C30.7695 73.5938 22.5982 98.2999 24.6216 122.3L28.6074 121.964ZM51.9661 58.054C78.5404 31.4797 119.036 27.3026 149.985 45.5315L152.015 42.0849C119.534 22.9534 77.0327 27.3306 49.1377 55.2256L51.9661 58.054Z\" fill=\"var(--color-secondary-700)\"/>\n  <path d=\"M67.4747 185.062C66.4089 185.352 65.7801 186.451 66.0701 187.517L70.797 204.885C71.0871 205.951 72.1862 206.58 73.252 206.29C74.3179 205.999 74.9467 204.9 74.6567 203.834L70.455 188.396L85.8934 184.194C86.9592 183.904 87.5881 182.805 87.298 181.739C87.008 180.674 85.9088 180.045 84.843 180.335L67.4747 185.062ZM192.478 100.283C192.286 99.1952 191.248 98.4697 190.16 98.6625C189.072 98.8552 188.347 99.8931 188.54 100.981L192.478 100.283ZM166.138 172.225C139.813 198.55 99.8271 202.897 68.9932 185.255L67.0068 188.727C99.3669 207.242 141.333 202.687 168.966 175.054L166.138 172.225ZM188.54 100.981C192.985 126.07 185.516 152.847 166.138 172.225L168.966 175.054C189.307 154.713 197.142 126.603 192.478 100.283L188.54 100.981Z\" fill=\"var(--color-secondary-700)\"/>\n  <path d=\"M37.726 108.132C39.283 92.1931 46.1655 76.6765 58.3734 64.4686C75.2893 47.5527 98.5583 40.8618 120.5 44.396\" stroke=\"var(--color-secondary-700)\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n  <path d=\"M180.595 119.132C179.653 136.119 172.693 152.834 159.717 165.811C144.44 181.088 123.982 188.025 104 186.623\" stroke=\"var(--color-secondary-700)\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n  <rect x=\"153.5\" y=\"56.1317\" width=\"49\" height=\"34\" rx=\"2.5\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <path d=\"M153.5 63.6317V63.6317C153.5 66.9454 156.186 69.6317 159.5 69.6317H172.509M202.5 63.6317V63.6317C202.5 66.9454 199.814 69.6317 196.5 69.6317H183.491\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <mask id=\"path-8-inside-1_1000_26057\" fill=\"white\">\n    <rect x=\"172\" y=\"65.6317\" width=\"12\" height=\"9\" rx=\"1.25\"/>\n  </mask>\n  <rect x=\"172\" y=\"65.6317\" width=\"12\" height=\"9\" rx=\"1.25\" stroke=\"var(--color-secondary-700)\" stroke-width=\"6\" mask=\"url(#path-8-inside-1_1000_26057)\"/>\n  <path d=\"M187 54.6317C187 54.6317 187 53.6317 187 52.6317C187 51.6317 186.053 50.6317 185.105 50.6317C184.158 50.6317 171.842 50.6317 170.895 50.6317C169.947 50.6317 169 51.6317 169 52.6317C169 53.6317 169 54.6317 169 54.6317\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <circle cx=\"48\" cy=\"141\" r=\"10.5\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <path d=\"M64.9935 168.5H64.9126H64.8318H64.7512H64.6708H64.5905H64.5104H64.4304H64.3506H64.2709H64.1914H64.1121H64.0329H63.9538H63.8749H63.7962H63.7176H63.6392H63.5609H63.4828H63.4048H63.3269H63.2492H63.1717H63.0943H63.017H62.9399H62.8629H62.7861H62.7094H62.6329H62.5565H62.4802H62.4041H62.3281H62.2523H62.1766H62.101H62.0256H61.9503H61.8751H61.8001H61.7252H61.6504H61.5758H61.5013H61.4269H61.3527H61.2786H61.2046H61.1308H61.0571H60.9835H60.91H60.8367H60.7635H60.6904H60.6175H60.5446H60.4719H60.3993H60.3269H60.2545H60.1823H60.1102H60.0382H59.9664H59.8946H59.823H59.7515H59.6801H59.6088H59.5376H59.4666H59.3956H59.3248H59.2541H59.1835H59.113H59.0426H58.9724H58.9022H58.8322H58.7622H58.6924H58.6226H58.553H58.4835H58.4141H58.3448H58.2756H58.2065H58.1375H58.0686H57.9998H57.9311H57.8625H57.794H57.7256H57.6572H57.589H57.5209H57.4529H57.385H57.3172H57.2494H57.1818H57.1142H57.0468H56.9794H56.9121H56.8449H56.7779H56.7108H56.6439H56.5771H56.5103H56.4437H56.3771H56.3106H56.2442H56.1779H56.1117H56.0455H55.9794H55.9134H55.8475H55.7817H55.7159H55.6502H55.5846H55.5191H55.4537H55.3883H55.323H55.2578H55.1926H55.1275H55.0625H54.9976H54.9328H54.868H54.8032H54.7386H54.674H54.6095H54.5451H54.4807H54.4164H54.3521H54.2879H54.2238H54.1598H54.0958H54.0318H53.968H53.9042H53.8404H53.7767H53.7131H53.6495H53.586H53.5226H53.4592H53.3958H53.3325H53.2693H53.2061H53.143H53.0799H53.0169H52.9539H52.891H52.8281H52.7653H52.7025H52.6398H52.5771H52.5145H52.4519H52.3894H52.3269H52.2645H52.202H52.1397H52.0774H52.0151H51.9528H51.8907H51.8285H51.7664H51.7043H51.6423H51.5803H51.5183H51.4564H51.3945H51.3326H51.2708H51.209H51.1472H51.0855H51.0238H50.9621H50.9005H50.8389H50.7773H50.7157H50.6542H50.5927H50.5312H50.4698H50.4084H50.347H50.2856H50.2243H50.1629H50.1016H50.0404H49.9791H49.9178H49.8566H49.7954H49.7342H49.6731H49.6119H49.5508H49.4896H49.4285H49.3674H49.3064H49.2453H49.1842H49.1232H49.0622H49.0011H48.9401H48.8791H48.8181H48.7571H48.6962H48.6352H48.5742H48.5133H48.4523H48.3913H48.3304H48.2694H48.2085H48.1475H48.0866H48.0257H47.9647H47.9038H47.8428H47.7819H47.7209H47.6599H47.599H47.538H47.477H47.416H47.3551H47.2941H47.2331H47.172H47.111H47.05H46.9889H46.9279H46.8668H46.8057H46.7446H46.6835H46.6224H46.5612H46.5001H46.4389H46.3777H46.3165H46.2553H46.194H46.1328H46.0715H46.0102H45.9489H45.8875H45.8261H45.7647H45.7033H45.6418H45.5804H45.5189H45.4573H45.3958H45.3342H45.2726H45.2109H45.1493H45.0876H45.0258H44.9641H44.9023H44.8404H44.7786H44.7166H44.6547H44.5927H44.5307H44.4687H44.4066H44.3445H44.2823H44.2201H44.1578H44.0956H44.0332H43.9709H43.9084H43.846H43.7835H43.7209H43.6583H43.5957H43.533H43.4703H43.4075H43.3447H43.2818H43.2189H43.1559H43.0929H43.0298H42.9666H42.9034H42.8402H42.7769H42.7135H42.6501H42.5867H42.5231H42.4596H42.3959H42.3322H42.2685H42.2046H42.1408H42.0768H42.0128H41.9487H41.8846H41.8204H41.7562H41.6918H41.6274H41.563H41.4985H41.4339H41.3692H41.3045H41.2397H41.1748H41.1098H41.0448H40.9797H40.9146H40.8493H40.784H40.7186H40.6532H40.5876H40.522H40.4563H40.3905H40.3247H40.2588H40.1928H40.1267H40.0605H39.9942H39.9279H39.8615H39.795H39.7284H39.6617H39.5949H39.5281H39.4611H39.3941H39.327H39.2598H39.1925H39.1251H39.0576H38.9901H38.9224H38.8547H38.7868H38.7189H38.6508H38.5827H38.5145H38.4461H38.3777H38.3092H38.2406H38.1719H38.103H38.0341H37.9651H37.896H37.8267H37.7574H37.688H37.6184H37.5488H37.479H37.4092H37.3392H37.2691H37.199H37.1287H37.0583H36.9878H36.9171H36.8464H36.7755H36.7046H36.6335H36.5623H36.491H36.4196H36.3481H36.2764H36.2046H36.1328H36.0607H35.9886H35.9164H35.844H35.7715H35.6989H35.6262H35.5533H35.4803H35.4072H35.334H35.2606H35.1872H35.1135H35.0398H34.9659H34.8919H34.8178H34.7436H34.6692H34.5947H34.52H34.4452H34.3703H34.2952H34.2201H34.1447H34.0693H33.9937H33.9179H33.8421H33.7661H33.6899H33.6136H33.5372H33.4606H33.3839H33.3071H33.2301H33.1529H33.0756H32.9982H32.9206H32.8429H32.765H32.687H32.6088H32.5305H32.452H32.3734H32.2946H32.2157H32.1367H32.0574H31.978H31.8985H31.8188H31.739H31.659H31.5788H31.4985H31.418H31.3374H31.2566H31.1757H31.0946H31.0133H30.9318H30.8503H30.7685H30.6866H30.6045H30.5222H30.4398H30.3572H30.2745H30.1915C30.0489 168.5 29.9693 168.466 29.9164 168.433C29.8553 168.394 29.7779 168.322 29.702 168.192C29.5361 167.906 29.4608 167.48 29.5197 167.111C30.9235 158.322 38.6474 151.574 47.9925 151.574C57.3375 151.574 65.0615 158.322 66.4652 167.111C66.5751 167.799 66.4037 168.054 66.3124 168.149C66.1888 168.278 65.8364 168.5 64.9935 168.5Z\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <circle cx=\"20\" cy=\"141\" r=\"10.5\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <path d=\"M36.9935 168.5H36.9126H36.8318H36.7512H36.6708H36.5905H36.5104H36.4304H36.3506H36.2709H36.1914H36.1121H36.0329H35.9538H35.8749H35.7962H35.7176H35.6392H35.5609H35.4828H35.4048H35.3269H35.2492H35.1717H35.0943H35.017H34.9399H34.8629H34.7861H34.7094H34.6329H34.5565H34.4802H34.4041H34.3281H34.2523H34.1766H34.101H34.0256H33.9503H33.8751H33.8001H33.7252H33.6504H33.5758H33.5013H33.4269H33.3527H33.2786H33.2046H33.1308H33.0571H32.9835H32.91H32.8367H32.7635H32.6904H32.6175H32.5446H32.4719H32.3993H32.3269H32.2545H32.1823H32.1102H32.0382H31.9664H31.8946H31.823H31.7515H31.6801H31.6088H31.5376H31.4666H31.3956H31.3248H31.2541H31.1835H31.113H31.0426H30.9724H30.9022H30.8322H30.7622H30.6924H30.6226H30.553H30.4835H30.4141H30.3448H30.2756H30.2065H30.1375H30.0686H29.9998H29.9311H29.8625H29.794H29.7256H29.6572H29.589H29.5209H29.4529H29.385H29.3172H29.2494H29.1818H29.1142H29.0468H28.9794H28.9121H28.8449H28.7779H28.7108H28.6439H28.5771H28.5103H28.4437H28.3771H28.3106H28.2442H28.1779H28.1117H28.0455H27.9794H27.9134H27.8475H27.7817H27.7159H27.6502H27.5846H27.5191H27.4537H27.3883H27.323H27.2578H27.1926H27.1275H27.0625H26.9976H26.9328H26.868H26.8032H26.7386H26.674H26.6095H26.5451H26.4807H26.4164H26.3521H26.2879H26.2238H26.1598H26.0958H26.0318H25.968H25.9042H25.8404H25.7767H25.7131H25.6495H25.586H25.5226H25.4592H25.3958H25.3325H25.2693H25.2061H25.143H25.0799H25.0169H24.9539H24.891H24.8281H24.7653H24.7025H24.6398H24.5771H24.5145H24.4519H24.3894H24.3269H24.2645H24.202H24.1397H24.0774H24.0151H23.9528H23.8907H23.8285H23.7664H23.7043H23.6423H23.5803H23.5183H23.4564H23.3945H23.3326H23.2708H23.209H23.1472H23.0855H23.0238H22.9621H22.9005H22.8389H22.7773H22.7157H22.6542H22.5927H22.5312H22.4698H22.4084H22.347H22.2856H22.2243H22.1629H22.1016H22.0404H21.9791H21.9178H21.8566H21.7954H21.7342H21.6731H21.6119H21.5508H21.4896H21.4285H21.3674H21.3064H21.2453H21.1842H21.1232H21.0622H21.0011H20.9401H20.8791H20.8181H20.7571H20.6962H20.6352H20.5742H20.5133H20.4523H20.3913H20.3304H20.2694H20.2085H20.1475H20.0866H20.0257H19.9647H19.9038H19.8428H19.7819H19.7209H19.6599H19.599H19.538H19.477H19.416H19.3551H19.2941H19.2331H19.172H19.111H19.05H18.9889H18.9279H18.8668H18.8057H18.7446H18.6835H18.6224H18.5612H18.5001H18.4389H18.3777H18.3165H18.2553H18.194H18.1328H18.0715H18.0102H17.9489H17.8875H17.8261H17.7647H17.7033H17.6418H17.5804H17.5189H17.4573H17.3958H17.3342H17.2726H17.2109H17.1493H17.0876H17.0258H16.9641H16.9023H16.8404H16.7786H16.7166H16.6547H16.5927H16.5307H16.4687H16.4066H16.3445H16.2823H16.2201H16.1578H16.0956H16.0332H15.9709H15.9084H15.846H15.7835H15.7209H15.6583H15.5957H15.533H15.4703H15.4075H15.3447H15.2818H15.2189H15.1559H15.0929H15.0298H14.9666H14.9034H14.8402H14.7769H14.7135H14.6501H14.5867H14.5231H14.4596H14.3959H14.3322H14.2685H14.2046H14.1408H14.0768H14.0128H13.9487H13.8846H13.8204H13.7562H13.6918H13.6274H13.563H13.4985H13.4339H13.3692H13.3045H13.2397H13.1748H13.1098H13.0448H12.9797H12.9146H12.8493H12.784H12.7186H12.6532H12.5876H12.522H12.4563H12.3905H12.3247H12.2588H12.1928H12.1267H12.0605H11.9942H11.9279H11.8615H11.795H11.7284H11.6617H11.5949H11.5281H11.4611H11.3941H11.327H11.2598H11.1925H11.1251H11.0576H10.9901H10.9224H10.8547H10.7868H10.7189H10.6508H10.5827H10.5145H10.4461H10.3777H10.3092H10.2406H10.1719H10.103H10.0341H9.9651H9.89597H9.82674H9.75741H9.68798H9.61843H9.54879H9.47904H9.40918H9.33921H9.26914H9.19896H9.12867H9.05826H8.98775H8.91713H8.8464H8.77555H8.70459H8.63351H8.56232H8.49102H8.4196H8.34807H8.27641H8.20464H8.13276H8.06075H7.98862H7.91638H7.84401H7.77152H7.69891H7.62617H7.55332H7.48034H7.40723H7.334H7.26064H7.18716H7.11355H7.03981H6.96594H6.89195H6.81782H6.74356H6.66918H6.59466H6.52H6.44522H6.3703H6.29525H6.22006H6.14474H6.06928H5.99368H5.91795H5.84208H5.76607H5.68992H5.61363H5.5372H5.46062H5.38391H5.30705H5.23005H5.15291H5.07562H4.99819H4.92061H4.84288H4.76501H4.68699H4.60882H4.5305H4.45203H4.37342H4.29465H4.21573H4.13665H4.05743H3.97805H3.89851H3.81882H3.73898H3.65898H3.57882H3.49851H3.41804H3.33741H3.25662H3.17566H3.09455H3.01328H2.93185H2.85025H2.76849H2.68657H2.60448H2.52223H2.43981H2.35722H2.27447H2.19155C2.04893 168.5 1.96927 168.466 1.91645 168.433C1.85532 168.394 1.77792 168.322 1.702 168.192C1.53613 167.906 1.46078 167.48 1.51975 167.111C2.92347 158.322 10.6474 151.574 19.9925 151.574C29.3375 151.574 37.0615 158.322 38.4652 167.111C38.5751 167.799 38.4037 168.054 38.3124 168.149C38.1888 168.278 37.8364 168.5 36.9935 168.5Z\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <circle cx=\"34\" cy=\"154\" r=\"10.5\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <path d=\"M50.9935 181.5H50.9126H50.8318H50.7512H50.6708H50.5905H50.5104H50.4304H50.3506H50.2709H50.1914H50.1121H50.0329H49.9538H49.8749H49.7962H49.7176H49.6392H49.5609H49.4828H49.4048H49.3269H49.2492H49.1717H49.0943H49.017H48.9399H48.8629H48.7861H48.7094H48.6329H48.5565H48.4802H48.4041H48.3281H48.2523H48.1766H48.101H48.0256H47.9503H47.8751H47.8001H47.7252H47.6504H47.5758H47.5013H47.4269H47.3527H47.2786H47.2046H47.1308H47.0571H46.9835H46.91H46.8367H46.7635H46.6904H46.6175H46.5446H46.4719H46.3993H46.3269H46.2545H46.1823H46.1102H46.0382H45.9664H45.8946H45.823H45.7515H45.6801H45.6088H45.5376H45.4666H45.3956H45.3248H45.2541H45.1835H45.113H45.0426H44.9724H44.9022H44.8322H44.7622H44.6924H44.6226H44.553H44.4835H44.4141H44.3448H44.2756H44.2065H44.1375H44.0686H43.9998H43.9311H43.8625H43.794H43.7256H43.6572H43.589H43.5209H43.4529H43.385H43.3172H43.2494H43.1818H43.1142H43.0468H42.9794H42.9121H42.8449H42.7779H42.7108H42.6439H42.5771H42.5103H42.4437H42.3771H42.3106H42.2442H42.1779H42.1117H42.0455H41.9794H41.9134H41.8475H41.7817H41.7159H41.6502H41.5846H41.5191H41.4537H41.3883H41.323H41.2578H41.1926H41.1275H41.0625H40.9976H40.9328H40.868H40.8032H40.7386H40.674H40.6095H40.5451H40.4807H40.4164H40.3521H40.2879H40.2238H40.1598H40.0958H40.0318H39.968H39.9042H39.8404H39.7767H39.7131H39.6495H39.586H39.5226H39.4592H39.3958H39.3325H39.2693H39.2061H39.143H39.0799H39.0169H38.9539H38.891H38.8281H38.7653H38.7025H38.6398H38.5771H38.5145H38.4519H38.3894H38.3269H38.2645H38.202H38.1397H38.0774H38.0151H37.9528H37.8907H37.8285H37.7664H37.7043H37.6423H37.5803H37.5183H37.4564H37.3945H37.3326H37.2708H37.209H37.1472H37.0855H37.0238H36.9621H36.9005H36.8389H36.7773H36.7157H36.6542H36.5927H36.5312H36.4698H36.4084H36.347H36.2856H36.2243H36.1629H36.1016H36.0404H35.9791H35.9178H35.8566H35.7954H35.7342H35.6731H35.6119H35.5508H35.4896H35.4285H35.3674H35.3064H35.2453H35.1842H35.1232H35.0622H35.0011H34.9401H34.8791H34.8181H34.7571H34.6962H34.6352H34.5742H34.5133H34.4523H34.3913H34.3304H34.2694H34.2085H34.1475H34.0866H34.0257H33.9647H33.9038H33.8428H33.7819H33.7209H33.6599H33.599H33.538H33.477H33.416H33.3551H33.2941H33.2331H33.172H33.111H33.05H32.9889H32.9279H32.8668H32.8057H32.7446H32.6835H32.6224H32.5612H32.5001H32.4389H32.3777H32.3165H32.2553H32.194H32.1328H32.0715H32.0102H31.9489H31.8875H31.8261H31.7647H31.7033H31.6418H31.5804H31.5189H31.4573H31.3958H31.3342H31.2726H31.2109H31.1493H31.0876H31.0258H30.9641H30.9023H30.8404H30.7786H30.7166H30.6547H30.5927H30.5307H30.4687H30.4066H30.3445H30.2823H30.2201H30.1578H30.0956H30.0332H29.9709H29.9084H29.846H29.7835H29.7209H29.6583H29.5957H29.533H29.4703H29.4075H29.3447H29.2818H29.2189H29.1559H29.0929H29.0298H28.9666H28.9034H28.8402H28.7769H28.7135H28.6501H28.5867H28.5231H28.4596H28.3959H28.3322H28.2685H28.2046H28.1408H28.0768H28.0128H27.9487H27.8846H27.8204H27.7562H27.6918H27.6274H27.563H27.4985H27.4339H27.3692H27.3045H27.2397H27.1748H27.1098H27.0448H26.9797H26.9146H26.8493H26.784H26.7186H26.6532H26.5876H26.522H26.4563H26.3905H26.3247H26.2588H26.1928H26.1267H26.0605H25.9942H25.9279H25.8615H25.795H25.7284H25.6617H25.5949H25.5281H25.4611H25.3941H25.327H25.2598H25.1925H25.1251H25.0576H24.9901H24.9224H24.8547H24.7868H24.7189H24.6508H24.5827H24.5145H24.4461H24.3777H24.3092H24.2406H24.1719H24.103H24.0341H23.9651H23.896H23.8267H23.7574H23.688H23.6184H23.5488H23.479H23.4092H23.3392H23.2691H23.199H23.1287H23.0583H22.9878H22.9171H22.8464H22.7755H22.7046H22.6335H22.5623H22.491H22.4196H22.3481H22.2764H22.2046H22.1328H22.0607H21.9886H21.9164H21.844H21.7715H21.6989H21.6262H21.5533H21.4803H21.4072H21.334H21.2606H21.1872H21.1135H21.0398H20.9659H20.8919H20.8178H20.7436H20.6692H20.5947H20.52H20.4452H20.3703H20.2952H20.2201H20.1447H20.0693H19.9937H19.9179H19.8421H19.7661H19.6899H19.6136H19.5372H19.4606H19.3839H19.3071H19.2301H19.1529H19.0756H18.9982H18.9206H18.8429H18.765H18.687H18.6088H18.5305H18.452H18.3734H18.2946H18.2157H18.1367H18.0574H17.978H17.8985H17.8188H17.739H17.659H17.5788H17.4985H17.418H17.3374H17.2566H17.1757H17.0946H17.0133H16.9318H16.8503H16.7685H16.6866H16.6045H16.5222H16.4398H16.3572H16.2745H16.1915C16.045 181.5 15.9628 181.465 15.9092 181.432C15.8479 181.394 15.772 181.324 15.6978 181.198C15.5354 180.922 15.4617 180.509 15.5193 180.153C16.9196 171.496 24.6325 164.823 33.9925 164.823C43.3524 164.823 51.0654 171.496 52.4657 180.153C52.574 180.823 52.4052 181.064 52.319 181.152C52.1962 181.279 51.8413 181.5 50.9935 181.5Z\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n</svg>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-update-license\",\n  templateUrl: \"update-license.component.html\",\n})\nexport class UpdateLicenseComponent {\n  @Input() organizationId: string;\n  @Output() onUpdated = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    try {\n      const fd = new FormData();\n      fd.append(\"license\", files[0]);\n\n      let updatePromise: Promise<any> = null;\n      if (this.organizationId == null) {\n        updatePromise = this.apiService.postAccountLicense(fd);\n      } else {\n        updatePromise = this.apiService.postOrganizationLicenseUpdate(this.organizationId, fd);\n      }\n\n      this.formPromise = updatePromise.then(() => {\n        return this.apiService.refreshIdentityToken();\n      });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedLicense\"));\n      this.onUpdated.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"form-group\">\n    <label for=\"file\" class=\"sr-only\">{{ \"licenseFile\" | i18n }}</label>\n    <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n    <small class=\"form-text text-muted\">{{\n      \"licenseFileDesc\"\n        | i18n\n          : (!organizationId\n              ? \"bitwarden_premium_license.json\"\n              : \"bitwarden_organization_license.json\")\n    }}</small>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"submit\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","<div class=\"page-header\">\n  <h1>\n    {{ \"subscription\" | i18n }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<ng-container *ngIf=\"firstLoaded && !userOrg.canManageBilling\">\n  <div class=\"tw-flex tw-flex-col tw-items-center tw-text-info\">\n    <app-image-org-subscription-hidden></app-image-org-subscription-hidden>\n    <p class=\"tw-font-bold\">{{ \"billingManagedByProvider\" | i18n: this.userOrg.providerName }}</p>\n    <p>{{ \"billingContactProviderForAssistance\" | i18n }}</p>\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"sub\">\n  <app-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</app-callout\n  >\n  <app-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      #reinstateBtn\n      type=\"button\"\n      class=\"btn btn-outline-secondary btn-submit\"\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"reinstateBtn.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"reinstateSubscription\" | i18n }}</span>\n    </button>\n  </app-callout>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"row\">\n      <div class=\"col-4\">\n        <dl>\n          <dt>{{ \"billingPlan\" | i18n }}</dt>\n          <dd>{{ sub.plan.name }}</dd>\n          <ng-container *ngIf=\"subscription\">\n            <dt>{{ \"status\" | i18n }}</dt>\n            <dd>\n              <span class=\"text-capitalize\">{{\n                isSponsoredSubscription ? \"sponsored\" : subscription.status || \"-\"\n              }}</span>\n              <span bitBadge badgeType=\"warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n                \"pendingCancellation\" | i18n\n              }}</span>\n            </dd>\n            <dt>{{ \"nextCharge\" | i18n }}</dt>\n            <dd>\n              {{\n                nextInvoice\n                  ? (nextInvoice.date | date: \"mediumDate\") +\n                    \", \" +\n                    (nextInvoice.amount | currency: \"$\")\n                  : \"-\"\n              }}\n            </dd>\n          </ng-container>\n        </dl>\n      </div>\n      <div class=\"col-8\" *ngIf=\"subscription\">\n        <strong class=\"d-block mb-1\">{{ \"details\" | i18n }}</strong>\n        <table class=\"table\">\n          <tbody>\n            <tr *ngFor=\"let i of subscription.items\">\n              <td>\n                {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n                {{ i.amount | currency: \"$\" }}\n              </td>\n              <td>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <ng-container *ngIf=\"userOrg?.providerId != null\">\n        <div class=\"col-sm\">\n          <dl>\n            <dt>{{ \"provider\" | i18n }}</dt>\n            <dd>{{ \"yourProviderIs\" | i18n: userOrg.providerName }}</dd>\n          </dl>\n        </div>\n      </ng-container>\n    </div>\n    <ng-container>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"changePlan()\"\n        *ngIf=\"showChangePlanButton\"\n      >\n        {{ \"changeBillingPlan\" | i18n }}\n      </button>\n      <app-change-plan\n        [organizationId]=\"organizationId\"\n        (onChanged)=\"closeChangePlan(true)\"\n        (onCanceled)=\"closeChangePlan(false)\"\n        *ngIf=\"showChangePlan\"\n      ></app-change-plan>\n    </ng-container>\n    <h2 class=\"spaced-header\">{{ \"manageSubscription\" | i18n }}</h2>\n    <p class=\"mb-4\">{{ subscriptionDesc }}</p>\n    <ng-container\n      *ngIf=\"\n        subscription && canAdjustSeats && !subscription.cancelled && !subscriptionMarkedForCancel\n      \"\n    >\n      <div class=\"mt-3\">\n        <app-adjust-subscription\n          [seatPrice]=\"seatPrice\"\n          [organizationId]=\"organizationId\"\n          [interval]=\"billingInterval\"\n          [currentSeatCount]=\"seats\"\n          [maxAutoscaleSeats]=\"maxAutoscaleSeats\"\n          (onAdjusted)=\"subscriptionAdjusted()\"\n        >\n        </app-adjust-subscription>\n      </div>\n    </ng-container>\n    <button\n      #removeSponsorshipBtn\n      type=\"button\"\n      class=\"btn btn-outline-danger btn-submit\"\n      (click)=\"removeSponsorship()\"\n      [appApiAction]=\"removeSponsorshipPromise\"\n      [disabled]=\"removeSponsorshipBtn.loading\"\n      *ngIf=\"isSponsoredSubscription\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"removeSponsorship\" | i18n }}</span>\n    </button>\n    <h2 class=\"spaced-header\">{{ \"storage\" | i18n }}</h2>\n    <p>{{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0:sub.storageName || \"0 MB\" }}</p>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar bg-success\"\n        role=\"progressbar\"\n        [ngStyle]=\"{ width: storageProgressWidth + '%' }\"\n        [attr.aria-valuenow]=\"storagePercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ storagePercentage / 100 | percent }}\n      </div>\n    </div>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"mt-3\">\n        <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n          <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary ml-1\"\n            (click)=\"adjustStorage(false)\"\n          >\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"storageGbPrice\"\n          [add]=\"adjustStorageAdd\"\n          [organizationId]=\"organizationId\"\n          [interval]=\"billingInterval\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n    <!--Switch to i18n-->\n    <h2 class=\"spaced-header\">{{ \"selfHostingTitle\" | i18n }}</h2>\n    <p class=\"mb-4\">\n      {{ \"selfHostingEnterpriseOrganizationSectionCopy\" | i18n }}\n    </p>\n    <div class=\"d-flex\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"canDownloadLicense\"\n        [disabled]=\"showDownloadLicense\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary ml-1\"\n        (click)=\"manageBillingSync()\"\n        *ngIf=\"canManageBillingSync\"\n      >\n        {{ (hasBillingSyncToken ? \"manageBillingSync\" : \"setUpBillingSync\") | i18n }}\n      </button>\n    </div>\n    <div class=\"mt-3\" *ngIf=\"showDownloadLicense\">\n      <app-download-license\n        [organizationId]=\"organizationId\"\n        (onDownloaded)=\"closeDownloadLicense()\"\n        (onCanceled)=\"closeDownloadLicense()\"\n      ></app-download-license>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"additionalOptions\" | i18n }}</h2>\n    <p class=\"mb-4\">\n      {{ \"additionalOptionsDesc\" | i18n }}\n    </p>\n    <div class=\"d-flex\">\n      <button\n        #cancelBtn\n        type=\"button\"\n        class=\"btn btn-outline-danger btn-submit ml-1\"\n        (click)=\"cancel()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"cancelBtn.loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"cancelSubscription\" | i18n }}</span>\n      </button>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"selfHosted\">\n    <dl>\n      <dt>{{ \"billingPlan\" | i18n }}</dt>\n      <dd>{{ sub.plan.name }}</dd>\n      <dt>{{ \"expiration\" | i18n }}</dt>\n      <dd *ngIf=\"sub.expiration\">\n        {{ sub.expiration | date: \"mediumDate\" }}\n        <span *ngIf=\"isExpired\" class=\"text-danger ml-2\">\n          <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n          {{ \"licenseIsExpired\" | i18n }}\n        </span>\n      </dd>\n      <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n    </dl>\n    <div>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        href=\"https://vault.bitwarden.com\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        class=\"btn btn-outline-secondary\"\n      >\n        {{ \"manageSubscription\" | i18n }}\n      </a>\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n      <div class=\"card-body\">\n        <button\n          type=\"button\"\n          class=\"close\"\n          appA11yTitle=\"{{ 'cancel' | i18n }}\"\n          (click)=\"closeUpdateLicense(false)\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h3 class=\"card-body-header\">{{ \"updateLicense\" | i18n }}</h3>\n        <app-update-license\n          [organizationId]=\"organizationId\"\n          (onUpdated)=\"closeUpdateLicense(true)\"\n          (onCanceled)=\"closeUpdateLicense(false)\"\n        ></app-update-license>\n      </div>\n    </div>\n    <div *ngIf=\"showBillingSyncKey\">\n      <h2 class=\"mt-5\">\n        {{ \"billingSync\" | i18n }}\n      </h2>\n      <p>\n        {{ \"billingSyncDesc\" | i18n }}\n      </p>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"manageBillingSyncSelfHosted()\"\n      >\n        {{ \"manageBillingSync\" | i18n }}\n      </button>\n      <small class=\"form-text text-muted\" *ngIf=\"billingSyncSetUp\">\n        {{ \"lastSync\" | i18n }}:\n        <span *ngIf=\"userOrg.familySponsorshipLastSyncDate != null\">\n          {{ userOrg.familySponsorshipLastSyncDate | date: \"medium\" }}\n        </span>\n        <span *ngIf=\"userOrg.familySponsorshipLastSyncDate == null\">\n          {{ \"never\" | i18n | lowercase }}\n        </span>\n      </small>\n    </div>\n  </ng-container>\n</ng-container>\n<ng-template #setupBillingSyncTemplate></ng-template>\n<ng-template #rotateBillingSyncKeyTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/enums/organizationApiKeyType\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/enums/organizationConnectionType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { BillingSyncConfigApi } from \"@bitwarden/common/models/api/billingSyncConfigApi\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/models/response/organizationConnectionResponse\";\nimport { OrganizationSubscriptionResponse } from \"@bitwarden/common/models/response/organizationSubscriptionResponse\";\n\nimport { BillingSyncKeyComponent } from \"../../settings/billing-sync-key.component\";\n\nimport { BillingSyncApiKeyComponent } from \"./billing-sync-api-key.component\";\n\n@Component({\n  selector: \"app-org-subscription\",\n  templateUrl: \"organization-subscription.component.html\",\n})\nexport class OrganizationSubscriptionComponent implements OnInit {\n  @ViewChild(\"setupBillingSyncTemplate\", { read: ViewContainerRef, static: true })\n  setupBillingSyncModalRef: ViewContainerRef;\n\n  loading = false;\n  firstLoaded = false;\n  organizationId: string;\n  adjustSeatsAdd = true;\n  showAdjustSeats = false;\n  showAdjustSeatAutoscale = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  showUpdateLicense = false;\n  showBillingSyncKey = false;\n  showDownloadLicense = false;\n  showChangePlan = false;\n  sub: OrganizationSubscriptionResponse;\n  selfHosted = false;\n  hasBillingSyncToken: boolean;\n\n  userOrg: Organization;\n  existingBillingSyncConnection: OrganizationConnectionResponse<BillingSyncConfigApi>;\n\n  removeSponsorshipPromise: Promise<any>;\n  cancelPromise: Promise<any>;\n  reinstatePromise: Promise<any>;\n\n  @ViewChild(\"rotateBillingSyncKeyTemplate\", { read: ViewContainerRef, static: true })\n  billingSyncKeyViewContainerRef: ViewContainerRef;\n  billingSyncKeyRef: [ModalRef, BillingSyncKeyComponent];\n\n  constructor(\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private logService: LogService,\n    private modalService: ModalService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.firstLoaded = true;\n    });\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    this.loading = true;\n    this.userOrg = await this.organizationService.get(this.organizationId);\n    if (this.userOrg.canManageBilling) {\n      this.sub = await this.apiService.getOrganizationSubscription(this.organizationId);\n    }\n    const apiKeyResponse = await this.apiService.getOrganizationApiKeyInformation(\n      this.organizationId\n    );\n    this.hasBillingSyncToken = apiKeyResponse.data.some(\n      (i) => i.keyType === OrganizationApiKeyType.BillingSync\n    );\n\n    if (this.selfHosted) {\n      this.showBillingSyncKey = await this.apiService.getCloudCommunicationsEnabled();\n    }\n\n    if (this.showBillingSyncKey) {\n      this.existingBillingSyncConnection = await this.apiService.getOrganizationConnection(\n        this.organizationId,\n        OrganizationConnectionType.CloudBillingSync,\n        BillingSyncConfigApi\n      );\n    }\n\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"reinstateConfirmation\"),\n      this.i18nService.t(\"reinstateSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.apiService.postOrganizationReinstate(this.organizationId);\n      await this.reinstatePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async cancel() {\n    if (this.loading) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"cancelConfirmation\"),\n      this.i18nService.t(\"cancelSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.cancelPromise = this.apiService.postOrganizationCancel(this.organizationId);\n      await this.cancelPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async changePlan() {\n    this.showChangePlan = !this.showChangePlan;\n  }\n\n  closeChangePlan(changed: boolean) {\n    this.showChangePlan = false;\n  }\n\n  downloadLicense() {\n    this.showDownloadLicense = !this.showDownloadLicense;\n  }\n\n  async manageBillingSync() {\n    const [ref] = await this.modalService.openViewRef(\n      BillingSyncApiKeyComponent,\n      this.setupBillingSyncModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.hasBillingToken = this.hasBillingSyncToken;\n      }\n    );\n    ref.onClosed.subscribe(async () => {\n      await this.load();\n    });\n  }\n\n  closeDownloadLicense() {\n    this.showDownloadLicense = false;\n  }\n\n  updateLicense() {\n    if (this.loading) {\n      return;\n    }\n    this.showUpdateLicense = true;\n  }\n\n  closeUpdateLicense(updated: boolean) {\n    this.showUpdateLicense = false;\n    if (updated) {\n      this.load();\n      this.messagingService.send(\"updatedOrgLicense\");\n    }\n  }\n\n  subscriptionAdjusted() {\n    this.load();\n  }\n\n  adjustStorage(add: boolean) {\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  async removeSponsorship() {\n    const isConfirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeSponsorshipConfirmation\"),\n      this.i18nService.t(\"removeSponsorship\"),\n      this.i18nService.t(\"remove\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    try {\n      this.removeSponsorshipPromise = this.apiService.deleteRemoveSponsorship(this.organizationId);\n      await this.removeSponsorshipPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removeSponsorshipSuccess\")\n      );\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async manageBillingSyncSelfHosted() {\n    this.billingSyncKeyRef = await this.modalService.openViewRef(\n      BillingSyncKeyComponent,\n      this.billingSyncKeyViewContainerRef,\n      (comp) => {\n        comp.entityId = this.organizationId;\n        comp.existingConnectionId = this.existingBillingSyncConnection?.id;\n        comp.billingSyncKey = this.existingBillingSyncConnection?.config?.billingSyncKey;\n        comp.setParentConnection = (\n          connection: OrganizationConnectionResponse<BillingSyncConfigApi>\n        ) => {\n          this.existingBillingSyncConnection = connection;\n          this.billingSyncKeyRef[0].close();\n        };\n      }\n    );\n  }\n\n  get isExpired() {\n    return (\n      this.sub != null && this.sub.expiration != null && new Date(this.sub.expiration) < new Date()\n    );\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get billingInterval() {\n    const monthly = !this.sub.plan.isAnnual;\n    return monthly ? \"month\" : \"year\";\n  }\n\n  get storageGbPrice() {\n    return this.sub.plan.additionalStoragePricePerGb;\n  }\n\n  get seatPrice() {\n    return this.sub.plan.seatPrice;\n  }\n\n  get seats() {\n    return this.sub.seats;\n  }\n\n  get maxAutoscaleSeats() {\n    return this.sub.maxAutoscaleSeats;\n  }\n\n  get canAdjustSeats() {\n    return this.sub.plan.hasAdditionalSeatsOption;\n  }\n\n  get isSponsoredSubscription(): boolean {\n    return this.sub.subscription?.items.some((i) => i.sponsoredSubscriptionItem);\n  }\n\n  get canDownloadLicense() {\n    return (\n      (this.sub.planType !== PlanType.Free && this.subscription == null) ||\n      (this.subscription != null && !this.subscription.cancelled)\n    );\n  }\n\n  get canManageBillingSync() {\n    return (\n      !this.selfHosted &&\n      (this.sub.planType === PlanType.EnterpriseAnnually ||\n        this.sub.planType === PlanType.EnterpriseMonthly ||\n        this.sub.planType === PlanType.EnterpriseAnnually2019 ||\n        this.sub.planType === PlanType.EnterpriseMonthly2019)\n    );\n  }\n\n  get subscriptionDesc() {\n    if (this.sub.planType === PlanType.Free) {\n      return this.i18nService.t(\"subscriptionFreePlan\", this.sub.seats.toString());\n    } else if (\n      this.sub.planType === PlanType.FamiliesAnnually ||\n      this.sub.planType === PlanType.FamiliesAnnually2019\n    ) {\n      if (this.isSponsoredSubscription) {\n        return this.i18nService.t(\"subscriptionSponsoredFamiliesPlan\", this.sub.seats.toString());\n      } else {\n        return this.i18nService.t(\"subscriptionFamiliesPlan\", this.sub.seats.toString());\n      }\n    } else if (this.sub.maxAutoscaleSeats === this.sub.seats && this.sub.seats != null) {\n      return this.i18nService.t(\"subscriptionMaxReached\", this.sub.seats.toString());\n    } else if (this.sub.maxAutoscaleSeats == null) {\n      return this.i18nService.t(\"subscriptionUserSeatsUnlimitedAutoscale\");\n    } else {\n      return this.i18nService.t(\n        \"subscriptionUserSeatsLimitedAutoscale\",\n        this.sub.maxAutoscaleSeats.toString()\n      );\n    }\n  }\n\n  get showChangePlanButton() {\n    return this.subscription == null && this.sub.planType === PlanType.Free && !this.showChangePlan;\n  }\n\n  get billingSyncSetUp() {\n    return this.existingBillingSyncConnection?.id != null;\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myOrganization\" | i18n }}\n          </a>\n          <a routerLink=\"subscription\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"subscription\" | i18n }}\n          </a>\n          <a\n            routerLink=\"billing\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"showBilling\"\n          >\n            {{ \"billing\" | i18n }}\n          </a>\n          <a\n            routerLink=\"two-factor\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"access2fa\"\n          >\n            {{ \"twoStepLogin\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-org-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent {\n  access2fa = false;\n  showBilling: boolean;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      const organization = await this.organizationService.get(params.organizationId);\n      this.showBilling = !this.platformUtilsService.isSelfHost() && organization.canManageBilling;\n      this.access2fa = organization.use2fa;\n    });\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorDuoRequest extends SecretVerificationRequest {\n  integrationKey: string;\n  secretKey: string;\n  host: string;\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorProviderRequest extends SecretVerificationRequest {\n  type: TwoFactorProviderType;\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\nimport { TwoFactorProviderRequest } from \"@bitwarden/common/models/request/twoFactorProviderRequest\";\n\n@Directive()\nexport abstract class TwoFactorBaseComponent {\n  @Output() onUpdated = new EventEmitter<boolean>();\n\n  type: TwoFactorProviderType;\n  organizationId: string;\n  twoFactorProviderType = TwoFactorProviderType;\n  enabled = false;\n  authed = false;\n\n  protected hashedSecret: string;\n  protected verificationType: VerificationType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected userVerificationService: UserVerificationService\n  ) {}\n\n  protected auth(authResponse: any) {\n    this.hashedSecret = authResponse.secret;\n    this.verificationType = authResponse.verificationType;\n    this.authed = true;\n  }\n\n  protected async enable(enableFunction: () => Promise<void>) {\n    try {\n      await enableFunction();\n      this.onUpdated.emit(true);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async disable(promise: Promise<any>) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepDisableDesc\"),\n      this.i18nService.t(\"disable\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      const request = await this.buildRequestModel(TwoFactorProviderRequest);\n      request.type = this.type;\n      if (this.organizationId != null) {\n        promise = this.apiService.putTwoFactorOrganizationDisable(this.organizationId, request);\n      } else {\n        promise = this.apiService.putTwoFactorDisable(request);\n      }\n      await promise;\n      this.enabled = false;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"twoStepDisabled\"));\n      this.onUpdated.emit(false);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async buildRequestModel<T extends SecretVerificationRequest>(\n    requestClass: new () => T\n  ) {\n    return this.userVerificationService.buildRequest(\n      {\n        secret: this.hashedSecret,\n        type: this.verificationType,\n      },\n      requestClass,\n      true\n    );\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\nimport { TwoFactorAuthenticatorResponse } from \"@bitwarden/common/models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"@bitwarden/common/models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"@bitwarden/common/models/response/twoFactorEmailResponse\";\nimport { TwoFactorRecoverResponse } from \"@bitwarden/common/models/response/twoFactorRescoverResponse\";\nimport { TwoFactorWebAuthnResponse } from \"@bitwarden/common/models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"@bitwarden/common/models/response/twoFactorYubiKeyResponse\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\ntype TwoFactorResponse =\n  | TwoFactorRecoverResponse\n  | TwoFactorDuoResponse\n  | TwoFactorEmailResponse\n  | TwoFactorWebAuthnResponse\n  | TwoFactorAuthenticatorResponse\n  | TwoFactorYubiKeyResponse;\n\n@Component({\n  selector: \"app-two-factor-verify\",\n  templateUrl: \"two-factor-verify.component.html\",\n})\nexport class TwoFactorVerifyComponent {\n  @Input() type: TwoFactorProviderType;\n  @Input() organizationId: string;\n  @Output() onAuthed = new EventEmitter<any>();\n\n  secret: Verification;\n  formPromise: Promise<TwoFactorResponse>;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async submit() {\n    let hashedSecret: string;\n\n    try {\n      this.formPromise = this.userVerificationService.buildRequest(this.secret).then((request) => {\n        hashedSecret =\n          this.secret.type === VerificationType.MasterPassword\n            ? request.masterPasswordHash\n            : request.otp;\n        return this.apiCall(request);\n      });\n\n      const response = await this.formPromise;\n      this.onAuthed.emit({\n        response: response,\n        secret: hashedSecret,\n        verificationType: this.secret.type,\n      });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private apiCall(request: SecretVerificationRequest): Promise<TwoFactorResponse> {\n    switch (this.type) {\n      case -1 as TwoFactorProviderType:\n        return this.apiService.getTwoFactorRecover(request);\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        if (this.organizationId != null) {\n          return this.apiService.getTwoFactorOrganizationDuo(this.organizationId, request);\n        } else {\n          return this.apiService.getTwoFactorDuo(request);\n        }\n      case TwoFactorProviderType.Email:\n        return this.apiService.getTwoFactorEmail(request);\n      case TwoFactorProviderType.WebAuthn:\n        return this.apiService.getTwoFactorWebAuthn(request);\n      case TwoFactorProviderType.Authenticator:\n        return this.apiService.getTwoFactorAuthenticator(request);\n      case TwoFactorProviderType.Yubikey:\n        return this.apiService.getTwoFactorYubiKey(request);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"modal-body\">\n    <p>{{ \"twoStepLoginAuthDesc\" | i18n }}</p>\n    <app-user-verification [(ngModel)]=\"secret\" ngDefaultControl name=\"secret\">\n    </app-user-verification>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"continue\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n      {{ \"close\" | i18n }}\n    </button>\n  </div>\n</form>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faDuoTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" title=\"2faDuoTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>Duo</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <strong>{{ \"twoFactorDuoIntegrationKey\" | i18n }}:</strong> {{ ikey }}\n            <br />\n            <strong>{{ \"twoFactorDuoSecretKey\" | i18n }}:</strong> {{ skey }}\n            <br />\n            <strong>{{ \"twoFactorDuoApiHostname\" | i18n }}:</strong> {{ host }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <p>{{ \"twoFactorDuoDesc\" | i18n }}</p>\n            <div class=\"form-group\">\n              <label for=\"ikey\">{{ \"twoFactorDuoIntegrationKey\" | i18n }}</label>\n              <input\n                id=\"ikey\"\n                type=\"text\"\n                name=\"IntegrationKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"ikey\"\n                required\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"skey\">{{ \"twoFactorDuoSecretKey\" | i18n }}</label>\n              <input\n                id=\"skey\"\n                type=\"password\"\n                name=\"SecretKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"skey\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"host\">{{ \"twoFactorDuoApiHostname\" | i18n }}</label>\n              <input\n                id=\"host\"\n                type=\"text\"\n                name=\"Host\"\n                class=\"form-control\"\n                [(ngModel)]=\"host\"\n                placeholder=\"{{ 'ex' | i18n }} api-xxxxxxxx.duosecurity.com\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorDuoRequest } from \"@bitwarden/common/models/request/updateTwoFactorDuoRequest\";\nimport { TwoFactorDuoResponse } from \"@bitwarden/common/models/response/twoFactorDuoResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-duo\",\n  templateUrl: \"two-factor-duo.component.html\",\n})\nexport class TwoFactorDuoComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Duo;\n  ikey: string;\n  skey: string;\n  host: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorDuoRequest);\n    request.integrationKey = this.ikey;\n    request.secretKey = this.skey;\n    request.host = this.host;\n\n    return super.enable(async () => {\n      if (this.organizationId != null) {\n        this.formPromise = this.apiService.putTwoFactorOrganizationDuo(\n          this.organizationId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.putTwoFactorDuo(request);\n      }\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private processResponse(response: TwoFactorDuoResponse) {\n    this.ikey = response.integrationKey;\n    this.skey = response.secretKey;\n    this.host = response.host;\n    this.enabled = response.enabled;\n  }\n}\n","export class DeviceVerificationRequest {\n  unknownDeviceVerificationEnabled: boolean;\n\n  constructor(unknownDeviceVerificationEnabled: boolean) {\n    this.unknownDeviceVerificationEnabled = unknownDeviceVerificationEnabled;\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorAuthenticatorRequest extends SecretVerificationRequest {\n  token: string;\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faAuthenticatorTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faAuthenticatorTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"authenticatorAppTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorDesc\" | i18n }}</p>\n            <p>\n              <strong>1. {{ \"twoStepAuthenticatorDownloadApp\" | i18n }}</strong>\n            </p>\n          </ng-container>\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              <p>{{ \"twoStepLoginProviderEnabled\" | i18n }}</p>\n              {{ \"twoStepAuthenticatorReaddDesc\" | i18n }}\n            </app-callout>\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorNeedApp\" | i18n }}</p>\n          </ng-container>\n          <ul class=\"bwi-ul\">\n            <li>\n              <i class=\"bwi bwi-li bwi-apple\"></i>{{ \"iosDevices\" | i18n }}:\n              <a\n                href=\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-android\"></i>{{ \"androidDevices\" | i18n }}:\n              <a\n                href=\"https://play.google.com/store/apps/details?id=com.authy.authy\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-windows\"></i>{{ \"windowsDevices\" | i18n }}:\n              <a\n                href=\"https://www.microsoft.com/p/authenticator/9wzdncrfj3rj\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Microsoft Authenticator</a\n              >\n            </li>\n          </ul>\n          <p>{{ \"twoStepAuthenticatorAppsRecommended\" | i18n }}</p>\n          <p *ngIf=\"!enabled\">\n            <strong>2. {{ \"twoStepAuthenticatorScanCode\" | i18n }}</strong>\n          </p>\n          <hr *ngIf=\"enabled\" />\n          <p class=\"text-center\" [ngClass]=\"{ 'mb-0': enabled }\">\n            <canvas id=\"qr\"></canvas><br />\n            <code appA11yTitle=\"{{ 'key' | i18n }}\">{{ key }}</code>\n          </p>\n          <ng-container *ngIf=\"!enabled\">\n            <label for=\"token\">3. {{ \"twoStepAuthenticatorEnterCode\" | i18n }}</label>\n            <input\n              id=\"token\"\n              type=\"text\"\n              name=\"Token\"\n              class=\"form-control\"\n              [(ngModel)]=\"token\"\n              required\n              appInputVerbatim\n            />\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"@bitwarden/common/models/request/updateTwoFactorAuthenticatorRequest\";\nimport { TwoFactorAuthenticatorResponse } from \"@bitwarden/common/models/response/twoFactorAuthenticatorResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-authenticator\",\n  templateUrl: \"two-factor-authenticator.component.html\",\n})\nexport class TwoFactorAuthenticatorComponent\n  extends TwoFactorBaseComponent\n  implements OnInit, OnDestroy\n{\n  type = TwoFactorProviderType.Authenticator;\n  key: string;\n  token: string;\n  formPromise: Promise<any>;\n\n  private qrScript: HTMLScriptElement;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    userVerificationService: UserVerificationService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n    this.qrScript = window.document.createElement(\"script\");\n    this.qrScript.src = \"scripts/qrious.min.js\";\n    this.qrScript.async = true;\n  }\n\n  ngOnInit() {\n    window.document.body.appendChild(this.qrScript);\n  }\n\n  ngOnDestroy() {\n    window.document.body.removeChild(this.qrScript);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorAuthenticatorRequest);\n    request.token = this.token;\n    request.key = this.key;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorAuthenticator(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorAuthenticatorResponse) {\n    this.token = null;\n    this.enabled = response.enabled;\n    this.key = response.key;\n    const email = await this.stateService.getEmail();\n    window.setTimeout(() => {\n      new (window as any).QRious({\n        element: document.getElementById(\"qr\"),\n        value:\n          \"otpauth://totp/Bitwarden:\" +\n          encodeURIComponent(email) +\n          \"?secret=\" +\n          encodeURIComponent(this.key) +\n          \"&issuer=Bitwarden\",\n        size: 160,\n      });\n    }, 100);\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorEmailRequest extends SecretVerificationRequest {\n  token: string;\n  email: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faEmailTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faEmailTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"emailTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <strong>{{ \"email\" | i18n }}:</strong> {{ email }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <p class=\"d-flex\">\n              <span class=\"mr-3\">{{ \"twoFactorEmailDesc\" | i18n }}</span>\n              <img class=\"float-right ml-auto mfaType1\" alt=\"Email logo\" />\n            </p>\n            <div class=\"form-group\">\n              <label for=\"email\">1. {{ \"twoFactorEmailEnterEmail\" | i18n }}</label>\n              <input\n                id=\"email\"\n                type=\"text\"\n                name=\"Email\"\n                class=\"form-control\"\n                [(ngModel)]=\"email\"\n                required\n                inputmode=\"email\"\n                appInputVerbatim=\"false\"\n              />\n            </div>\n            <div class=\"mb-3 d-flex\">\n              <button\n                #sendBtn\n                type=\"button\"\n                class=\"btn btn-outline-primary btn-sm btn-submit align-self-start\"\n                (click)=\"sendEmail()\"\n                [appApiAction]=\"emailPromise\"\n                [disabled]=\"sendBtn.loading\"\n              >\n                <i\n                  class=\"bwi bwi-spinner bwi-spin\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span>{{ \"sendEmail\" | i18n }}</span>\n              </button>\n              <span class=\"text-success ml-3\" *ngIf=\"sentEmail\">\n                {{ \"verificationCodeEmailSent\" | i18n: sentEmail }}\n              </span>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"token\">2. {{ \"twoFactorEmailEnterCode\" | i18n }}</label>\n              <input\n                id=\"token\"\n                type=\"text\"\n                name=\"Token\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/twoFactorEmailRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"@bitwarden/common/models/request/updateTwoFactorEmailRequest\";\nimport { TwoFactorEmailResponse } from \"@bitwarden/common/models/response/twoFactorEmailResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-email\",\n  templateUrl: \"two-factor-email.component.html\",\n})\nexport class TwoFactorEmailComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Email;\n  email: string;\n  token: string;\n  sentEmail: string;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  async sendEmail() {\n    try {\n      const request = await this.buildRequestModel(TwoFactorEmailRequest);\n      request.email = this.email;\n      this.emailPromise = this.apiService.postTwoFactorEmailSetup(request);\n      await this.emailPromise;\n      this.sentEmail = this.email;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorEmailRequest);\n    request.email = this.email;\n    request.token = this.token;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorEmail(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorEmailResponse) {\n    this.token = null;\n    this.email = response.email;\n    this.enabled = response.enabled;\n    if (!this.enabled && (this.email == null || this.email === \"\")) {\n      this.email = await this.stateService.getEmail();\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faRecoveryTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faRecoveryTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"recoveryCodeTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <ng-container *ngIf=\"authed\">\n        <div class=\"modal-body text-center\">\n          <ng-container *ngIf=\"code\">\n            <p>{{ \"twoFactorRecoveryYourCode\" | i18n }}:</p>\n            <code class=\"text-lg\">{{ code }}</code>\n          </ng-container>\n          <ng-container *ngIf=\"!code\">\n            {{ \"twoFactorRecoveryNoCode\" | i18n }}\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"print()\" *ngIf=\"code\">\n            {{ \"printCode\" | i18n }}\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorRecoverResponse } from \"@bitwarden/common/models/response/twoFactorRescoverResponse\";\n\n@Component({\n  selector: \"app-two-factor-recovery\",\n  templateUrl: \"two-factor-recovery.component.html\",\n})\nexport class TwoFactorRecoveryComponent {\n  type = -1;\n  code: string;\n  authed: boolean;\n  twoFactorProviderType = TwoFactorProviderType;\n\n  constructor(private i18nService: I18nService) {}\n\n  auth(authResponse: any) {\n    this.authed = true;\n    this.processResponse(authResponse.response);\n  }\n\n  print() {\n    const w = window.open();\n    w.document.write(\n      '<div style=\"font-size: 18px; text-align: center;\">' +\n        \"<p>\" +\n        this.i18nService.t(\"twoFactorRecoveryYourCode\") +\n        \":</p>\" +\n        \"<code style=\\\"font-family: Menlo, Monaco, Consolas, 'Courier New', monospace;\\\">\" +\n        this.code +\n        \"</code></div>\" +\n        '<p style=\"text-align: center;\">' +\n        new Date() +\n        \"</p>\"\n    );\n    w.onafterprint = () => w.close();\n    w.print();\n  }\n\n  private formatString(s: string) {\n    if (s == null) {\n      return null;\n    }\n    return s\n      .replace(/(.{4})/g, \"$1 \")\n      .trim()\n      .toUpperCase();\n  }\n\n  private processResponse(response: TwoFactorRecoverResponse) {\n    this.code = this.formatString(response.code);\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorWebAuthnDeleteRequest extends SecretVerificationRequest {\n  id: number;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorWebAuthnRequest extends SecretVerificationRequest {\n  deviceResponse: PublicKeyCredential;\n  name: string;\n  id: number;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faU2fTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faU2fTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"webAuthnTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorWebAuthnWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorWebAuthnSupportWeb\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right ml-5 mfaType7\" alt=\"FIDO2 WebAuthn logo'\" />\n          <ul class=\"bwi-ul\">\n            <li\n              *ngFor=\"let k of keys; let i = index\"\n              #removeKeyBtn\n              [appApiAction]=\"k.removePromise\"\n            >\n              <i class=\"bwi bwi-li bwi-key\"></i>\n              <strong *ngIf=\"!k.configured || !k.name\">{{ \"webAuthnkeyX\" | i18n: i + 1 }}</strong>\n              <strong *ngIf=\"k.configured && k.name\">{{ k.name }}</strong>\n              <ng-container *ngIf=\"k.configured && !removeKeyBtn.loading\">\n                <ng-container *ngIf=\"k.migrated\">\n                  <span>{{ \"webAuthnMigrated\" | i18n }}</span>\n                </ng-container>\n              </ng-container>\n              <ng-container *ngIf=\"keysConfiguredCount > 1 && k.configured\">\n                <i\n                  class=\"bwi bwi-spin bwi-spinner text-muted bwi-fw\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  *ngIf=\"removeKeyBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                -\n                <a href=\"#\" appStopClick (click)=\"remove(k)\">{{ \"remove\" | i18n }}</a>\n              </ng-container>\n            </li>\n          </ul>\n          <hr />\n          <p>{{ \"twoFactorWebAuthnAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorU2fGiveName\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fPlugInReadKey\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fSaveForm\" | i18n }}</li>\n          </ol>\n          <div class=\"row\">\n            <div class=\"form-group col-6\">\n              <label for=\"name\">{{ \"name\" | i18n }}</label>\n              <input\n                id=\"name\"\n                type=\"text\"\n                name=\"Name\"\n                class=\"form-control\"\n                [(ngModel)]=\"name\"\n                [disabled]=\"!keyIdAvailable\"\n              />\n            </div>\n          </div>\n          <button\n            type=\"button\"\n            (click)=\"readKey()\"\n            class=\"btn btn-outline-secondary mr-2\"\n            [disabled]=\"readKeyBtn.loading || webAuthnListening || !keyIdAvailable\"\n            #readKeyBtn\n            [appApiAction]=\"challengePromise\"\n          >\n            {{ \"readKey\" | i18n }}\n          </button>\n          <ng-container *ngIf=\"readKeyBtn.loading\">\n            <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n          </ng-container>\n          <ng-container *ngIf=\"!readKeyBtn.loading\">\n            <ng-container *ngIf=\"webAuthnListening\">\n              <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fWaiting\" | i18n }}...\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnResponse\">\n              <i class=\"bwi bwi-check-circle text-success\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fClickSave\" | i18n }}\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnError\">\n              <i class=\"bwi bwi-exclamation-triangle text-danger\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fProblemReadingTryAgain\" | i18n }}\n            </ng-container>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            [disabled]=\"form.loading || !webAuthnResponse\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              *ngIf=\"form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!form.loading\">{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"disableBtn.loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, NgZone } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"@bitwarden/common/models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"@bitwarden/common/models/request/updateTwoFactorWebAuthnRequest\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"@bitwarden/common/models/response/twoFactorWebAuthnResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-webauthn\",\n  templateUrl: \"two-factor-webauthn.component.html\",\n})\nexport class TwoFactorWebAuthnComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.WebAuthn;\n  name: string;\n  keys: any[];\n  keyIdAvailable: number = null;\n  keysConfiguredCount = 0;\n  webAuthnError: boolean;\n  webAuthnListening: boolean;\n  webAuthnResponse: PublicKeyCredential;\n  challengePromise: Promise<ChallengeResponse>;\n  formPromise: Promise<any>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    if (this.webAuthnResponse == null || this.keyIdAvailable == null) {\n      // Should never happen.\n      return Promise.reject();\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnRequest);\n    request.deviceResponse = this.webAuthnResponse;\n    request.id = this.keyIdAvailable;\n    request.name = this.name;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorWebAuthn(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  disable() {\n    return super.disable(this.formPromise);\n  }\n\n  async remove(key: any) {\n    if (this.keysConfiguredCount <= 1 || key.removePromise != null) {\n      return;\n    }\n    const name = key.name != null ? key.name : this.i18nService.t(\"webAuthnkeyX\", key.id);\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeU2fConfirmation\"),\n      name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnDeleteRequest);\n    request.id = key.id;\n    try {\n      key.removePromise = this.apiService.deleteTwoFactorWebAuthn(request);\n      const response = await key.removePromise;\n      key.removePromise = null;\n      await this.processResponse(response);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async readKey() {\n    if (this.keyIdAvailable == null) {\n      return;\n    }\n    const request = await this.buildRequestModel(SecretVerificationRequest);\n    try {\n      this.challengePromise = this.apiService.getTwoFactorWebAuthnChallenge(request);\n      const challenge = await this.challengePromise;\n      this.readDevice(challenge);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private readDevice(webAuthnChallenge: ChallengeResponse) {\n    // eslint-disable-next-line\n    console.log(\"listening for key...\");\n    this.resetWebAuthn(true);\n\n    navigator.credentials\n      .create({\n        publicKey: webAuthnChallenge,\n      })\n      .then((data: PublicKeyCredential) => {\n        this.ngZone.run(() => {\n          this.webAuthnListening = false;\n          this.webAuthnResponse = data;\n        });\n      })\n      .catch((err) => {\n        // eslint-disable-next-line\n        console.error(err);\n        this.resetWebAuthn(false);\n        // TODO: Should we display the actual error?\n        this.webAuthnError = true;\n      });\n  }\n\n  private resetWebAuthn(listening = false) {\n    this.webAuthnResponse = null;\n    this.webAuthnError = false;\n    this.webAuthnListening = listening;\n  }\n\n  private processResponse(response: TwoFactorWebAuthnResponse) {\n    this.resetWebAuthn();\n    this.keys = [];\n    this.keyIdAvailable = null;\n    this.name = null;\n    this.keysConfiguredCount = 0;\n    for (let i = 1; i <= 5; i++) {\n      if (response.keys != null) {\n        const key = response.keys.filter((k) => k.id === i);\n        if (key.length > 0) {\n          this.keysConfiguredCount++;\n          this.keys.push({\n            id: i,\n            name: key[0].name,\n            configured: true,\n            migrated: key[0].migrated,\n            removePromise: null,\n          });\n          continue;\n        }\n      }\n      this.keys.push({ id: i, name: null, configured: false, removePromise: null });\n      if (this.keyIdAvailable == null) {\n        this.keyIdAvailable = i;\n      }\n    }\n    this.enabled = response.enabled;\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorYubioOtpRequest extends SecretVerificationRequest {\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faYubiKeyTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faYubiKeyTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>YubiKey</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorYubikeyWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorYubikeySupportUsb\" | i18n }}</li>\n              <li>{{ \"twoFactorYubikeySupportMobile\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right mfaType3\" alt=\"YubiKey OTP security key logo\" />\n          <p>{{ \"twoFactorYubikeyAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorYubikeyPlugIn\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySelectKey\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeyTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySaveForm\" | i18n }}</li>\n          </ol>\n          <hr />\n          <div class=\"row\">\n            <div class=\"form-group col-6\" *ngFor=\"let k of keys; let i = index\">\n              <label for=\"key{{ i + 1 }}\">{{ \"yubikeyX\" | i18n: i + 1 }}</label>\n              <input\n                id=\"key{{ i + 1 }}\"\n                type=\"password\"\n                name=\"Key{{ i + 1 }}\"\n                class=\"form-control\"\n                [(ngModel)]=\"k.key\"\n                *ngIf=\"!k.existingKey\"\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <div class=\"d-flex\" *ngIf=\"k.existingKey\">\n                <span class=\"mr-2\">{{ k.existingKey }}</span>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-link text-danger ml-auto\"\n                  (click)=\"remove(k)\"\n                  appA11yTitle=\"{{ 'remove' | i18n }}\"\n                >\n                  <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <strong class=\"d-block mb-2\">{{ \"nfcSupport\" | i18n }}</strong>\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"nfc\" name=\"Nfc\" [(ngModel)]=\"nfc\" />\n            <label class=\"form-check-label\" for=\"nfc\">{{\n              \"twoFactorYubikeySupportsNfc\" | i18n\n            }}</label>\n          </div>\n          <small class=\"form-text text-muted\">{{ \"twoFactorYubikeySupportsNfcDesc\" | i18n }}</small>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"disableBtn.loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"@bitwarden/common/models/request/updateTwoFactorYubioOtpRequest\";\nimport { TwoFactorYubiKeyResponse } from \"@bitwarden/common/models/response/twoFactorYubiKeyResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-yubikey\",\n  templateUrl: \"two-factor-yubikey.component.html\",\n})\nexport class TwoFactorYubiKeyComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Yubikey;\n  keys: any[];\n  nfc = false;\n\n  formPromise: Promise<any>;\n  disablePromise: Promise<any>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    const request = await this.buildRequestModel(UpdateTwoFactorYubioOtpRequest);\n    request.key1 = this.keys != null && this.keys.length > 0 ? this.keys[0].key : null;\n    request.key2 = this.keys != null && this.keys.length > 1 ? this.keys[1].key : null;\n    request.key3 = this.keys != null && this.keys.length > 2 ? this.keys[2].key : null;\n    request.key4 = this.keys != null && this.keys.length > 3 ? this.keys[3].key : null;\n    request.key5 = this.keys != null && this.keys.length > 4 ? this.keys[4].key : null;\n    request.nfc = this.nfc;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorYubiKey(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"yubikeysUpdated\"));\n    });\n  }\n\n  disable() {\n    return super.disable(this.disablePromise);\n  }\n\n  remove(key: any) {\n    key.existingKey = null;\n    key.key = null;\n  }\n\n  private processResponse(response: TwoFactorYubiKeyResponse) {\n    this.enabled = response.enabled;\n    this.keys = [\n      { key: response.key1, existingKey: this.padRight(response.key1) },\n      { key: response.key2, existingKey: this.padRight(response.key2) },\n      { key: response.key3, existingKey: this.padRight(response.key3) },\n      { key: response.key4, existingKey: this.padRight(response.key4) },\n      { key: response.key5, existingKey: this.padRight(response.key5) },\n    ];\n    this.nfc = response.nfc || !response.enabled;\n  }\n\n  private padRight(str: string, character = \"•\", size = 44) {\n    if (str == null || character == null || str.length >= size) {\n      return str;\n    }\n    const max = (size - str.length) / character.length;\n    for (let i = 0; i < max; i++) {\n      str += character;\n    }\n    return str;\n  }\n}\n","import { Directive, OnInit, TemplateRef, ViewContainerRef } from \"@angular/core\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n/**\n * Hides the element if the user has premium.\n */\n@Directive({\n  selector: \"[appNotPremium]\",\n})\nexport class NotPremiumDirective implements OnInit {\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    const premium = await this.stateService.getCanAccessPremium();\n\n    if (premium) {\n      this.viewContainer.clear();\n    } else {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\n@Component({\n  selector: \"app-premium-badge\",\n  template: `\n    <button type=\"button\" *appNotPremium bitBadge badgeType=\"success\" (click)=\"premiumRequired()\">\n      {{ \"premium\" | i18n }}\n    </button>\n  `,\n})\nexport class PremiumBadgeComponent {\n  constructor(private messagingService: MessagingService) {}\n\n  premiumRequired() {\n    this.messagingService.send(\"premiumRequired\");\n  }\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"twoStepLogin\" | i18n }}</h1>\n</div>\n<p *ngIf=\"!organizationId\">{{ \"twoStepLoginDesc\" | i18n }}</p>\n<p *ngIf=\"organizationId\">{{ \"twoStepLoginOrganizationDesc\" | i18n }}</p>\n<bit-callout type=\"warning\" *ngIf=\"!organizationId\">\n  <p>{{ \"twoStepLoginRecoveryWarning\" | i18n }}</p>\n  <button bitButton buttonType=\"secondary\" (click)=\"recoveryCode()\">\n    {{ \"viewRecoveryCode\" | i18n }}\n  </button>\n</bit-callout>\n<h2 [ngClass]=\"{ 'mt-5': !organizationId }\">\n  {{ \"providers\" | i18n }}\n  <small *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-fw text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </small>\n</h2>\n<bit-callout type=\"warning\" *ngIf=\"showPolicyWarning\">\n  {{ \"twoStepLoginPolicyUserWarning\" | i18n }}\n</bit-callout>\n<ul class=\"list-group list-group-2fa\">\n  <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\">\n    <div class=\"logo-2fa d-flex justify-content-center\">\n      <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n    </div>\n    <div class=\"mx-4\">\n      <h3 class=\"mb-0\">\n        {{ p.name }}\n        <ng-container *ngIf=\"p.enabled\">\n          <i\n            class=\"bwi bwi-check text-success bwi-fw\"\n            title=\"{{ 'enabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"enabled\" | i18n }}</span>\n        </ng-container>\n        <app-premium-badge *ngIf=\"p.premium\"></app-premium-badge>\n      </h3>\n      {{ p.description }}\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        bitButton\n        buttonType=\"secondary\"\n        [disabled]=\"!canAccessPremium && p.premium\"\n        (click)=\"manage(p.type)\"\n      >\n        {{ \"manage\" | i18n }}\n      </button>\n    </div>\n  </li>\n</ul>\n<form *ngIf=\"!loading\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <h2 class=\"mt-5 spaced-header\">\n        {{ \"deviceVerification\" | i18n }}\n      </h2>\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"enableDeviceVerification\"\n            name=\"enableDeviceVerification\"\n            disabled=\"{{ !isDeviceVerificationSectionEnabled }}\"\n            [(ngModel)]=\"enableDeviceVerification\"\n          />\n          <label class=\"form-check-label\" for=\"enableDeviceVerification\">\n            {{ \"enableDeviceVerification\" | i18n }}\n          </label>\n        </div>\n        <small class=\"form-text text-muted\">{{ \"deviceVerificationDesc\" | i18n }}</small>\n      </div>\n      <bit-submit-button [loading]=\"form.loading\" *ngIf=\"isDeviceVerificationSectionEnabled\">\n        {{ \"save\" | i18n }}\n      </bit-submit-button>\n    </div>\n  </div>\n</form>\n\n<ng-template #authenticatorTemplate></ng-template>\n<ng-template #recoveryTemplate></ng-template>\n<ng-template #duoTemplate></ng-template>\n<ng-template #emailTemplate></ng-template>\n<ng-template #yubikeyTemplate></ng-template>\n<ng-template #webAuthnTemplate></ng-template>\n","import { Component, OnInit, Type, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { DeviceVerificationRequest } from \"@bitwarden/common/models/request/deviceVerificationRequest\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { TwoFactorAuthenticatorComponent } from \"./two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"./two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"./two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"./two-factor-recovery.component\";\nimport { TwoFactorWebAuthnComponent } from \"./two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"./two-factor-yubikey.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"two-factor-setup.component.html\",\n})\nexport class TwoFactorSetupComponent implements OnInit {\n  @ViewChild(\"recoveryTemplate\", { read: ViewContainerRef, static: true })\n  recoveryModalRef: ViewContainerRef;\n  @ViewChild(\"authenticatorTemplate\", { read: ViewContainerRef, static: true })\n  authenticatorModalRef: ViewContainerRef;\n  @ViewChild(\"yubikeyTemplate\", { read: ViewContainerRef, static: true })\n  yubikeyModalRef: ViewContainerRef;\n  @ViewChild(\"duoTemplate\", { read: ViewContainerRef, static: true }) duoModalRef: ViewContainerRef;\n  @ViewChild(\"emailTemplate\", { read: ViewContainerRef, static: true })\n  emailModalRef: ViewContainerRef;\n  @ViewChild(\"webAuthnTemplate\", { read: ViewContainerRef, static: true })\n  webAuthnModalRef: ViewContainerRef;\n\n  organizationId: string;\n  providers: any[] = [];\n  canAccessPremium: boolean;\n  showPolicyWarning = false;\n  loading = true;\n  enableDeviceVerification: boolean;\n  isDeviceVerificationSectionEnabled: boolean;\n  modal: ModalRef;\n  formPromise: Promise<any>;\n\n  constructor(\n    protected apiService: ApiService,\n    protected modalService: ModalService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private stateService: StateService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    try {\n      const deviceVerificationSettings = await this.apiService.getDeviceVerificationSettings();\n      this.isDeviceVerificationSectionEnabled =\n        deviceVerificationSettings.isDeviceVerificationSectionEnabled;\n      this.enableDeviceVerification = deviceVerificationSettings.unknownDeviceVerificationEnabled;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    for (const key in TwoFactorProviders) {\n      // eslint-disable-next-line\n      if (!TwoFactorProviders.hasOwnProperty(key)) {\n        continue;\n      }\n\n      const p = (TwoFactorProviders as any)[key];\n      if (this.filterProvider(p.type)) {\n        continue;\n      }\n\n      this.providers.push({\n        type: p.type,\n        name: p.name,\n        description: p.description,\n        enabled: false,\n        premium: p.premium,\n        sort: p.sort,\n      });\n    }\n\n    this.providers.sort((a: any, b: any) => a.sort - b.sort);\n    await this.load();\n  }\n\n  async load() {\n    this.loading = true;\n    const providerList = await this.getTwoFactorProviders();\n    providerList.data.forEach((p) => {\n      this.providers.forEach((p2) => {\n        if (p.type === p2.type) {\n          p2.enabled = p.enabled;\n        }\n      });\n    });\n    this.evaluatePolicies();\n    this.loading = false;\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.Authenticator: {\n        const authComp = await this.openModal(\n          this.authenticatorModalRef,\n          TwoFactorAuthenticatorComponent\n        );\n        authComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Authenticator);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Yubikey: {\n        const yubiComp = await this.openModal(this.yubikeyModalRef, TwoFactorYubiKeyComponent);\n        yubiComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Yubikey);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Duo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Duo);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Email: {\n        const emailComp = await this.openModal(this.emailModalRef, TwoFactorEmailComponent);\n        emailComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Email);\n        });\n        break;\n      }\n      case TwoFactorProviderType.WebAuthn: {\n        const webAuthnComp = await this.openModal(\n          this.webAuthnModalRef,\n          TwoFactorWebAuthnComponent\n        );\n        webAuthnComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.WebAuthn);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  recoveryCode() {\n    this.openModal(this.recoveryModalRef, TwoFactorRecoveryComponent);\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorProviders();\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type === TwoFactorProviderType.OrganizationDuo;\n  }\n\n  protected async openModal<T>(ref: ViewContainerRef, type: Type<T>): Promise<T> {\n    const [modal, childComponent] = await this.modalService.openViewRef(type, ref);\n    this.modal = modal;\n\n    return childComponent;\n  }\n\n  protected updateStatus(enabled: boolean, type: TwoFactorProviderType) {\n    if (!enabled && this.modal != null) {\n      this.modal.close();\n    }\n    this.providers.forEach((p) => {\n      if (p.type === type) {\n        p.enabled = enabled;\n      }\n    });\n    this.evaluatePolicies();\n  }\n\n  private async evaluatePolicies() {\n    if (this.organizationId == null && this.providers.filter((p) => p.enabled).length === 1) {\n      this.showPolicyWarning = await this.policyService.policyAppliesToUser(\n        PolicyType.TwoFactorAuthentication\n      );\n    } else {\n      this.showPolicyWarning = false;\n    }\n  }\n\n  async submit() {\n    try {\n      if (this.enableDeviceVerification) {\n        const email = await this.stateService.getEmail();\n        const confirmed = await this.platformUtilsService.showDialog(\n          this.i18nService.t(\n            \"areYouSureYouWantToEnableDeviceVerificationTheVerificationCodeEmailsWillArriveAtX\",\n            email\n          ),\n          this.i18nService.t(\"deviceVerification\"),\n          this.i18nService.t(\"yes\"),\n          this.i18nService.t(\"no\"),\n          \"warning\"\n        );\n        if (!confirmed) {\n          return;\n        }\n      }\n\n      this.formPromise = this.apiService.putDeviceVerificationSettings(\n        new DeviceVerificationRequest(this.enableDeviceVerification)\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedDeviceVerification\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { TwoFactorDuoComponent } from \"../../settings/two-factor-duo.component\";\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from \"../../settings/two-factor-setup.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"../../settings/two-factor-setup.component.html\",\n})\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n  constructor(\n    apiService: ApiService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService\n  ) {\n    super(\n      apiService,\n      modalService,\n      messagingService,\n      policyService,\n      stateService,\n      platformUtilsService,\n      i18nService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await super.ngOnInit();\n    });\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.OrganizationDuo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        duoComp.type = TwoFactorProviderType.OrganizationDuo;\n        duoComp.organizationId = this.organizationId;\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type !== TwoFactorProviderType.OrganizationDuo;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SecureNoteType } from \"@bitwarden/common/enums/secureNoteType\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CardView } from \"@bitwarden/common/models/view/cardView\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\nimport { IdentityView } from \"@bitwarden/common/models/view/identityView\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\nimport { LoginView } from \"@bitwarden/common/models/view/loginView\";\nimport { SecureNoteView } from \"@bitwarden/common/models/view/secureNoteView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() cloneMode = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n  @Output() onGenerateUsername = new EventEmitter();\n\n  editMode = false;\n  cipher: CipherView;\n  folders$: Observable<FolderView[]>;\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword = false;\n  showCardNumber = false;\n  showCardCode = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt = false;\n  canUseReprompt = true;\n\n  protected writeableCollections: CollectionView[];\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventService: EventService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: \"RuPay\", value: \"RuPay\" },\n      { name: i18nService.t(\"cardBrandMir\"), value: \"Mir\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership)) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")).forEach((o) => {\n      if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n        this.ownershipOptions.push({ name: o.name, value: o.id });\n      }\n    });\n    if (!this.allowPersonal) {\n      this.organizationId = this.ownershipOptions[0].value;\n    }\n\n    this.writeableCollections = await this.loadCollections();\n\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n    }\n    await this.stateService.setAddEditCipherInfo(null);\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders$ = this.folderService.folderViews$;\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generateUsername(): Promise<boolean> {\n    if (this.cipher.login?.username?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwriteUsernameConfirmation\"),\n        this.i18nService.t(\"overwriteUsername\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGenerateUsername.emit();\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (this.cipher.login?.password?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardNumberVisible, this.cipherId);\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipherService.saveWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n}\n","import { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { FieldView } from \"@bitwarden/common/models/view/fieldView\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(private i18nService: I18nService, private eventService: EventService) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue = true;\n  @Input() falseValue = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","<ng-container>\n  <h3 class=\"mt-4\">{{ \"customFields\" | i18n }}</h3>\n  <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n    <div\n      class=\"row\"\n      cdkDrag\n      *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n    >\n      <div class=\"col-5 form-group\">\n        <div class=\"d-flex\">\n          <label for=\"fieldName{{ i }}\">{{ \"name\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/custom-fields/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"fieldName{{ i }}\"\n          type=\"text\"\n          name=\"Field.Name{{ i }}\"\n          [(ngModel)]=\"f.name\"\n          class=\"form-control\"\n          appInputVerbatim\n          [disabled]=\"cipher.isDeleted || viewOnly\"\n        />\n      </div>\n      <div class=\"col-7 form-group\">\n        <label for=\"fieldValue{{ i }}\">{{ \"value\" | i18n }}</label>\n        <div class=\"d-flex align-items-center\">\n          <!-- Text -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Text\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              appInputVerbatim\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', 'Field')\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Hidden -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Hidden\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              type=\"{{ f.showValue ? 'text' : 'password' }}\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              class=\"form-control text-monospace\"\n              appInputVerbatim\n              autocomplete=\"new-password\"\n              [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.viewPassword && !f.newField)\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleFieldValue(f)\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n                >\n                </i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', f.type === fieldType.Hidden ? 'H_Field' : 'Field')\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Linked -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Linked\">\n            <select\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              class=\"form-control\"\n              [(ngModel)]=\"f.linkedId\"\n              *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            >\n              <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"flex-fill\">\n            <!-- Boolean -->\n            <input\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              type=\"checkbox\"\n              [(ngModel)]=\"f.value\"\n              *ngIf=\"f.type === fieldType.Boolean\"\n              appTrueFalseValue\n              trueValue=\"true\"\n              falseValue=\"false\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n          </div>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-danger ml-2\"\n            (click)=\"removeField(f)\"\n            appA11yTitle=\"{{ 'remove' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-muted cursor-move\"\n            appA11yTitle=\"{{ 'dragToSort' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-hamburger bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Add new custom field -->\n  <a\n    href=\"#\"\n    appStopClick\n    (click)=\"addField()\"\n    class=\"d-inline-block mb-2\"\n    *ngIf=\"!cipher.isDeleted && !viewOnly\"\n  >\n    <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomField\" | i18n }}\n  </a>\n  <div class=\"row\" *ngIf=\"!cipher.isDeleted && !viewOnly\">\n    <div class=\"col-5\">\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" class=\"form-control\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n","import { Component, Input } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"@bitwarden/angular/components/add-edit-custom-fields.component\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  @Input() viewOnly: boolean;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  constructor(i18nService: I18nService, eventService: EventService) {\n    super(i18nService, eventService);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"cipherAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"cipherAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"cipher\">\n        <app-callout type=\"info\" *ngIf=\"allowOwnershipAssignment() && !allowPersonal\">\n          {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n        </app-callout>\n        <div class=\"row\" *ngIf=\"!editMode && !viewOnly\">\n          <div class=\"col-6 form-group\">\n            <label for=\"type\">{{ \"whatTypeOfItem\" | i18n }}</label>\n            <select\n              id=\"type\"\n              name=\"Type\"\n              [(ngModel)]=\"cipher.type\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted\"\n              appAutofocus\n            >\n              <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"cipher.name\"\n              required\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n          </div>\n          <div class=\"col-6 form-group\" *ngIf=\"!organization\">\n            <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n            <select\n              id=\"folder\"\n              name=\"FolderId\"\n              [(ngModel)]=\"cipher.folderId\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            >\n              <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n            </select>\n          </div>\n        </div>\n        <!-- Login -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginUsername\"\n                  class=\"form-control\"\n                  type=\"text\"\n                  name=\"Login.Username\"\n                  [(ngModel)]=\"cipher.login.username\"\n                  appInputVerbatim\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\" *ngIf=\"!cipher.isDeleted\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n                    (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-6 form-group\">\n              <div class=\"d-flex\">\n                <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n                <div class=\"ml-auto d-flex\" *ngIf=\"!cipher.isDeleted && !viewOnly\">\n                  <a\n                    href=\"#\"\n                    class=\"d-block mr-2 bwi-icon-above-input\"\n                    appStopClick\n                    appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                    (click)=\"generatePassword()\"\n                    *ngIf=\"cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-fw bwi-generate\" aria-hidden=\"true\"></i>\n                  </a>\n                  <a\n                    href=\"#\"\n                    class=\"d-block bwi-icon-above-input\"\n                    #checkPasswordBtn\n                    appStopClick\n                    appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                    (click)=\"checkPassword()\"\n                    [appApiAction]=\"checkPasswordPromise\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-check-circle\"\n                      [hidden]=\"checkPasswordBtn.loading\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-spinner bwi-spin\"\n                      aria-hidden=\"true\"\n                      [hidden]=\"!checkPasswordBtn.loading\"\n                      title=\"{{ 'loading' | i18n }}\"\n                    ></i>\n                  </a>\n                </div>\n              </div>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginPassword\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Login.Password\"\n                  [(ngModel)]=\"cipher.login.password\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePassword()\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                    (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n              <input\n                id=\"loginTotp\"\n                type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n                name=\"Login.Totp\"\n                class=\"form-control text-monospace\"\n                [(ngModel)]=\"cipher.login.totp\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group totp d-flex align-items-end\" [ngClass]=\"{ low: totpLow }\">\n              <div *ngIf=\"!cipher.login.totp || !totpCode\">\n                <img\n                  src=\"../../images/totp-countdown.png\"\n                  id=\"totpImage\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  class=\"ml-2\"\n                />\n                <app-premium-badge\n                  *ngIf=\"!organization && !cipher.organizationId\"\n                  class=\"ml-3\"\n                ></app-premium-badge>\n                <a\n                  href=\"#\"\n                  appStopClick\n                  bitBadge\n                  badgeType=\"primary\"\n                  class=\"tw-ml-4\"\n                  (click)=\"upgradeOrganization()\"\n                  *ngIf=\"\n                    (organization && !organization.useTotp) ||\n                    (!organization &&\n                      !canAccessPremium &&\n                      cipher.organizationId &&\n                      !cipher.organizationUseTotp)\n                  \"\n                >\n                  {{ \"upgrade\" | i18n }}\n                </a>\n              </div>\n              <div *ngIf=\"cipher.login.totp && totpCode\" class=\"d-flex align-items-center\">\n                <span class=\"totp-countdown mr-3 ml-2\">\n                  <span class=\"totp-sec\">{{ totpSec }}</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                      ></circle>\n                      <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span class=\"totp-code mr-2\" title=\"{{ 'verificationCodeTotp' | i18n }}\">{{\n                  totpCodeFormatted\n                }}</span>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-link\"\n                  appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n                  (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n                >\n                  <i class=\"bwi bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <ng-container *ngIf=\"cipher.login.hasUris\">\n            <div\n              class=\"row\"\n              *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n            >\n              <div class=\"col-7 form-group\">\n                <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n                <div class=\"input-group\">\n                  <input\n                    class=\"form-control\"\n                    id=\"loginUri{{ i }}\"\n                    type=\"text\"\n                    name=\"Login.Uris[{{ i }}].Uri\"\n                    [(ngModel)]=\"u.uri\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                    placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                    appInputVerbatim\n                  />\n                  <div class=\"input-group-append\">\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'launch' | i18n }}\"\n                      (click)=\"launch(u)\"\n                      [disabled]=\"!u.canLaunch\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n                    </button>\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n                      (click)=\"copy(u.uri, 'uri', 'URI')\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-5 form-group\">\n                <div class=\"d-flex\">\n                  <label for=\"loginUriMatch{{ i }}\">\n                    {{ \"matchDetection\" | i18n }}\n                  </label>\n                  <a\n                    class=\"ml-auto\"\n                    href=\"https://bitwarden.com/help/uri-match-detection/\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n                  >\n                    <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n                  </a>\n                </div>\n                <div class=\"d-flex\">\n                  <select\n                    class=\"form-control overflow-hidden\"\n                    id=\"loginUriMatch{{ i }}\"\n                    name=\"Login.Uris[{{ i }}].Match\"\n                    [(ngModel)]=\"u.match\"\n                    (change)=\"loginUriMatchChanged(u)\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                  >\n                    <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">\n                      {{ o.name }}\n                    </option>\n                  </select>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-link text-danger ml-2\"\n                    (click)=\"removeUri(u)\"\n                    appA11yTitle=\"{{ 'remove' | i18n }}\"\n                    *ngIf=\"!cipher.isDeleted && !viewOnly\"\n                  >\n                    <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n          <a\n            href=\"#\"\n            appStopClick\n            (click)=\"addUri()\"\n            class=\"d-inline-block mb-3\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n          </a>\n        </ng-container>\n        <!-- Card -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n              <input\n                id=\"cardCardholderName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.CardCardholderName\"\n                [(ngModel)]=\"cipher.card.cardholderName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n              <select\n                id=\"cardBrand\"\n                class=\"form-control\"\n                name=\"Card.Brand\"\n                [(ngModel)]=\"cipher.card.brand\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardNumber\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                  name=\"Card.Number\"\n                  [(ngModel)]=\"cipher.card.number\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardNumber()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{\n                        'bwi-eye': !showCardNumber,\n                        'bwi-eye-slash': showCardNumber\n                      }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n                    (click)=\"copy(cipher.card.number, 'number', 'Number')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n              <select\n                id=\"cardExpMonth\"\n                class=\"form-control\"\n                name=\"Card.ExpMonth\"\n                [(ngModel)]=\"cipher.card.expMonth\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                  {{ o.name }}\n                </option>\n              </select>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n              <input\n                id=\"cardExpYear\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.ExpYear\"\n                [(ngModel)]=\"cipher.card.expYear\"\n                placeholder=\"{{ 'ex' | i18n }} 2019\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardCode\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                  name=\"Card.Code\"\n                  [(ngModel)]=\"cipher.card.code\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardCode()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'securityCode' | i18n }}\"\n                    (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <!-- Identity -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n              <select\n                id=\"idTitle\"\n                class=\"form-control\"\n                name=\"Identity.Title\"\n                [(ngModel)]=\"cipher.identity.title\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                  {{ o.name }}\n                </option>\n              </select>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n              <input\n                id=\"idFirstName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.FirstName\"\n                [(ngModel)]=\"cipher.identity.firstName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n              <input\n                id=\"idMiddleName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.MiddleName\"\n                [(ngModel)]=\"cipher.identity.middleName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n              <input\n                id=\"idLastName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LastName\"\n                [(ngModel)]=\"cipher.identity.lastName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n              <input\n                id=\"idUsername\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Username\"\n                [(ngModel)]=\"cipher.identity.username\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n              <input\n                id=\"idCompany\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Company\"\n                [(ngModel)]=\"cipher.identity.company\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n              <input\n                id=\"idSsn\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.SSN\"\n                [(ngModel)]=\"cipher.identity.ssn\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n              <input\n                id=\"idPassportNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PassportNumber\"\n                [(ngModel)]=\"cipher.identity.passportNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n              <input\n                id=\"idLicenseNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LicenseNumber\"\n                [(ngModel)]=\"cipher.identity.licenseNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n              <input\n                id=\"idEmail\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"email\"\n                name=\"Identity.Email\"\n                [(ngModel)]=\"cipher.identity.email\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n              <input\n                id=\"idPhone\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"tel\"\n                name=\"Identity.Phone\"\n                [(ngModel)]=\"cipher.identity.phone\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n              <input\n                id=\"idAddress1\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address1\"\n                [(ngModel)]=\"cipher.identity.address1\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n              <input\n                id=\"idAddress2\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address2\"\n                [(ngModel)]=\"cipher.identity.address2\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n              <input\n                id=\"idAddress3\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address3\"\n                [(ngModel)]=\"cipher.identity.address3\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n              <input\n                id=\"idCity\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.City\"\n                [(ngModel)]=\"cipher.identity.city\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n              <input\n                id=\"idState\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.State\"\n                [(ngModel)]=\"cipher.identity.state\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n              <input\n                id=\"idPostalCode\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PostalCode\"\n                [(ngModel)]=\"cipher.identity.postalCode\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n              <input\n                id=\"idCountry\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Country\"\n                [(ngModel)]=\"cipher.identity.country\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n        </ng-container>\n        <div class=\"form-group\">\n          <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n          <textarea\n            id=\"notes\"\n            name=\"Notes\"\n            rows=\"6\"\n            [(ngModel)]=\"cipher.notes\"\n            [disabled]=\"cipher.isDeleted || viewOnly\"\n            class=\"form-control\"\n          ></textarea>\n        </div>\n        <app-vault-add-edit-custom-fields\n          [cipher]=\"cipher\"\n          [thisCipherType]=\"cipher.type\"\n          [viewOnly]=\"viewOnly\"\n          [copy]=\"copy.bind(this)\"\n        ></app-vault-add-edit-custom-fields>\n        <ng-container *ngIf=\"allowOwnershipAssignment()\">\n          <h3 class=\"mt-4\">{{ \"ownership\" | i18n }}</h3>\n          <div class=\"row\">\n            <div class=\"col-5\">\n              <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n              <select\n                id=\"organizationId\"\n                class=\"form-control\"\n                name=\"OrganizationId\"\n                [(ngModel)]=\"cipher.organizationId\"\n                (change)=\"organizationChanged()\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n          <h3 class=\"mt-4\">{{ \"collections\" | i18n }}</h3>\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <ng-container *ngIf=\"collections && collections.length\">\n            <div class=\"form-check\" *ngFor=\"let c of collections; let i = index\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"c.checked\"\n                id=\"collection-{{ i }}\"\n                name=\"Collection[{{ i }}].Checked\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n              <label class=\"form-check-label\" for=\"collection-{{ i }}\">{{ c.name }}</label>\n            </div>\n          </ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"editMode\">\n          <div class=\"small text-muted mt-4\">\n            <div>\n              <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n              {{ cipher.revisionDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"showRevisionDate\">\n              <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n              {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"hasPasswordHistory\">\n              <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n              <a href=\"#\" appStopClick (click)=\"viewHistory()\" title=\"{{ 'view' | i18n }}\">\n                {{ cipher.passwordHistory.length }}\n              </a>\n            </div>\n            <div class=\"ml-3\" *ngIf=\"viewingPasswordHistory\">\n              <div *ngFor=\"let ph of cipher.passwordHistory\">\n                {{ ph.lastUsedDate | date: \"short\" }} -\n                <span class=\"generated-wrapper text-monospace ml-2\">{{ ph.password }}</span>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"canUseReprompt\">\n          <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [ngModel]=\"reprompt\"\n              (change)=\"repromptChanged()\"\n              id=\"passwordPrompt\"\n              name=\"passwordPrompt\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n            <label class=\"form-check-label\" for=\"passwordPrompt\">{{\n              \"passwordPrompt\" | i18n\n            }}</label>\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (cipher?.isDeleted ? \"restore\" : \"save\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ (viewOnly ? \"close\" : \"cancel\") | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"cipher && !viewOnly\">\n          <button\n            *ngIf=\"!organization && !cipher.isDeleted\"\n            type=\"button\"\n            (click)=\"toggleFavorite()\"\n            class=\"btn btn-link\"\n            appA11yTitle=\"{{ (cipher.favorite ? 'unfavorite' : 'favorite') | i18n }}\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              [ngClass]=\"{ 'bwi-star-f': cipher.favorite, 'bwi-star': !cipher.favorite }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ (cipher.isDeleted ? 'permanentlyDelete' : 'delete') | i18n }}\"\n            *ngIf=\"editMode && !cloneMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/add-edit.component\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  canAccessPremium: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  showRevisionDate = false;\n  hasPasswordHistory = false;\n  viewingPasswordHistory = false;\n  viewOnly = false;\n\n  protected totpInterval: number;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    protected totpService: TotpService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected messagingService: MessagingService,\n    eventService: EventService,\n    protected policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n    this.showRevisionDate = this.cipher.passwordRevisionDisplayDate != null;\n    this.hasPasswordHistory = this.cipher.hasPasswordHistory;\n    this.cleanUp();\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      (this.cipher.organizationUseTotp || this.canAccessPremium)\n    ) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = window.setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n  }\n\n  toggleFavorite() {\n    this.cipher.favorite = !this.cipher.favorite;\n  }\n\n  launch(uri: LoginUriView) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (this.editMode) {\n      if (typeI18nKey === \"password\") {\n        this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n      } else if (typeI18nKey === \"securityCode\") {\n        this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n      } else if (aType === \"H_Field\") {\n        this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n      }\n    }\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      const options = (await this.passwordGenerationService.getOptions())[0];\n      this.cipher.login.password = await this.passwordGenerationService.generatePassword(options);\n    }\n    return confirmed;\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  upgradeOrganization() {\n    this.messagingService.send(\"upgradeOrganization\", {\n      organizationId: this.cipher.organizationId,\n    });\n  }\n\n  viewHistory() {\n    this.viewingPasswordHistory = !this.viewingPasswordHistory;\n  }\n\n  protected cleanUp() {\n    if (this.totpInterval) {\n      window.clearInterval(this.totpInterval);\n    }\n  }\n\n  protected async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  protected allowOwnershipAssignment() {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherCreateRequest } from \"@bitwarden/common/models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"@bitwarden/common/models/request/cipherRequest\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../../vault/add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  organization: Organization;\n  originalCipher: Cipher = null;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    private apiService: ApiService,\n    messagingService: MessagingService,\n    eventService: EventService,\n    policyService: PolicyService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  protected allowOwnershipAssignment() {\n    if (\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    ) {\n      if (this.organization != null) {\n        return this.cloneMode && this.organization.canEditAnyCollection;\n      } else {\n        return !this.editMode || this.cloneMode;\n      }\n    }\n    return false;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    const data = new CipherData(response);\n    this.originalCipher = new Cipher(data);\n    return new Cipher(data);\n  }\n\n  protected encryptCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.encryptCipher();\n    }\n    return this.cipherService.encrypt(this.cipher, null, this.originalCipher);\n  }\n\n  protected async saveCipher(cipher: Cipher) {\n    if (!this.organization.canEditAnyCollection || cipher.organizationId == null) {\n      return super.saveCipher(cipher);\n    }\n    if (this.editMode && !this.cloneMode) {\n      const request = new CipherRequest(cipher);\n      return this.apiService.putCipherAdmin(this.cipherId, request);\n    } else {\n      const request = new CipherCreateRequest(cipher);\n      return this.apiService.postCipherAdmin(request);\n    }\n  }\n\n  protected async deleteCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher();\n    }\n    return this.cipher.isDeleted\n      ? this.apiService.deleteCipherAdmin(this.cipherId)\n      : this.apiService.putDeleteCipherAdmin(this.cipherId);\n  }\n}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { AddEditComponent as OrgAddEditComponent } from \"../../organizations/vault/add-edit.component\";\nimport { AddEditComponent } from \"../../vault/add-edit.component\";\n\n@Directive()\nexport class CipherReportComponent {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n\n  loading = false;\n  hasLoaded = false;\n  ciphers: CipherView[] = [];\n  organization: Organization;\n\n  constructor(\n    private modalService: ModalService,\n    protected messagingService: MessagingService,\n    public requiresPaid: boolean,\n    private stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async load() {\n    this.loading = true;\n    await this.setCiphers();\n    this.loading = false;\n    this.hasLoaded = true;\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (!(await this.repromptCipher(cipher))) {\n      return;\n    }\n\n    const type = this.organization != null ? OrgAddEditComponent : AddEditComponent;\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      type,\n      this.cipherAddEditModalRef,\n      (comp: OrgAddEditComponent | AddEditComponent) => {\n        if (this.organization != null) {\n          (comp as OrgAddEditComponent).organization = this.organization;\n          comp.organizationId = this.organization.id;\n        }\n\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n\n  protected async checkAccess(): Promise<boolean> {\n    if (this.organization != null) {\n      // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n      // since all paid plans include useTotp\n      if (this.requiresPaid && !this.organization.useTotp) {\n        this.messagingService.send(\"upgradeOrganization\", { organizationId: this.organization.id });\n        return false;\n      }\n    }\n    return true;\n  }\n\n  protected async setCiphers() {\n    this.ciphers = [];\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img\n    [src]=\"image\"\n    appFallbackSrc=\"{{ fallbackImage }}\"\n    *ngIf=\"imageEnabled && image\"\n    alt=\"\"\n    decoding=\"async\"\n    loading=\"lazy\"\n  />\n  <i class=\"bwi bwi-fw bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n  RuPay: \"card-ru-pay\",\n  Mir: \"card-mir\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"exposedPasswordsReport\" | i18n }}</h1>\n</div>\n<p>{{ \"exposedPasswordsReportDesc\" | i18n }}</p>\n<bit-submit-button [loading]=\"loading\" (click)=\"load()\">\n  {{ \"checkExposedPasswords\" | i18n }}\n</bit-submit-button>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noExposedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'exposedPasswordsFound' | i18n }}\" [useAlertRole]=\"true\">\n      {{ \"exposedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"exposedXTimes\" | i18n: (exposedPasswordMap.get(c.id) | number) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-exposed-passwords-report\",\n  templateUrl: \"exposed-passwords-report.component.html\",\n})\nexport class ExposedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  exposedPasswordMap = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  ngOnInit() {\n    this.checkAccess();\n  }\n\n  async load() {\n    if (await this.checkAccess()) {\n      super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const exposedPasswordCiphers: CipherView[] = [];\n    const promises: Promise<void>[] = [];\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const promise = this.auditService.passwordLeaked(c.login.password).then((exposedCount) => {\n        if (exposedCount > 0) {\n          exposedPasswordCiphers.push(c);\n          this.exposedPasswordMap.set(c.id, exposedCount);\n        }\n      });\n      promises.push(promise);\n    });\n    await Promise.all(promises);\n    this.ciphers = exposedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { ExposedPasswordsReportComponent as BaseExposedPasswordsReportComponent } from \"../../reports/pages/exposed-passwords-report.component\";\n\n@Component({\n  selector: \"app-org-exposed-passwords-report\",\n  templateUrl: \"../../reports/pages/exposed-passwords-report.component.html\",\n})\nexport class ExposedPasswordsReportComponent extends BaseExposedPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private organizationService: OrganizationService,\n    private route: ActivatedRoute,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      auditService,\n      modalService,\n      messagingService,\n      stateService,\n      passwordRepromptService\n    );\n  }\n\n  ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await this.checkAccess();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"inactive2faReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"inactive2faReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noInactive2fa\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'inactive2faFound' | i18n }}\">\n      {{ \"inactive2faFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <a\n              bitBadge\n              href=\"{{ cipherDocs.get(c.id) }}\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              *ngIf=\"cipherDocs.has(c.id)\"\n            >\n              {{ \"instructions\" | i18n }}</a\n            >\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"inactive-two-factor-report.component.html\",\n})\nexport class InactiveTwoFactorReportComponent extends CipherReportComponent implements OnInit {\n  services = new Map<string, string>();\n  cipherDocs = new Map<string, string>();\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    try {\n      await this.load2fa();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (this.services.size > 0) {\n      const allCiphers = await this.getAllCiphers();\n      const inactive2faCiphers: CipherView[] = [];\n      const promises: Promise<void>[] = [];\n      const docs = new Map<string, string>();\n      allCiphers.forEach((c) => {\n        if (\n          c.type !== CipherType.Login ||\n          (c.login.totp != null && c.login.totp !== \"\") ||\n          !c.login.hasUris ||\n          c.isDeleted\n        ) {\n          return;\n        }\n        for (let i = 0; i < c.login.uris.length; i++) {\n          const u = c.login.uris[i];\n          if (u.uri != null && u.uri !== \"\") {\n            const uri = u.uri.replace(\"www.\", \"\");\n            const domain = Utils.getDomain(uri);\n            if (domain != null && this.services.has(domain)) {\n              if (this.services.get(domain) != null) {\n                docs.set(c.id, this.services.get(domain));\n              }\n              inactive2faCiphers.push(c);\n            }\n          }\n        }\n      });\n      await Promise.all(promises);\n      this.ciphers = inactive2faCiphers;\n      this.cipherDocs = docs;\n    }\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  private async load2fa() {\n    if (this.services.size > 0) {\n      return;\n    }\n    const response = await fetch(new Request(\"https://2fa.directory/api/v3/totp.json\"));\n    if (response.status !== 200) {\n      throw new Error();\n    }\n    const responseJson = await response.json();\n    for (const service of responseJson) {\n      const serviceData = service[1];\n      if (serviceData.domain == null) {\n        continue;\n      }\n      if (serviceData.documentation == null) {\n        continue;\n      }\n      if (serviceData[\"additional-domains\"] != null) {\n        for (const additionalDomain of serviceData[\"additional-domains\"]) {\n          this.services.set(additionalDomain, serviceData.documentation);\n        }\n      }\n      this.services.set(serviceData.domain, serviceData.documentation);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { InactiveTwoFactorReportComponent as BaseInactiveTwoFactorReportComponent } from \"../../reports/pages/inactive-two-factor-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"../../reports/pages/inactive-two-factor-report.component.html\",\n})\nexport class InactiveTwoFactorReportComponent extends BaseInactiveTwoFactorReportComponent {\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      modalService,\n      messagingService,\n      stateService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"reusedPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"reusedPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noReusedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'reusedPasswordsFound' | i18n }}\">\n      {{ \"reusedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"reusedXTimes\" | i18n: passwordUseMap.get(c.login.password) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"reused-passwords-report.component.html\",\n})\nexport class ReusedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordUseMap: Map<string, number>;\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const ciphersWithPasswords: CipherView[] = [];\n    this.passwordUseMap = new Map<string, number>();\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      ciphersWithPasswords.push(c);\n      if (this.passwordUseMap.has(c.login.password)) {\n        this.passwordUseMap.set(c.login.password, this.passwordUseMap.get(c.login.password) + 1);\n      } else {\n        this.passwordUseMap.set(c.login.password, 1);\n      }\n    });\n    const reusedPasswordCiphers = ciphersWithPasswords.filter(\n      (c) =>\n        this.passwordUseMap.has(c.login.password) && this.passwordUseMap.get(c.login.password) > 1\n    );\n    this.ciphers = reusedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from an organization view\n    return true;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { ReusedPasswordsReportComponent as BaseReusedPasswordsReportComponent } from \"../../reports/pages/reused-passwords-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"../../reports/pages/reused-passwords-report.component.html\",\n})\nexport class ReusedPasswordsReportComponent extends BaseReusedPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(cipherService, modalService, messagingService, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"container page-content\">\n  <ng-container *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n  <ng-container *ngIf=\"!loading\">\n    <div class=\"row\">\n      <div class=\"col-3\">\n        <div class=\"card mb-4\" *ngIf=\"organization.canAccessImportExport\">\n          <div class=\"card-header\">{{ \"tools\" | i18n }}</div>\n          <div class=\"list-group list-group-flush\">\n            <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"importData\" | i18n }}\n            </a>\n            <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"exportVault\" | i18n }}\n            </a>\n          </div>\n        </div>\n        <div class=\"card\" *ngIf=\"organization.canAccessReports\">\n          <div class=\"card-header d-flex\">\n            {{ \"reports\" | i18n }}\n            <div class=\"ml-auto\">\n              <a\n                href=\"#\"\n                appStopClick\n                bitBadge\n                *ngIf=\"!accessReports\"\n                (click)=\"upgradeOrganization()\"\n              >\n                {{ \"upgrade\" | i18n }}\n              </a>\n            </div>\n          </div>\n          <div class=\"list-group list-group-flush\">\n            <a\n              routerLink=\"exposed-passwords-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"exposedPasswordsReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"reused-passwords-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"reusedPasswordsReport\" | i18n }}\n            </a>\n            <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"weakPasswordsReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"unsecured-websites-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"unsecuredWebsitesReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"inactive-two-factor-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"inactive2faReport\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-9\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </ng-container>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-tools\",\n  templateUrl: \"tools.component.html\",\n})\nexport class ToolsComponent {\n  organization: Organization;\n  accessReports = false;\n  loading = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private messagingService: MessagingService\n  ) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n      // since all paid plans include useTotp\n      this.accessReports = this.organization.useTotp;\n      this.loading = false;\n    });\n  }\n\n  upgradeOrganization() {\n    this.messagingService.send(\"upgradeOrganization\", { organizationId: this.organization.id });\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"unsecuredWebsitesReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"unsecuredWebsitesReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noUnsecuredWebsites\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'unsecuredWebsitesFound' | i18n }}\">\n      {{ \"unsecuredWebsitesFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"unsecured-websites-report.component.html\",\n})\nexport class UnsecuredWebsitesReportComponent extends CipherReportComponent implements OnInit {\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const unsecuredCiphers = allCiphers.filter((c) => {\n      if (c.type !== CipherType.Login || !c.login.hasUris || c.isDeleted) {\n        return false;\n      }\n      return c.login.uris.some((u) => u.uri != null && u.uri.indexOf(\"http://\") === 0);\n    });\n    this.ciphers = unsecuredCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { UnsecuredWebsitesReportComponent as BaseUnsecuredWebsitesReportComponent } from \"../../reports/pages/unsecured-websites-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"../../reports/pages/unsecured-websites-report.component.html\",\n})\nexport class UnsecuredWebsitesReportComponent extends BaseUnsecuredWebsitesReportComponent {\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(cipherService, modalService, messagingService, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"weakPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"weakPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noWeakPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'weakPasswordsFound' | i18n }}\">\n      {{ \"weakPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge [badgeType]=\"passwordStrengthMap.get(c.id)[1]\">\n              {{ passwordStrengthMap.get(c.id)[0] | i18n }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"weak-passwords-report.component.html\",\n})\nexport class WeakPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordStrengthMap = new Map<string, [string, string]>();\n\n  private passwordStrengthCache = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected passwordGenerationService: PasswordGenerationService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const weakPasswordCiphers: CipherView[] = [];\n    const isUserNameNotEmpty = (c: CipherView): boolean => {\n      return c.login.username != null && c.login.username.trim() !== \"\";\n    };\n    const getCacheKey = (c: CipherView): string => {\n      return c.login.password + \"_____\" + (isUserNameNotEmpty(c) ? c.login.username : \"\");\n    };\n\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const hasUserName = isUserNameNotEmpty(c);\n      const cacheKey = getCacheKey(c);\n      if (!this.passwordStrengthCache.has(cacheKey)) {\n        let userInput: string[] = [];\n        if (hasUserName) {\n          const atPosition = c.login.username.indexOf(\"@\");\n          if (atPosition > -1) {\n            userInput = userInput\n              .concat(\n                c.login.username\n                  .substr(0, atPosition)\n                  .trim()\n                  .toLowerCase()\n                  .split(/[^A-Za-z0-9]/)\n              )\n              .filter((i) => i.length >= 3);\n          } else {\n            userInput = c.login.username\n              .trim()\n              .toLowerCase()\n              .split(/[^A-Za-z0-9]/)\n              .filter((i) => i.length >= 3);\n          }\n        }\n        const result = this.passwordGenerationService.passwordStrength(\n          c.login.password,\n          userInput.length > 0 ? userInput : null\n        );\n        this.passwordStrengthCache.set(cacheKey, result.score);\n      }\n      const score = this.passwordStrengthCache.get(cacheKey);\n      if (score != null && score <= 2) {\n        this.passwordStrengthMap.set(c.id, this.scoreKey(score));\n        weakPasswordCiphers.push(c);\n      }\n    });\n    weakPasswordCiphers.sort((a, b) => {\n      return (\n        this.passwordStrengthCache.get(getCacheKey(a)) -\n        this.passwordStrengthCache.get(getCacheKey(b))\n      );\n    });\n    this.ciphers = weakPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n\n  private scoreKey(score: number): [string, string] {\n    switch (score) {\n      case 4:\n        return [\"strong\", \"success\"];\n      case 3:\n        return [\"good\", \"primary\"];\n      case 2:\n        return [\"weak\", \"warning\"];\n      default:\n        return [\"veryWeak\", \"danger\"];\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { WeakPasswordsReportComponent as BaseWeakPasswordsReportComponent } from \"../../reports/pages/weak-passwords-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"../../reports/pages/weak-passwords-report.component.html\",\n})\nexport class WeakPasswordsReportComponent extends BaseWeakPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    passwordGenerationService: PasswordGenerationService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      passwordGenerationService,\n      modalService,\n      messagingService,\n      stateService,\n      passwordRepromptService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { GetOrgNameFromIdPipe } from \"./get-organization-name.pipe\";\n\n@NgModule({\n  declarations: [GetOrgNameFromIdPipe],\n  exports: [GetOrgNameFromIdPipe],\n})\nexport class PipesModule {}\n","import { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\n\nexport class VaultService {\n  calculateSearchBarLocalizationString(vaultFilter: VaultFilter): string {\n    if (vaultFilter.status === \"favorites\") {\n      return \"searchFavorites\";\n    }\n    if (vaultFilter.status === \"trash\") {\n      return \"searchTrash\";\n    }\n    if (vaultFilter.cipherType != null) {\n      return \"searchType\";\n    }\n    if (vaultFilter.selectedFolderId != null && vaultFilter.selectedFolderId != \"none\") {\n      return \"searchFolder\";\n    }\n    if (vaultFilter.selectedCollection) {\n      return \"searchCollection\";\n    }\n    if (vaultFilter.selectedOrganizationId != null) {\n      return \"searchOrganization\";\n    }\n    if (vaultFilter.myVaultOnly) {\n      return \"searchMyVault\";\n    }\n\n    return \"searchVault\";\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\nimport { LooseComponentsModule } from \"../../shared/loose-components.module\";\nimport { VaultFilterModule } from \"../vault-filter/vault-filter.module\";\n\nimport { PipesModule } from \"./pipes/pipes.module\";\nimport { VaultService } from \"./vault.service\";\n\n@NgModule({\n  imports: [SharedModule, VaultFilterModule, LooseComponentsModule, PipesModule],\n  exports: [SharedModule, VaultFilterModule, LooseComponentsModule, PipesModule],\n  providers: [\n    {\n      provide: VaultService,\n      useClass: VaultService,\n    },\n  ],\n})\nexport class VaultSharedModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { VaultFilterSharedModule } from \"../../../vault/vault-filter/shared/vault-filter-shared.module\";\n\nimport { VaultFilterComponent } from \"./vault-filter.component\";\n\n@NgModule({\n  imports: [VaultFilterSharedModule],\n  declarations: [VaultFilterComponent],\n  exports: [VaultFilterComponent],\n})\nexport class VaultFilterModule {}\n","import { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherStatus } from \"./cipher-status.model\";\n\nexport type VaultFilterFunction = (cipher: CipherView) => boolean;\n\nexport class VaultFilter {\n  cipherType?: CipherType;\n  selectedCollection = false; // This is needed because of how the \"Unassigned\" collection works. It has a null id.\n  selectedCollectionId?: string;\n  status?: CipherStatus;\n  selectedFolder = false; // This is needed because of how the \"No Folder\" folder works. It has a null id.\n  selectedFolderId?: string;\n  selectedOrganizationId?: string;\n  myVaultOnly = false;\n  refreshCollectionsAndFolders = false;\n\n  constructor(init?: Partial<VaultFilter>) {\n    Object.assign(this, init);\n  }\n\n  resetFilter() {\n    this.cipherType = null;\n    this.status = null;\n    this.selectedCollection = false;\n    this.selectedCollectionId = null;\n    this.selectedFolder = false;\n    this.selectedFolderId = null;\n  }\n\n  resetOrganization() {\n    this.myVaultOnly = false;\n    this.selectedOrganizationId = null;\n    this.resetFilter();\n  }\n\n  buildFilter(): VaultFilterFunction {\n    return (cipher) => {\n      let cipherPassesFilter = true;\n      if (this.status === \"favorites\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.favorite;\n      }\n      if (this.status === \"trash\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.isDeleted;\n      }\n      if (this.cipherType != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.type === this.cipherType;\n      }\n      if (this.selectedFolder && this.selectedFolderId == null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId == null;\n      }\n      if (this.selectedFolder && this.selectedFolderId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId === this.selectedFolderId;\n      }\n      if (this.selectedCollection && this.selectedCollectionId == null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.organizationId != null &&\n          (cipher.collectionIds == null || cipher.collectionIds.length === 0);\n      }\n      if (this.selectedCollection && this.selectedCollectionId != null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.collectionIds != null && cipher.collectionIds.includes(this.selectedCollectionId);\n      }\n      if (this.selectedOrganizationId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === this.selectedOrganizationId;\n      }\n      if (this.myVaultOnly && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === null;\n      }\n      return cipherPassesFilter;\n    };\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/encArrayBuffer\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n      this.fileDownloadService.download({\n        fileName: attachment.fileName,\n        blobData: decBuf,\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const encBuf = await EncArrayBuffer.fromResponse(response);\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"attachmentsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"attachmentsTitle\">\n          {{ \"attachments\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <table class=\"table table-hover table-list\" *ngIf=\"cipher && cipher.hasAttachments\">\n          <tbody>\n            <tr *ngFor=\"let a of cipher.attachments\">\n              <td class=\"table-list-icon\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"!a.downloading\" aria-hidden=\"true\"></i>\n                <i\n                  class=\"bwi bwi-spinner bwi-lg bwi-fw bwi-spin\"\n                  *ngIf=\"a.downloading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </td>\n              <td class=\"wrap\">\n                <div class=\"d-flex\">\n                  <a href=\"#\" appStopClick (click)=\"download(a)\">{{ a.fileName }}</a>\n                  <div *ngIf=\"showFixOldAttachments(a)\" class=\"ml-2\">\n                    <a\n                      href=\"https://bitwarden.com/help/attachments/#fixing-old-attachments\"\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      <i\n                        class=\"bwi bwi-exclamation-triangle text-warning\"\n                        title=\"{{ 'attachmentFixDesc' | i18n }}\"\n                        aria-hidden=\"true\"\n                      ></i>\n                      <span class=\"sr-only\">{{ \"attachmentFixDesc\" | i18n }}</span></a\n                    >\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-primary btn-sm m-0 py-0 px-2\"\n                      (click)=\"reupload(a)\"\n                      #reuploadBtn\n                      [appApiAction]=\"reuploadPromises[a.id]\"\n                      [disabled]=\"reuploadBtn.loading\"\n                    >\n                      {{ \"fix\" | i18n }}\n                    </button>\n                  </div>\n                </div>\n                <small>{{ a.sizeName }}</small>\n              </td>\n              <td class=\"table-list-options\" *ngIf=\"!viewOnly\">\n                <button\n                  class=\"btn btn-outline-danger\"\n                  type=\"button\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'delete' | i18n }}\"\n                  (click)=\"delete(a)\"\n                  #deleteBtn\n                  [appApiAction]=\"deletePromises[a.id]\"\n                  [disabled]=\"deleteBtn.loading\"\n                >\n                  <i\n                    class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                    [hidden]=\"deleteBtn.loading\"\n                    aria-hidden=\"true\"\n                  ></i>\n                  <i\n                    class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                    [hidden]=\"!deleteBtn.loading\"\n                    title=\"{{ 'loading' | i18n }}\"\n                    aria-hidden=\"true\"\n                  ></i>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div *ngIf=\"!viewOnly\">\n          <h3>{{ \"newAttachment\" | i18n }}</h3>\n          <label for=\"file\" class=\"sr-only\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n          <small class=\"form-text text-muted\">{{ \"maxFileSize\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.showFixOldAttachments(attachment)) {\n      await this.reuploadCipherAttachment(attachment, false);\n    }\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.cipher.organizationId == null;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"../../vault/attachments.component\";\n\n@Component({\n  selector: \"app-org-vault-attachments\",\n  templateUrl: \"../../vault/attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n  organization: Organization;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      stateService,\n      platformUtilsService,\n      apiService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.organization.canEditAnyCollection && this.showFixOldAttachments(attachment)) {\n      await super.reuploadCipherAttachment(attachment, true);\n    }\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(\n      this.cipherDomain,\n      file,\n      this.organization.canEditAnyCollection\n    );\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipherAttachment(attachmentId);\n    }\n    return this.apiService.deleteCipherAttachmentAdmin(this.cipherId, attachmentId);\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.organization.canEditAnyCollection;\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Directive()\nexport class CiphersComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded = false;\n  ciphers: CipherView[] = [];\n  searchText: string;\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.loaded = false;\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Pipe({\n  name: \"orgNameFromId\",\n  pure: true,\n})\nexport class GetOrgNameFromIdPipe implements PipeTransform {\n  transform(value: string, organizations: Organization[]) {\n    const orgName = organizations.find((o) => o.id === value)?.name;\n    return orgName;\n  }\n}\n","<ng-container *ngIf=\"isPaging() ? pagedCiphers : ciphers as filteredCiphers\">\n  <table\n    class=\"table table-hover table-list table-ciphers\"\n    *ngIf=\"filteredCiphers.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of filteredCiphers\">\n        <td (click)=\"checkCipher(c)\" class=\"table-list-checkbox\">\n          <input type=\"checkbox\" [(ngModel)]=\"c.checked\" appStopProp />\n        </td>\n        <td (click)=\"checkCipher(c)\" class=\"table-list-icon\">\n          <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n        </td>\n        <td (click)=\"checkCipher(c)\" class=\"reduced-lh wrap\">\n          <a\n            appStopProp\n            [routerLink]=\"[]\"\n            [queryParams]=\"{ itemId: c.id }\"\n            queryParamsHandling=\"merge\"\n            title=\"{{ 'editItem' | i18n }}\"\n            >{{ c.name }}</a\n          >\n          <ng-container *ngIf=\"c.hasAttachments\">\n            <i\n              class=\"bwi bwi-paperclip\"\n              appStopProp\n              title=\"{{ 'attachments' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            <ng-container *ngIf=\"showFixOldAttachments(c)\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-warning\"\n                appStopProp\n                title=\"{{ 'attachmentsNeedFix' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachmentsNeedFix\" | i18n }}</span>\n            </ng-container>\n          </ng-container>\n          <br />\n          <small appStopProp>{{ c.subTitle }}</small>\n        </td>\n        <td *ngIf=\"organizations.length > 0 && !organization\" class=\"tw-w-28\">\n          <app-org-badge\n            organizationName=\"{{ c.organizationId | orgNameFromId: organizations }}\"\n            profileName=\"{{ profileName }}\"\n            (onOrganizationClicked)=\"onOrganizationClicked(c.organizationId)\"\n          >\n          </app-org-badge>\n        </td>\n        <td class=\"table-list-options\">\n          <button\n            [bitMenuTriggerFor]=\"cipherOptions\"\n            class=\"tw-border-none tw-bg-transparent tw-text-main\"\n            type=\"button\"\n            appA11yTitle=\"{{ 'options' | i18n }}\"\n          >\n            <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <bit-menu #cipherOptions>\n            <ng-container *ngIf=\"c.type === cipherType.Login && !c.isDeleted\">\n              <button bitMenuItem (click)=\"copy(c, c.login.username, 'username', 'Username')\">\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyUsername\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"copy(c, c.login.password, 'password', 'Password')\"\n                *ngIf=\"c.viewPassword\"\n              >\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyPassword\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"copy(c, c.login.totp, 'verificationCodeTotp', 'TOTP')\"\n                *ngIf=\"displayTotpCopyButton(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyVerificationCode\" | i18n }}\n              </button>\n              <button bitMenuItem *ngIf=\"c.login.canLaunch\" (click)=\"launch(c.login.launchUri)\">\n                <i class=\"bwi bwi-fw bwi-share-square\" aria-hidden=\"true\"></i>\n                {{ \"launch\" | i18n }}\n              </button>\n            </ng-container>\n            <button bitMenuItem (click)=\"attachments(c)\">\n              <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n              {{ \"attachments\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"((!organization && !c.organizationId) || organization) && !c.isDeleted\"\n              (click)=\"clone(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-files\" aria-hidden=\"true\"></i>\n              {{ \"clone\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"!organization && !c.organizationId && !c.isDeleted\"\n              (click)=\"share(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n              {{ \"moveToOrganization\" | i18n }}\n            </button>\n            <button bitMenuItem *ngIf=\"c.organizationId && !c.isDeleted\" (click)=\"collections(c)\">\n              <i class=\"bwi bwi-fw bwi-collection\" aria-hidden=\"true\"></i>\n              {{ \"collections\" | i18n }}\n            </button>\n            <button bitMenuItem *ngIf=\"c.organizationId && accessEvents\" (click)=\"events(c)\">\n              <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n              {{ \"eventLogs\" | i18n }}\n            </button>\n            <button bitMenuItem (click)=\"restore(c)\" *ngIf=\"c.isDeleted\">\n              <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n              {{ \"restore\" | i18n }}\n            </button>\n            <button bitMenuItem (click)=\"delete(c)\">\n              <span class=\"tw-text-danger\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ (c.isDeleted ? \"permanentlyDelete\" : \"delete\") | i18n }}\n              </span>\n            </button>\n          </bit-menu>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div class=\"no-items\" *ngIf=\"!filteredCiphers.length\">\n    <ng-container *ngIf=\"!loaded\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </ng-container>\n    <ng-container *ngIf=\"loaded\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button (click)=\"addCipher()\" class=\"btn btn-outline-primary\" *ngIf=\"showAddNew\">\n        <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"addItem\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n</ng-container>\n","import { Component, EventEmitter, Input, OnDestroy, Output } from \"@angular/core\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"@bitwarden/angular/components/ciphers.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nconst MaxCheckedCount = 500;\n\n@Component({\n  selector: \"app-vault-ciphers\",\n  templateUrl: \"ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnDestroy {\n  @Input() showAddNew = true;\n  @Output() onAttachmentsClicked = new EventEmitter<CipherView>();\n  @Output() onShareClicked = new EventEmitter<CipherView>();\n  @Output() onCollectionsClicked = new EventEmitter<CipherView>();\n  @Output() onCloneClicked = new EventEmitter<CipherView>();\n  @Output() onOrganzationBadgeClicked = new EventEmitter<string>();\n\n  pagedCiphers: CipherView[] = [];\n  pageSize = 200;\n  cipherType = CipherType;\n  actionPromise: Promise<any>;\n  userHasPremiumAccess = false;\n  organizations: Organization[] = [];\n  profileName: string;\n\n  private didScroll = false;\n  private pagedCiphersCount = 0;\n  private refreshing = false;\n\n  constructor(\n    searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cipherService: CipherService,\n    protected eventService: EventService,\n    protected totpService: TotpService,\n    protected stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private tokenService: TokenService\n  ) {\n    super(searchService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  // load() is called after the page loads and the first sync has completed.\n  // Do not use ngOnInit() for anything that requires sync data.\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    await super.load(filter, deleted);\n    this.profileName = await this.tokenService.getName();\n    this.organizations = await this.organizationService.getAll();\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  loadMore() {\n    if (this.ciphers.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCiphers.length;\n    let pagedSize = this.pageSize;\n    if (this.refreshing && pagedLength === 0 && this.pagedCiphersCount > this.pageSize) {\n      pagedSize = this.pagedCiphersCount;\n    }\n    if (this.ciphers.length > pagedLength) {\n      this.pagedCiphers = this.pagedCiphers.concat(\n        this.ciphers.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCiphersCount = this.pagedCiphers.length;\n    this.didScroll = this.pagedCiphers.length > this.pageSize;\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter, this.deleted);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.ciphers.length > this.pageSize;\n  }\n\n  async resetPaging() {\n    this.pagedCiphers = [];\n    this.loadMore();\n  }\n\n  async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n    this.resetPaging();\n  }\n\n  launch(uri: string) {\n    this.platformUtilsService.launchUri(uri);\n  }\n\n  async attachments(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onAttachmentsClicked.emit(c);\n  }\n\n  async share(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onShareClicked.emit(c);\n  }\n\n  collections(c: CipherView) {\n    this.onCollectionsClicked.emit(c);\n  }\n\n  async clone(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onCloneClicked.emit(c);\n  }\n\n  async delete(c: CipherView): Promise<boolean> {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    if (this.actionPromise != null) {\n      return;\n    }\n    const permanent = c.isDeleted;\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        permanent ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(permanent ? \"permanentlyDeleteItem\" : \"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.deleteCipher(c.id, permanent);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(permanent ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async restore(c: CipherView): Promise<boolean> {\n    if (this.actionPromise != null || !c.isDeleted) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.cipherService.restoreWithServer(c.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.repromptCipher(cipher))\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (value === cipher.login.totp) {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n    const selectCount =\n      select && this.ciphers.length > MaxCheckedCount ? MaxCheckedCount : this.ciphers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkCipher(this.ciphers[i], select);\n    }\n  }\n\n  checkCipher(c: CipherView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  getSelected(): CipherView[] {\n    if (this.ciphers == null) {\n      return [];\n    }\n    return this.ciphers.filter((c) => !!(c as any).checked);\n  }\n\n  getSelectedIds(): string[] {\n    return this.getSelected().map((c) => c.id);\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (await this.repromptCipher(cipher)) {\n      super.selectCipher(cipher);\n    }\n  }\n\n  onOrganizationClicked(organizationId: string) {\n    this.onOrganzationBadgeClicked.emit(organizationId);\n  }\n\n  protected deleteCipher(id: string, permanent: boolean) {\n    return permanent\n      ? this.cipherService.deleteWithServer(id)\n      : this.cipherService.softDeleteWithServer(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return c.hasOldAttachments && c.organizationId == null;\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"../../vault/ciphers.component\";\n\n@Component({\n  selector: \"app-org-vault-ciphers\",\n  templateUrl: \"../../vault/ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent {\n  @Output() onEventsClicked = new EventEmitter<CipherView>();\n\n  organization: Organization;\n  accessEvents = false;\n\n  protected allCiphers: CipherView[] = [];\n\n  constructor(\n    searchService: SearchService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cipherService: CipherService,\n    eventService: EventService,\n    totpService: TotpService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService,\n    stateService: StateService,\n    organizationService: OrganizationService,\n    tokenService: TokenService,\n    private apiService: ApiService\n  ) {\n    super(\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cipherService,\n      eventService,\n      totpService,\n      stateService,\n      passwordRepromptService,\n      logService,\n      organizationService,\n      tokenService\n    );\n  }\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    if (this.organization.canEditAnyCollection) {\n      this.accessEvents = this.organization.useEvents;\n      this.allCiphers = await this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    } else {\n      this.allCiphers = (await this.cipherService.getAllDecrypted()).filter(\n        (c) => c.organizationId === this.organization.id\n      );\n    }\n    await this.searchService.indexCiphers(this.organization.id, this.allCiphers);\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    if (this.organization.canViewAllCollections) {\n      await super.applyFilter(filter);\n    } else {\n      const f = (c: CipherView) =>\n        c.organizationId === this.organization.id && (filter == null || filter(c));\n      await super.applyFilter(f);\n    }\n  }\n\n  async search(timeout: number = null) {\n    await super.search(timeout, this.allCiphers);\n  }\n  events(c: CipherView) {\n    this.onEventsClicked.emit(c);\n  }\n\n  protected deleteCipher(id: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher(id, this.deleted);\n    }\n    return this.deleted\n      ? this.apiService.deleteCipherAdmin(id)\n      : this.apiService.putDeleteCipherAdmin(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return this.organization.canEditAnyCollection && c.hasOldAttachments;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"collectionsTitle\">\n          {{ \"collections\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"collectionsDesc\" | i18n }}</p>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"@bitwarden/angular/components/collections.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherCollectionsRequest } from \"@bitwarden/common/models/request/cipherCollectionsRequest\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"../../vault/collections.component\";\n\n@Component({\n  selector: \"app-org-vault-collections\",\n  templateUrl: \"../../vault/collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  organization: Organization;\n\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private apiService: ApiService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n    this.allowSelectNone = true;\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canViewAllCollections) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected loadCipherCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCipherCollections();\n    }\n    return this.collectionIds;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected saveCollections() {\n    if (this.organization.canEditAnyCollection) {\n      const request = new CipherCollectionsRequest(this.cipherDomain.collectionIds);\n      return this.apiService.putCipherCollectionsAdmin(this.cipherId, request);\n    } else {\n      return super.saveCollections();\n    }\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, Observable } from \"rxjs\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\nimport { VaultFilterService } from \"../services/vault-filter.service\";\n\n@Directive()\nexport class VaultFilterComponent implements OnInit {\n  @Input() activeFilter: VaultFilter = new VaultFilter();\n  @Input() hideFolders = false;\n  @Input() hideCollections = false;\n  @Input() hideFavorites = false;\n  @Input() hideTrash = false;\n  @Input() hideOrganizations = false;\n\n  @Output() onFilterChange = new EventEmitter<VaultFilter>();\n  @Output() onAddFolder = new EventEmitter<never>();\n  @Output() onEditFolder = new EventEmitter<FolderView>();\n\n  isLoaded = false;\n  collapsedFilterNodes: Set<string>;\n  organizations: Organization[];\n  activePersonalOwnershipPolicy: boolean;\n  activeSingleOrganizationPolicy: boolean;\n  collections: DynamicTreeNode<CollectionView>;\n  folders$: Observable<DynamicTreeNode<FolderView>>;\n\n  constructor(protected vaultFilterService: VaultFilterService) {}\n\n  get displayCollections() {\n    return this.collections?.fullList != null && this.collections.fullList.length > 0;\n  }\n\n  async ngOnInit(): Promise<void> {\n    this.collapsedFilterNodes = await this.vaultFilterService.buildCollapsedFilterNodes();\n    this.organizations = await this.vaultFilterService.buildOrganizations();\n    if (this.organizations != null && this.organizations.length > 0) {\n      this.activePersonalOwnershipPolicy =\n        await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n      this.activeSingleOrganizationPolicy =\n        await this.vaultFilterService.checkForSingleOrganizationPolicy();\n    }\n    this.folders$ = await this.vaultFilterService.buildNestedFolders();\n    this.collections = await this.initCollections();\n    this.isLoaded = true;\n  }\n\n  // overwritten in web for organization vaults\n  async initCollections() {\n    return await this.vaultFilterService.buildCollections();\n  }\n\n  async toggleFilterNodeCollapseState(node: ITreeNodeObject) {\n    if (this.collapsedFilterNodes.has(node.id)) {\n      this.collapsedFilterNodes.delete(node.id);\n    } else {\n      this.collapsedFilterNodes.add(node.id);\n    }\n    await this.vaultFilterService.storeCollapsedFilterNodes(this.collapsedFilterNodes);\n  }\n\n  async applyFilter(filter: VaultFilter) {\n    if (filter.refreshCollectionsAndFolders) {\n      await this.reloadCollectionsAndFolders(filter);\n      filter = await this.pruneInvalidatedFilterSelections(filter);\n    }\n    this.onFilterChange.emit(filter);\n  }\n\n  async reloadCollectionsAndFolders(filter: VaultFilter) {\n    this.folders$ = await this.vaultFilterService.buildNestedFolders(filter.selectedOrganizationId);\n    this.collections = filter.myVaultOnly\n      ? null\n      : await this.vaultFilterService.buildCollections(filter.selectedOrganizationId);\n  }\n\n  async reloadOrganizations() {\n    this.organizations = await this.vaultFilterService.buildOrganizations();\n    this.activePersonalOwnershipPolicy =\n      await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n    this.activeSingleOrganizationPolicy =\n      await this.vaultFilterService.checkForSingleOrganizationPolicy();\n  }\n\n  addFolder() {\n    this.onAddFolder.emit();\n  }\n\n  editFolder(folder: FolderView) {\n    this.onEditFolder.emit(folder);\n  }\n\n  protected async pruneInvalidatedFilterSelections(filter: VaultFilter): Promise<VaultFilter> {\n    filter = await this.pruneInvalidFolderSelection(filter);\n    filter = this.pruneInvalidCollectionSelection(filter);\n    return filter;\n  }\n\n  protected async pruneInvalidFolderSelection(filter: VaultFilter): Promise<VaultFilter> {\n    if (\n      filter.selectedFolder &&\n      !(await firstValueFrom(this.folders$))?.hasId(filter.selectedFolderId)\n    ) {\n      filter.selectedFolder = false;\n      filter.selectedFolderId = null;\n    }\n    return filter;\n  }\n\n  protected pruneInvalidCollectionSelection(filter: VaultFilter): VaultFilter {\n    if (\n      filter.myVaultOnly ||\n      (filter.selectedCollection &&\n        filter.selectedCollectionId != null &&\n        !this.collections?.hasId(filter.selectedCollectionId))\n    ) {\n      filter.selectedCollection = false;\n      filter.selectedCollectionId = null;\n    }\n    return filter;\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class CollectionFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() collectionNodes: DynamicTreeNode<CollectionView>;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  readonly collectionsGrouping: TopLevelTreeNode = {\n    id: \"collections\",\n    name: \"collections\",\n  };\n\n  get collections() {\n    return this.collectionNodes?.fullList;\n  }\n\n  get nestedCollections() {\n    return this.collectionNodes?.nestedList;\n  }\n\n  get show() {\n    return !this.hide && this.collections != null && this.collections.length > 0;\n  }\n\n  isCollapsed(node: ITreeNodeObject) {\n    return this.collapsedFilterNodes.has(node.id);\n  }\n\n  applyFilter(collection: CollectionView) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.selectedCollection = true;\n    this.activeFilter.selectedCollectionId = collection.id;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  async toggleCollapse(node: ITreeNodeObject) {\n    this.onNodeCollapseStateChange.emit(node);\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <div class=\"filter-heading\">\n    <button\n      (click)=\"toggleCollapse(collectionsGrouping)\"\n      [attr.aria-expanded]=\"!isCollapsed(collectionsGrouping)\"\n      aria-controls=\"collection-filters\"\n      title=\"{{ 'toggleCollapse' | i18n }}\"\n      class=\"toggle-button\"\n    >\n      <i\n        class=\"bwi bwi-fw\"\n        [ngClass]=\"{\n          'bwi-angle-right': isCollapsed(collectionsGrouping),\n          'bwi-angle-down': !isCollapsed(collectionsGrouping)\n        }\"\n        aria-hidden=\"true\"\n      ></i>\n    </button>\n    <h3 class=\"filter-title\">&nbsp;{{ collectionsGrouping.name | i18n }}</h3>\n  </div>\n  <ul id=\"collection-filters\" *ngIf=\"!isCollapsed(collectionsGrouping)\" class=\"filter-options\">\n    <ng-template #recursiveCollections let-collections>\n      <li\n        *ngFor=\"let c of collections\"\n        [ngClass]=\"{\n          active: c.node.id === activeFilter.selectedCollectionId && activeFilter.selectedCollection\n        }\"\n        class=\"filter-option\"\n      >\n        <span class=\"filter-buttons\">\n          <button\n            class=\"toggle-button\"\n            *ngIf=\"c.children.length\"\n            (click)=\"toggleCollapse(c.node)\"\n            title=\"{{ 'toggleCollapse' | i18n }}\"\n            [attr.aria-expanded]=\"!isCollapsed(c.node)\"\n            [attr.aria-controls]=\"c.node.name + '_children'\"\n          >\n            <i\n              class=\"bwi bwi-fw\"\n              [ngClass]=\"{\n                'bwi-angle-right': isCollapsed(c.node),\n                'bwi-angle-down': !isCollapsed(c.node)\n              }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button class=\"filter-button\" (click)=\"applyFilter(c.node)\">\n            <i\n              *ngIf=\"c.children.length === 0\"\n              class=\"bwi bwi-collection bwi-fw\"\n              aria-hidden=\"true\"\n            ></i\n            >&nbsp;{{ c.node.name }}\n          </button>\n        </span>\n        <ul\n          [id]=\"c.node.name + '_children'\"\n          class=\"nested-filter-options\"\n          *ngIf=\"c.children.length && !isCollapsed(c.node)\"\n        >\n          <ng-container\n            *ngTemplateOutlet=\"recursiveCollections; context: { $implicit: c.children }\"\n          >\n          </ng-container>\n        </ul>\n      </li>\n    </ng-template>\n    <ng-container\n      *ngTemplateOutlet=\"recursiveCollections; context: { $implicit: nestedCollections }\"\n    >\n    </ng-container>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { CollectionFilterComponent as BaseCollectionFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/collection-filter.component\";\n\n@Component({\n  selector: \"app-collection-filter\",\n  templateUrl: \"collection-filter.component.html\",\n})\nexport class CollectionFilterComponent extends BaseCollectionFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class FolderFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() folderNodes: DynamicTreeNode<FolderView>;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n  @Output() onAddFolder = new EventEmitter();\n  @Output() onEditFolder = new EventEmitter<FolderView>();\n\n  get folders() {\n    return this.folderNodes?.fullList;\n  }\n\n  get nestedFolders() {\n    return this.folderNodes?.nestedList;\n  }\n\n  readonly foldersGrouping: TopLevelTreeNode = {\n    id: \"folders\",\n    name: \"folders\",\n  };\n\n  applyFilter(folder: FolderView) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.selectedFolder = true;\n    this.activeFilter.selectedFolderId = folder.id;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  addFolder() {\n    this.onAddFolder.emit();\n  }\n\n  editFolder(folder: FolderView) {\n    this.onEditFolder.emit(folder);\n  }\n\n  isCollapsed(node: ITreeNodeObject) {\n    return this.collapsedFilterNodes.has(node.id);\n  }\n\n  async toggleCollapse(node: ITreeNodeObject) {\n    this.onNodeCollapseStateChange.emit(node);\n  }\n}\n","<ng-container *ngIf=\"!hide\">\n  <div class=\"filter-heading\">\n    <button\n      class=\"toggle-button\"\n      (click)=\"toggleCollapse(foldersGrouping)\"\n      [attr.aria-expanded]=\"!isCollapsed(foldersGrouping)\"\n      aria-controls=\"folder-filters\"\n      title=\"{{ 'toggleCollapse' | i18n }}\"\n    >\n      <i\n        class=\"bwi bwi-fw\"\n        aria-hidden=\"true\"\n        [ngClass]=\"{\n          'bwi-angle-right': isCollapsed(foldersGrouping),\n          'bwi-angle-down': !isCollapsed(foldersGrouping)\n        }\"\n      ></i>\n    </button>\n    <h3 class=\"filter-title\">&nbsp;{{ \"folders\" | i18n }}</h3>\n    <button\n      class=\"text-muted ml-auto add-button\"\n      (click)=\"addFolder()\"\n      appA11yTitle=\"{{ 'addFolder' | i18n }}\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n  <ul id=\"folder-filters\" *ngIf=\"!isCollapsed(foldersGrouping)\" class=\"filter-options\">\n    <ng-template #recursiveFolders let-folders>\n      <li\n        *ngFor=\"let f of folders\"\n        [ngClass]=\"{\n          active: f.node.id === activeFilter.selectedFolderId && activeFilter.selectedFolder\n        }\"\n        class=\"filter-option\"\n      >\n        <span class=\"filter-buttons\">\n          <button\n            *ngIf=\"f.children.length\"\n            title=\"{{ 'toggleCollapse' | i18n }}\"\n            (click)=\"toggleCollapse(f.node)\"\n            [attr.aria-expanded]=\"!isCollapsed(f.node)\"\n            [attr.aria-controls]=\"f.node.name + '_children'\"\n            class=\"toggle-button\"\n          >\n            <i\n              class=\"bwi bwi-fw\"\n              [ngClass]=\"{\n                'bwi-angle-right': isCollapsed(f.node),\n                'bwi-angle-down': !isCollapsed(f.node)\n              }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button class=\"filter-button\" (click)=\"applyFilter(f.node)\">\n            <i *ngIf=\"f.children.length === 0\" class=\"bwi bwi-fw bwi-folder\" aria-hidden=\"true\"></i\n            >&nbsp;{{ f.node.name }}\n          </button>\n          <button\n            class=\"edit-button\"\n            (click)=\"editFolder(f.node)\"\n            appA11yTitle=\"{{ 'editFolder' | i18n }}\"\n            *ngIf=\"f.node.id\"\n          >\n            <i class=\"bwi bwi-pencil bwi-fw\" aria-hidden=\"true\"></i>\n          </button>\n        </span>\n        <ul\n          [id]=\"f.node.name + '_children'\"\n          class=\"nested-filter-options\"\n          *ngIf=\"f.children.length && !isCollapsed(f.node)\"\n        >\n          <ng-container *ngTemplateOutlet=\"recursiveFolders; context: { $implicit: f.children }\">\n          </ng-container>\n        </ul>\n      </li>\n    </ng-template>\n    <ng-container\n      *ngTemplateOutlet=\"recursiveFolders; context: { $implicit: nestedFolders }\"\n    ></ng-container>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { FolderFilterComponent as BaseFolderFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/folder-filter.component\";\n\n@Component({\n  selector: \"app-folder-filter\",\n  templateUrl: \"folder-filter.component.html\",\n})\nexport class FolderFilterComponent extends BaseFolderFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherStatus } from \"../models/cipher-status.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class StatusFilterComponent {\n  @Input() hideFavorites = false;\n  @Input() hideTrash = false;\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n  @Input() activeFilter: VaultFilter;\n\n  get show() {\n    return !(this.hideFavorites && this.hideTrash);\n  }\n\n  applyFilter(cipherStatus: CipherStatus) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.status = cipherStatus;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <ul class=\"filter-options\">\n    <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.status === 'all' }\">\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('all')\">\n          <i class=\"bwi bwi-fw bwi-filter\" aria-hidden=\"true\"></i>&nbsp;{{ \"allItems\" | i18n }}\n        </button>\n      </span>\n    </li>\n    <li\n      *ngIf=\"!hideFavorites\"\n      class=\"filter-option\"\n      [ngClass]=\"{ active: activeFilter.status === 'favorites' }\"\n    >\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('favorites')\">\n          <i class=\"bwi bwi-fw bwi-star\" aria-hidden=\"true\"></i>&nbsp;{{ \"favorites\" | i18n }}\n        </button>\n      </span>\n    </li>\n    <li\n      *ngIf=\"!hideTrash\"\n      class=\"filter-option\"\n      [ngClass]=\"{ active: activeFilter.status === 'trash' }\"\n    >\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('trash')\">\n          <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>&nbsp;{{ \"trash\" | i18n }}\n        </button>\n      </span>\n    </li>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { StatusFilterComponent as BaseStatusFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/status-filter.component\";\n\n@Component({\n  selector: \"app-status-filter\",\n  templateUrl: \"status-filter.component.html\",\n})\nexport class StatusFilterComponent extends BaseStatusFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\n\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class TypeFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() selectedCipherType: CipherType = null;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  readonly typesNode: TopLevelTreeNode = {\n    id: \"types\",\n    name: \"types\",\n  };\n\n  cipherTypeEnum = CipherType; // used in the template\n\n  get isCollapsed() {\n    return this.collapsedFilterNodes.has(this.typesNode.id);\n  }\n\n  applyFilter(cipherType: CipherType) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.cipherType = cipherType;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  async toggleCollapse() {\n    this.onNodeCollapseStateChange.emit(this.typesNode);\n  }\n}\n","<div class=\"filter-heading\">\n  <button\n    class=\"toggle-button\"\n    [attr.aria-expanded]=\"!isCollapsed\"\n    aria-controls=\"type-filters\"\n    (click)=\"toggleCollapse()\"\n    title=\"{{ 'toggleCollapse' | i18n }}\"\n  >\n    <i\n      class=\"bwi bwi-fw\"\n      aria-hidden=\"true\"\n      [ngClass]=\"{\n        'bwi-angle-right': isCollapsed,\n        'bwi-angle-down': !isCollapsed\n      }\"\n    ></i>\n  </button>\n  <h3>&nbsp;{{ \"types\" | i18n }}</h3>\n</div>\n<ul id=\"type-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Login }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Login)\">\n        <i class=\"bwi bwi-fw bwi-globe\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeLogin\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Card }\">\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Card)\">\n        <i class=\"bwi bwi-fw bwi-credit-card\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeCard\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Identity }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Identity)\">\n        <i class=\"bwi bwi-fw bwi-id-card\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeIdentity\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.SecureNote }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.SecureNote)\">\n        <i class=\"bwi bwi-fw bwi-sticky-note\" aria-hidden=\"true\"></i>&nbsp;{{\n          \"typeSecureNote\" | i18n\n        }}\n      </button>\n    </span>\n  </li>\n</ul>\n","import { Component } from \"@angular/core\";\n\nimport { TypeFilterComponent as BaseTypeFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/type-filter.component\";\n\n@Component({\n  selector: \"app-type-filter\",\n  templateUrl: \"type-filter.component.html\",\n})\nexport class TypeFilterComponent extends BaseTypeFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\n\nimport { DisplayMode } from \"../models/display-mode\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class OrganizationFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() organizations: Organization[];\n  @Input() activeFilter: VaultFilter;\n  @Input() activePersonalOwnershipPolicy: boolean;\n  @Input() activeSingleOrganizationPolicy: boolean;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  get displayMode(): DisplayMode {\n    let displayMode: DisplayMode = \"organizationMember\";\n    if (this.organizations == null || this.organizations.length < 1) {\n      displayMode = \"noOrganizations\";\n    } else if (this.activePersonalOwnershipPolicy && !this.activeSingleOrganizationPolicy) {\n      displayMode = \"personalOwnershipPolicy\";\n    } else if (!this.activePersonalOwnershipPolicy && this.activeSingleOrganizationPolicy) {\n      displayMode = \"singleOrganizationPolicy\";\n    } else if (this.activePersonalOwnershipPolicy && this.activeSingleOrganizationPolicy) {\n      displayMode = \"singleOrganizationAndPersonalOwnershipPolicies\";\n    }\n\n    return displayMode;\n  }\n\n  get hasActiveFilter() {\n    return this.activeFilter.myVaultOnly || this.activeFilter.selectedOrganizationId != null;\n  }\n\n  readonly organizationGrouping: TopLevelTreeNode = {\n    id: \"vaults\",\n    name: \"allVaults\",\n  };\n\n  async applyOrganizationFilter(organization: Organization) {\n    this.activeFilter.selectedOrganizationId = organization.id;\n    this.activeFilter.myVaultOnly = false;\n    this.activeFilter.refreshCollectionsAndFolders = true;\n    this.applyFilter(this.activeFilter);\n  }\n\n  async applyMyVaultFilter() {\n    this.activeFilter.selectedOrganizationId = null;\n    this.activeFilter.myVaultOnly = true;\n    this.activeFilter.refreshCollectionsAndFolders = true;\n    this.applyFilter(this.activeFilter);\n  }\n\n  clearFilter() {\n    this.activeFilter.myVaultOnly = false;\n    this.activeFilter.selectedOrganizationId = null;\n    this.applyFilter(new VaultFilter(this.activeFilter));\n  }\n\n  private applyFilter(filter: VaultFilter) {\n    this.onFilterChange.emit(filter);\n  }\n\n  async toggleCollapse() {\n    this.onNodeCollapseStateChange.emit(this.organizationGrouping);\n  }\n\n  get isCollapsed() {\n    return this.collapsedFilterNodes.has(this.organizationGrouping.id);\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalConfig } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-enroll-master-password-reset\",\n  templateUrl: \"enroll-master-password-reset.component.html\",\n})\nexport class EnrollMasterPasswordReset {\n  organization: Organization;\n\n  verification: Verification;\n  formPromise: Promise<any>;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private modalRef: ModalRef,\n    config: ModalConfig\n  ) {\n    this.organization = config.data.organization;\n  }\n\n  async submit() {\n    let toastStringRef = \"withdrawPasswordResetSuccess\";\n\n    this.formPromise = this.userVerificationService\n      .buildRequest(this.verification, OrganizationUserResetPasswordEnrollmentRequest)\n      .then(async (request) => {\n        // Set variables\n        let keyString: string = null;\n\n        // Retrieve Public Key\n        const orgKeys = await this.apiService.getOrganizationKeys(this.organization.id);\n        if (orgKeys == null) {\n          throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n        }\n\n        const publicKey = Utils.fromB64ToArray(orgKeys.publicKey);\n\n        // RSA Encrypt user's encKey.key with organization public key\n        const encKey = await this.cryptoService.getEncKey();\n        const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n        keyString = encryptedKey.encryptedString;\n        toastStringRef = \"enrollPasswordResetSuccess\";\n\n        // Create request and execute enrollment\n        request.resetPasswordKey = keyString;\n        await this.apiService.putOrganizationUserResetPasswordEnrollment(\n          this.organization.id,\n          this.organization.userId,\n          request\n        );\n\n        await this.syncService.fullSync(true);\n      });\n    try {\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(toastStringRef));\n      this.modalRef.close();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div\n  class=\"modal fade\"\n  role=\"dialog\"\n  aria-modal=\"true\"\n  aria-labelledby=\"enrollMasterPasswordResetTitle\"\n>\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"enrollMasterPasswordResetTitle\">\n          {{ \"enrollPasswordReset\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">\n          {{ \"resetPasswordEnrollmentWarning\" | i18n }}\n        </app-callout>\n        <app-user-verification [(ngModel)]=\"verification\" name=\"secret\"> </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <bit-submit-button [loading]=\"form.loading\">\n          {{ \"submit\" | i18n }}\n        </bit-submit-button>\n        <button\n          bitButton\n          buttonType=\"secondary\"\n          type=\"button\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span>\n            {{ \"cancel\" | i18n }}\n          </span>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { AfterContentInit, Component, Input } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-link-sso\",\n  templateUrl: \"link-sso.component.html\",\n})\nexport class LinkSsoComponent extends SsoComponent implements AfterContentInit {\n  @Input() organization: Organization;\n  returnUri = \"/settings/organizations\";\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    authService: AuthService,\n    router: Router,\n    route: ActivatedRoute,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    this.returnUri = \"/settings/organizations\";\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngAfterContentInit() {\n    this.identifier = this.organization.identifier;\n  }\n}\n","<a\n  class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main tw-no-underline hover:tw-bg-secondary-100 hover:tw-no-underline focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n  href=\"#\"\n  appStopClick\n  (click)=\"submit(returnUri, true)\"\n>\n  <i class=\"bwi bwi-fw bwi-link\" aria-hidden=\"true\"></i>\n  {{ \"linkSso\" | i18n }}\n</a>\n","<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted tw-m-2\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<div\n  *ngIf=\"loaded\"\n  class=\"tw-flex tw-min-w-[200px] tw-max-w-[300px] tw-flex-col\"\n  [appApiAction]=\"actionPromise\"\n>\n  <button\n    *ngIf=\"allowEnrollmentChanges(organization) && !organization.resetPasswordEnrolled\"\n    class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"toggleResetPasswordEnrollment(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n    {{ \"enrollPasswordReset\" | i18n }}\n  </button>\n  <button\n    *ngIf=\"allowEnrollmentChanges(organization) && organization.resetPasswordEnrolled\"\n    class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"toggleResetPasswordEnrollment(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n    {{ \"withdrawPasswordReset\" | i18n }}\n  </button>\n  <ng-container *ngIf=\"organization.useSso && organization.identifier\">\n    <button\n      *ngIf=\"organization.ssoBound; else linkSso\"\n      class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n      (click)=\"unlinkSso(organization)\"\n    >\n      <i class=\"bwi bwi-fw bwi-chain-broken\" aria-hidden=\"true\"></i>\n      {{ \"unlinkSso\" | i18n }}\n    </button>\n    <ng-template #linkSso>\n      <app-link-sso [organization]=\"organization\"> </app-link-sso>\n    </ng-template>\n  </ng-container>\n  <button\n    class=\"text-danger tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"leave(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n    {{ \"leave\" | i18n }}\n  </button>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\n\nimport { EnrollMasterPasswordReset } from \"../../../organizations/users/enroll-master-password-reset.component\";\n\n@Component({\n  selector: \"app-organization-options\",\n  templateUrl: \"organization-options.component.html\",\n})\nexport class OrganizationOptionsComponent {\n  actionPromise: Promise<any>;\n  policies: Policy[];\n  loaded = false;\n\n  @Input() organization: Organization;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private modalService: ModalService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.policies = await this.policyService.getAll(PolicyType.ResetPassword);\n    this.loaded = true;\n  }\n\n  allowEnrollmentChanges(org: Organization): boolean {\n    if (org.usePolicies && org.useResetPassword && org.hasPublicAndPrivateKeys) {\n      const policy = this.policies.find((p) => p.organizationId === org.id);\n      if (policy != null && policy.enabled) {\n        return org.resetPasswordEnrolled && policy.data.autoEnrollEnabled ? false : true;\n      }\n    }\n\n    return false;\n  }\n\n  showEnrolledStatus(org: Organization): boolean {\n    return (\n      org.useResetPassword &&\n      org.resetPasswordEnrolled &&\n      this.policies.some((p) => p.organizationId === org.id && p.enabled)\n    );\n  }\n\n  async unlinkSso(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"unlinkSsoConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.apiService.deleteSsoUser(org.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, \"Unlinked SSO\");\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async leave(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.apiService.postLeaveOrganization(org.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async toggleResetPasswordEnrollment(org: Organization) {\n    if (!this.organization.resetPasswordEnrolled) {\n      this.modalService.open(EnrollMasterPasswordReset, {\n        allowMultipleModals: true,\n        data: {\n          organization: org,\n        },\n      });\n    } else {\n      // Remove reset password\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.masterPasswordHash = \"ignored\";\n      request.resetPasswordKey = null;\n      this.actionPromise = this.apiService.putOrganizationUserResetPasswordEnrollment(\n        this.organization.id,\n        this.organization.userId,\n        request\n      );\n      try {\n        await this.actionPromise;\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"withdrawPasswordResetSuccess\")\n        );\n        this.syncService.fullSync(true);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n}\n","<ng-container *ngIf=\"!hide\">\n  <ng-container [ngSwitch]=\"displayMode\">\n    <ng-container *ngSwitchCase=\"'noOrganizations'\">\n      <ul class=\"filter-options\">\n        <li class=\"filter-option active\">\n          <span class=\"filter-buttons\">\n            <button class=\"filter-button\">\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"myVault\" | i18n }}\n            </button>\n          </span>\n        </li>\n        <li class=\"filter-option\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'personalOwnershipPolicy'\">\n      <div class=\"filter-heading\">\n        <button\n          (click)=\"toggleCollapse()\"\n          title=\"{{ 'toggleCollapse' | i18n }}\"\n          class=\"toggle-button\"\n          [attr.aria-expanded]=\"!isCollapsed\"\n          aria-controls=\"organization-filters\"\n        >\n          <i\n            class=\"bwi bwi-fw\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-right': isCollapsed,\n              'bwi-angle-down': !isCollapsed\n            }\"\n          ></i>\n        </button>\n        <button\n          class=\"filter-button\"\n          (click)=\"clearFilter()\"\n          [ngClass]=\"{ active: !hasActiveFilter }\"\n        >\n          &nbsp;{{ organizationGrouping.name | i18n }}\n        </button>\n      </div>\n      <ul id=\"organization-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n        <li\n          class=\"filter-option\"\n          *ngFor=\"let organization of organizations\"\n          [ngClass]=\"{ active: organization.id === activeFilter.selectedOrganizationId }\"\n        >\n          <span class=\"filter-buttons\">\n            <button class=\"filter-button\" (click)=\"applyOrganizationFilter(organization)\">\n              <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n              {{ organization.name }}\n            </button>\n            <ng-container *ngIf=\"organization.id === activeFilter.selectedOrganizationId\">\n              <button [bitMenuTriggerFor]=\"orgMenu\" class=\"org-options ml-auto\">\n                <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu class=\"filter-organization-options\" #orgMenu>\n                <app-organization-options [organization]=\"organization\"></app-organization-options>\n              </bit-menu>\n            </ng-container>\n          </span>\n        </li>\n        <li class=\"filter-option\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'singleOrganizationAndPersonalOwnershipPolicies'\">\n      <div class=\"filter-heading\">\n        <button class=\"filter-button active\">\n          <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n          {{ organizations[0].name }}\n        </button>\n      </div>\n    </ng-container>\n    <ng-container *ngSwitchDefault>\n      <div class=\"filter-heading\">\n        <button\n          class=\"toggle-button\"\n          title=\"{{ 'toggleCollapse' | i18n }}\"\n          (click)=\"toggleCollapse()\"\n          [attr.aria-expanded]=\"!isCollapsed\"\n          aria-controls=\"organization-filters\"\n        >\n          <i\n            class=\"bwi bwi-fw\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-right': isCollapsed,\n              'bwi-angle-down': !isCollapsed\n            }\"\n          ></i>\n        </button>\n        <button\n          class=\"filter-button\"\n          (click)=\"clearFilter()\"\n          [ngClass]=\"{ active: !hasActiveFilter }\"\n        >\n          &nbsp;{{ organizationGrouping.name | i18n }}\n        </button>\n      </div>\n      <ul id=\"organization-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n        <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.myVaultOnly }\">\n          <span class=\"filter-buttons\">\n            <button class=\"filter-button\" (click)=\"applyMyVaultFilter()\">\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"myVault\" | i18n }}\n            </button>\n          </span>\n        </li>\n        <li\n          class=\"filter-option\"\n          *ngFor=\"let organization of organizations\"\n          [ngClass]=\"{ active: organization.id === activeFilter.selectedOrganizationId }\"\n        >\n          <span class=\"filter-buttons\">\n            <button\n              class=\"filter-button\"\n              [ngClass]=\"{ 'disabled-organization': !organization.enabled }\"\n              (click)=\"applyOrganizationFilter(organization)\"\n            >\n              <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n              {{ organization.name }}\n            </button>\n            <span class=\"ml-auto\">\n              <i\n                *ngIf=\"!organization.enabled\"\n                class=\"org-options bwi bwi-fw bwi-exclamation-triangle text-danger\"\n                aria-label=\"{{ 'organizationIsDisabled' | i18n }}\"\n                appA11yTitle=\"{{ 'organizationIsDisabled' | i18n }}\"\n              ></i\n              ><button [bitMenuTriggerFor]=\"orgMenu\" class=\"org-options\">\n                <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu class=\"filter-organization-options\" #orgMenu>\n                <app-organization-options [organization]=\"organization\"></app-organization-options>\n              </bit-menu>\n            </span>\n          </span>\n        </li>\n        <li class=\"filter-option\" *ngIf=\"!(displayMode === 'singleOrganizationPolicy')\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n  </ng-container>\n  <hr />\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { OrganizationFilterComponent as BaseOrganizationFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/organization-filter.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-organization-filter\",\n  templateUrl: \"organization-filter.component.html\",\n})\nexport class OrganizationFilterComponent extends BaseOrganizationFilterComponent {\n  displayText = \"allVaults\";\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {\n    super();\n  }\n\n  async applyOrganizationFilter(organization: Organization) {\n    if (organization.enabled) {\n      //proceed with default behaviour for enabled organizations\n      super.applyOrganizationFilter(organization);\n    } else {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"disabledOrganizationFilterError\")\n      );\n    }\n  }\n}\n","<div class=\"card vault-filters\">\n  <div class=\"container loading-spinner\" *ngIf=\"!isLoaded\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n  </div>\n  <div *ngIf=\"isLoaded\">\n    <div class=\"card-header d-flex\">\n      {{ \"filters\" | i18n }}\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/searching-vault/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"card-body\">\n      <input\n        type=\"search\"\n        placeholder=\"{{ (searchPlaceholder | i18n) || ('searchVault' | i18n) }}\"\n        id=\"search\"\n        class=\"form-control\"\n        [(ngModel)]=\"searchText\"\n        (input)=\"searchTextChanged()\"\n        autocomplete=\"off\"\n        appAutofocus\n      />\n      <app-organization-filter\n        [hide]=\"hideOrganizations\"\n        [activeFilter]=\"activeFilter\"\n        [collapsedFilterNodes]=\"collapsedFilterNodes\"\n        [organizations]=\"organizations\"\n        [activePersonalOwnershipPolicy]=\"activePersonalOwnershipPolicy\"\n        [activeSingleOrganizationPolicy]=\"activeSingleOrganizationPolicy\"\n        (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n        (onFilterChange)=\"applyFilter($event)\"\n      ></app-organization-filter>\n      <div class=\"filter\">\n        <app-status-filter\n          [hideFavorites]=\"hideFavorites\"\n          [hideTrash]=\"hideTrash\"\n          [activeFilter]=\"activeFilter\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-status-filter>\n      </div>\n      <div class=\"filter\">\n        <app-type-filter\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-type-filter>\n      </div>\n      <div class=\"filter\">\n        <app-folder-filter\n          [hide]=\"hideFolders\"\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          [folderNodes]=\"folders$ | async\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n          (onAddFolder)=\"addFolder()\"\n          (onEditFolder)=\"editFolder($event)\"\n        ></app-folder-filter>\n      </div>\n      <div class=\"filter\">\n        <app-collection-filter\n          [hide]=\"hideCollections\"\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          [collectionNodes]=\"collections\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-collection-filter>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { VaultFilterComponent as BaseVaultFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/vault-filter.component\";\n\nimport { VaultFilterService } from \"./shared/vault-filter.service\";\n\n@Component({\n  selector: \"./app-vault-filter\",\n  templateUrl: \"vault-filter.component.html\",\n})\nexport class VaultFilterComponent extends BaseVaultFilterComponent {\n  @Output() onSearchTextChanged = new EventEmitter<string>();\n\n  searchPlaceholder: string;\n  searchText = \"\";\n\n  constructor(protected vaultFilterService: VaultFilterService) {\n    // This empty constructor is required to provide the web vaultFilterService subclass to super()\n    // TODO: refactor this to use proper dependency injection\n    super(vaultFilterService);\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.vaultFilterService.collapsedFilterNodes$.subscribe((nodes) => {\n      this.collapsedFilterNodes = nodes;\n    });\n  }\n\n  searchTextChanged() {\n    this.onSearchTextChanged.emit(this.searchText);\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { VaultFilterComponent as BaseVaultFilterComponent } from \"../../../vault/vault-filter/vault-filter.component\";\n\n@Component({\n  selector: \"app-organization-vault-filter\",\n  templateUrl: \"../../../vault/vault-filter/vault-filter.component.html\",\n})\nexport class VaultFilterComponent extends BaseVaultFilterComponent {\n  hideOrganizations = true;\n  hideFavorites = true;\n  hideFolders = true;\n\n  organization: Organization;\n\n  async initCollections() {\n    if (this.organization.canEditAnyCollection) {\n      return await this.vaultFilterService.buildAdminCollections(this.organization.id);\n    }\n    return await this.vaultFilterService.buildCollections(this.organization.id);\n  }\n\n  async reloadCollectionsAndFolders() {\n    this.collections = await this.initCollections();\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherBulkDeleteRequest } from \"@bitwarden/common/models/request/cipherBulkDeleteRequest\";\n\n@Component({\n  selector: \"app-vault-bulk-delete\",\n  templateUrl: \"bulk-delete.component.html\",\n})\nexport class BulkDeleteComponent {\n  @Input() cipherIds: string[] = [];\n  @Input() permanent = false;\n  @Input() organization: Organization;\n  @Output() onDeleted = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  async submit() {\n    if (!this.organization || !this.organization.canEditAnyCollection) {\n      await this.deleteCiphers();\n    } else {\n      await this.deleteCiphersAdmin();\n    }\n\n    await this.formPromise;\n\n    this.onDeleted.emit();\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(this.permanent ? \"permanentlyDeletedItems\" : \"deletedItems\")\n    );\n  }\n\n  private async deleteCiphers() {\n    if (this.permanent) {\n      this.formPromise = await this.cipherService.deleteManyWithServer(this.cipherIds);\n    } else {\n      this.formPromise = await this.cipherService.softDeleteManyWithServer(this.cipherIds);\n    }\n  }\n\n  private async deleteCiphersAdmin() {\n    const deleteRequest = new CipherBulkDeleteRequest(this.cipherIds, this.organization.id);\n    if (this.permanent) {\n      this.formPromise = await this.apiService.deleteManyCiphersAdmin(deleteRequest);\n    } else {\n      this.formPromise = await this.apiService.putDeleteManyCiphersAdmin(deleteRequest);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deleteSelectedTitle\">\n          {{ (permanent ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{\n          (permanent ? \"permanentlyDeleteSelectedItemsDesc\" : \"deleteSelectedItemsDesc\")\n            | i18n: cipherIds.length\n        }}\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          appAutoFocus\n          type=\"submit\"\n          class=\"btn btn-danger btn-submit\"\n          [disabled]=\"form.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (permanent ? \"permanentlyDelete\" : \"delete\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"moveSelectedTitle\">\n          {{ \"moveSelected\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"moveSelectedItemsDesc\" | i18n: cipherIds.length }}</p>\n        <div class=\"form-group\">\n          <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n          <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"folderId\" class=\"form-control\">\n            <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\n@Component({\n  selector: \"app-vault-bulk-move\",\n  templateUrl: \"bulk-move.component.html\",\n})\nexport class BulkMoveComponent implements OnInit {\n  @Input() cipherIds: string[] = [];\n  @Output() onMoved = new EventEmitter();\n\n  folderId: string = null;\n  folders$: Observable<FolderView[]>;\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService\n  ) {}\n\n  async ngOnInit() {\n    this.folders$ = this.folderService.folderViews$;\n    this.folderId = (await firstValueFrom(this.folders$))[0].id;\n  }\n\n  async submit() {\n    this.formPromise = this.cipherService.moveManyWithServer(this.cipherIds, this.folderId);\n    await this.formPromise;\n    this.onMoved.emit();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"movedItems\"));\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-bulk-restore\",\n  templateUrl: \"bulk-restore.component.html\",\n})\nexport class BulkRestoreComponent {\n  @Input() cipherIds: string[] = [];\n  @Output() onRestored = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async submit() {\n    this.formPromise = this.cipherService.restoreManyWithServer(this.cipherIds);\n    await this.formPromise;\n    this.onRestored.emit();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItems\"));\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"restoreSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"restoreSelectedTitle\">\n          {{ \"restoreSelected\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"restoreSelectedItemsDesc\" | i18n: cipherIds.length }}\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          appAutoFocus\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"restore\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedToOrgTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"moveSelectedToOrgTitle\">\n          {{ \"moveSelectedToOrg\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"moveManyToOrgDesc\" | i18n }}</p>\n        <p>\n          {{\n            \"moveSelectedItemsCountDesc\"\n              | i18n: this.ciphers.length:shareableCiphers.length:nonShareableCount\n          }}\n        </p>\n        <div class=\"form-group\">\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            class=\"form-control\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [disabled]=\"form.loading || !canSave\"\n          [ngClass]=\"{ loading: form.loading }\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-vault-bulk-share\",\n  templateUrl: \"bulk-share.component.html\",\n})\nexport class BulkShareComponent implements OnInit {\n  @Input() ciphers: CipherView[] = [];\n  @Input() organizationId: string;\n  @Output() onShared = new EventEmitter();\n\n  nonShareableCount = 0;\n  collections: CollectionView[] = [];\n  organizations: Organization[] = [];\n  shareableCiphers: CipherView[] = [];\n  formPromise: Promise<any>;\n\n  private writeableCollections: CollectionView[] = [];\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.shareableCiphers = this.ciphers.filter(\n      (c) => !c.hasOldAttachments && c.organizationId == null\n    );\n    this.nonShareableCount = this.ciphers.length - this.shareableCiphers.length;\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.filter((c) => !c.readOnly);\n    this.organizations = await this.organizationService.getAll();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  filterCollections() {\n    this.selectAll(false);\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit() {\n    const checkedCollectionIds = this.collections\n      .filter((c) => (c as any).checked)\n      .map((c) => c.id);\n    try {\n      this.formPromise = this.cipherService.shareManyWithServer(\n        this.shareableCiphers,\n        this.organizationId,\n        checkedCollectionIds\n      );\n      await this.formPromise;\n      this.onShared.emit();\n      const orgName =\n        this.organizations.find((o) => o.id === this.organizationId)?.name ??\n        this.i18nService.t(\"organization\");\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"movedItemsToOrg\", orgName)\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n\n  get canSave() {\n    if (\n      this.shareableCiphers != null &&\n      this.shareableCiphers.length > 0 &&\n      this.collections != null\n    ) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if ((this.collections[i] as any).checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"dropdown mr-2\" appListDropdown>\n  <button\n    class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n    type=\"button\"\n    id=\"bulkActionsButton\"\n    data-toggle=\"dropdown\"\n    aria-haspopup=\"true\"\n    aria-expanded=\"false\"\n    appA11yTitle=\"{{ 'options' | i18n }}\"\n  >\n    <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n  </button>\n  <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n    <button\n      class=\"dropdown-item\"\n      appStopClick\n      (click)=\"bulkMove()\"\n      *ngIf=\"!deleted && !organization\"\n    >\n      <i class=\"bwi bwi-fw bwi-folder\" aria-hidden=\"true\"></i>\n      {{ \"moveSelected\" | i18n }}\n    </button>\n    <button\n      class=\"dropdown-item\"\n      appStopClick\n      (click)=\"bulkShare()\"\n      *ngIf=\"!deleted && !organization\"\n    >\n      <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n      {{ \"moveSelectedToOrg\" | i18n }}\n    </button>\n    <button class=\"dropdown-item\" (click)=\"bulkRestore()\" *ngIf=\"deleted && !organization\">\n      <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n      {{ \"restoreSelected\" | i18n }}\n    </button>\n    <button class=\"dropdown-item text-danger\" (click)=\"bulkDelete()\">\n      <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n      {{ (deleted ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n    </button>\n    <div class=\"dropdown-divider\"></div>\n    <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n      <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n      {{ \"selectAll\" | i18n }}\n    </button>\n    <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n      <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n      {{ \"unselectAll\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-template #bulkDeleteTemplate></ng-template>\n<ng-template #bulkRestoreTemplate></ng-template>\n<ng-template #bulkMoveTemplate></ng-template>\n<ng-template #bulkShareTemplate></ng-template>\n","import { Component, Input, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { BulkDeleteComponent } from \"./bulk-delete.component\";\nimport { BulkMoveComponent } from \"./bulk-move.component\";\nimport { BulkRestoreComponent } from \"./bulk-restore.component\";\nimport { BulkShareComponent } from \"./bulk-share.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\n\n@Component({\n  selector: \"app-vault-bulk-actions\",\n  templateUrl: \"bulk-actions.component.html\",\n})\nexport class BulkActionsComponent {\n  @Input() ciphersComponent: CiphersComponent;\n  @Input() deleted: boolean;\n  @Input() organization: Organization;\n\n  @ViewChild(\"bulkDeleteTemplate\", { read: ViewContainerRef, static: true })\n  bulkDeleteModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRestoreTemplate\", { read: ViewContainerRef, static: true })\n  bulkRestoreModalRef: ViewContainerRef;\n  @ViewChild(\"bulkMoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkMoveModalRef: ViewContainerRef;\n  @ViewChild(\"bulkShareTemplate\", { read: ViewContainerRef, static: true })\n  bulkShareModalRef: ViewContainerRef;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async bulkDelete() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkDeleteComponent,\n      this.bulkDeleteModalRef,\n      (comp) => {\n        comp.permanent = this.deleted;\n        comp.cipherIds = selectedIds;\n        comp.organization = this.organization;\n        comp.onDeleted.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkRestore() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRestoreComponent,\n      this.bulkRestoreModalRef,\n      (comp) => {\n        comp.cipherIds = selectedIds;\n        comp.onRestored.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkShare() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedCiphers = this.ciphersComponent.getSelected();\n    if (selectedCiphers.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkShareComponent,\n      this.bulkShareModalRef,\n      (comp) => {\n        comp.ciphers = selectedCiphers;\n        comp.onShared.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkMove() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkMoveComponent,\n      this.bulkMoveModalRef,\n      (comp) => {\n        comp.cipherIds = selectedIds;\n        comp.onMoved.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  selectAll(select: boolean) {\n    this.ciphersComponent.selectAll(select);\n  }\n\n  private async promptPassword() {\n    const selectedCiphers = this.ciphersComponent.getSelected();\n    const notProtected = !selectedCiphers.find(\n      (cipher) => cipher.reprompt !== CipherRepromptType.None\n    );\n\n    return notProtected || (await this.passwordRepromptService.showPasswordPrompt());\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"groupings\">\n        <div class=\"content\">\n          <div class=\"inner-content\">\n            <app-organization-vault-filter\n              #vaultFilter\n              [activeFilter]=\"activeFilter\"\n              (onFilterChange)=\"applyVaultFilter($event)\"\n              (onSearchTextChanged)=\"filterSearchText($event)\"\n            ></app-organization-vault-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"vaultItems\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <app-vault-bulk-actions\n            [ciphersComponent]=\"ciphersComponent\"\n            [deleted]=\"deleted\"\n            [organization]=\"organization\"\n          >\n          </app-vault-bulk-actions>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm ml-auto\"\n            (click)=\"addCipher()\"\n            *ngIf=\"!deleted\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"addItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout type=\"warning\" *ngIf=\"deleted\" icon=\"bwi bwi-exclamation-triangle\">\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-org-vault-ciphers\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onCollectionsClicked)=\"editCipherCollections($event)\"\n        (onEventsClicked)=\"viewEvents($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n      >\n      </app-org-vault-ciphers>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #eventsTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { VaultService } from \"../../vault/shared/vault.service\";\nimport { EntityEventsComponent } from \"../manage/entity-events.component\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { VaultFilterComponent } from \"./vault-filter/vault-filter.component\";\n\nconst BroadcasterSubscriptionId = \"OrgVaultComponent\";\n\n@Component({\n  selector: \"app-org-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(\"vaultFilter\", { static: true })\n  vaultFilterComponent: VaultFilterComponent;\n  @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n\n  organization: Organization;\n  collectionId: string = null;\n  type: CipherType = null;\n  trashCleanupWarning: string = null;\n  activeFilter: VaultFilter = new VaultFilter();\n\n  // This is a hack to avoid redundant api calls that fetch OrganizationVaultFilterComponent collections\n  // When it makes sense to do so we should leverage some other communication method for change events that isn't directly tied to the query param for organizationId\n  // i.e. exposing the VaultFiltersService to the OrganizationSwitcherComponent to make relevant updates from a change event instead of just depending on the router\n  firstLoaded = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private messagingService: MessagingService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private vaultService: VaultService,\n    private cipherService: CipherService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  ngOnInit() {\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n    this.route.parent.params.subscribe(async (params: any) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.vaultFilterComponent.organization = this.organization;\n      this.ciphersComponent.organization = this.organization;\n\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.ciphersComponent.searchText = this.vaultFilterComponent.searchText = qParams.search;\n        if (!this.organization.canViewAllCollections) {\n          await this.syncService.fullSync(false);\n          this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n            this.ngZone.run(async () => {\n              switch (message.command) {\n                case \"syncCompleted\":\n                  if (message.successfully) {\n                    await Promise.all([\n                      this.vaultFilterComponent.reloadCollectionsAndFolders(),\n                      this.ciphersComponent.refresh(),\n                    ]);\n                    this.changeDetectorRef.detectChanges();\n                  }\n                  break;\n              }\n            });\n          });\n        }\n\n        if (this.firstLoaded) {\n          await this.vaultFilterComponent.reloadCollectionsAndFolders();\n        }\n        this.firstLoaded = true;\n\n        await this.ciphersComponent.reload();\n\n        if (qParams.viewEvents != null) {\n          const cipher = this.ciphersComponent.ciphers.filter((c) => c.id === qParams.viewEvents);\n          if (cipher.length > 0) {\n            this.viewEvents(cipher[0]);\n          }\n        }\n\n        this.route.queryParams.subscribe(async (params) => {\n          const cipherId = getCipherIdFromParams(params);\n          if (cipherId) {\n            if (\n              // Handle users with implicit collection access since they use the admin endpoint\n              this.organization.canEditAnyCollection ||\n              (await this.cipherService.get(cipherId)) != null\n            ) {\n              this.editCipherId(cipherId);\n            } else {\n              this.platformUtilsService.showToast(\n                \"error\",\n                this.i18nService.t(\"errorOccurred\"),\n                this.i18nService.t(\"unknownCipher\")\n              );\n              this.router.navigate([], {\n                queryParams: { cipherId: null, itemId: null },\n                queryParamsHandling: \"merge\",\n              });\n            }\n          }\n        });\n      });\n    });\n  }\n\n  get deleted(): boolean {\n    return this.activeFilter.status === \"trash\";\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async applyVaultFilter(vaultFilter: VaultFilter) {\n    this.ciphersComponent.showAddNew = vaultFilter.status !== \"trash\";\n    this.activeFilter = vaultFilter;\n    await this.ciphersComponent.reload(\n      this.activeFilter.buildFilter(),\n      vaultFilter.status === \"trash\"\n    );\n    this.vaultFilterComponent.searchPlaceholder =\n      this.vaultService.calculateSearchBarLocalizationString(this.activeFilter);\n    this.go();\n  }\n\n  filterSearchText(searchText: string) {\n    this.ciphersComponent.searchText = searchText;\n    this.ciphersComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    if (this.organization.maxStorageGb == null || this.organization.maxStorageGb === 0) {\n      this.messagingService.send(\"upgradeOrganization\", { organizationId: cipher.organizationId });\n      return;\n    }\n\n    let madeAttachmentChanges = false;\n\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.ciphersComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        if (this.organization.canEditAnyCollection) {\n          comp.collectionIds = cipher.collectionIds;\n          comp.collections = this.vaultFilterComponent.collections.fullList.filter(\n            (c) => !c.readOnly && c.id != null\n          );\n        }\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.organizationId = this.organization.id;\n    component.type = this.type;\n    if (this.organization.canEditAnyCollection) {\n      component.collections = this.vaultFilterComponent.collections.fullList.filter(\n        (c) => !c.readOnly && c.id != null\n      );\n    }\n    if (this.collectionId != null) {\n      component.collectionIds = [this.collectionId];\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    return this.editCipherId(cipher?.id);\n  }\n\n  async editCipherId(cipherId: string) {\n    const cipher = await this.cipherService.get(cipherId);\n    if (cipher != null && cipher.reprompt != 0) {\n      if (!(await this.passwordRepromptService.showPasswordPrompt())) {\n        this.go({ cipherId: null, itemId: null });\n        return;\n      }\n    }\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipherId;\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n\n    modal.onClosedPromise().then(() => {\n      this.go({ cipherId: null, itemId: null });\n    });\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n    component.organizationId = this.organization.id;\n    if (this.organization.canEditAnyCollection) {\n      component.collections = this.vaultFilterComponent.collections.fullList.filter(\n        (c) => !c.readOnly && c.id != null\n      );\n    }\n    // Regardless of Admin state, the collection Ids need to passed manually as they are not assigned value\n    // in the add-edit componenet\n    component.collectionIds = cipher.collectionIds;\n  }\n\n  async viewEvents(cipher: CipherView) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = cipher.name;\n      comp.organizationId = this.organization.id;\n      comp.entityId = cipher.id;\n      comp.showUser = true;\n      comp.entity = \"cipher\";\n    });\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        type: this.activeFilter.cipherType,\n        collectionId: this.activeFilter.selectedCollectionId,\n        deleted: this.deleted ? true : null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: \"merge\",\n      replaceUrl: true,\n    });\n  }\n}\n\n/**\n * Allows backwards compatibility with\n * old links that used the original `cipherId` param\n */\nconst getCipherIdFromParams = (params: Params): string => {\n  return params[\"itemId\"] || params[\"cipherId\"];\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { VaultComponent } from \"./vault.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VaultComponent,\n    data: { titleId: \"vaults\" },\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaultRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { VaultSharedModule } from \"../../vault/shared/vault-shared.module\";\n\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { VaultFilterModule } from \"./vault-filter/vault-filter.module\";\nimport { VaultRoutingModule } from \"./vault-routing.module\";\nimport { VaultComponent } from \"./vault.component\";\n\n@NgModule({\n  imports: [VaultSharedModule, VaultRoutingModule, VaultFilterModule],\n  declarations: [VaultComponent, CiphersComponent],\n  exports: [VaultComponent],\n})\nexport class VaultModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { Permissions } from \"@bitwarden/common/enums/permissions\";\n\nimport { PermissionsGuard } from \"./guards/permissions.guard\";\nimport { OrganizationLayoutComponent } from \"./layouts/organization-layout.component\";\nimport { CollectionsComponent } from \"./manage/collections.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { GroupsComponent } from \"./manage/groups.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { PoliciesComponent } from \"./manage/policies.component\";\nimport { NavigationPermissionsService } from \"./services/navigation-permissions.service\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { OrganizationBillingComponent } from \"./settings/organization-billing.component\";\nimport { OrganizationSubscriptionComponent } from \"./settings/organization-subscription.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { TwoFactorSetupComponent } from \"./settings/two-factor-setup.component\";\nimport { ExposedPasswordsReportComponent } from \"./tools/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent } from \"./tools/reused-passwords-report.component\";\nimport { ToolsComponent } from \"./tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./tools/weak-passwords-report.component\";\nimport { VaultModule } from \"./vault/vault.module\";\n\nconst routes: Routes = [\n  {\n    path: \":organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuard, PermissionsGuard],\n    data: {\n      permissions: NavigationPermissionsService.getPermissions(\"admin\"),\n    },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"vault\" },\n      {\n        path: \"vault\",\n        loadChildren: () => VaultModule,\n      },\n      {\n        path: \"tools\",\n        component: ToolsComponent,\n        canActivate: [PermissionsGuard],\n        data: { permissions: NavigationPermissionsService.getPermissions(\"tools\") },\n        children: [\n          {\n            path: \"\",\n            pathMatch: \"full\",\n            redirectTo: \"import\",\n          },\n          {\n            path: \"\",\n            loadChildren: () =>\n              import(\"./tools/import-export/org-import-export.module\").then(\n                (m) => m.OrganizationImportExportModule\n              ),\n          },\n          {\n            path: \"exposed-passwords-report\",\n            component: ExposedPasswordsReportComponent,\n            canActivate: [PermissionsGuard],\n            data: {\n              titleId: \"exposedPasswordsReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n          {\n            path: \"inactive-two-factor-report\",\n            component: InactiveTwoFactorReportComponent,\n            canActivate: [PermissionsGuard],\n            data: {\n              titleId: \"inactive2faReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n          {\n            path: \"reused-passwords-report\",\n            component: ReusedPasswordsReportComponent,\n            canActivate: [PermissionsGuard],\n            data: {\n              titleId: \"reusedPasswordsReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n          {\n            path: \"unsecured-websites-report\",\n            component: UnsecuredWebsitesReportComponent,\n            canActivate: [PermissionsGuard],\n            data: {\n              titleId: \"unsecuredWebsitesReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n          {\n            path: \"weak-passwords-report\",\n            component: WeakPasswordsReportComponent,\n            canActivate: [PermissionsGuard],\n            data: {\n              titleId: \"weakPasswordsReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n        ],\n      },\n      {\n        path: \"manage\",\n        component: ManageComponent,\n        canActivate: [PermissionsGuard],\n        data: {\n          permissions: NavigationPermissionsService.getPermissions(\"manage\"),\n        },\n        children: [\n          {\n            path: \"\",\n            pathMatch: \"full\",\n            redirectTo: \"people\",\n          },\n          {\n            path: \"collections\",\n            component: CollectionsComponent,\n            canActivate: [PermissionsGuard],\n            data: {\n              titleId: \"collections\",\n              permissions: [\n                Permissions.CreateNewCollections,\n                Permissions.EditAnyCollection,\n                Permissions.DeleteAnyCollection,\n                Permissions.EditAssignedCollections,\n                Permissions.DeleteAssignedCollections,\n              ],\n            },\n          },\n          {\n            path: \"events\",\n            component: EventsComponent,\n            canActivate: [PermissionsGuard],\n            data: {\n              titleId: \"eventLogs\",\n              permissions: [Permissions.AccessEventLogs],\n            },\n          },\n          {\n            path: \"groups\",\n            component: GroupsComponent,\n            canActivate: [PermissionsGuard],\n            data: {\n              titleId: \"groups\",\n              permissions: [Permissions.ManageGroups],\n            },\n          },\n          {\n            path: \"people\",\n            component: PeopleComponent,\n            canActivate: [PermissionsGuard],\n            data: {\n              titleId: \"people\",\n              permissions: [Permissions.ManageUsers, Permissions.ManageUsersPassword],\n            },\n          },\n          {\n            path: \"policies\",\n            component: PoliciesComponent,\n            canActivate: [PermissionsGuard],\n            data: {\n              titleId: \"policies\",\n              permissions: [Permissions.ManagePolicies],\n            },\n          },\n        ],\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        canActivate: [PermissionsGuard],\n        data: { permissions: NavigationPermissionsService.getPermissions(\"settings\") },\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n          { path: \"account\", component: AccountComponent, data: { titleId: \"myOrganization\" } },\n          {\n            path: \"two-factor\",\n            component: TwoFactorSetupComponent,\n            data: { titleId: \"twoStepLogin\" },\n          },\n          {\n            path: \"billing\",\n            component: OrganizationBillingComponent,\n            canActivate: [PermissionsGuard],\n            data: { titleId: \"billing\", permissions: [Permissions.ManageBilling] },\n          },\n          {\n            path: \"subscription\",\n            component: OrganizationSubscriptionComponent,\n            data: { titleId: \"subscription\" },\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","export enum PlanSponsorshipType {\n  FamiliesForEnterprise = 0,\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Params } from \"@angular/router\";\n\nimport { BaseAcceptComponent } from \"../../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-family-sponsorship\",\n  templateUrl: \"accept-family-sponsorship.component.html\",\n})\nexport class AcceptFamilySponsorshipComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"email\", \"token\"];\n\n  async authedHandler(qParams: Params) {\n    this.router.navigate([\"/setup/families-for-enterprise\"], { queryParams: qParams });\n  }\n\n  async unauthedHandler(qParams: Params) {\n    if (!qParams.register) {\n      this.router.navigate([\"/login\"], { queryParams: { email: qParams.email } });\n    } else {\n      this.router.navigate([\"/register\"], { queryParams: { email: qParams.email } });\n    }\n  }\n}\n","import { PlanSponsorshipType } from \"../../../enums/planSponsorshipType\";\n\nexport class OrganizationSponsorshipRedeemRequest {\n  planSponsorshipType: PlanSponsorshipType;\n  sponsoredOrganizationId: string;\n}\n","<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"sponsoredFamiliesOffer\" | i18n }}</h1>\n  </div>\n  <div *ngIf=\"loading\" class=\"mt-5 d-flex justify-content-center\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </div>\n  <div *ngIf=\"!loading && badToken\" class=\"mt-5 d-flex justify-content-center\">\n    <span>{{ \"badToken\" | i18n }}</span>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    ngNativeValidate\n    *ngIf=\"!loading && !badToken\"\n  >\n    <p>\n      <span>{{ \"acceptBitwardenFamiliesHelp\" | i18n }}</span>\n    </p>\n    <div class=\"form-group col-6\">\n      <label for=\"availableSponsorshipOrg\">{{ \"sponsoredFamiliesSelectOffer\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        [(ngModel)]=\"selectedFamilyOrganizationId\"\n        class=\"form-control\"\n        required\n      >\n        <option value=\"\" disabled>-- {{ \"select\" | i18n }} --</option>\n        <option value=\"createNew\">{{ \"newFamiliesOrganization\" | i18n }}</option>\n        <option *ngFor=\"let o of existingFamilyOrganizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div *ngIf=\"showNewOrganization\" class=\"col-12\">\n      <app-organization-plans></app-organization-plans>\n    </div>\n    <div class=\"form-group col-6\" *ngIf=\"!showNewOrganization\">\n      <button class=\"btn btn-primary mt-2 btn-submit\" [disabled]=\"form.loading\" type=\"submit\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"acceptOffer\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { PlanSponsorshipType } from \"@bitwarden/common/enums/planSponsorshipType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationSponsorshipRedeemRequest } from \"@bitwarden/common/models/request/organization/organizationSponsorshipRedeemRequest\";\n\nimport { OrganizationPlansComponent } from \"../../settings/organization-plans.component\";\nimport { DeleteOrganizationComponent } from \"../settings/delete-organization.component\";\n\n@Component({\n  selector: \"families-for-enterprise-setup\",\n  templateUrl: \"families-for-enterprise-setup.component.html\",\n})\nexport class FamiliesForEnterpriseSetupComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: false })\n  set organizationPlansComponent(value: OrganizationPlansComponent) {\n    if (!value) {\n      return;\n    }\n\n    value.plan = PlanType.FamiliesAnnually;\n    value.product = ProductType.Families;\n    value.acceptingSponsorship = true;\n    value.onSuccess.subscribe(this.onOrganizationCreateSuccess.bind(this));\n  }\n\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  loading = true;\n  badToken = false;\n  formPromise: Promise<any>;\n\n  token: string;\n  existingFamilyOrganizations: Organization[];\n\n  showNewOrganization = false;\n  _organizationPlansComponent: OrganizationPlansComponent;\n  _selectedFamilyOrganizationId = \"\";\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService,\n    private organizationService: OrganizationService,\n    private modalService: ModalService\n  ) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.token == null;\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"sponsoredFamiliesAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.token = qParams.token;\n\n      await this.syncService.fullSync(true);\n      this.badToken = !(await this.apiService.postPreValidateSponsorshipToken(this.token));\n      this.loading = false;\n\n      this.existingFamilyOrganizations = (await this.organizationService.getAll()).filter(\n        (o) => o.planProductType === ProductType.Families\n      );\n\n      if (this.existingFamilyOrganizations.length === 0) {\n        this.selectedFamilyOrganizationId = \"createNew\";\n      }\n    });\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit(this._selectedFamilyOrganizationId);\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  get selectedFamilyOrganizationId() {\n    return this._selectedFamilyOrganizationId;\n  }\n\n  set selectedFamilyOrganizationId(value: string) {\n    this._selectedFamilyOrganizationId = value;\n    this.showNewOrganization = value === \"createNew\";\n  }\n\n  private async doSubmit(organizationId: string) {\n    try {\n      const request = new OrganizationSponsorshipRedeemRequest();\n      request.planSponsorshipType = PlanSponsorshipType.FamiliesForEnterprise;\n      request.sponsoredOrganizationId = organizationId;\n\n      await this.apiService.postRedeemSponsorship(this.token, request);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"sponsoredFamiliesOfferRedeemed\")\n      );\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      if (this.showNewOrganization) {\n        await this.modalService.openViewRef(\n          DeleteOrganizationComponent,\n          this.deleteModalRef,\n          (comp) => {\n            comp.organizationId = organizationId;\n            comp.deleteOrganizationRequestType = \"InvalidFamiliesForEnterprise\";\n            comp.onSuccess.subscribe(() => {\n              this.router.navigate([\"/\"]);\n            });\n          }\n        );\n      }\n      this.validationService.showError(this.i18nService.t(\"sponsorshipTokenHasExpired\"));\n    }\n  }\n\n  private async onOrganizationCreateSuccess(value: any) {\n    // Use newly created organization id\n    await this.doSubmit(value.organizationId);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from \"@angular/router\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HasPremiumGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private messagingService: MessagingService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const userHasPremium = await this.stateService.getCanAccessPremium();\n\n    if (!userHasPremium) {\n      this.messagingService.send(\"premiumRequired\");\n    }\n\n    // Prevent trapping the user on the login page, since that's an awful UX flow\n    if (!userHasPremium && this.router.url === \"/login\") {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    return userHasPremium;\n  }\n}\n","export enum ReportVariant {\n  Enabled = \"Enabled\",\n  RequiresPremium = \"RequiresPremium\",\n  RequiresUpgrade = \"RequiresUpgrade\",\n}\n","import { ReportEntry } from \"./models/report-entry\";\n\nexport enum ReportType {\n  ExposedPasswords = \"exposedPasswords\",\n  ReusedPasswords = \"reusedPasswords\",\n  WeakPasswords = \"weakPasswords\",\n  UnsecuredWebsites = \"unsecuredWebsites\",\n  Inactive2fa = \"inactive2fa\",\n  DataBreach = \"dataBreach\",\n}\n\ntype ReportWithoutVariant = Omit<ReportEntry, \"variant\">;\n\nexport const reports: Record<ReportType, ReportWithoutVariant> = {\n  [ReportType.ExposedPasswords]: {\n    title: \"exposedPasswordsReport\",\n    description: \"exposedPasswordsReportDesc\",\n    route: \"exposed-passwords-report\",\n    icon: \"reportExposedPasswords\",\n  },\n  [ReportType.ReusedPasswords]: {\n    title: \"reusedPasswordsReport\",\n    description: \"reusedPasswordsReportDesc\",\n    route: \"reused-passwords-report\",\n    icon: \"reportReusedPasswords\",\n  },\n  [ReportType.WeakPasswords]: {\n    title: \"weakPasswordsReport\",\n    description: \"weakPasswordsReportDesc\",\n    route: \"weak-passwords-report\",\n    icon: \"reportWeakPasswords\",\n  },\n  [ReportType.UnsecuredWebsites]: {\n    title: \"unsecuredWebsitesReport\",\n    description: \"unsecuredWebsitesReportDesc\",\n    route: \"unsecured-websites-report\",\n    icon: \"reportUnsecuredWebsites\",\n  },\n  [ReportType.Inactive2fa]: {\n    title: \"inactive2faReport\",\n    description: \"inactive2faReportDesc\",\n    route: \"inactive-two-factor-report\",\n    icon: \"reportInactiveTwoFactor\",\n  },\n  [ReportType.DataBreach]: {\n    title: \"dataBreachReport\",\n    description: \"breachDesc\",\n    route: \"breach-report\",\n    icon: \"reportBreach\",\n  },\n};\n","<div class=\"page-header\">\n  <h1>{{ \"dataBreachReport\" | i18n }}</h1>\n</div>\n<p>{{ \"breachDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"username\">{{ \"username\" | i18n }}</label>\n      <input\n        id=\"username\"\n        type=\"text\"\n        name=\"Username\"\n        class=\"form-control\"\n        [(ngModel)]=\"username\"\n        required\n      />\n      <small class=\"form-text text-muted\">{{ \"breachCheckUsernameEmail\" | i18n }}</small>\n    </div>\n  </div>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"checkBreaches\" | i18n }}\n  </bit-submit-button>\n</form>\n<div class=\"mt-4\" *ngIf=\"!form.loading && checkedUsername\">\n  <p *ngIf=\"error\">{{ \"reportError\" | i18n }}...</p>\n  <ng-container *ngIf=\"!error\">\n    <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!breachedAccounts.length\">\n      {{ \"breachUsernameNotFound\" | i18n: checkedUsername }}\n    </app-callout>\n    <app-callout type=\"danger\" title=\"{{ 'breachFound' | i18n }}\" *ngIf=\"breachedAccounts.length\">\n      {{ \"breachUsernameFound\" | i18n: checkedUsername:breachedAccounts.length }}\n    </app-callout>\n    <ul class=\"list-group list-group-breach\" *ngIf=\"breachedAccounts.length\">\n      <li *ngFor=\"let a of breachedAccounts\" class=\"list-group-item min-height-fix\">\n        <div class=\"row\">\n          <div class=\"col-2 text-center\">\n            <img [src]=\"a.logoPath\" alt=\"\" class=\"img-fluid\" />\n          </div>\n          <div class=\"col-7\">\n            <h3 class=\"text-lg\">{{ a.title }}</h3>\n            <p [innerHTML]=\"a.description\"></p>\n            <p class=\"mb-1\">{{ \"compromisedData\" | i18n }}:</p>\n            <ul>\n              <li *ngFor=\"let d of a.dataClasses\">{{ d }}</li>\n            </ul>\n          </div>\n          <div class=\"col-3\">\n            <dl>\n              <dt>{{ \"website\" | i18n }}</dt>\n              <dd>{{ a.domain }}</dd>\n              <dt>{{ \"affectedUsers\" | i18n }}</dt>\n              <dd>{{ a.pwnCount | number }}</dd>\n              <dt>{{ \"breachOccurred\" | i18n }}</dt>\n              <dd>{{ a.breachDate | date: \"mediumDate\" }}</dd>\n              <dt>{{ \"breachReported\" | i18n }}</dt>\n              <dd>{{ a.addedDate | date: \"mediumDate\" }}</dd>\n            </dl>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </ng-container>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { BreachAccountResponse } from \"@bitwarden/common/models/response/breachAccountResponse\";\n\n@Component({\n  selector: \"app-breach-report\",\n  templateUrl: \"breach-report.component.html\",\n})\nexport class BreachReportComponent implements OnInit {\n  error = false;\n  username: string;\n  checkedUsername: string;\n  breachedAccounts: BreachAccountResponse[] = [];\n  formPromise: Promise<BreachAccountResponse[]>;\n\n  constructor(private auditService: AuditService, private stateService: StateService) {}\n\n  async ngOnInit() {\n    this.username = await this.stateService.getEmail();\n  }\n\n  async submit() {\n    this.error = false;\n    this.username = this.username.toLowerCase();\n    try {\n      this.formPromise = this.auditService.breachedAccounts(this.username);\n      this.breachedAccounts = await this.formPromise;\n    } catch {\n      this.error = true;\n    }\n    this.checkedUsername = this.username;\n  }\n}\n","export const IconSvg = {\n  reportExposedPasswords: `\n      <svg width=\"101\" height=\"77\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.374 50.192a26.42 26.42 0 0 0 9.111 1.608c14.34 0 25.965-11.372 25.965-25.4 0-.337-.007-.673-.02-1.008h25.299v34.85H32.374v-10.05Z\" fill=\"currentColor\" />\n        <path d=\"M15.805 26.4c0 14.028 11.625 25.4 25.965 25.4s25.964-11.372 25.964-25.4C67.734 12.372 56.11 1 41.77 1 27.43 1 15.805 12.372 15.805 26.4Z\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n        <path d=\"M27.914 47.849a1 1 0 0 0-2 0h2Zm68.288-26.792a2.12 2.12 0 0 1 2.14 2.11h2c0-2.253-1.83-4.11-4.14-4.11v2Zm2.14 2.11v40.552h2V23.167h-2Zm0 40.552c0 1.172-.958 2.11-2.14 2.11v2c2.25 0 4.14-1.798 4.14-4.11h-2Zm-2.14 2.11H30.054v2h66.148v-2Zm-66.148 0a2.12 2.12 0 0 1-2.14-2.11h-2a4.12 4.12 0 0 0 4.14 4.11v-2Zm-2.14-2.11V47.85h-2v15.87h2Zm39.254-42.662h29.034v-2H67.168v2Z\" fill=\"#fff\" />\n        <path d=\"M67.203 25.56h25.64v34.85H32.487V50.011\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n        <path d=\"M47.343 76h31.571\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n        <path d=\"M57.557 66.83V76M67.771 66.83V76\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n        <path d=\"m20.995 42.873-3.972 3.972-14.61 14.61a3.413 3.413 0 0 0 0 4.826v0a3.413 3.413 0 0 0 4.827 0l14.61-14.61 3.972-3.972\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n        <path d=\"M86.037 32.488H71.845M86.037 37.81H76.28M71.845 37.81h-6.652M86.037 43.132h-6.209M74.95 43.132H61.2M86.037 48.454H71.845M66.967 48.454h-7.54M86.037 53.776H66.08M61.201 53.776h-11.53M44.793 53.776h-7.096\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n        <rect width=\"40.801\" height=\"9.757\" rx=\"4\" transform=\"matrix(-1 0 0 1 61.201 14.748)\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"M16.852 33.375h28.375a4 4 0 0 1 4 4v1.757a4 4 0 0 1-4 4H22.174M66.523 33.375h-3.539a4 4 0 0 0-4 4v3.761c0 1.102.894 1.996 1.996 1.996v0\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n      </svg>\n    `,\n  reportReusedPasswords: `\n    <svg width=\"102\" height=\"102\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M57.983 15.06a35.664 35.664 0 0 1 14.531 6.27c16.164 11.78 19.585 34.613 7.643 51a37.227 37.227 0 0 1-6.81 7.138m-32.842 6.697a35.708 35.708 0 0 1-11.239-5.495c-16.163-11.78-19.585-34.613-7.642-51a37.55 37.55 0 0 1 3.295-3.929\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      <path d=\"M93.909 64.598H7.72c-.708 0-1.275-.662-1.275-1.49V40.273c0-.828.567-1.49 1.275-1.49H93.91c.708 0 1.275.663 1.275 1.49v22.837c.047.827-.567 1.49-1.275 1.49Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      <path d=\"M21.532 52.186v-5.965M21.532 52.187l5.748-1.844M21.532 52.186l3.524 4.881M21.531 52.186l-3.47 4.881M21.532 52.187l-5.694-1.844M40.944 52.186v-5.965M40.944 52.187l5.694-1.844M40.944 52.187l3.525 4.88M40.944 52.187l-3.525 4.88M40.944 52.187l-5.694-1.844M54.849 57.337h11.294M74.21 57.337h11.295M41.75 83l.71 4.75-4.75.71M58.664 18.66 56 14.665 59.996 12\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    </svg>\n    `,\n  reportWeakPasswords: `\n      <svg width=\"78\" height=\"78\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M66.493 64.415V77H9.979V64.324M9.979 44.065V32.106h56.514v12.148\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n        <path d=\"M75.44 64.852H2.085c-.603 0-1.085-.555-1.085-1.25V44.448c0-.694.482-1.25 1.085-1.25H75.44c.603 0 1.085.556 1.085 1.25v19.156c.04.694-.482 1.25-1.085 1.25Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n        <path d=\"M13.84 54.56v-5.077M13.84 54.56l4.893-1.57M13.84 54.56l3 4.153M13.84 54.56l-2.954 4.153M13.84 54.56l-4.846-1.57M30.363 54.56v-5.077M30.363 54.56l4.846-1.57M30.363 54.56l3 4.153M30.363 54.56l-3 4.153M30.363 54.56l-4.846-1.57M42.197 59.042h9.506M58.57 59.042h9.507\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n        <path d=\"M20.863 31.364c-.274-5.285 0-15.817 1.093-18.863 1.276-3.554 6.233-10.826 15.856-11.482 4.83-.273 15.2 2.296 18.043 14.763\" stroke=\"#fff\" stroke-width=\"2\" />\n      </svg>\n    `,\n  reportUnsecuredWebsites: `\n      <svg width=\"113\" height=\"76\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M1.71 12.983h110.362v55.11a6 6 0 0 1-6 6H7.711a6 6 0 0 1-6-6v-55.11Z\" fill=\"currentColor\" />\n        <rect x=\"1\" y=\"1.073\" width=\"110.5\" height=\"73.454\" rx=\"9\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"M89.48 8.048V7.47M96.363 8.048V7.47M103.246 8.048V7.47\" stroke=\"#fff\" stroke-width=\"4\" stroke-linecap=\"round\" />\n        <path d=\"M0 12.983h111.217\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"m93.236 44.384-18.42-11.026 2.93 21.266 5.582-5.237 4.27 6.46 2.98-1.971-4.26-6.446 6.918-3.046Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n        <rect width=\"96.673\" height=\"6.886\" rx=\"3.443\" transform=\"matrix(-1 0 0 1 104.373 18.721)\" stroke=\"#fff\" />\n      </svg>\n    `,\n  reportInactiveTwoFactor: `\n      <svg width=\"42\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" d=\"M1 13.121h39.595v48.758H1z\" />\n        <rect x=\"1\" y=\"1\" width=\"39.595\" height=\"73\" rx=\"8\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M12.344 8.091h16.907M18.907 67.424h3.025M31.503 32.515c-2.047-4.337-6.717-7.061-11.73-6.414a11.356 11.356 0 0 0-9.125 7.126M10.816 42.016c2.047 4.337 6.718 7.062 11.73 6.414 4.346-.562 7.8-3.51 9.213-7.358\" />\n        <path d=\"m33.584 29.293-1.295 4.625-4.625-1.295M8.523 44.725l1.441-4.581 4.582 1.441\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      </svg>\n    `,\n  reportBreach: `\n      <svg width=\"58\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M39.569 74H13.007a7 7 0 0 1-7-7V31.077a7 7 0 0 1 7-7h19.101a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.912V67a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"M44.576 69.055H18.015a7 7 0 0 1-7-7V26.132a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.911v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"M50 63.698H23.439a7 7 0 0 1-7-7V20.775a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.575A7 7 0 0 1 57 28.35v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"M44.648 13.599v3.95a8 8 0 0 0 8 8h4.518\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M23.533 37.736H49.49M23.533 46.802H49.49M23.533 42.269H49.49M23.533 55.456H49.49M23.533 50.923H49.49\" />\n        <path d=\"M1 16.483C1 7.944 8.013 1 16.69 1c8.678 0 15.691 6.944 15.691 15.483 0 8.54-7.013 15.484-15.69 15.484C8.012 31.967 1 25.023 1 16.484Z\" fill=\"#518FFF\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"m16.562 7.979.1 11.538\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n        <ellipse rx=\"1.252\" ry=\"1.236\" transform=\"rotate(-.479 2802.219 -1964.476) skewX(.012)\" fill=\"#fff\" />\n      </svg>\n    `,\n};\n\nexport type Icon = keyof typeof IconSvg;\n","import { Component, HostBinding, Input } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { Icon, IconSvg } from \"./icons\";\n\n@Component({\n  selector: \"bit-icon\",\n  template: ``,\n})\nexport class BitIconComponent {\n  @Input() icon: Icon;\n\n  constructor(private domSanitizer: DomSanitizer) {}\n\n  @HostBinding(\"innerHtml\")\n  protected get innerHtml() {\n    const svg = IconSvg[this.icon];\n    if (svg == null) {\n      return \"Unknown icon\";\n    }\n\n    return this.domSanitizer.bypassSecurityTrustHtml(IconSvg[this.icon]);\n  }\n}\n","<a\n  class=\"tw-block tw-h-full tw-w-72 tw-overflow-hidden tw-rounded tw-border tw-border-solid tw-border-secondary-300 !tw-text-main tw-transition-all hover:tw-scale-105 hover:tw-no-underline focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2\"\n  [routerLink]=\"route\"\n>\n  <div class=\"tw-relative\">\n    <div\n      class=\"tw-flex tw-h-28 tw-bg-background-alt2 tw-text-center tw-text-primary-300\"\n      [ngClass]=\"{ 'tw-grayscale': disabled }\"\n    >\n      <div class=\"tw-m-auto\"><bit-icon [icon]=\"icon\"></bit-icon></div>\n    </div>\n    <div class=\"tw-p-5\" [ngClass]=\"{ 'tw-grayscale': disabled }\">\n      <h3 class=\"tw-mb-4 tw-text-xl tw-font-bold\">{{ title }}</h3>\n      <p class=\"tw-mb-0\">{{ description }}</p>\n    </div>\n    <span\n      bitBadge\n      badgeType=\"success\"\n      class=\"tw-absolute tw-left-2 tw-top-2 tw-leading-none\"\n      *ngIf=\"disabled\"\n    >\n      <ng-container *ngIf=\"requiresPremium\">{{ \"premium\" | i18n }}</ng-container>\n      <ng-container *ngIf=\"!requiresPremium\">{{ \"upgrade\" | i18n }}</ng-container>\n    </span>\n  </div>\n</a>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ReportVariant } from \"../models/report-variant\";\n\n@Component({\n  selector: \"app-report-card\",\n  templateUrl: \"report-card.component.html\",\n})\nexport class ReportCardComponent {\n  @Input() title: string;\n  @Input() description: string;\n  @Input() route: string;\n  @Input() icon: string;\n  @Input() variant: ReportVariant;\n\n  protected get disabled() {\n    return this.variant != ReportVariant.Enabled;\n  }\n\n  protected get requiresPremium() {\n    return this.variant == ReportVariant.RequiresPremium;\n  }\n}\n","<div class=\"tw-inline-grid tw-grid-cols-3 tw-gap-4\">\n  <div *ngFor=\"let report of reports\">\n    <app-report-card\n      [title]=\"report.title | i18n\"\n      [description]=\"report.description | i18n\"\n      [route]=\"report.route\"\n      [variant]=\"report.variant\"\n      [icon]=\"report.icon\"\n    ></app-report-card>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ReportEntry } from \"../models/report-entry\";\n\n@Component({\n  selector: \"app-report-list\",\n  templateUrl: \"report-list.component.html\",\n})\nexport class ReportListComponent {\n  @Input() reports: ReportEntry[];\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { ReportEntry } from \"../models/report-entry\";\nimport { ReportVariant } from \"../models/report-variant\";\nimport { reports, ReportType } from \"../reports\";\n\n@Component({\n  selector: \"app-reports-home\",\n  templateUrl: \"reports-home.component.html\",\n})\nexport class ReportsHomeComponent implements OnInit {\n  reports: ReportEntry[];\n\n  constructor(private stateService: StateService) {}\n\n  async ngOnInit(): Promise<void> {\n    const userHasPremium = await this.stateService.getCanAccessPremium();\n\n    const reportRequiresPremium = userHasPremium\n      ? ReportVariant.Enabled\n      : ReportVariant.RequiresPremium;\n\n    this.reports = [\n      {\n        ...reports[ReportType.ExposedPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.ReusedPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.WeakPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.UnsecuredWebsites],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.Inactive2fa],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.DataBreach],\n        variant: ReportVariant.Enabled,\n      },\n    ];\n  }\n}\n","<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n\n  <div class=\"row mt-4\">\n    <div class=\"col\">\n      <a bitButton routerLink=\"./\" *ngIf=\"!homepage\">\n        <i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i>\n        {{ \"backToReports\" | i18n }}\n      </a>\n    </div>\n  </div>\n</div>\n","<div class=\"page-header\">\n  <h1>{{ \"reports\" | i18n }}</h1>\n</div>\n\n<p>{{ \"reportsDesc\" | i18n }}</p>\n\n<app-report-list [reports]=\"reports\"></app-report-list>\n","import { Component, OnDestroy } from \"@angular/core\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { filter } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-reports-layout\",\n  templateUrl: \"reports-layout.component.html\",\n})\nexport class ReportsLayoutComponent implements OnDestroy {\n  homepage = true;\n  subscription: Subscription;\n\n  constructor(router: Router) {\n    this.subscription = router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((event) => {\n        this.homepage = (event as NavigationEnd).url == \"/reports\";\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\n\nimport { HasPremiumGuard } from \"../shared/guards/has-premium.guard\";\n\nimport { BreachReportComponent } from \"./pages/breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./pages/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./pages/inactive-two-factor-report.component\";\nimport { ReportsHomeComponent } from \"./pages/reports-home.component\";\nimport { ReusedPasswordsReportComponent } from \"./pages/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./pages/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./pages/weak-passwords-report.component\";\nimport { ReportsLayoutComponent } from \"./reports-layout.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ReportsLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: \"\", pathMatch: \"full\", component: ReportsHomeComponent, data: { homepage: true } },\n      {\n        path: \"breach-report\",\n        component: BreachReportComponent,\n        data: { titleId: \"dataBreachReport\" },\n      },\n      {\n        path: \"reused-passwords-report\",\n        component: ReusedPasswordsReportComponent,\n        data: { titleId: \"reusedPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"unsecured-websites-report\",\n        component: UnsecuredWebsitesReportComponent,\n        data: { titleId: \"unsecuredWebsitesReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"weak-passwords-report\",\n        component: WeakPasswordsReportComponent,\n        data: { titleId: \"weakPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"exposed-passwords-report\",\n        component: ExposedPasswordsReportComponent,\n        data: { titleId: \"exposedPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"inactive-two-factor-report\",\n        component: InactiveTwoFactorReportComponent,\n        data: { titleId: \"inactive2faReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReportsRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared\";\n\nimport { BreachReportComponent } from \"./pages/breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./pages/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./pages/inactive-two-factor-report.component\";\nimport { ReportsHomeComponent } from \"./pages/reports-home.component\";\nimport { ReusedPasswordsReportComponent } from \"./pages/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./pages/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./pages/weak-passwords-report.component\";\nimport { ReportCardComponent } from \"./report-card/report-card.component\";\nimport { ReportListComponent } from \"./report-list/report-list.component\";\nimport { ReportsLayoutComponent } from \"./reports-layout.component\";\nimport { ReportsRoutingModule } from \"./reports-routing.module\";\n\n@NgModule({\n  imports: [CommonModule, SharedModule, ReportsRoutingModule],\n  declarations: [\n    BreachReportComponent,\n    ExposedPasswordsReportComponent,\n    InactiveTwoFactorReportComponent,\n    ReportCardComponent,\n    ReportListComponent,\n    ReportsLayoutComponent,\n    ReportsHomeComponent,\n    ReusedPasswordsReportComponent,\n    UnsecuredWebsitesReportComponent,\n    WeakPasswordsReportComponent,\n    WeakPasswordsReportComponent,\n  ],\n})\nexport class ReportsModule {}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccess } from \"../domain/sendAccess\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendAccessView implements View {\n  id: string = null;\n  name: string = null;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  expirationDate: Date = null;\n  creatorIdentifier: string = null;\n\n  constructor(s?: SendAccess) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.type = s.type;\n    this.expirationDate = s.expirationDate;\n    this.creatorIdentifier = s.creatorIdentifier;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccessResponse } from \"../response/sendAccessResponse\";\nimport { SendAccessView } from \"../view/sendAccessView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendAccess extends Domain {\n  id: string;\n  type: SendType;\n  name: EncString;\n  file: SendFile;\n  text: SendText;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(obj?: SendAccessResponse) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n        expirationDate: null,\n        creatorIdentifier: null,\n      },\n      [\"id\", \"expirationDate\", \"creatorIdentifier\"]\n    );\n\n    this.type = obj.type;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendAccessView> {\n    const model = new SendAccessView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n      },\n      null,\n      key\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(key);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(key);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","export class SendAccessRequest {\n  password: string;\n}\n","<form #form (ngSubmit)=\"load()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-center mt-5\">\n    <div class=\"col-12\">\n      <h1 class=\"lead text-center mb-4\">Bitwarden Send</h1>\n    </div>\n    <div class=\"col-12 text-center\" *ngIf=\"creatorIdentifier != null\">\n      <p>{{ \"sendCreatorIdentifier\" | i18n: creatorIdentifier }}</p>\n    </div>\n    <div class=\"col-8\" *ngIf=\"hideEmail\">\n      <app-callout type=\"warning\" title=\"{{ 'warning' | i18n }}\">\n        {{ \"viewSendHiddenEmailWarning\" | i18n }}\n        <a href=\"https://bitwarden.com/help/receive-send/\" target=\"_blank\">{{\n          \"learnMore\" | i18n\n        }}</a\n        >.\n      </app-callout>\n    </div>\n  </div>\n  <div class=\"row justify-content-center\">\n    <div class=\"col-5\">\n      <div class=\"card d-block\">\n        <div class=\"card-body\" *ngIf=\"loading\" class=\"text-center\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && passwordRequired\">\n          <p>{{ \"sendProtectedPassword\" | i18n }}</p>\n          <p>{{ \"sendProtectedPasswordDontKnow\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"password\">{{ \"password\" | i18n }}</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"Password\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"password\"\n              required\n              appInputVerbatim\n              appAutofocus\n            />\n          </div>\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && unavailable\">\n          {{ \"sendAccessUnavailable\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && error\">\n          {{ \"unexpectedError\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && !passwordRequired && send\">\n          <p class=\"text-center\">\n            <b>{{ send.name }}</b>\n          </p>\n          <hr />\n          <!-- Text -->\n          <ng-container *ngIf=\"send.type === sendType.Text\">\n            <app-callout *ngIf=\"send.text.hidden\" type=\"tip\">{{\n              \"sendHiddenByDefault\" | i18n\n            }}</app-callout>\n            <div class=\"form-group\">\n              <textarea\n                id=\"text\"\n                rows=\"8\"\n                name=\"Text\"\n                [(ngModel)]=\"sendText\"\n                class=\"form-control\"\n                readonly\n              ></textarea>\n            </div>\n            <button\n              class=\"btn btn-block btn-link\"\n              type=\"button\"\n              (click)=\"toggleText()\"\n              *ngIf=\"send.text.hidden\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showText, 'bwi-eye-slash': showText }\"\n              ></i>\n              {{ \"toggleVisibility\" | i18n }}\n            </button>\n            <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"copyText()\">\n              <i class=\"bwi bwi-copy\" aria-hidden=\"true\"></i> {{ \"copyValue\" | i18n }}\n            </button>\n          </ng-container>\n          <!-- File -->\n          <ng-container *ngIf=\"send.type === sendType.File\">\n            <p>{{ send.file.fileName }}</p>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              (click)=\"download()\"\n              *ngIf=\"!downloading\"\n            >\n              <i class=\"bwi bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"downloadFile\" | i18n }} ({{ send.file.sizeName }})\n            </button>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              *ngIf=\"downloading\"\n              disabled=\"true\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </ng-container>\n          <p *ngIf=\"expirationDate\" class=\"text-center text-muted\">\n            Expires: {{ expirationDate | date: \"medium\" }}\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 text-center mt-5 text-muted\">\n      <p class=\"mb-0\">\n        {{ \"sendAccessTaglineProductDesc\" | i18n }}<br />\n        {{ \"sendAccessTaglineLearnMore\" | i18n }}\n        <a href=\"https://www.bitwarden.com/products/send?source=web-vault\" target=\"_blank\"\n          >Bitwarden Send</a\n        >\n        {{ \"sendAccessTaglineOr\" | i18n }}\n        <a href=\"https://vault.bitwarden.com/#/register\" target=\"_blank\">{{\n          \"sendAccessTaglineSignUp\" | i18n\n        }}</a>\n        {{ \"sendAccessTaglineTryToday\" | i18n }}\n      </p>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SEND_KDF_ITERATIONS } from \"@bitwarden/common/enums/kdfType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/encArrayBuffer\";\nimport { SendAccess } from \"@bitwarden/common/models/domain/sendAccess\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { SendAccessRequest } from \"@bitwarden/common/models/request/sendAccessRequest\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\nimport { SendAccessResponse } from \"@bitwarden/common/models/response/sendAccessResponse\";\nimport { SendAccessView } from \"@bitwarden/common/models/view/sendAccessView\";\n\n@Component({\n  selector: \"app-send-access\",\n  templateUrl: \"access.component.html\",\n})\nexport class AccessComponent implements OnInit {\n  send: SendAccessView;\n  sendType = SendType;\n  downloading = false;\n  loading = true;\n  passwordRequired = false;\n  formPromise: Promise<SendAccessResponse>;\n  password: string;\n  showText = false;\n  unavailable = false;\n  error = false;\n  hideEmail = false;\n\n  private id: string;\n  private key: string;\n  private decKey: SymmetricCryptoKey;\n  private accessRequest: SendAccessRequest;\n\n  constructor(\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private fileDownloadService: FileDownloadService\n  ) {}\n\n  get sendText() {\n    if (this.send == null || this.send.text == null) {\n      return null;\n    }\n    return this.showText ? this.send.text.text : this.send.text.maskedText;\n  }\n\n  get expirationDate() {\n    if (this.send == null || this.send.expirationDate == null) {\n      return null;\n    }\n    return this.send.expirationDate;\n  }\n\n  get creatorIdentifier() {\n    if (this.send == null || this.send.creatorIdentifier == null) {\n      return null;\n    }\n    return this.send.creatorIdentifier;\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(async (params) => {\n      this.id = params.sendId;\n      this.key = params.key;\n      if (this.key == null || this.id == null) {\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async download() {\n    if (this.send == null || this.decKey == null) {\n      return;\n    }\n\n    if (this.downloading) {\n      return;\n    }\n\n    const downloadData = await this.apiService.getSendFileDownloadData(\n      this.send,\n      this.accessRequest\n    );\n\n    if (Utils.isNullOrWhitespace(downloadData.url)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingSendFile\"));\n      return;\n    }\n\n    this.downloading = true;\n    const response = await fetch(new Request(downloadData.url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      this.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, this.decKey);\n      this.fileDownloadService.download({\n        fileName: this.send.file.fileName,\n        blobData: decBuf,\n        downloadMethod: \"save\",\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    this.downloading = false;\n  }\n\n  copyText() {\n    this.platformUtilsService.copyToClipboard(this.send.text.text);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendTypeText\"))\n    );\n  }\n\n  toggleText() {\n    this.showText = !this.showText;\n  }\n\n  async load() {\n    this.unavailable = false;\n    this.error = false;\n    this.hideEmail = false;\n    const keyArray = Utils.fromUrlB64ToArray(this.key);\n    this.accessRequest = new SendAccessRequest();\n    if (this.password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        this.password,\n        keyArray,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      this.accessRequest.password = Utils.fromBufferToB64(passwordHash);\n    }\n    try {\n      let sendResponse: SendAccessResponse = null;\n      if (this.loading) {\n        sendResponse = await this.apiService.postSendAccess(this.id, this.accessRequest);\n      } else {\n        this.formPromise = this.apiService.postSendAccess(this.id, this.accessRequest);\n        sendResponse = await this.formPromise;\n      }\n      this.passwordRequired = false;\n      const sendAccess = new SendAccess(sendResponse);\n      this.decKey = await this.cryptoService.makeSendKey(keyArray);\n      this.send = await sendAccess.decrypt(this.decKey);\n      this.showText = this.send.text != null ? !this.send.text.hidden : true;\n    } catch (e) {\n      if (e instanceof ErrorResponse) {\n        if (e.statusCode === 401) {\n          this.passwordRequired = true;\n        } else if (e.statusCode === 404) {\n          this.unavailable = true;\n        } else {\n          this.error = true;\n        }\n      }\n    }\n    this.loading = false;\n    this.hideEmail =\n      this.creatorIdentifier == null &&\n      !this.passwordRequired &&\n      !this.loading &&\n      !this.unavailable;\n  }\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\n@Directive()\nexport class SendComponent implements OnInit {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new UntypedFormGroup({\n    selectedDeletionDatePreset: new UntypedFormControl(),\n    selectedExpirationDatePreset: new UntypedFormControl(),\n    defaultDeletionDateTime: new UntypedFormControl(),\n    defaultExpirationDateTime: new UntypedFormControl(),\n    fallbackDeletionDate: new UntypedFormControl(),\n    fallbackDeletionTime: new UntypedFormControl(),\n    fallbackExpirationDate: new UntypedFormControl(),\n    fallbackExpirationTime: new UntypedFormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as UntypedFormControl;\n  }\n\n  get selectedExpirationDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as UntypedFormControl;\n  }\n\n  get defaultDeletionDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as UntypedFormControl;\n  }\n\n  get defaultExpirationDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as UntypedFormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/encArrayBuffer\";\nimport { Send } from \"@bitwarden/common/models/domain/send\";\nimport { SendFileView } from \"@bitwarden/common/models/view/sendFileView\";\nimport { SendTextView } from \"@bitwarden/common/models/view/sendTextView\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  private sendLinkBaseUrl: string;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n    this.disableHideEmail = await this.policyService.policyAppliesToUser(\n      PolicyType.SendOptions,\n      (p) => p.data.disableHideEmail\n    );\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        const copySuccess = await this.copyLinkToClipboard(this.link);\n        if (copySuccess ?? true) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n          );\n        } else {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n            null,\n            this.i18nService.t(\"ok\"),\n            null,\n            \"success\",\n            null\n          );\n          await this.copyLinkToClipboard(this.link);\n        }\n      }\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n}\n","<div class=\"row\" [formGroup]=\"datesForm\">\n  <div class=\"col-6 form-group\">\n    <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n    <ng-template #deletionDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <ng-container *ngSwitchCase=\"'firefox'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              [readOnly]=\"disableSend\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <input\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              type=\"time\"\n              name=\"DeletionTimeDate\"\n              formControlName=\"fallbackDeletionTime\"\n              required\n              placeholder=\"HH:MM AM/PM\"\n              [readOnly]=\"disableSend\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'safari'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              [readOnly]=\"disableSend\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <select\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              [required]=\"!editMode\"\n              formControlName=\"fallbackDeletionTime\"\n              name=\"SafariDeletionTime\"\n            >\n              <option\n                *ngFor=\"let o of safariDeletionTimePresetOptions\"\n                [ngValue]=\"o.twentyFourHour\"\n              >\n                {{ o.twelveHour }}\n              </option>\n            </select>\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"deletionDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"DeletionDate\"\n            formControlName=\"defaultDeletionDateTime\"\n            required\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"deletionDate\"\n        name=\"SelectedDeletionDatePreset\"\n        formControlName=\"selectedDeletionDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedDeletionDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"deletionDateDesc\" | i18n }}</div>\n  </div>\n  <div class=\"col-6 form-group\">\n    <div class=\"d-flex\">\n      <label for=\"expirationDate\">{{ \"expirationDate\" | i18n }}</label>\n      <a\n        href=\"#\"\n        appStopClick\n        (click)=\"clearExpiration()\"\n        class=\"ml-auto\"\n        *ngIf=\"editMode && !disabled\"\n      >\n        {{ \"clear\" | i18n }}\n      </a>\n    </div>\n    <ng-template #expirationDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <div *ngSwitchCase=\"'firefox'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n        <!-- non-default cases are not showing up -->\n        <div *ngSwitchCase=\"'safari'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            [required]=\"!editMode\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"expirationDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"ExpirationDate\"\n            formControlName=\"defaultExpirationDateTime\"\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"expirationDate\"\n        name=\"SelectedExpirationDatePreset\"\n        formControlName=\"selectedExpirationDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedExpirationDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"expirationDateDesc\" | i18n }}</div>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"@bitwarden/angular/components/send/efflux-dates.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"sendAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"sendAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"send\">\n        <app-callout *ngIf=\"disableSend\">\n          <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n        </app-callout>\n        <app-callout *ngIf=\"!disableSend && disableHideEmail\">\n          <span>{{ \"sendOptionsPolicyInEffect\" | i18n }}</span>\n          <ul class=\"mb-0\">\n            <li>{{ \"sendDisableHideEmailInEffect\" | i18n }}</li>\n          </ul>\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"send.name\"\n              required\n              [readOnly]=\"disableSend\"\n            />\n            <small class=\"form-text text-muted\">{{ \"sendNameDesc\" | i18n }}</small>\n          </div>\n        </div>\n        <div class=\"row\" *ngIf=\"!editMode\">\n          <div class=\"col-6 form-group\">\n            <label>{{ \"whatTypeOfSend\" | i18n }}</label>\n            <div class=\"form-check\" *ngFor=\"let o of typeOptions\">\n              <input\n                class=\"form-check-input\"\n                type=\"radio\"\n                [(ngModel)]=\"send.type\"\n                name=\"Type_{{ o.value }}\"\n                id=\"type_{{ o.value }}\"\n                [value]=\"o.value\"\n                (change)=\"typeChanged(o)\"\n                [checked]=\"send.type === o.value\"\n              />\n              <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n                {{ o.name }}\n              </label>\n            </div>\n          </div>\n        </div>\n        <!-- Text -->\n        <ng-container *ngIf=\"send.type === sendType.Text\">\n          <div class=\"form-group\">\n            <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n            <textarea\n              id=\"text\"\n              name=\"Text.Text\"\n              rows=\"6\"\n              [(ngModel)]=\"send.text.text\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <small class=\"form-text text-muted\">{{ \"sendTextDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.text.hidden\"\n                id=\"text-hidden\"\n                name=\"Text.Hidden\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"text-hidden\">{{\n                \"textHiddenByDefault\" | i18n\n              }}</label>\n            </div>\n          </div>\n        </ng-container>\n        <!-- File -->\n        <ng-container *ngIf=\"send.type === sendType.File\">\n          <div class=\"form-group\">\n            <div *ngIf=\"editMode\">\n              <strong class=\"d-block\">{{ \"file\" | i18n }}</strong>\n              {{ send.file.fileName }} ({{ send.file.sizeName }})\n            </div>\n            <div *ngIf=\"!editMode\">\n              <label for=\"file\">{{ \"file\" | i18n }}</label>\n              <input\n                type=\"file\"\n                id=\"file\"\n                class=\"form-control-file\"\n                name=\"file\"\n                required\n                [disabled]=\"disableSend\"\n              />\n              <small class=\"form-text text-muted\"\n                >{{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}</small\n              >\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-5\">{{ \"share\" | i18n }}</h3>\n        <div class=\"form-group\" *ngIf=\"link\">\n          <label for=\"link\">{{ \"sendLinkLabel\" | i18n }}</label>\n          <input\n            type=\"text\"\n            readonly\n            id=\"link\"\n            name=\"Link\"\n            [(ngModel)]=\"link\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [(ngModel)]=\"copyLink\"\n              id=\"copy-link\"\n              name=\"CopyLink\"\n            />\n            <label class=\"form-check-label\" for=\"copy-link\">{{\n              \"copySendLinkOnSave\" | i18n\n            }}</label>\n          </div>\n        </div>\n        <div\n          id=\"options-header\"\n          class=\"section-header d-flex flex-row align-items-center mt-5\"\n          (click)=\"toggleOptions()\"\n        >\n          <h3 class=\"mb-0 mr-2\">{{ \"options\" | i18n }}</h3>\n          <a class=\"mb-1\" href=\"#\" appStopClick role=\"button\">\n            <i\n              class=\"bwi\"\n              aria-hidden=\"true\"\n              [ngClass]=\"{ 'bwi-angle-down': !showOptions, 'bwi-chevron-up': showOptions }\"\n            ></i>\n          </a>\n        </div>\n        <div id=\"options\" [hidden]=\"!showOptions\">\n          <app-send-efflux-dates\n            [initialDeletionDate]=\"send.deletionDate\"\n            [initialExpirationDate]=\"send.expirationDate\"\n            [editMode]=\"editMode\"\n            [disabled]=\"disableSend\"\n            (datesChanged)=\"setDates($event)\"\n          >\n          </app-send-efflux-dates>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"maxAccessCount\">{{ \"maxAccessCount\" | i18n }}</label>\n              <input\n                id=\"maxAccessCount\"\n                class=\"form-control\"\n                type=\"number\"\n                name=\"MaxAccessCount\"\n                [(ngModel)]=\"send.maxAccessCount\"\n                min=\"1\"\n                [readOnly]=\"disableSend\"\n              />\n              <div class=\"form-text text-muted small\">{{ \"maxAccessCountDesc\" | i18n }}</div>\n            </div>\n            <div class=\"col-6 form-group\" *ngIf=\"editMode\">\n              <label for=\"accessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n              <input\n                id=\"accessCount\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"AccessCount\"\n                readonly\n                [(ngModel)]=\"send.accessCount\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"password\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Password\"\n                  [(ngModel)]=\"password\"\n                  [readOnly]=\"disableSend\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePasswordVisible()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                </div>\n              </div>\n              <div class=\"form-text text-muted small\">{{ \"sendPasswordDesc\" | i18n }}</div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <div class=\"form-text text-muted small\">{{ \"sendNotesDesc\" | i18n }}</div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.hideEmail\"\n                id=\"hideEmail\"\n                name=\"HideEmail\"\n                [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"hideEmail\">\n                {{ \"hideEmail\" | i18n }}\n              </label>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.disabled\"\n                id=\"disabled\"\n                name=\"Disabled\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"disabled\">{{ \"disableThisSend\" | i18n }}</label>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [ngClass]=\"{ loading: form.loading }\"\n          [disabled]=\"form.loading || disableSend\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"send\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/send/add-edit.component\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    // Copy function on web depends on the modal being open or not. Since this event occurs during a transition\n    // of the modal closing we need to add a small delay to make sure state of the DOM is consistent.\n    return new Promise((resolve) => {\n      window.setTimeout(() => resolve(super.copyLinkToClipboard(link)), 500);\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-3 groupings\">\n      <div class=\"card vault-filters\">\n        <div class=\"card-header d-flex\">\n          {{ \"filters\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <input\n            type=\"search\"\n            placeholder=\"{{ searchPlaceholder || ('searchSends' | i18n) }}\"\n            id=\"search\"\n            class=\"form-control\"\n            [(ngModel)]=\"searchText\"\n            (input)=\"searchTextChanged()\"\n            autocomplete=\"off\"\n            appAutofocus\n          />\n          <div class=\"filter\">\n            <ul class=\"filter-options\">\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedAll }\">\n                <span class=\"filter-buttons\">\n                  <button bitButton class=\"filter-button\" appStopClick (click)=\"selectAll()\">\n                    <i class=\"bwi bwi-fw bwi-filter\"></i>{{ \"allSends\" | i18n }}\n                  </button>\n                </span>\n              </li>\n            </ul>\n          </div>\n          <div class=\"filter\">\n            <div class=\"filter-heading\">\n              <h3>{{ \"types\" | i18n }}</h3>\n            </div>\n            <ul class=\"filter-options\">\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedType === sendType.Text }\">\n                <span class=\"filter-buttons\">\n                  <button\n                    bitButton\n                    class=\"filter-button\"\n                    appStopClick\n                    (click)=\"selectType(sendType.Text)\"\n                  >\n                    <i class=\"bwi bwi-fw bwi-file-text\"></i>{{ \"sendTypeText\" | i18n }}\n                  </button>\n                </span>\n              </li>\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedType === sendType.File }\">\n                <span class=\"filter-buttons\">\n                  <button\n                    bitButton\n                    class=\"filter-button\"\n                    appStopClick\n                    (click)=\"selectType(sendType.File)\"\n                  >\n                    <i class=\"bwi bwi-fw bwi-file\"></i>{{ \"sendTypeFile\" | i18n }}\n                  </button>\n                </span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"send\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addSend()\"\n            [disabled]=\"disableSend\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <!--Listing Table-->\n      <table class=\"table table-hover table-list\" *ngIf=\"filteredSends && filteredSends.length\">\n        <tbody>\n          <tr *ngFor=\"let s of filteredSends\">\n            <td class=\"table-list-icon\">\n              <div class=\"icon\" aria-hidden=\"true\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type == sendType.File\"></i>\n                <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type == sendType.Text\"></i>\n              </div>\n            </td>\n            <td class=\"reduced-lh wrap\">\n              <a href=\"#\" appStopClick appStopProp (click)=\"editSend(s)\">{{ s.name }}</a>\n              <ng-container *ngIf=\"s.disabled\">\n                <i\n                  class=\"bwi bwi-exclamation-triangle\"\n                  appStopProp\n                  title=\"{{ 'disabled' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.password\">\n                <i\n                  class=\"bwi bwi-key\"\n                  appStopProp\n                  title=\"{{ 'password' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"password\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.maxAccessCountReached\">\n                <i\n                  class=\"bwi bwi-ban\"\n                  appStopProp\n                  title=\"{{ 'maxAccessCountReached' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.expired\">\n                <i\n                  class=\"bwi bwi-clock\"\n                  appStopProp\n                  title=\"{{ 'expired' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.pendingDelete\">\n                <i\n                  class=\"bwi bwi-trash\"\n                  appStopProp\n                  title=\"{{ 'pendingDeletion' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n              </ng-container>\n              <br />\n              <small appStopProp>{{ s.deletionDate | date: \"medium\" }}</small>\n            </td>\n            <td class=\"table-list-options\">\n              <button\n                [bitMenuTriggerFor]=\"sendOptions\"\n                class=\"tw-border-none tw-bg-transparent tw-text-main\"\n                type=\"button\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu #sendOptions>\n                <button bitMenuItem (click)=\"copy(s)\">\n                  <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                  {{ \"copySendLink\" | i18n }}\n                </button>\n                <button bitMenuItem (click)=\"removePassword(s)\" *ngIf=\"s.password && !disableSend\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"removePassword\" | i18n }}\n                </button>\n                <button bitMenuItem (click)=\"delete(s)\">\n                  <span class=\"tw-text-danger\">\n                    <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                    {{ \"delete\" | i18n }}\n                  </span>\n                </button>\n              </bit-menu>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div class=\"no-items\" *ngIf=\"filteredSends && !filteredSends.length\">\n        <ng-container *ngIf=\"!loaded\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"loaded\">\n          <p>{{ \"noSendsInList\" | i18n }}</p>\n          <button (click)=\"addSend()\" class=\"btn btn-outline-primary\" [disabled]=\"disableSend\">\n            <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #sendAddEdit></ng-template>\n","import { Component, NgZone, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SendComponent as BaseSendComponent } from \"@bitwarden/angular/components/send/send.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\n\nconst BroadcasterSubscriptionId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send\",\n  templateUrl: \"send.component.html\",\n})\nexport class SendComponent extends BaseSendComponent {\n  @ViewChild(\"sendAddEdit\", { read: ViewContainerRef, static: true })\n  sendAddEditModalRef: ViewContainerRef;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    searchService: SearchService,\n    policyService: PolicyService,\n    private modalService: ModalService,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n\n    // Broadcaster subscription - load if sync completes in the background\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n\n    const component = await this.editSend(null);\n    component.type = this.type;\n  }\n\n  async editSend(send: SendView) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.sendAddEditModalRef,\n      (comp) => {\n        comp.sendId = send == null ? null : send.id;\n        comp.onSavedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        comp.onDeletedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-deauthorize-sessions\",\n  templateUrl: \"deauthorize-sessions.component.html\",\n})\nexport class DeauthorizeSessionsComponent {\n  masterPassword: Verification;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postSecurityStamp(request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"sessionsDeauthorized\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deAuthTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deAuthTitle\">{{ \"deauthorizeSessions\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deauthorizeSessionsDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deauthorizeSessionsWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deauthorizeSessions\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { AccountService } from \"@bitwarden/common/abstractions/account/account.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-delete-account\",\n  templateUrl: \"delete-account.component.html\",\n})\nexport class DeleteAccountComponent {\n  formPromise: Promise<void>;\n\n  deleteForm = this.formBuilder.group({\n    verification: undefined as Verification | undefined,\n  });\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private formBuilder: FormBuilder,\n    private accountService: AccountService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const verification = this.deleteForm.get(\"verification\").value;\n      this.formPromise = this.accountService.delete(verification);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteAccountTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      [formGroup]=\"deleteForm\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deleteAccountTitle\">{{ \"deleteAccount\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deleteAccountDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n        <app-user-verification ngDefaultControl formControlName=\"verification\" name=\"verification\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteAccount\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class EmailTokenRequest extends SecretVerificationRequest {\n  newEmail: string;\n  masterPasswordHash: string;\n}\n","import { EmailTokenRequest } from \"./emailTokenRequest\";\n\nexport class EmailRequest extends EmailTokenRequest {\n  newMasterPasswordHash: string;\n  token: string;\n  key: string;\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <app-callout type=\"warning\" *ngIf=\"showTwoFactorEmailWarning\">\n    {{ \"changeEmailTwoFactorWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          [readonly]=\"tokenSent\"\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"newEmail\">{{ \"newEmail\" | i18n }}</label>\n        <input\n          id=\"newEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"NewEmail\"\n          [(ngModel)]=\"newEmail\"\n          required\n          [readonly]=\"tokenSent\"\n          inputmode=\"email\"\n          appInputVerbatim=\"false\"\n        />\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"tokenSent\">\n    <hr />\n    <p>{{ \"changeEmailDesc\" | i18n: newEmail }}</p>\n    <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"token\">{{ \"code\" | i18n }}</label>\n          <input\n            id=\"token\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Token\"\n            [(ngModel)]=\"token\"\n            required\n            appInputVerbatim\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span *ngIf=\"!tokenSent\">{{ \"continue\" | i18n }}</span>\n    <span *ngIf=\"tokenSent\">{{ \"changeEmail\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" *ngIf=\"tokenSent\" (click)=\"reset()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { EmailRequest } from \"@bitwarden/common/models/request/emailRequest\";\nimport { EmailTokenRequest } from \"@bitwarden/common/models/request/emailTokenRequest\";\n\n@Component({\n  selector: \"app-change-email\",\n  templateUrl: \"change-email.component.html\",\n})\nexport class ChangeEmailComponent implements OnInit {\n  masterPassword: string;\n  newEmail: string;\n  token: string;\n  tokenSent = false;\n  showTwoFactorEmailWarning = false;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    const twoFactorProviders = await this.apiService.getTwoFactorProviders();\n    this.showTwoFactorEmailWarning = twoFactorProviders.data.some(\n      (p) => p.type === TwoFactorProviderType.Email && p.enabled\n    );\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    this.newEmail = this.newEmail.trim().toLowerCase();\n    if (!this.tokenSent) {\n      const request = new EmailTokenRequest();\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      try {\n        this.formPromise = this.apiService.postEmailToken(request);\n        await this.formPromise;\n        this.tokenSent = true;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const request = new EmailRequest();\n      request.token = this.token;\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.newEmail,\n        kdf,\n        kdfIterations\n      );\n      request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        newKey\n      );\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n      request.key = newEncKey[1].encryptedString;\n      try {\n        this.formPromise = this.apiService.postEmail(request);\n        await this.formPromise;\n        this.reset();\n        this.platformUtilsService.showToast(\n          \"success\",\n          this.i18nService.t(\"emailChanged\"),\n          this.i18nService.t(\"logBackIn\")\n        );\n        this.messagingService.send(\"logout\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n\n  reset() {\n    this.token = this.newEmail = this.masterPassword = null;\n    this.tokenSent = false;\n  }\n}\n","export class UpdateProfileRequest {\n  name: string;\n  masterPasswordHint: string;\n  culture = \"en-US\"; // deprecated\n\n  constructor(name: string, masterPasswordHint: string) {\n    this.name = name;\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"profile && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"profile.name\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">{{ \"email\" | i18n }}</label>\n        <input\n          id=\"email\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Email\"\n          [(ngModel)]=\"profile.email\"\n          readonly\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"mb-3\">\n        <app-avatar\n          data=\"{{ profile | userName }}\"\n          [email]=\"profile.email\"\n          dynamic=\"true\"\n          size=\"75\"\n          fontSize=\"35\"\n        >\n        </app-avatar>\n      </div>\n      <hr />\n      <p *ngIf=\"fingerprint\">\n        {{ \"yourAccountsFingerprint\" | i18n }}:\n        <a\n          href=\"https://bitwarden.com/help/fingerprint-phrase/\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i></a\n        ><br />\n        <code>{{ fingerprint }}</code>\n      </p>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UpdateProfileRequest } from \"@bitwarden/common/models/request/updateProfileRequest\";\nimport { ProfileResponse } from \"@bitwarden/common/models/response/profileResponse\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"profile.component.html\",\n})\nexport class ProfileComponent implements OnInit {\n  loading = true;\n  profile: ProfileResponse;\n  fingerprint: string;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.profile = await this.apiService.getProfile();\n    this.loading = false;\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    if (fingerprint != null) {\n      this.fingerprint = fingerprint.join(\"-\");\n    }\n  }\n\n  async submit() {\n    try {\n      const request = new UpdateProfileRequest(this.profile.name, this.profile.masterPasswordHint);\n      this.formPromise = this.apiService.putProfile(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"accountUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myAccount\" | i18n }}</h1>\n</div>\n<app-profile></app-profile>\n<ng-container *ngIf=\"showChangeEmail\">\n  <div class=\"secondary-header\">\n    <h1>{{ \"changeEmail\" | i18n }}</h1>\n  </div>\n  <app-change-email></app-change-email>\n</ng-container>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button bitButton buttonType=\"danger\" (click)=\"deauthorizeSessions()\">\n      {{ \"deauthorizeSessions\" | i18n }}\n    </button>\n    <button bitButton buttonType=\"danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n    <button bitButton buttonType=\"danger\" (click)=\"deleteAccount()\">\n      {{ \"deleteAccount\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deauthorizeSessionsTemplate></ng-template>\n<ng-template #purgeVaultTemplate></ng-template>\n<ng-template #deleteAccountTemplate></ng-template>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { DeauthorizeSessionsComponent } from \"./deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"./delete-account.component\";\nimport { PurgeVaultComponent } from \"./purge-vault.component\";\n\n@Component({\n  selector: \"app-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  @ViewChild(\"deauthorizeSessionsTemplate\", { read: ViewContainerRef, static: true })\n  deauthModalRef: ViewContainerRef;\n  @ViewChild(\"purgeVaultTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"deleteAccountTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  showChangeEmail = true;\n\n  constructor(\n    private modalService: ModalService,\n    private apiService: ApiService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeEmail = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async deauthorizeSessions() {\n    await this.modalService.openViewRef(DeauthorizeSessionsComponent, this.deauthModalRef);\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef);\n  }\n\n  async deleteAccount() {\n    await this.modalService.openViewRef(DeleteAccountComponent, this.deleteModalRef);\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"./organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.plan === \"families\") {\n        this.orgPlansComponent.plan = PlanType.FamiliesAnnually;\n        this.orgPlansComponent.product = ProductType.Families;\n      } else if (qParams.plan === \"teams\") {\n        this.orgPlansComponent.plan = PlanType.TeamsAnnually;\n        this.orgPlansComponent.product = ProductType.Teams;\n      } else if (qParams.plan === \"enterprise\") {\n        this.orgPlansComponent.plan = PlanType.EnterpriseAnnually;\n        this.orgPlansComponent.product = ProductType.Enterprise;\n      }\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"page-header\">\n        <h1>{{ \"newOrganization\" | i18n }}</h1>\n      </div>\n      <p>{{ \"newOrganizationDesc\" | i18n }}</p>\n      <app-organization-plans></app-organization-plans>\n    </div>\n  </div>\n</div>\n","export class UpdateDomainsRequest {\n  equivalentDomains: string[][];\n  excludedGlobalEquivalentDomains: number[];\n}\n","<div class=\"page-header\">\n  <h1>{{ \"domainRules\" | i18n }}</h1>\n</div>\n<p>{{ \"domainRulesDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <h2>{{ \"customEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"!loading\">\n    <div class=\"form-group d-flex\" *ngFor=\"let d of custom; let i = index; trackBy: indexTrackBy\">\n      <div class=\"flex-fill\">\n        <label for=\"customDomain_{{ i }}\" class=\"sr-only\">{{\n          \"customDomainX\" | i18n: i + 1\n        }}</label>\n        <textarea\n          class=\"form-control\"\n          name=\"CustomDomain[{{ i }}]\"\n          id=\"customDomain_{{ i }}\"\n          [(ngModel)]=\"custom[i]\"\n          placeholder=\"{{ 'ex' | i18n }} google.com, gmail.com\"\n          required\n        ></textarea>\n      </div>\n      <button\n        type=\"button\"\n        class=\"btn btn-link text-danger ml-2\"\n        (click)=\"remove(i)\"\n        appA11yTitle=\"{{ 'remove' | i18n }}\"\n      >\n        <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <button type=\"button\" (click)=\"add()\" class=\"btn btn-outline-secondary btn-sm mb-2\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomDomain\" | i18n }}\n    </button>\n    <small class=\"text-muted d-block mb-3\">{{ \"newCustomDomainDesc\" | i18n }}</small>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n  <h2 class=\"spaced-header\">{{ \"globalEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <table class=\"table table-hover table-list\" *ngIf=\"!loading && global.length > 0\">\n    <tbody>\n      <tr *ngFor=\"let d of global\">\n        <td [ngClass]=\"{ 'table-list-strike': d.excluded }\">{{ d.domains }}</td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"!d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                {{ \"exclude\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-plus\" aria-hidden=\"true\"></i>\n                {{ \"include\" | i18n }}\n              </a>\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"customize(d)\">\n                <i class=\"bwi bwi-fw bwi-cut\" aria-hidden=\"true\"></i>\n                {{ \"customize\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UpdateDomainsRequest } from \"@bitwarden/common/models/request/updateDomainsRequest\";\n\n@Component({\n  selector: \"app-domain-rules\",\n  templateUrl: \"domain-rules.component.html\",\n})\nexport class DomainRulesComponent implements OnInit {\n  loading = true;\n  custom: string[] = [];\n  global: any[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const response = await this.apiService.getSettingsDomains();\n    this.loading = false;\n    if (response.equivalentDomains != null) {\n      this.custom = response.equivalentDomains.map((d) => d.join(\", \"));\n    }\n    if (response.globalEquivalentDomains != null) {\n      this.global = response.globalEquivalentDomains.map((d) => {\n        return {\n          domains: d.domains.join(\", \"),\n          excluded: d.excluded,\n          key: d.type,\n        };\n      });\n    }\n  }\n\n  toggleExcluded(globalDomain: any) {\n    globalDomain.excluded = !globalDomain.excluded;\n  }\n\n  customize(globalDomain: any) {\n    globalDomain.excluded = true;\n    this.custom.push(globalDomain.domains);\n  }\n\n  remove(index: number) {\n    this.custom.splice(index, 1);\n  }\n\n  add() {\n    this.custom.push(\"\");\n  }\n\n  async submit() {\n    const request = new UpdateDomainsRequest();\n    request.excludedGlobalEquivalentDomains = this.global\n      .filter((d) => d.excluded)\n      .map((d) => d.key);\n    if (request.excludedGlobalEquivalentDomains.length === 0) {\n      request.excludedGlobalEquivalentDomains = null;\n    }\n    request.equivalentDomains = this.custom\n      .filter((d) => d != null && d.trim() !== \"\")\n      .map((d) => d.split(\",\").map((d2) => d2.trim()));\n    if (request.equivalentDomains.length === 0) {\n      request.equivalentDomains = null;\n    }\n\n    try {\n      this.formPromise = this.apiService.putSettingsDomains(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"domainsUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  indexTrackBy(index: number, obj: any): any {\n    return index;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\n\n@Component({\n  selector: \"emergency-access-attachments\",\n  templateUrl: \"../vault/attachments.component.html\",\n})\nexport class EmergencyAccessAttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = true;\n  canAccessAttachments = true;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  protected async init() {\n    // Do nothing since cipher is already decoded\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return false;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../vault/add-edit.component.html\",\n})\nexport class EmergencyAddEditComponent extends BaseAddEditComponent {\n  originalCipher: Cipher = null;\n  viewOnly = true;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    messagingService: MessagingService,\n    eventService: EventService,\n    policyService: PolicyService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async load() {\n    this.title = this.i18nService.t(\"viewItem\");\n  }\n\n  protected async loadCipher() {\n    return Promise.resolve(this.originalCipher);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"vault\" | i18n }}</h1>\n</div>\n<div class=\"mt-4\">\n  <ng-container *ngIf=\"ciphers.length\">\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown *ngIf=\"c.hasAttachments\">\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"viewAttachments(c)\">\n                  <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n                  {{ \"attachments\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #attachments></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { EmergencyAccessViewResponse } from \"@bitwarden/common/models/response/emergencyAccessResponse\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { EmergencyAccessAttachmentsComponent } from \"./emergency-access-attachments.component\";\nimport { EmergencyAddEditComponent } from \"./emergency-add-edit.component\";\n\n@Component({\n  selector: \"emergency-access-view\",\n  templateUrl: \"emergency-access-view.component.html\",\n})\nexport class EmergencyAccessViewComponent implements OnInit {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n\n  id: string;\n  ciphers: CipherView[] = [];\n  loaded = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private modalService: ModalService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private apiService: ApiService\n  ) {}\n\n  ngOnInit() {\n    this.route.params.subscribe((qParams) => {\n      if (qParams.id == null) {\n        return this.router.navigate([\"settings/emergency-access\"]);\n      }\n\n      this.id = qParams.id;\n\n      this.load();\n    });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    // eslint-disable-next-line\n    const [_, childComponent] = await this.modalService.openViewRef(\n      EmergencyAddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.cipher = cipher;\n      }\n    );\n\n    return childComponent;\n  }\n\n  async load() {\n    const response = await this.apiService.postEmergencyAccessView(this.id);\n    this.ciphers = await this.getAllCiphers(response);\n    this.loaded = true;\n  }\n\n  async viewAttachments(cipher: CipherView) {\n    await this.modalService.openViewRef(\n      EmergencyAccessAttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipher = cipher;\n        comp.emergencyAccessId = this.id;\n      }\n    );\n  }\n\n  protected async getAllCiphers(response: EmergencyAccessViewResponse): Promise<CipherView[]> {\n    const ciphers = response.ciphers;\n\n    const decCiphers: CipherView[] = [];\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(response.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    const promises: any[] = [];\n    ciphers.forEach((cipherResponse) => {\n      const cipherData = new CipherData(cipherResponse);\n      const cipher = new Cipher(cipherData);\n      promises.push(cipher.decrypt(oldEncKey).then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.cipherService.getLocaleSortingFunction());\n\n    return decCiphers;\n  }\n}\n","export enum EmergencyAccessStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  RecoveryInitiated = 3,\n  RecoveryApproved = 4,\n}\n","export enum EmergencyAccessType {\n  View = 0,\n  Takeover = 1,\n}\n","export class EmergencyAccessConfirmRequest {\n  key: string;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessInviteRequest {\n  email: string;\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessUpdateRequest {\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n  keyEncrypted?: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          <app-premium-badge *ngIf=\"readOnly\"></app-premium-badge>\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteEmergencyContactDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"email\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n            />\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userAccess\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/emergency-access/#user-access\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeView\"\n            [value]=\"emergencyAccessType.View\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeView\">\n            {{ \"view\" | i18n }}\n            <small>{{ \"viewDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeTakeover\"\n            [value]=\"emergencyAccessType.Takeover\"\n            [(ngModel)]=\"type\"\n            [disabled]=\"readOnly\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeTakeover\">\n            {{ \"takeover\" | i18n }}\n            <small>{{ \"takeoverDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-group col-6 mt-4\">\n          <label for=\"waitTime\">{{ \"waitTime\" | i18n }}</label>\n          <select\n            id=\"waitTime\"\n            name=\"waitTime\"\n            [(ngModel)]=\"waitTime\"\n            class=\"form-control\"\n            [disabled]=\"readOnly\"\n          >\n            <option *ngFor=\"let o of waitTimes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n          <small class=\"text-muted\">{{ \"waitTimeDesc\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <bit-submit-button [loading]=\"loading || form.loading\" [disabled]=\"readOnly\">\n          {{ \"save\" | i18n }}\n        </bit-submit-button>\n        <button bitButton buttonType=\"secondary\" type=\"button\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            bitButton\n            buttonType=\"danger\"\n            type=\"button\"\n            (click)=\"delete()\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EmergencyAccessType } from \"@bitwarden/common/enums/emergencyAccessType\";\nimport { EmergencyAccessInviteRequest } from \"@bitwarden/common/models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessUpdateRequest } from \"@bitwarden/common/models/request/emergencyAccessUpdateRequest\";\n\n@Component({\n  selector: \"emergency-access-add-edit\",\n  templateUrl: \"emergency-access-add-edit.component.html\",\n})\nexport class EmergencyAccessAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() emergencyAccessId: string;\n  @Output() onSaved = new EventEmitter();\n  @Output() onDeleted = new EventEmitter();\n\n  loading = true;\n  readOnly = false;\n  editMode = false;\n  title: string;\n  email: string;\n  type: EmergencyAccessType = EmergencyAccessType.View;\n\n  formPromise: Promise<any>;\n\n  emergencyAccessType = EmergencyAccessType;\n  waitTimes: { name: string; value: number }[];\n  waitTime: number;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.emergencyAccessId != null;\n\n    this.waitTimes = [\n      { name: this.i18nService.t(\"oneDay\"), value: 1 },\n      { name: this.i18nService.t(\"days\", \"2\"), value: 2 },\n      { name: this.i18nService.t(\"days\", \"7\"), value: 7 },\n      { name: this.i18nService.t(\"days\", \"14\"), value: 14 },\n      { name: this.i18nService.t(\"days\", \"30\"), value: 30 },\n      { name: this.i18nService.t(\"days\", \"90\"), value: 90 },\n    ];\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editEmergencyContact\");\n      try {\n        const emergencyAccess = await this.apiService.getEmergencyAccess(this.emergencyAccessId);\n        this.type = emergencyAccess.type;\n        this.waitTime = emergencyAccess.waitTimeDays;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteEmergencyContact\");\n      this.waitTime = this.waitTimes[2].value;\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new EmergencyAccessUpdateRequest();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.putEmergencyAccess(this.emergencyAccessId, request);\n      } else {\n        const request = new EmergencyAccessInviteRequest();\n        request.email = this.email.trim();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.postEmergencyAccessInvite(request);\n      }\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSaved.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    this.onDeleted.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"emergency-access-confirm\",\n  templateUrl: \"emergency-access-confirm.component.html\",\n})\nexport class EmergencyAccessConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() emergencyAccessId: string;\n  @Input() formPromise: Promise<any>;\n  @Output() onConfirmed = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n\n  constructor(\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(this.userId);\n      if (publicKeyResponse != null) {\n        const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n        const fingerprint = await this.cryptoService.getFingerprint(this.userId, publicKey.buffer);\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    try {\n      this.onConfirmed.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export class EmergencyAccessPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ \"takeover\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPassword\"\n                type=\"password\"\n                name=\"NewMasterPasswordHash\"\n                class=\"form-control mb-1\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <app-password-strength\n                [password]=\"masterPassword\"\n                [email]=\"email\"\n                [showText]=\"true\"\n                (passwordStrengthResult)=\"getStrengthResult($event)\"\n              >\n              </app-password-strength>\n            </div>\n          </div>\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"password\"\n                name=\"MasterPasswordRetype\"\n                class=\"form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ChangePasswordComponent } from \"@bitwarden/angular/components/change-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { EmergencyAccessPasswordRequest } from \"@bitwarden/common/models/request/emergencyAccessPasswordRequest\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\n@Component({\n  selector: \"emergency-access-takeover\",\n  templateUrl: \"emergency-access-takeover.component.html\",\n})\nexport class EmergencyAccessTakeoverComponent extends ChangePasswordComponent implements OnInit {\n  @Output() onDone = new EventEmitter();\n  @Input() emergencyAccessId: string;\n  @Input() name: string;\n  @Input() email: string;\n  @Input() kdf: KdfType;\n  @Input() kdfIterations: number;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private apiService: ApiService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    const response = await this.apiService.getEmergencyGrantorPolicies(this.emergencyAccessId);\n    if (response.data != null && response.data.length > 0) {\n      const policies = response.data.map(\n        (policyResponse: PolicyResponse) => new Policy(new PolicyData(policyResponse))\n      );\n      this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(\n        policies\n      );\n    }\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    const takeoverResponse = await this.apiService.postEmergencyAccessTakeover(\n      this.emergencyAccessId\n    );\n\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(takeoverResponse.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    if (oldEncKey == null) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"unexpectedError\")\n      );\n      return;\n    }\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      takeoverResponse.kdf,\n      takeoverResponse.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    const encKey = await this.cryptoService.remakeEncKey(key, oldEncKey);\n\n    const request = new EmergencyAccessPasswordRequest();\n    request.newMasterPasswordHash = masterPasswordHash;\n    request.key = encKey[1].encryptedString;\n\n    this.apiService.postEmergencyAccessPassword(this.emergencyAccessId, request);\n\n    try {\n      this.onDone.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"emergencyAccess\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"emergencyAccessDesc\" | i18n }}\n  <a href=\"https://bitwarden.com/help/emergency-access/\" target=\"_blank\" rel=\"noopener\">\n    {{ \"learnMore\" | i18n }}.\n  </a>\n</p>\n\n<p *ngIf=\"isOrganizationOwner\">\n  <b>{{ \"warning\" | i18n }}:</b> {{ \"emergencyAccessOwnerWarning\" | i18n }}\n</p>\n\n<div class=\"page-header d-flex\">\n  <h2>\n    {{ \"trustedEmergencyContacts\" | i18n }}\n    <app-premium-badge></app-premium-badge>\n  </h2>\n  <div class=\"ml-auto d-flex\">\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      type=\"button\"\n      (click)=\"invite()\"\n      [disabled]=\"!canAccessPremium\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-plus bwi-fw\"></i>\n      {{ \"addEmergencyContact\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"trustedContacts && trustedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of trustedContacts; let i = index\">\n      <td width=\"30\">\n        <app-avatar\n          [data]=\"c | userName\"\n          [email]=\"c.email\"\n          size=\"25\"\n          [circle]=\"true\"\n          [fontSize]=\"14\"\n        >\n        </app-avatar>\n      </td>\n      <td>\n        <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.email }}</a>\n        <span\n          bitBadge\n          badgeType=\"secondary\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n          >{{ \"invited\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n          >{{ \"accepted\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span bitBadge *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\">{{\n          \"emergencyAccessRecoveryApproved\" | i18n\n        }}</span>\n\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.View\">{{ \"view\" | i18n }}</span>\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <button\n          [bitMenuTriggerFor]=\"trustedContactOptions\"\n          class=\"tw-border-none tw-bg-transparent tw-text-main\"\n          type=\"button\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu #trustedContactOptions>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n            (click)=\"reinvite(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"resendInvitation\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n            (click)=\"confirm(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"confirm\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n            (click)=\"approve(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"approve\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryInitiated ||\n              c.status === emergencyAccessStatusType.RecoveryApproved\n            \"\n            (click)=\"reject(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"reject\" | i18n }}\n          </button>\n          <button bitMenuItem (click)=\"remove(c)\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n        </bit-menu>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!trustedContacts || !trustedContacts.length\">\n  <p *ngIf=\"loaded\">{{ \"noTrustedContacts\" | i18n }}</p>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</ng-container>\n\n<div class=\"page-header spaced-header\">\n  <h2>{{ \"designatedEmergencyContacts\" | i18n }}</h2>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"grantedContacts && grantedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of grantedContacts; let i = index\">\n      <td width=\"30\">\n        <app-avatar\n          [data]=\"c | userName\"\n          [email]=\"c.email\"\n          size=\"25\"\n          [circle]=\"true\"\n          [fontSize]=\"14\"\n        >\n        </app-avatar>\n      </td>\n      <td>\n        <span>{{ c.email }}</span>\n        <span bitBadge *ngIf=\"c.status === emergencyAccessStatusType.Invited\">{{\n          \"invited\" | i18n\n        }}</span>\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n          >{{ \"accepted\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"success\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\"\n          >{{ \"emergencyAccessRecoveryApproved\" | i18n }}</span\n        >\n\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.View\">{{ \"view\" | i18n }}</span>\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <button\n          [bitMenuTriggerFor]=\"grantedContactOptions\"\n          class=\"tw-border-none tw-bg-transparent tw-text-main\"\n          type=\"button\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu #grantedContactOptions>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Confirmed\"\n            (click)=\"requestAccess(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"requestAccess\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryApproved &&\n              c.type === emergencyAccessType.Takeover\n            \"\n            (click)=\"takeover(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n            {{ \"takeover\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryApproved &&\n              c.type === emergencyAccessType.View\n            \"\n            [routerLink]=\"c.id\"\n          >\n            <i class=\"bwi bwi-fw bwi-eye\" aria-hidden=\"true\"></i>\n            {{ \"view\" | i18n }}\n          </button>\n          <button bitMenuItem (click)=\"remove(c)\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n        </bit-menu>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!grantedContacts || !grantedContacts.length\">\n  <p *ngIf=\"loaded\">{{ \"noGrantedAccess\" | i18n }}</p>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</ng-container>\n\n<ng-template #addEdit></ng-template>\n<ng-template #takeoverTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmergencyAccessStatusType } from \"@bitwarden/common/enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"@bitwarden/common/enums/emergencyAccessType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EmergencyAccessConfirmRequest } from \"@bitwarden/common/models/request/emergencyAccessConfirmRequest\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n} from \"@bitwarden/common/models/response/emergencyAccessResponse\";\n\nimport { EmergencyAccessAddEditComponent } from \"./emergency-access-add-edit.component\";\nimport { EmergencyAccessConfirmComponent } from \"./emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"./emergency-access-takeover.component\";\n\n@Component({\n  selector: \"emergency-access\",\n  templateUrl: \"emergency-access.component.html\",\n})\nexport class EmergencyAccessComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"takeoverTemplate\", { read: ViewContainerRef, static: true })\n  takeoverModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  loaded = false;\n  canAccessPremium: boolean;\n  trustedContacts: EmergencyAccessGranteeDetailsResponse[];\n  grantedContacts: EmergencyAccessGrantorDetailsResponse[];\n  emergencyAccessType = EmergencyAccessType;\n  emergencyAccessStatusType = EmergencyAccessStatusType;\n  actionPromise: Promise<any>;\n  isOrganizationOwner: boolean;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const orgs = await this.organizationService.getAll();\n    this.isOrganizationOwner = orgs.some((o) => o.isOwner);\n    this.load();\n  }\n\n  async load() {\n    this.trustedContacts = (await this.apiService.getEmergencyAccessTrusted()).data;\n    this.grantedContacts = (await this.apiService.getEmergencyAccessGranted()).data;\n    this.loaded = true;\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  async edit(details: EmergencyAccessGranteeDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.emergencyAccessId = details?.id;\n        comp.readOnly = !this.canAccessPremium;\n        comp.onSaved.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeleted.subscribe(() => {\n          modal.close();\n          this.remove(details);\n        });\n      }\n    );\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  async reinvite(contact: EmergencyAccessGranteeDetailsResponse) {\n    if (this.actionPromise != null) {\n      return;\n    }\n    this.actionPromise = this.apiService.postEmergencyAccessReinvite(contact.id);\n    await this.actionPromise;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenReinvited\", contact.email)\n    );\n    this.actionPromise = null;\n  }\n\n  async confirm(contact: EmergencyAccessGranteeDetailsResponse) {\n    function updateUser() {\n      contact.status = EmergencyAccessStatusType.Confirmed;\n    }\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n    if (autoConfirm == null || !autoConfirm) {\n      const [modal] = await this.modalService.openViewRef(\n        EmergencyAccessConfirmComponent,\n        this.confirmModalRef,\n        (comp) => {\n          comp.name = this.userNamePipe.transform(contact);\n          comp.emergencyAccessId = contact.id;\n          comp.userId = contact?.granteeId;\n          comp.onConfirmed.subscribe(async () => {\n            modal.close();\n\n            comp.formPromise = this.doConfirmation(contact);\n            await comp.formPromise;\n\n            updateUser();\n            this.platformUtilsService.showToast(\n              \"success\",\n              null,\n              this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n            );\n          });\n        }\n      );\n      return;\n    }\n\n    this.actionPromise = this.doConfirmation(contact);\n    await this.actionPromise;\n    updateUser();\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n    );\n    this.actionPromise = null;\n  }\n\n  async remove(\n    details: EmergencyAccessGranteeDetailsResponse | EmergencyAccessGrantorDetailsResponse\n  ) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteEmergencyAccess(details.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(details))\n      );\n\n      if (details instanceof EmergencyAccessGranteeDetailsResponse) {\n        this.removeGrantee(details);\n      } else {\n        this.removeGrantor(details);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async requestAccess(details: EmergencyAccessGrantorDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"requestAccessConfirmation\", details.waitTimeDays.toString()),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"requestAccess\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessInitiate(details.id);\n\n    details.status = EmergencyAccessStatusType.RecoveryInitiated;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"requestSent\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async approve(details: EmergencyAccessGranteeDetailsResponse) {\n    const type = this.i18nService.t(\n      details.type === EmergencyAccessType.View ? \"view\" : \"takeover\"\n    );\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"approveAccessConfirmation\", this.userNamePipe.transform(details), type),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"approve\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessApprove(details.id);\n    details.status = EmergencyAccessStatusType.RecoveryApproved;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyApproved\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async reject(details: EmergencyAccessGranteeDetailsResponse) {\n    await this.apiService.postEmergencyAccessReject(details.id);\n    details.status = EmergencyAccessStatusType.Confirmed;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyRejected\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async takeover(details: EmergencyAccessGrantorDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessTakeoverComponent,\n      this.takeoverModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.email = details.email;\n        comp.emergencyAccessId = details != null ? details.id : null;\n\n        comp.onDone.subscribe(() => {\n          modal.close();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"passwordResetFor\", this.userNamePipe.transform(details))\n          );\n        });\n      }\n    );\n  }\n\n  private removeGrantee(details: EmergencyAccessGranteeDetailsResponse) {\n    const index = this.trustedContacts.indexOf(details);\n    if (index > -1) {\n      this.trustedContacts.splice(index, 1);\n    }\n  }\n\n  private removeGrantor(details: EmergencyAccessGrantorDetailsResponse) {\n    const index = this.grantedContacts.indexOf(details);\n    if (index > -1) {\n      this.grantedContacts.splice(index, 1);\n    }\n  }\n\n  // Encrypt the master password hash using the grantees public key, and send it to bitwarden for escrow.\n  private async doConfirmation(details: EmergencyAccessGranteeDetailsResponse) {\n    const encKey = await this.cryptoService.getEncKey();\n    const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n    const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n    try {\n      this.logService.debug(\n        \"User's fingerprint: \" +\n          (await this.cryptoService.getFingerprint(details.granteeId, publicKey.buffer)).join(\"-\")\n      );\n    } catch {\n      // Ignore errors since it's just a debug message\n    }\n\n    const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n    const request = new EmergencyAccessConfirmRequest();\n    request.key = encryptedKey.encryptedString;\n    await this.apiService.postEmergencyAccessConfirm(details.id, request);\n  }\n}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  UntypedFormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent implements ControlValueAccessor, Validator, OnInit {\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  get exceedsMinimumTimout(): boolean {\n    return (\n      !this.showCustom || this.customTimeInMinutes() > VaultTimeoutInputComponent.MIN_CUSTOM_MINUTES\n    );\n  }\n\n  static CUSTOM_VALUE = -100;\n  static MIN_CUSTOM_MINUTES = 0;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    if (await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout)) {\n      const vaultTimeoutPolicy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout);\n\n      this.vaultTimeoutPolicy = vaultTimeoutPolicy[0];\n      this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n      this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n      this.vaultTimeouts = this.vaultTimeouts.filter(\n        (t) =>\n          t.value <= this.vaultTimeoutPolicy.data.minutes &&\n          (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n          t.value != null\n      );\n      this.validatorChange();\n    }\n\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    // Empty\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Empty\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    if (!this.exceedsMinimumTimout) {\n      return { minTimeoutError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n\n  private customTimeInMinutes() {\n    return this.form.get(\"custom.hours\")?.value * 60 + this.form.get(\"custom.minutes\")?.value;\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"form-group\">\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n    <small class=\"form-text text-muted\">{{ \"vaultTimeoutDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\" *ngIf=\"showCustom\" formGroupName=\"custom\">\n    <label for=\"customVaultTimeout\">{{ \"customVaultTimeout\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n\n    <small *ngIf=\"!exceedsMinimumTimout\" class=\"tw-text-danger\">\n      <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i> {{ \"vaultCustomTimeoutMinimum\" | i18n }}\n    </small>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"@bitwarden/angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<div class=\"page-header\">\n  <h1>{{ \"preferences\" | i18n }}</h1>\n</div>\n<p>{{ \"preferencesDesc\" | i18n }}</p>\n<form (ngSubmit)=\"submit()\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label>{{ \"vaultTimeoutAction\" | i18n }}</label>\n    <div class=\"form-check form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLock\"\n        value=\"lock\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLock\">\n        {{ \"lock\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLockDesc\" | i18n }}</small>\n      </label>\n    </div>\n    <div class=\"form-check mt-2 form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLogOut\"\n        value=\"logOut\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n        (ngModelChange)=\"vaultTimeoutActionChanged($event)\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLogOut\">\n        {{ \"logOut\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLogOutDesc\" | i18n }}</small>\n      </label>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <div class=\"d-flex\">\n          <label for=\"locale\">{{ \"language\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/localization/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <select id=\"locale\" name=\"Locale\" [(ngModel)]=\"locale\" class=\"form-control\">\n          <option *ngFor=\"let o of localeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"languageDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFavicons\"\n        name=\"enableFavicons\"\n        [(ngModel)]=\"enableFavicons\"\n      />\n      <label class=\"form-check-label\" for=\"enableFavicons\">\n        {{ \"enableFavicon\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/website-icons/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"faviconDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableGravatars\"\n        name=\"enableGravatars\"\n        [(ngModel)]=\"enableGravatars\"\n      />\n      <label class=\"form-check-label\" for=\"enableGravatars\">\n        {{ \"enableGravatars\" | i18n }}\n      </label>\n      <a\n        href=\"https://gravatar.com/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"enableGravatarsDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFullWidth\"\n        name=\"enableFullWidth\"\n        [(ngModel)]=\"enableFullWidth\"\n      />\n      <label class=\"form-check-label\" for=\"enableFullWidth\">\n        {{ \"enableFullWidth\" | i18n }}\n      </label>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"enableFullWidthDesc\" | i18n }}</small>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n        <select id=\"theme\" name=\"theme\" [(ngModel)]=\"theme\" class=\"form-control\">\n          <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"themeDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormControl } from \"@angular/forms\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-preferences\",\n  templateUrl: \"preferences.component.html\",\n})\nexport class PreferencesComponent implements OnInit {\n  vaultTimeoutAction = \"lock\";\n  enableFavicons: boolean;\n  enableGravatars: boolean;\n  enableFullWidth: boolean;\n  theme: ThemeType;\n  locale: string;\n  vaultTimeouts: { name: string; value: number }[];\n  localeOptions: any[];\n  themeOptions: any[];\n\n  vaultTimeout: UntypedFormControl = new UntypedFormControl(null);\n\n  private startingLocale: string;\n  private startingTheme: ThemeType;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private themingService: AbstractThemingService\n  ) {\n    this.vaultTimeouts = [\n      { name: i18nService.t(\"oneMinute\"), value: 1 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: i18nService.t(\"oneHour\"), value: 60 },\n      { name: i18nService.t(\"fourHours\"), value: 240 },\n      { name: i18nService.t(\"onRefresh\"), value: -1 },\n    ];\n    if (this.platformUtilsService.isDev()) {\n      this.vaultTimeouts.push({ name: i18nService.t(\"never\"), value: null });\n    }\n\n    const localeOptions: any[] = [];\n    i18nService.supportedTranslationLocales.forEach((locale) => {\n      let name = locale;\n      if (i18nService.localeNames.has(locale)) {\n        name += \" - \" + i18nService.localeNames.get(locale);\n      }\n      localeOptions.push({ name: name, value: locale });\n    });\n    localeOptions.sort(Utils.getSortFunction(i18nService, \"name\"));\n    localeOptions.splice(0, 0, { name: i18nService.t(\"default\"), value: null });\n    this.localeOptions = localeOptions;\n    this.themeOptions = [\n      { name: i18nService.t(\"themeLight\"), value: ThemeType.Light },\n      { name: i18nService.t(\"themeDark\"), value: ThemeType.Dark },\n      { name: i18nService.t(\"themeSystem\"), value: ThemeType.System },\n    ];\n  }\n\n  async ngOnInit() {\n    this.vaultTimeout.setValue(await this.vaultTimeoutService.getVaultTimeout());\n    this.vaultTimeoutAction = await this.stateService.getVaultTimeoutAction();\n    this.enableFavicons = !(await this.stateService.getDisableFavicon());\n    this.enableGravatars = await this.stateService.getEnableGravitars();\n    this.enableFullWidth = await this.stateService.getEnableFullWidth();\n\n    this.locale = (await this.stateService.getLocale()) ?? null;\n    this.startingLocale = this.locale;\n\n    this.theme = await this.stateService.getTheme();\n    this.startingTheme = this.theme;\n  }\n\n  async submit() {\n    if (!this.vaultTimeout.valid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"vaultTimeoutRangeError\")\n      );\n      return;\n    }\n\n    await this.vaultTimeoutService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    await this.stateService.setDisableFavicon(!this.enableFavicons);\n    await this.stateService.setEnableGravitars(this.enableGravatars);\n    await this.stateService.setEnableFullWidth(this.enableFullWidth);\n    this.messagingService.send(\"setFullWidth\");\n    if (this.theme !== this.startingTheme) {\n      await this.themingService.updateConfiguredTheme(this.theme);\n      this.startingTheme = this.theme;\n    }\n    await this.stateService.setLocale(this.locale);\n    if (this.locale !== this.startingLocale) {\n      window.location.reload();\n    } else {\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"preferencesUpdated\")\n      );\n    }\n  }\n\n  async vaultTimeoutActionChanged(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutAction = \"lock\";\n        return;\n      }\n    }\n    this.vaultTimeoutAction = newValue;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nimport { FolderRequest } from \"./folderRequest\";\n\nexport class FolderWithIdRequest extends FolderRequest {\n  id: string;\n\n  constructor(folder: Folder) {\n    super(folder);\n    this.id = folder.id;\n  }\n}\n","import { Send } from \"../domain/send\";\n\nimport { SendRequest } from \"./sendRequest\";\n\nexport class SendWithIdRequest extends SendRequest {\n  id: string;\n\n  constructor(send: Send) {\n    super(send);\n    this.id = send.id;\n  }\n}\n","import { CipherWithIdRequest } from \"./cipherWithIdRequest\";\nimport { FolderWithIdRequest } from \"./folderWithIdRequest\";\nimport { SendWithIdRequest } from \"./sendWithIdRequest\";\n\nexport class UpdateKeyRequest {\n  ciphers: CipherWithIdRequest[] = [];\n  folders: FolderWithIdRequest[] = [];\n  sends: SendWithIdRequest[] = [];\n  masterPasswordHash: string;\n  privateKey: string;\n  key: string;\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"changeMasterPassword\" | i18n }}</h1>\n</div>\n\n<bit-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</bit-callout>\n<app-callout\n  type=\"info\"\n  [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n  *ngIf=\"enforcedPolicyOptions\"\n>\n</app-callout>\n\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n        <input\n          id=\"currentMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"currentMasterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n        <input\n          id=\"newMasterPassword\"\n          type=\"password\"\n          name=\"NewMasterPasswordHash\"\n          class=\"form-control mb-1\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n        <app-password-strength\n          [password]=\"masterPassword\"\n          [email]=\"email\"\n          [showText]=\"true\"\n          (passwordStrengthResult)=\"getStrengthResult($event)\"\n        >\n        </app-password-strength>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n        <input\n          id=\"masterPasswordRetype\"\n          type=\"password\"\n          name=\"MasterPasswordRetype\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPasswordRetype\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"masterPasswordHint\">{{ \"masterPassHintLabel\" | i18n }}</label>\n    <input\n      id=\"masterPasswordHint\"\n      class=\"form-control\"\n      maxlength=\"50\"\n      type=\"text\"\n      name=\"MasterPasswordHint\"\n      [(ngModel)]=\"masterPasswordHint\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"rotateEncKey\"\n        name=\"RotateEncKey\"\n        [(ngModel)]=\"rotateEncKey\"\n        (change)=\"rotateEncKeyClicked()\"\n      />\n      <label class=\"form-check-label\" for=\"rotateEncKey\">\n        {{ \"rotateAccountEncKey\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n  </div>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"changeMasterPassword\" | i18n }}\n  </bit-submit-button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"@bitwarden/angular/components/change-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { EmergencyAccessStatusType } from \"@bitwarden/common/enums/emergencyAccessStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { CipherWithIdRequest } from \"@bitwarden/common/models/request/cipherWithIdRequest\";\nimport { EmergencyAccessUpdateRequest } from \"@bitwarden/common/models/request/emergencyAccessUpdateRequest\";\nimport { FolderWithIdRequest } from \"@bitwarden/common/models/request/folderWithIdRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { PasswordRequest } from \"@bitwarden/common/models/request/passwordRequest\";\nimport { SendWithIdRequest } from \"@bitwarden/common/models/request/sendWithIdRequest\";\nimport { UpdateKeyRequest } from \"@bitwarden/common/models/request/updateKeyRequest\";\n\n@Component({\n  selector: \"app-change-password\",\n  templateUrl: \"change-password.component.html\",\n})\nexport class ChangePasswordComponent extends BaseChangePasswordComponent {\n  rotateEncKey = false;\n  currentMasterPassword: string;\n  masterPasswordHint: string;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private syncService: SyncService,\n    private apiService: ApiService,\n    private sendService: SendService,\n    private organizationService: OrganizationService,\n    private keyConnectorService: KeyConnectorService,\n    private router: Router\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      this.router.navigate([\"/settings/security/two-factor\"]);\n    }\n\n    this.masterPasswordHint = (await this.apiService.getProfile()).masterPasswordHint;\n    await super.ngOnInit();\n  }\n\n  async rotateEncKeyClicked() {\n    if (this.rotateEncKey) {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      let hasOldAttachments = false;\n      if (ciphers != null) {\n        for (let i = 0; i < ciphers.length; i++) {\n          if (ciphers[i].organizationId == null && ciphers[i].hasOldAttachments) {\n            hasOldAttachments = true;\n            break;\n          }\n        }\n      }\n\n      if (hasOldAttachments) {\n        const learnMore = await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"oldAttachmentsNeedFixDesc\"),\n          null,\n          this.i18nService.t(\"learnMore\"),\n          this.i18nService.t(\"close\"),\n          \"warning\"\n        );\n        if (learnMore) {\n          this.platformUtilsService.launchUri(\n            \"https://bitwarden.com/help/attachments/#add-storage-space\"\n          );\n        }\n        this.rotateEncKey = false;\n        return;\n      }\n\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateEncryptionKeyWarning\") +\n          \" \" +\n          this.i18nService.t(\"updateEncryptionKeyExportWarning\") +\n          \" \" +\n          this.i18nService.t(\"rotateEncKeyConfirmation\"),\n        this.i18nService.t(\"rotateEncKeyTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        this.rotateEncKey = false;\n      }\n    }\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    await super.submit();\n  }\n\n  async setupSubmitActions() {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n\n    if (this.rotateEncKey) {\n      await this.syncService.fullSync(true);\n    }\n\n    return super.setupSubmitActions();\n  }\n\n  async performSubmitActions(\n    newMasterPasswordHash: string,\n    newKey: SymmetricCryptoKey,\n    newEncKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const request = new PasswordRequest();\n    request.masterPasswordHash = await this.cryptoService.hashPassword(\n      this.currentMasterPassword,\n      null\n    );\n    request.masterPasswordHint = this.masterPasswordHint;\n    request.newMasterPasswordHash = newMasterPasswordHash;\n    request.key = newEncKey[1].encryptedString;\n\n    try {\n      if (this.rotateEncKey) {\n        this.formPromise = this.apiService.postPassword(request).then(() => {\n          return this.updateKey(newKey, request.newMasterPasswordHash);\n        });\n      } else {\n        this.formPromise = this.apiService.postPassword(request);\n      }\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  private async updateKey(key: SymmetricCryptoKey, masterPasswordHash: string) {\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = masterPasswordHash;\n\n    const folders = await firstValueFrom(this.folderService.folderViews$);\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    const sends = await this.sendService.getAll();\n    await Promise.all(\n      sends.map(async (send) => {\n        const cryptoKey = await this.cryptoService.decryptToBytes(send.key, null);\n        send.key = (await this.cryptoService.encrypt(cryptoKey, encKey[0])) ?? send.key;\n        request.sends.push(new SendWithIdRequest(send));\n      })\n    );\n\n    await this.apiService.postAccountKey(request);\n\n    await this.updateEmergencyAccesses(encKey[0]);\n\n    await this.updateAllResetPasswordKeys(encKey[0], masterPasswordHash);\n  }\n\n  private async updateEmergencyAccesses(encKey: SymmetricCryptoKey) {\n    const emergencyAccess = await this.apiService.getEmergencyAccessTrusted();\n    const allowedStatuses = [\n      EmergencyAccessStatusType.Confirmed,\n      EmergencyAccessStatusType.RecoveryInitiated,\n      EmergencyAccessStatusType.RecoveryApproved,\n    ];\n\n    const filteredAccesses = emergencyAccess.data.filter((d) => allowedStatuses.includes(d.status));\n\n    for (const details of filteredAccesses) {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      const updateRequest = new EmergencyAccessUpdateRequest();\n      updateRequest.type = details.type;\n      updateRequest.waitTimeDays = details.waitTimeDays;\n      updateRequest.keyEncrypted = encryptedKey.encryptedString;\n\n      await this.apiService.putEmergencyAccess(details.id, updateRequest);\n    }\n  }\n\n  private async updateAllResetPasswordKeys(encKey: SymmetricCryptoKey, masterPasswordHash: string) {\n    const orgs = await this.organizationService.getAll();\n\n    for (const org of orgs) {\n      // If not already enrolled, skip\n      if (!org.resetPasswordEnrolled) {\n        continue;\n      }\n\n      // Retrieve public key\n      const response = await this.apiService.getOrganizationKeys(org.id);\n      const publicKey = Utils.fromB64ToArray(response?.publicKey);\n\n      // Re-enroll - encrpyt user's encKey.key with organization public key\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Create/Execute request\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.masterPasswordHash = masterPasswordHash;\n      request.resetPasswordKey = encryptedKey.encryptedString;\n\n      await this.apiService.putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request);\n    }\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { PasswordRequest } from \"./passwordRequest\";\n\nexport class KdfRequest extends PasswordRequest {\n  kdf: KdfType;\n  kdfIterations: number;\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"encKeySettings\" | i18n }}</h1>\n</div>\n<bit-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</bit-callout>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"kdfMasterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"kdfMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdf\">{{ \"kdfAlgorithm\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://en.wikipedia.org/wiki/Key_derivation_function\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <select id=\"kdf\" name=\"Kdf\" [(ngModel)]=\"kdf\" class=\"form-control\" required>\n          <option *ngFor=\"let o of kdfOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdfIterations\">{{ \"kdfIterations\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://bitwarden.com/help/what-encryption-is-used/#pbkdf2\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <input\n          id=\"kdfIterations\"\n          type=\"number\"\n          min=\"5000\"\n          max=\"2000000\"\n          name=\"KdfIterations\"\n          class=\"form-control\"\n          [(ngModel)]=\"kdfIterations\"\n          required\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <div class=\"small form-text text-muted\">\n          <p>{{ \"kdfIterationsDesc\" | i18n: (recommendedKdfIterations | number) }}</p>\n          <strong>{{ \"warning\" | i18n }}</strong\n          >: {{ \"kdfIterationsWarning\" | i18n: (50000 | number) }}\n        </div>\n      </div>\n    </div>\n  </div>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"changeKdf\" | i18n }}\n  </bit-submit-button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { KdfRequest } from \"@bitwarden/common/models/request/kdfRequest\";\n\n@Component({\n  selector: \"app-change-kdf\",\n  templateUrl: \"change-kdf.component.html\",\n})\nexport class ChangeKdfComponent implements OnInit {\n  masterPassword: string;\n  kdfIterations: number;\n  kdf = KdfType.PBKDF2_SHA256;\n  kdfOptions: any[] = [];\n  formPromise: Promise<any>;\n  recommendedKdfIterations = DEFAULT_KDF_ITERATIONS;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.kdfOptions = [{ name: \"PBKDF2 SHA-256\", value: KdfType.PBKDF2_SHA256 }];\n  }\n\n  async ngOnInit() {\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    const request = new KdfRequest();\n    request.kdf = this.kdf;\n    request.kdfIterations = this.kdfIterations;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n    const email = await this.stateService.getEmail();\n    const newKey = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email,\n      this.kdf,\n      this.kdfIterations\n    );\n    request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      newKey\n    );\n    const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n    request.key = newEncKey[1].encryptedString;\n    try {\n      this.formPromise = this.apiService.postAccountKdf(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"encKeySettingsChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<app-change-kdf *ngIf=\"showChangeKdf\"></app-change-kdf>\n<div\n  [ngClass]=\"{ 'tabbed-header': !showChangeKdf, 'secondary-header': showChangeKdf }\"\n  class=\"border-0 mb-0\"\n>\n  <h1>{{ \"apiKey\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"userApiKeyDesc\" | i18n }}\n</p>\n<button bitButton buttonType=\"secondary\" (click)=\"viewUserApiKey()\">\n  {{ \"viewApiKey\" | i18n }}\n</button>\n<button bitButton buttonType=\"secondary\" (click)=\"rotateUserApiKey()\">\n  {{ \"rotateApiKey\" | i18n }}\n</button>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { ApiKeyComponent } from \"./api-key.component\";\n\n@Component({\n  selector: \"app-security-keys\",\n  templateUrl: \"security-keys.component.html\",\n})\nexport class SecurityKeysComponent implements OnInit {\n  @ViewChild(\"viewUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  viewUserApiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateUserApiKeyModalRef: ViewContainerRef;\n\n  showChangeKdf = true;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private modalService: ModalService,\n    private apiService: ApiService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeKdf = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async viewUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.viewUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"userApiKeyDesc\";\n    });\n  }\n\n  async rotateUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.isRotation = true;\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserRotateApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div class=\"tabbed-nav d-flex flex-column\">\n  <ul class=\"nav nav-tabs\">\n    <ng-container *ngIf=\"showChangePassword\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"change-password\" routerLinkActive=\"active\">\n          {{ \"masterPassword\" | i18n }}\n        </a>\n      </li>\n    </ng-container>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"two-factor\" routerLinkActive=\"active\">\n        {{ \"twoStepLogin\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"security-keys\" routerLinkActive=\"active\">\n        {{ \"keys\" | i18n }}\n      </a>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\n\n@Component({\n  selector: \"app-security\",\n  templateUrl: \"security.component.html\",\n})\nexport class SecurityComponent {\n  showChangePassword = true;\n\n  constructor(private keyConnectorService: KeyConnectorService) {}\n\n  async ngOnInit() {\n    this.showChangePassword = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { ChangePasswordComponent } from \"./change-password.component\";\nimport { SecurityKeysComponent } from \"./security-keys.component\";\nimport { SecurityComponent } from \"./security.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SecurityComponent,\n    data: { titleId: \"security\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"change-password\" },\n      {\n        path: \"change-password\",\n        component: ChangePasswordComponent,\n        data: { titleId: \"masterPassword\" },\n      },\n      {\n        path: \"two-factor\",\n        component: TwoFactorSetupComponent,\n        data: { titleId: \"twoStepLogin\" },\n      },\n      {\n        path: \"security-keys\",\n        component: SecurityKeysComponent,\n        data: { titleId: \"keys\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SecurityRoutingModule {}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"accountSettings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myAccount\" | i18n }}\n          </a>\n          <a routerLink=\"security\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"security\" | i18n }}\n          </a>\n          <a routerLink=\"preferences\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"preferences\" | i18n }}\n          </a>\n          <a\n            routerLink=\"subscription\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"!hideSubscription\"\n          >\n            {{ \"subscription\" | i18n }}\n          </a>\n          <a routerLink=\"domain-rules\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"domainRules\" | i18n }}\n          </a>\n          <a routerLink=\"emergency-access\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"emergencyAccess\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sponsored-families\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"hasFamilySponsorshipAvailable\"\n          >\n            {{ \"sponsoredFamilies\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\nimport { StateService } from \"../core\";\n\nconst BroadcasterSubscriptionId = \"SettingsComponent\";\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  premium: boolean;\n  selfHosted: boolean;\n  hasFamilySponsorshipAvailable: boolean;\n  hideSubscription: boolean;\n\n  constructor(\n    private tokenService: TokenService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  async ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"purchasedPremium\":\n            await this.load();\n            break;\n          default:\n        }\n      });\n    });\n\n    this.selfHosted = await this.platformUtilsService.isSelfHost();\n    await this.load();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    this.premium = await this.stateService.getHasPremiumPersonally();\n    this.hasFamilySponsorshipAvailable = await this.organizationService.canManageSponsorships();\n    const hasPremiumFromOrg = await this.stateService.getHasPremiumFromOrganization();\n    let billing = null;\n    if (!this.selfHosted) {\n      billing = await this.apiService.getUserBillingHistory();\n    }\n    this.hideSubscription =\n      !this.premium && hasPremiumFromOrg && (this.selfHosted || billing?.hasNoHistory);\n  }\n}\n","import { AbstractControl, AsyncValidatorFn, ValidationErrors } from \"@angular/forms\";\n\nexport function notAllowedValueAsync(\n  valueGetter: () => Promise<string>,\n  caseInsensitive = false\n): AsyncValidatorFn {\n  return async (control: AbstractControl): Promise<ValidationErrors | null> => {\n    let notAllowedValue = await valueGetter();\n    let controlValue = control.value;\n    if (caseInsensitive) {\n      notAllowedValue = notAllowedValue.toLowerCase();\n      controlValue = controlValue.toLowerCase();\n    }\n\n    if (controlValue === notAllowedValue) {\n      return {\n        notAllowedValue: true,\n      };\n    }\n  };\n}\n","<td>\n  {{ sponsoringOrg.familySponsorshipFriendlyName }}\n</td>\n<td>{{ sponsoringOrg.name }}</td>\n<td>\n  <span [ngClass]=\"statusClass\">{{ statusMessage }}</span>\n</td>\n<td class=\"table-action-right\">\n  <div class=\"dropdown\" appListDropdown>\n    <button\n      *ngIf=\"!sponsoringOrg.familySponsorshipToDelete\"\n      class=\"btn btn-outline-secondary dropdown-toggle\"\n      type=\"button\"\n      id=\"dropdownMenuButton\"\n      data-toggle=\"dropdown\"\n      aria-haspopup=\"true\"\n      aria-expanded=\"false\"\n      appA11yTitle=\"{{ 'options' | i18n }}\"\n    >\n      <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n    </button>\n    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n      <button\n        #resendEmailBtn\n        *ngIf=\"!isSelfHosted && !sponsoringOrg.familySponsorshipValidUntil\"\n        [appApiAction]=\"resendEmailPromise\"\n        class=\"dropdown-item btn-submit\"\n        [disabled]=\"resendEmailBtn.loading\"\n        (click)=\"resendEmail()\"\n        [attr.aria-label]=\"'resendEmailLabel' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"resendEmail\" | i18n }}</span>\n      </button>\n      <button\n        #revokeSponsorshipBtn\n        [appApiAction]=\"revokeSponsorshipPromise\"\n        class=\"dropdown-item text-danger btn-submit\"\n        [disabled]=\"revokeSponsorshipBtn.loading\"\n        (click)=\"revokeSponsorship()\"\n        [attr.aria-label]=\"'revokeAccount' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"remove\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</td>\n","import { formatDate } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output, OnInit } from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"[sponsoring-org-row]\",\n  templateUrl: \"sponsoring-org-row.component.html\",\n})\nexport class SponsoringOrgRowComponent implements OnInit {\n  @Input() sponsoringOrg: Organization = null;\n  @Input() isSelfHosted = false;\n\n  @Output() sponsorshipRemoved = new EventEmitter();\n\n  statusMessage = \"loading\";\n  statusClass: \"text-success\" | \"text-danger\" = \"text-success\";\n\n  revokeSponsorshipPromise: Promise<any>;\n  resendEmailPromise: Promise<any>;\n\n  private locale = \"\";\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private logService: LogService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    this.locale = await firstValueFrom(this.i18nService.locale$);\n\n    this.setStatus(\n      this.isSelfHosted,\n      this.sponsoringOrg.familySponsorshipToDelete,\n      this.sponsoringOrg.familySponsorshipValidUntil,\n      this.sponsoringOrg.familySponsorshipLastSyncDate\n    );\n  }\n\n  async revokeSponsorship() {\n    try {\n      this.revokeSponsorshipPromise = this.doRevokeSponsorship();\n      await this.revokeSponsorshipPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.revokeSponsorshipPromise = null;\n  }\n\n  async resendEmail() {\n    this.resendEmailPromise = this.apiService.postResendSponsorshipOffer(this.sponsoringOrg.id);\n    await this.resendEmailPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailSent\"));\n    this.resendEmailPromise = null;\n  }\n\n  get isSentAwaitingSync() {\n    return this.isSelfHosted && !this.sponsoringOrg.familySponsorshipLastSyncDate;\n  }\n\n  private async doRevokeSponsorship() {\n    const isConfirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"revokeSponsorshipConfirmation\"),\n      `${this.i18nService.t(\"remove\")} ${this.sponsoringOrg.familySponsorshipFriendlyName}?`,\n      this.i18nService.t(\"remove\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    await this.apiService.deleteRevokeSponsorship(this.sponsoringOrg.id);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reclaimedFreePlan\"));\n    this.sponsorshipRemoved.emit();\n  }\n\n  private setStatus(\n    selfHosted: boolean,\n    toDelete?: boolean,\n    validUntil?: Date,\n    lastSyncDate?: Date\n  ) {\n    /*\n     * Possible Statuses:\n     * Requested (self-hosted only)\n     * Sent\n     * Active\n     * RequestRevoke\n     * RevokeWhenExpired\n     */\n\n    if (toDelete && validUntil) {\n      // They want to delete but there is a valid until date which means there is an active sponsorship\n      this.statusMessage = this.i18nService.t(\n        \"revokeWhenExpired\",\n        formatDate(validUntil, \"MM/dd/yyyy\", this.locale)\n      );\n      this.statusClass = \"text-danger\";\n    } else if (toDelete) {\n      // They want to delete and we don't have a valid until date so we can\n      // this should only happen on a self-hosted install\n      this.statusMessage = this.i18nService.t(\"requestRemoved\");\n      this.statusClass = \"text-danger\";\n    } else if (validUntil) {\n      // They don't want to delete and they have a valid until date\n      // that means they are actively sponsoring someone\n      this.statusMessage = this.i18nService.t(\"active\");\n      this.statusClass = \"text-success\";\n    } else if (selfHosted && lastSyncDate) {\n      // We are on a self-hosted install and it has been synced but we have not gotten\n      // a valid until date so we can't know if they are actively sponsoring someone\n      this.statusMessage = this.i18nService.t(\"sent\");\n      this.statusClass = \"text-success\";\n    } else if (!selfHosted) {\n      // We are in cloud and all other status checks have been false therefore we have\n      // sent the request but it hasn't been accepted yet\n      this.statusMessage = this.i18nService.t(\"sent\");\n      this.statusClass = \"text-success\";\n    } else {\n      // We are on a self-hosted install and we have not synced yet\n      this.statusMessage = this.i18nService.t(\"requested\");\n      this.statusClass = \"text-success\";\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"sponsoredFamilies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"!loading\">\n  <p>\n    {{ \"sponsoredFamiliesEligible\" | i18n }}\n  </p>\n  <div>\n    {{ \"sponsoredFamiliesInclude\" | i18n }}:\n    <ul class=\"inset-list\">\n      <li>{{ \"sponsoredFamiliesPremiumAccess\" | i18n }}</li>\n      <li>{{ \"sponsoredFamiliesSharedCollections\" | i18n }}</li>\n    </ul>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    [formGroup]=\"sponsorshipForm\"\n    ngNativeValidate\n    *ngIf=\"anyOrgsAvailable\"\n  >\n    <div class=\"form-group col-7\">\n      <label for=\"availableSponsorshipOrg\">{{ \"familiesSponsoringOrgSelect\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        formControlName=\"selectedSponsorshipOrgId\"\n        class=\"form-control\"\n        required\n      >\n        <option disabled=\"true\" value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option *ngFor=\"let o of availableSponsorshipOrgs\" [ngValue]=\"o.id\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div class=\"form-group col-7\">\n      <label for=\"sponsorshipEmail\">{{ \"sponsoredFamiliesEmail\" | i18n }}:</label>\n      <input\n        id=\"sponsorshipEmail\"\n        class=\"form-control\"\n        inputmode=\"email\"\n        formControlName=\"sponsorshipEmail\"\n        name=\"sponsorshipEmail\"\n        required\n        [attr.aria-invalid]=\"sponsorshipEmailControl.invalid\"\n      />\n      <small\n        aria-errormessage=\"sponsorshipEmail\"\n        *ngIf=\"sponsorshipEmailControl.errors?.notAllowedValue\"\n        class=\"error-inline\"\n        role=\"alert\"\n      >\n        <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i>\n        {{ \"cannotSponsorSelf\" | i18n }}\n      </small>\n      <small\n        aria-errormessage=\"sponsorshipEmail\"\n        *ngIf=\"sponsorshipEmailControl.errors?.email\"\n        class=\"error-inline\"\n        role=\"alert\"\n      >\n        <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i>\n        {{ \"invalidEmail\" | i18n }}\n      </small>\n    </div>\n    <div class=\"form-group col-7\">\n      <button class=\"btn btn-primary btn-submit mt-2\" type=\"submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"redeem\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n  <ng-container *ngIf=\"anyActiveSponsorships\">\n    <div class=\"border-bottom\">\n      <table class=\"table table-hover table-list\">\n        <thead>\n          <tr>\n            <th>{{ \"recipient\" | i18n }}</th>\n            <th>{{ \"sponsoringOrg\" | i18n }}</th>\n            <th>{{ \"status\" | i18n }}</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <ng-container *ngFor=\"let o of activeSponsorshipOrgs\">\n            <tr\n              sponsoring-org-row\n              [sponsoringOrg]=\"o\"\n              [isSelfHosted]=\"isSelfHosted\"\n              (sponsorshipRemoved)=\"load(true)\"\n            ></tr>\n          </ng-container>\n        </tbody>\n      </table>\n    </div>\n    <small>{{ \"sponsoredFamiliesLeaveCopy\" | i18n }}</small>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from \"@angular/forms\";\n\nimport { notAllowedValueAsync } from \"@bitwarden/angular/validators/notAllowedValueAsync.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { PlanSponsorshipType } from \"@bitwarden/common/enums/planSponsorshipType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-sponsored-families\",\n  templateUrl: \"sponsored-families.component.html\",\n})\nexport class SponsoredFamiliesComponent implements OnInit {\n  loading = false;\n\n  availableSponsorshipOrgs: Organization[] = [];\n  activeSponsorshipOrgs: Organization[] = [];\n\n  // Conditional display properties\n  formPromise: Promise<any>;\n\n  sponsorshipForm: UntypedFormGroup;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService,\n    private formBuilder: UntypedFormBuilder,\n    private stateService: StateService\n  ) {\n    this.sponsorshipForm = this.formBuilder.group({\n      selectedSponsorshipOrgId: [\n        \"\",\n        {\n          validators: [Validators.required],\n        },\n      ],\n      sponsorshipEmail: [\n        \"\",\n        {\n          validators: [Validators.email],\n          asyncValidators: [\n            notAllowedValueAsync(async () => await this.stateService.getEmail(), true),\n          ],\n          updateOn: \"blur\",\n        },\n      ],\n    });\n  }\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async submit() {\n    this.formPromise = this.apiService.postCreateSponsorship(\n      this.sponsorshipForm.value.selectedSponsorshipOrgId,\n      {\n        sponsoredEmail: this.sponsorshipForm.value.sponsorshipEmail,\n        planSponsorshipType: PlanSponsorshipType.FamiliesForEnterprise,\n        friendlyName: this.sponsorshipForm.value.sponsorshipEmail,\n      }\n    );\n\n    await this.formPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"sponsorshipCreated\"));\n    this.formPromise = null;\n    this.resetForm();\n    await this.load(true);\n  }\n\n  async load(forceReload = false) {\n    if (this.loading) {\n      return;\n    }\n\n    this.loading = true;\n    if (forceReload) {\n      await this.syncService.fullSync(true);\n    }\n\n    const allOrgs = await this.organizationService.getAll();\n    this.availableSponsorshipOrgs = allOrgs.filter((org) => org.familySponsorshipAvailable);\n\n    this.activeSponsorshipOrgs = allOrgs.filter(\n      (org) => org.familySponsorshipFriendlyName !== null\n    );\n\n    if (this.availableSponsorshipOrgs.length === 1) {\n      this.sponsorshipForm.patchValue({\n        selectedSponsorshipOrgId: this.availableSponsorshipOrgs[0].id,\n      });\n    }\n    this.loading = false;\n  }\n\n  get sponsorshipEmailControl() {\n    return this.sponsorshipForm.controls[\"sponsorshipEmail\"];\n  }\n\n  private async resetForm() {\n    this.sponsorshipForm.reset();\n  }\n\n  get anyActiveSponsorships(): boolean {\n    return this.activeSponsorshipOrgs.length > 0;\n  }\n\n  get anyOrgsAvailable(): boolean {\n    return this.availableSponsorshipOrgs.length > 0;\n  }\n\n  get isSelfHosted(): boolean {\n    return this.platformUtilsService.isSelfHost();\n  }\n}\n","<div class=\"tabbed-header d-flex\">\n  <h1>\n    {{ \"paymentMethod\" | i18n }}\n  </h1>\n  <button\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ (isCreditBalance ? \"accountCredit\" : \"accountBalance\") | i18n }}</h2>\n  <p class=\"text-lg\">\n    <strong>{{ creditOrBalance | currency: \"$\" }}</strong>\n  </p>\n  <p>{{ \"creditAppliedDesc\" | i18n }}</p>\n  <button bitButton buttonType=\"secondary\" (click)=\"addCredit()\" *ngIf=\"!showAddCredit\">\n    {{ \"addCredit\" | i18n }}\n  </button>\n  <app-add-credit\n    (onAdded)=\"closeAddCredit(true)\"\n    (onCanceled)=\"closeAddCredit(false)\"\n    *ngIf=\"showAddCredit\"\n  >\n  </app-add-credit>\n  <h2 class=\"spaced-header\">{{ \"paymentMethod\" | i18n }}</h2>\n  <p *ngIf=\"!paymentSource\">{{ \"noPaymentMethod\" | i18n }}</p>\n  <ng-container *ngIf=\"paymentSource\">\n    <p>\n      <i\n        class=\"bwi bwi-fw\"\n        [ngClass]=\"{\n          'bwi-credit-card': paymentSource.type === paymentMethodType.Card,\n          'bwi-bank': paymentSource.type === paymentMethodType.BankAccount,\n          'bwi-money': paymentSource.type === paymentMethodType.Check,\n          'bwi-paypal text-primary': paymentSource.type === paymentMethodType.PayPal,\n          'bwi-apple text-muted': paymentSource.type === paymentMethodType.AppleInApp,\n          'bwi-google text-muted': paymentSource.type === paymentMethodType.GoogleInApp\n        }\"\n      ></i>\n      <span *ngIf=\"paymentSourceInApp\">{{ \"inAppPurchase\" | i18n }}</span>\n      {{ paymentSource.description }}\n    </p>\n  </ng-container>\n  <button bitButton buttonType=\"secondary\" (click)=\"changePayment()\" *ngIf=\"!showAdjustPayment\">\n    {{ (paymentSource ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n  </button>\n  <app-adjust-payment\n    [currentType]=\"paymentSource != null ? paymentSource.type : null\"\n    (onAdjusted)=\"closePayment(true)\"\n    (onCanceled)=\"closePayment(false)\"\n    *ngIf=\"showAdjustPayment\"\n  >\n  </app-adjust-payment>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { BillingPaymentResponse } from \"@bitwarden/common/models/response/billingPaymentResponse\";\n\n@Component({\n  selector: \"app-payment-method\",\n  templateUrl: \"payment-method.component.html\",\n})\nexport class PaymentMethodComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  showAdjustPayment = false;\n  showAddCredit = false;\n  billing: BillingPaymentResponse;\n  paymentMethodType = PaymentMethodType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    if (this.platformUtilsService.isSelfHost()) {\n      this.router.navigate([\"/settings/subscription\"]);\n    }\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    this.billing = await this.apiService.getUserBillingPayment();\n    this.loading = false;\n  }\n\n  addCredit() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"addCredit\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAddCredit = true;\n  }\n\n  closeAddCredit(load: boolean) {\n    this.showAddCredit = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  changePayment() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"changePaymentMethod\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAdjustPayment = true;\n  }\n\n  closePayment(load: boolean) {\n    this.showAdjustPayment = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get isCreditBalance() {\n    return this.billing == null || this.billing.balance <= 0;\n  }\n\n  get creditOrBalance() {\n    return Math.abs(this.billing != null ? this.billing.balance : 0);\n  }\n\n  get paymentSource() {\n    return this.billing != null ? this.billing.paymentSource : null;\n  }\n\n  get paymentSourceInApp() {\n    return (\n      this.paymentSource != null &&\n      (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n        this.paymentSource.type === PaymentMethodType.GoogleInApp)\n    );\n  }\n}\n","<div *ngIf=\"selfHosted\" class=\"page-header\">\n  <h1>{{ \"subscription\" | i18n }}</h1>\n</div>\n<div *ngIf=\"!selfHosted\" class=\"tabbed-header\">\n  <h1>{{ \"goPremium\" | i18n }}</h1>\n</div>\n<bit-callout\n  type=\"info\"\n  *ngIf=\"canAccessPremium\"\n  title=\"{{ 'youHavePremiumAccess' | i18n }}\"\n  icon=\"bwi bwi-star-f\"\n>\n  {{ \"alreadyPremiumFromOrg\" | i18n }}\n</bit-callout>\n<bit-callout type=\"success\">\n  <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n  <ul class=\"bwi-ul\">\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpStorage\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTwoStep\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpEmergency\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpReports\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTotp\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpSupport\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpFuture\" | i18n }}\n    </li>\n  </ul>\n  <p class=\"text-lg\" [ngClass]=\"{ 'mb-0': !selfHosted }\">\n    {{ \"premiumPrice\" | i18n: (premiumPrice | currency: \"$\") }}\n  </p>\n  <a\n    bitButton\n    href=\"https://vault.bitwarden.com/#/settings/premium\"\n    target=\"_blank\"\n    rel=\"noopener\"\n    buttonType=\"secondary\"\n    *ngIf=\"selfHosted\"\n  >\n    {{ \"purchasePremium\" | i18n }}\n  </a>\n</bit-callout>\n<ng-container *ngIf=\"selfHosted\">\n  <p>{{ \"uploadLicenseFilePremium\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_premium_license.json\"\n      }}</small>\n    </div>\n    <bit-submit-button [loading]=\"form.loading\">\n      {{ \"submit\" | i18n }}\n    </bit-submit-button>\n  </form>\n</ng-container>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!selfHosted\">\n  <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n      <input\n        id=\"additionalStorage\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"AdditionalStorageGb\"\n        [(ngModel)]=\"additionalStorage\"\n        min=\"0\"\n        max=\"99\"\n        step=\"1\"\n        placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n      />\n      <small class=\"text-muted form-text\">{{\n        \"additionalStorageIntervalDesc\"\n          | i18n: \"1 GB\":(storageGbPrice | currency: \"$\"):(\"year\" | i18n)\n      }}</small>\n    </div>\n  </div>\n  <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n  {{ \"premiumMembership\" | i18n }}: {{ premiumPrice | currency: \"$\" }} <br />\n  {{ \"additionalStorageGb\" | i18n }}: {{ additionalStorage || 0 }} GB &times;\n  {{ storageGbPrice | currency: \"$\" }} =\n  {{ additionalStorageTotal | currency: \"$\" }}\n  <hr class=\"my-3\" />\n  <h2 class=\"spaced-header mb-4\">{{ \"paymentInformation\" | i18n }}</h2>\n  <app-payment [hideBank]=\"true\"></app-payment>\n  <app-tax-info></app-tax-info>\n  <div id=\"price\" class=\"my-4\">\n    <div class=\"text-muted text-sm\">\n      {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n      <br />\n      <ng-container>\n        {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n      </ng-container>\n    </div>\n    <hr class=\"my-1 col-3 ml-0\" />\n    <p class=\"text-lg\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{ \"year\" | i18n }}\n    </p>\n  </div>\n  <small class=\"text-muted font-italic\">{{ \"paymentChargedAnnually\" | i18n }}</small>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"submit\" | i18n }}\n  </bit-submit-button>\n</form>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent implements OnInit {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxInfoComponent: TaxInfoComponent;\n\n  canAccessPremium = false;\n  selfHosted = false;\n  premiumPrice = 10;\n  storageGbPrice = 4;\n  additionalStorage = 0;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const premiumPersonally = await this.stateService.getHasPremiumPersonally();\n    if (premiumPersonally) {\n      this.router.navigate([\"/settings/subscription/user-subscription\"]);\n      return;\n    }\n  }\n\n  async submit() {\n    let files: FileList = null;\n    if (this.selfHosted) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n    }\n\n    try {\n      if (this.selfHosted) {\n        if (!this.tokenService.getEmailVerified()) {\n          this.platformUtilsService.showToast(\n            \"error\",\n            this.i18nService.t(\"errorOccurred\"),\n            this.i18nService.t(\"verifyEmailFirst\")\n          );\n          return;\n        }\n\n        const fd = new FormData();\n        fd.append(\"license\", files[0]);\n        this.formPromise = this.apiService.postAccountLicense(fd).then(() => {\n          return this.finalizePremium();\n        });\n      } else {\n        this.formPromise = this.paymentComponent\n          .createPaymentToken()\n          .then((result) => {\n            const fd = new FormData();\n            fd.append(\"paymentMethodType\", result[1].toString());\n            if (result[0] != null) {\n              fd.append(\"paymentToken\", result[0]);\n            }\n            fd.append(\"additionalStorageGb\", (this.additionalStorage || 0).toString());\n            fd.append(\"country\", this.taxInfoComponent.taxInfo.country);\n            fd.append(\"postalCode\", this.taxInfoComponent.taxInfo.postalCode);\n            return this.apiService.postPremium(fd);\n          })\n          .then((paymentResponse) => {\n            if (!paymentResponse.success && paymentResponse.paymentIntentClientSecret != null) {\n              return this.paymentComponent.handleStripeCardPayment(\n                paymentResponse.paymentIntentClientSecret,\n                () => this.finalizePremium()\n              );\n            } else {\n              return this.finalizePremium();\n            }\n          });\n      }\n      await this.formPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async finalizePremium() {\n    await this.apiService.refreshIdentityToken();\n    await this.syncService.fullSync(true);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"premiumUpdated\"));\n    this.messagingService.send(\"purchasedPremium\");\n    this.router.navigate([\"/settings/subscription/user-subscription\"]);\n  }\n\n  get additionalStorageTotal(): number {\n    return this.storageGbPrice * Math.abs(this.additionalStorage || 0);\n  }\n\n  get subtotal(): number {\n    return this.premiumPrice + this.additionalStorageTotal;\n  }\n\n  get taxCharges(): number {\n    return this.taxInfoComponent != null && this.taxInfoComponent.taxRate != null\n      ? (this.taxInfoComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total(): number {\n    return this.subtotal + this.taxCharges || 0;\n  }\n}\n","<div class=\"tabbed-nav d-flex flex-column\" *ngIf=\"!selfHosted\">\n  <ul class=\"nav nav-tabs\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [routerLink]=\"subscriptionRoute\" routerLinkActive=\"active\">\n        {{ \"subscription\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"payment-method\" routerLinkActive=\"active\">\n        {{ \"paymentMethod\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"billing-history\" routerLinkActive=\"active\">\n        {{ \"billingHistory\" | i18n }}\n      </a>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-subscription\",\n  templateUrl: \"subscription.component.html\",\n})\nexport class SubscriptionComponent {\n  hasPremium: boolean;\n  selfHosted: boolean;\n\n  constructor(\n    private stateService: StateService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    this.hasPremium = await this.stateService.getHasPremiumPersonally();\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  get subscriptionRoute(): string {\n    return this.hasPremium ? \"user-subscription\" : \"premium\";\n  }\n}\n","<div class=\"tabbed-header d-flex\">\n  <h1>\n    {{ \"billingHistory\" | i18n }}\n  </h1>\n  <button\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ \"invoices\" | i18n }}</h2>\n  <p *ngIf=\"!invoices || !invoices.length\">{{ \"noInvoices\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n    <tbody>\n      <tr *ngFor=\"let i of invoices\">\n        <td>{{ i.date | date: \"mediumDate\" }}</td>\n        <td>\n          <a\n            href=\"{{ i.pdfUrl }}\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            class=\"mr-2\"\n            appA11yTitle=\"{{ 'downloadInvoice' | i18n }}\"\n          >\n            <i class=\"bwi bwi-file-pdf\" aria-hidden=\"true\"></i\n          ></a>\n          <a href=\"{{ i.url }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ 'viewInvoice' | i18n }}\">\n            {{ \"invoiceNumber\" | i18n: i.number }}</a\n          >\n        </td>\n        <td>{{ i.amount | currency: \"$\" }}</td>\n        <td>\n          <span *ngIf=\"i.paid\">\n            <i class=\"bwi bwi-check text-success\" aria-hidden=\"true\"></i>\n            {{ \"paid\" | i18n }}\n          </span>\n          <span *ngIf=\"!i.paid\">\n            <i class=\"bwi bwi-exclamation-circle text-muted\" aria-hidden=\"true\"></i>\n            {{ \"unpaid\" | i18n }}\n          </span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <h2 class=\"spaced-header\">{{ \"transactions\" | i18n }}</h2>\n  <p *ngIf=\"!transactions || !transactions.length\">{{ \"noTransactions\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n    <tbody>\n      <tr *ngFor=\"let t of transactions\">\n        <td>{{ t.createdDate | date: \"mediumDate\" }}</td>\n        <td>\n          <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n            {{ \"chargeNoun\" | i18n }}\n          </span>\n          <span *ngIf=\"t.type === transactionType.Refund\">{{ \"refundNoun\" | i18n }}</span>\n        </td>\n        <td>\n          <i\n            class=\"bwi bwi-fw\"\n            *ngIf=\"t.paymentMethodType\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-credit-card': t.paymentMethodType === paymentMethodType.Card,\n              'bwi-bank':\n                t.paymentMethodType === paymentMethodType.BankAccount ||\n                t.paymentMethodType === paymentMethodType.WireTransfer,\n              'bwi-bitcoin text-warning': t.paymentMethodType === paymentMethodType.BitPay,\n              'bwi-paypal text-primary': t.paymentMethodType === paymentMethodType.PayPal\n            }\"\n          ></i>\n          {{ t.details }}\n        </td>\n        <td\n          [ngClass]=\"{ 'text-strike': t.refunded }\"\n          title=\"{{ (t.refunded ? 'refunded' : '') | i18n }}\"\n        >\n          {{ t.amount | currency: \"$\" }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <small class=\"text-muted\">* {{ \"chargesStatement\" | i18n: \"BITWARDEN\" }}</small>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { TransactionType } from \"@bitwarden/common/enums/transactionType\";\nimport { BillingHistoryResponse } from \"@bitwarden/common/models/response/billingHistoryResponse\";\n\n@Component({\n  selector: \"app-user-billing\",\n  templateUrl: \"user-billing-history.component.html\",\n})\nexport class UserBillingHistoryComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  billing: BillingHistoryResponse;\n  paymentMethodType = PaymentMethodType;\n  transactionType = TransactionType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    if (this.platformUtilsService.isSelfHost()) {\n      this.router.navigate([\"/settings/subscription\"]);\n    }\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    this.billing = await this.apiService.getUserBillingHistory();\n    this.loading = false;\n  }\n\n  get invoices() {\n    return this.billing != null ? this.billing.invoices : null;\n  }\n\n  get transactions() {\n    return this.billing != null ? this.billing.transactions : null;\n  }\n}\n","<div\n  [ngClass]=\"{\n    'page-header': selfHosted,\n    'tabbed-header': !selfHosted\n  }\"\n>\n  <h1>\n    {{ title }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"sub\">\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</bit-callout\n  >\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      bitButton\n      type=\"button\"\n      buttonType=\"secondary\"\n      #reinstateBtn\n      class=\"btn-submit\"\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"reinstateBtn.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"reinstateSubscription\" | i18n }}</span>\n    </button>\n  </bit-callout>\n  <dl *ngIf=\"selfHosted\">\n    <dt>{{ \"expiration\" | i18n }}</dt>\n    <dd *ngIf=\"sub.expiration\">{{ sub.expiration | date: \"mediumDate\" }}</dd>\n    <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n  </dl>\n  <div class=\"row\" *ngIf=\"!selfHosted\">\n    <div class=\"col-4\">\n      <dl>\n        <dt>{{ \"status\" | i18n }}</dt>\n        <dd>\n          <span class=\"text-capitalize\">{{ (subscription && subscription.status) || \"-\" }}</span>\n          <span bitBadge badgeType=\"warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n            \"pendingCancellation\" | i18n\n          }}</span>\n        </dd>\n        <dt>{{ \"nextCharge\" | i18n }}</dt>\n        <dd>\n          {{\n            nextInvoice\n              ? (nextInvoice.date | date: \"mediumDate\") +\n                \", \" +\n                (nextInvoice.amount | currency: \"$\")\n              : \"-\"\n          }}\n        </dd>\n      </dl>\n    </div>\n    <div class=\"col-8\" *ngIf=\"subscription\">\n      <strong class=\"d-block mb-1\">{{ \"details\" | i18n }}</strong>\n      <table class=\"table\">\n        <tbody>\n          <tr *ngFor=\"let i of subscription.items\">\n            <td>\n              {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n              {{ i.amount | currency: \"$\" }}\n            </td>\n            <td>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <ng-container *ngIf=\"selfHosted\">\n    <div>\n      <button type=\"button\" bitButton buttonType=\"secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        bitButton\n        buttonType=\"secondary\"\n        href=\"https://vault.bitwarden.com/#/settings/subscription\"\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        {{ \"manageSubscription\" | i18n }}\n      </a>\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n      <div class=\"card-body\">\n        <button\n          type=\"button\"\n          class=\"close\"\n          appA11yTitle=\"{{ 'cancel' | i18n }}\"\n          (click)=\"closeUpdateLicense(false)\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h3 class=\"card-body-header\">{{ \"updateLicense\" | i18n }}</h3>\n        <app-update-license\n          (onUpdated)=\"closeUpdateLicense(true)\"\n          (onCanceled)=\"closeUpdateLicense(false)\"\n        >\n        </app-update-license>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"d-flex\">\n      <button\n        bitButton\n        type=\"button\"\n        buttonType=\"secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"!subscription || !subscription.cancelled\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        bitButton\n        #cancelBtn\n        type=\"button\"\n        buttonType=\"danger\"\n        class=\"btn-submit tw-ml-auto\"\n        (click)=\"cancel()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"cancelBtn.loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"cancelSubscription\" | i18n }}</span>\n      </button>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"storage\" | i18n }}</h2>\n    <p>{{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0:sub.storageName || \"0 MB\" }}</p>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar bg-success\"\n        role=\"progressbar\"\n        [ngStyle]=\"{ width: storageProgressWidth + '%' }\"\n        [attr.aria-valuenow]=\"storagePercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ storagePercentage / 100 | percent }}\n      </div>\n    </div>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"mt-3\">\n        <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n          <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button\n            bitButton\n            type=\"button\"\n            buttonType=\"secondary\"\n            class=\"tw-ml-1\"\n            (click)=\"adjustStorage(false)\"\n          >\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"4\"\n          [add]=\"adjustStorageAdd\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SubscriptionResponse } from \"@bitwarden/common/models/response/subscriptionResponse\";\n\n@Component({\n  selector: \"app-user-subscription\",\n  templateUrl: \"user-subscription.component.html\",\n})\nexport class UserSubscriptionComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  showUpdateLicense = false;\n  sub: SubscriptionResponse;\n  selfHosted = false;\n\n  cancelPromise: Promise<any>;\n  reinstatePromise: Promise<any>;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private router: Router,\n    private logService: LogService,\n    private fileDownloadService: FileDownloadService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.stateService.getHasPremiumPersonally()) {\n      this.loading = true;\n      this.sub = await this.apiService.getUserSubscription();\n    } else {\n      this.router.navigate([\"/settings/subscription/premium\"]);\n      return;\n    }\n\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"reinstateConfirmation\"),\n      this.i18nService.t(\"reinstateSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.apiService.postReinstatePremium();\n      await this.reinstatePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async cancel() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"cancelConfirmation\"),\n      this.i18nService.t(\"cancelSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.cancelPromise = this.apiService.postCancelPremium();\n      await this.cancelPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  downloadLicense() {\n    if (this.loading) {\n      return;\n    }\n\n    const licenseString = JSON.stringify(this.sub.license, null, 2);\n    this.fileDownloadService.download({\n      fileName: \"bitwarden_premium_license.json\",\n      blobData: licenseString,\n    });\n  }\n\n  updateLicense() {\n    if (this.loading) {\n      return;\n    }\n    this.showUpdateLicense = true;\n  }\n\n  closeUpdateLicense(load: boolean) {\n    this.showUpdateLicense = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  adjustStorage(add: boolean) {\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(add ? \"addStorage\" : \"removeStorage\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get usingInAppPurchase() {\n    return this.sub != null ? this.sub.usingInAppPurchase : false;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.selfHosted ? \"subscription\" : \"premiumMembership\");\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { PaymentMethodComponent } from \"./payment-method.component\";\nimport { PremiumComponent } from \"./premium.component\";\nimport { SubscriptionComponent } from \"./subscription.component\";\nimport { UserBillingHistoryComponent } from \"./user-billing-history.component\";\nimport { UserSubscriptionComponent } from \"./user-subscription.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SubscriptionComponent,\n    data: { titleId: \"subscription\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"premium\" },\n      {\n        path: \"user-subscription\",\n        component: UserSubscriptionComponent,\n        data: { titleId: \"premiumMembership\" },\n      },\n      {\n        path: \"premium\",\n        component: PremiumComponent,\n        data: { titleId: \"goPremium\" },\n      },\n      {\n        path: \"payment-method\",\n        component: PaymentMethodComponent,\n        data: { titleId: \"paymentMethod\" },\n      },\n      {\n        path: \"billing-history\",\n        component: UserBillingHistoryComponent,\n        data: { titleId: \"billingHistory\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SubscriptionRoutingModule {}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { PasswordGeneratorPolicyOptions } from \"@bitwarden/common/models/domain/passwordGeneratorPolicyOptions\";\n\n@Directive()\nexport class GeneratorComponent implements OnInit {\n  @Input() comingFromAddEdit = false;\n  @Input() type: string;\n  @Output() onSelected = new EventEmitter<string>();\n\n  usernameGeneratingPromise: Promise<string>;\n  typeOptions: any[];\n  passTypeOptions: any[];\n  usernameTypeOptions: any[];\n  subaddressOptions: any[];\n  catchallOptions: any[];\n  forwardOptions: any[];\n  usernameOptions: any = {};\n  passwordOptions: any = {};\n  username = \"-\";\n  password = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPasswordPolicyOptions: PasswordGeneratorPolicyOptions;\n  usernameWebsite: string = null;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected usernameGenerationService: UsernameGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected stateService: StateService,\n    protected i18nService: I18nService,\n    protected logService: LogService,\n    protected route: ActivatedRoute,\n    private win: Window\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"username\"), value: \"username\" },\n    ];\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n    this.usernameTypeOptions = [\n      {\n        name: i18nService.t(\"plusAddressedEmail\"),\n        value: \"subaddress\",\n        desc: i18nService.t(\"plusAddressedEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"catchallEmail\"),\n        value: \"catchall\",\n        desc: i18nService.t(\"catchallEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"forwardedEmail\"),\n        value: \"forwarded\",\n        desc: i18nService.t(\"forwardedEmailDesc\"),\n      },\n      { name: i18nService.t(\"randomWord\"), value: \"word\" },\n    ];\n    this.subaddressOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.catchallOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.forwardOptions = [\n      { name: \"SimpleLogin\", value: \"simplelogin\" },\n      { name: \"AnonAddy\", value: \"anonaddy\" },\n      { name: \"Firefox Relay\", value: \"firefoxrelay\" },\n      // { name: \"FastMail\", value: \"fastmail\" },\n    ];\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const passwordOptionsResponse = await this.passwordGenerationService.getOptions();\n      this.passwordOptions = passwordOptionsResponse[0];\n      this.enforcedPasswordPolicyOptions = passwordOptionsResponse[1];\n      this.avoidAmbiguous = !this.passwordOptions.ambiguous;\n      this.passwordOptions.type =\n        this.passwordOptions.type === \"passphrase\" ? \"passphrase\" : \"password\";\n\n      this.usernameOptions = await this.usernameGenerationService.getOptions();\n      if (this.usernameOptions.type == null) {\n        this.usernameOptions.type = \"word\";\n      }\n      if (\n        this.usernameOptions.subaddressEmail == null ||\n        this.usernameOptions.subaddressEmail === \"\"\n      ) {\n        this.usernameOptions.subaddressEmail = await this.stateService.getEmail();\n      }\n      if (this.usernameWebsite == null) {\n        this.usernameOptions.subaddressType = this.usernameOptions.catchallType = \"random\";\n      } else {\n        this.usernameOptions.website = this.usernameWebsite;\n        const websiteOption = { name: this.i18nService.t(\"websiteName\"), value: \"website-name\" };\n        this.subaddressOptions.push(websiteOption);\n        this.catchallOptions.push(websiteOption);\n      }\n\n      if (this.type !== \"username\" && this.type !== \"password\") {\n        if (qParams.type === \"username\" || qParams.type === \"password\") {\n          this.type = qParams.type;\n        } else {\n          const generatorOptions = await this.stateService.getGeneratorOptions();\n          this.type = generatorOptions?.type ?? \"password\";\n        }\n      }\n      if (this.regenerateWithoutButtonPress()) {\n        await this.regenerate();\n      }\n    });\n  }\n\n  async typeChanged() {\n    await this.stateService.setGeneratorOptions({ type: this.type });\n    if (this.regenerateWithoutButtonPress()) {\n      await this.regenerate();\n    }\n  }\n\n  async regenerate() {\n    if (this.type === \"password\") {\n      await this.regeneratePassword();\n    } else if (this.type === \"username\") {\n      await this.regenerateUsername();\n    }\n  }\n\n  async sliderChanged() {\n    this.savePasswordOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizePasswordOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n  }\n\n  async savePasswordOptions(regenerate = true) {\n    this.normalizePasswordOptions();\n    await this.passwordGenerationService.saveOptions(this.passwordOptions);\n\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regeneratePassword();\n    }\n  }\n\n  async saveUsernameOptions(regenerate = true) {\n    await this.usernameGenerationService.saveOptions(this.usernameOptions);\n    if (this.usernameOptions.type === \"forwarded\") {\n      this.username = \"-\";\n    }\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regenerateUsername();\n    }\n  }\n\n  async regeneratePassword() {\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  regenerateUsername() {\n    return this.generateUsername();\n  }\n\n  async generateUsername() {\n    try {\n      this.usernameGeneratingPromise = this.usernameGenerationService.generateUsername(\n        this.usernameOptions\n      );\n      this.username = await this.usernameGeneratingPromise;\n      if (this.username === \"\" || this.username === null) {\n        this.username = \"-\";\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  copy() {\n    const password = this.type === \"password\";\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(\n      password ? this.password : this.username,\n      copyOptions\n    );\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(password ? \"password\" : \"username\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.type === \"password\" ? this.password : this.username);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  regenerateWithoutButtonPress() {\n    return this.type !== \"username\" || this.usernameOptions.type !== \"forwarded\";\n  }\n\n  private normalizePasswordOptions() {\n    // Application level normalize options depedent on class variables\n    this.passwordOptions.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.passwordOptions.uppercase &&\n      !this.passwordOptions.lowercase &&\n      !this.passwordOptions.number &&\n      !this.passwordOptions.special\n    ) {\n      this.passwordOptions.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(\n      this.passwordOptions,\n      this.enforcedPasswordPolicyOptions\n    );\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { GeneratedPasswordHistory } from \"@bitwarden/common/models/domain/generatedPasswordHistory\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n/*\n An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)\n and handles Unicode / Emoji characters correctly.\n*/\n@Pipe({ name: \"colorPassword\" })\nexport class ColorPasswordPipe implements PipeTransform {\n  transform(password: string) {\n    const template = (character: string, type: string) =>\n      `<span class=\"password-${type}\">${character}</span>`;\n    const colorizedPassword = this.generateTemplate(password, template);\n    return colorizedPassword;\n  }\n\n  protected generateTemplate(\n    password: string,\n    templateGenerator: (chararacter: string, type: string, index?: number) => string\n  ) {\n    // Convert to an array to handle cases that stings have special characters, ie: emoji.\n    const passwordArray = Array.from(password);\n    let colorizedPassword = \"\";\n    for (let i = 0; i < passwordArray.length; i++) {\n      let character = passwordArray[i];\n      let isSpecial = false;\n      // Sanitize HTML first.\n      switch (character) {\n        case \"&\":\n          character = \"&amp;\";\n          isSpecial = true;\n          break;\n        case \"<\":\n          character = \"&lt;\";\n          isSpecial = true;\n          break;\n        case \">\":\n          character = \"&gt;\";\n          isSpecial = true;\n          break;\n        case \" \":\n          character = \"&nbsp;\";\n          isSpecial = true;\n          break;\n        default:\n          break;\n      }\n      let type = \"letter\";\n      if (character.match(Utils.regexpEmojiPresentation)) {\n        type = \"emoji\";\n      } else if (isSpecial || character.match(/[^\\w ]/)) {\n        type = \"special\";\n      } else if (character.match(/\\d/)) {\n        type = \"number\";\n      }\n      colorizedPassword += templateGenerator(character, type, i);\n    }\n    return colorizedPassword;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"passHistoryTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"passHistoryTitle\">{{ \"passwordHistory\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"history.length\">\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item d-flex\" *ngFor=\"let h of history\">\n            <div class=\"password-row\">\n              <div\n                class=\"text-monospace generated-wrapper\"\n                [innerHTML]=\"h.password | colorPassword\"\n                appSelectCopy\n              ></div>\n              <small class=\"text-muted\">{{ h.date | date: \"medium\" }}</small>\n            </div>\n            <div class=\"ml-auto\">\n              <button\n                class=\"btn btn-link\"\n                appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                (click)=\"copy(h.password)\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!history.length\">\n        {{ \"noPasswordsInList\" | i18n }}\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            type=\"button\"\n            (click)=\"clear()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'clear' | i18n }}\"\n          >\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"@bitwarden/angular/components/password-generator-history.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"generator\" | i18n }}</h1>\n</div>\n<app-callout type=\"info\" *ngIf=\"enforcedPasswordPolicyOptions?.inEffect() && type === 'password'\">\n  {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n</app-callout>\n<div class=\"card card-generated bg-light my-4\">\n  <div class=\"card-body\">\n    <div\n      *ngIf=\"type === 'password'\"\n      class=\"generated-wrapper\"\n      [innerHTML]=\"password | colorPassword\"\n      appSelectCopy\n    ></div>\n    <div\n      *ngIf=\"type === 'username'\"\n      class=\"generated-wrapper\"\n      [innerHTML]=\"username | colorPassword\"\n      appSelectCopy\n    ></div>\n  </div>\n</div>\n<div class=\"form-group\" role=\"radiogroup\" aria-labelledby=\"typeHeading\">\n  <label id=\"typeHeading\" class=\"d-block\">{{ \"whatWouldYouLikeToGenerate\" | i18n }}</label>\n  <div class=\"form-check form-check-inline\" *ngFor=\"let o of typeOptions\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      [(ngModel)]=\"type\"\n      name=\"Type\"\n      id=\"type_{{ o.value }}\"\n      [value]=\"o.value\"\n      (change)=\"typeChanged()\"\n      [checked]=\"type === o.value\"\n    />\n    <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n      {{ o.name }}\n    </label>\n  </div>\n</div>\n<ng-container *ngIf=\"type === 'password'\">\n  <div aria-labelledby=\"passwordTypeHeading\" class=\"form-group\" role=\"radiogroup\">\n    <label id=\"passwordTypeHeading\" class=\"d-block\">{{ \"passwordType\" | i18n }}</label>\n    <div class=\"form-check form-check-inline\" *ngFor=\"let o of passTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"passwordOptions.type\"\n        name=\"PasswordType\"\n        id=\"passwordType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"savePasswordOptions()\"\n        [checked]=\"passwordOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"passwordType_{{ o.value }}\">\n        {{ o.name }}\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"passwordOptions.type === 'passphrase'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n        <input\n          id=\"num-words\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"3\"\n          max=\"20\"\n          [(ngModel)]=\"passwordOptions.numWords\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n        <input\n          id=\"word-separator\"\n          class=\"form-control\"\n          type=\"text\"\n          maxlength=\"1\"\n          [(ngModel)]=\"passwordOptions.wordSeparator\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"capitalize\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.capitalize\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.capitalize\"\n        />\n        <label for=\"capitalize\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"include-number\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.includeNumber\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.includeNumber\"\n        />\n        <label for=\"include-number\" class=\"form-check-label\">{{ \"includeNumber\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"passwordOptions.type === 'password'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"length\">{{ \"length\" | i18n }}</label>\n        <input\n          id=\"length\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"5\"\n          max=\"128\"\n          [(ngModel)]=\"passwordOptions.length\"\n          (blur)=\"savePasswordOptions()\"\n          (change)=\"lengthChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n        <input\n          id=\"min-number\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minNumber\"\n          (change)=\"minNumberChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n        <input\n          id=\"min-special\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minSpecial\"\n          (change)=\"minSpecialChanged()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"uppercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.uppercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useUppercase\"\n          attr.aria-label=\"{{ 'uppercase' | i18n }}\"\n        />\n        <label for=\"uppercase\" class=\"form-check-label\">A-Z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"lowercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.lowercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useLowercase\"\n          attr.aria-label=\"{{ 'lowercase' | i18n }}\"\n        />\n        <label for=\"lowercase\" class=\"form-check-label\">a-z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"numbers\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.number\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useNumbers\"\n          attr.aria-label=\"{{ 'numbers' | i18n }}\"\n        />\n        <label for=\"numbers\" class=\"form-check-label\">0-9</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"special\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.special\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useSpecial\"\n          attr.aria-label=\"{{ 'specialCharacters' | i18n }}\"\n        />\n        <label for=\"special\" class=\"form-check-label\">!@#$%^&amp;*</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"ambiguous\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"avoidAmbiguous\"\n        />\n        <label for=\"ambiguous\" class=\"form-check-label\">{{ \"ambiguous\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"d-flex\">\n    <div>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"regenerate()\">\n        {{ \"regeneratePassword\" | i18n }}\n      </button>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n        {{ \"copyPassword\" | i18n }}\n      </button>\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"history()\"\n        appA11yTitle=\"{{ 'passwordHistory' | i18n }}\"\n      >\n        <i class=\"bwi bwi-clock bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'username'\">\n  <div aria-labelledby=\"usernameTypeHeading\" class=\"form-group\" role=\"radiogroup\">\n    <div class=\"d-block\">\n      <label id=\"usernameTypeHeading\">{{ \"usernameType\" | i18n }}</label>\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/generator/#username-types\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"form-check\" *ngFor=\"let o of usernameTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"usernameOptions.type\"\n        name=\"UsernameType\"\n        id=\"usernameType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"saveUsernameOptions()\"\n        [checked]=\"usernameOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"usernameType_{{ o.value }}\">\n        {{ o.name }}\n        <div class=\"small text-muted\">{{ o.desc }}</div>\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'forwarded'\">\n    <div class=\"form-group\">\n      <label class=\"d-block\">{{ \"service\" | i18n }}</label>\n      <div class=\"form-check\" *ngFor=\"let o of forwardOptions\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          [(ngModel)]=\"usernameOptions.forwardedService\"\n          name=\"ForwardType\"\n          id=\"forwardtype_{{ o.value }}\"\n          [value]=\"o.value\"\n          (change)=\"saveUsernameOptions()\"\n          [checked]=\"usernameOptions.forwardedService === o.value\"\n        />\n        <label class=\"form-check-label\" for=\"forwardtype_{{ o.value }}\">\n          {{ o.name }}\n        </label>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'simplelogin'\">\n      <div class=\"form-group col-4\">\n        <label for=\"simplelogin-apikey\">{{ \"apiKey\" | i18n }}</label>\n        <input\n          id=\"simplelogin-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedSimpleLoginApiKey\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'anonaddy'\">\n      <div class=\"form-group col-4\">\n        <label for=\"anonaddy-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"anonaddy-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedAnonAddyApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"anonaddy-domain\">{{ \"domainName\" | i18n }}</label>\n        <input\n          id=\"anonaddy-domain\"\n          class=\"form-control\"\n          type=\"text\"\n          [(ngModel)]=\"usernameOptions.forwardedAnonAddyDomain\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'firefoxrelay'\">\n      <div class=\"form-group col-4\">\n        <label for=\"firefox-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"firefox-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedFirefoxApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'subaddress'\">\n    <div class=\"form-group col-4\">\n      <label for=\"subaddress-email\">{{ \"emailAddress\" | i18n }}</label>\n      <input\n        id=\"subaddress-email\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.subaddressEmail\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'catchall'\">\n    <div class=\"form-group col-4\">\n      <label for=\"catchall-domain\">{{ \"domainName\" | i18n }}</label>\n      <input\n        id=\"catchall-domain\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.catchallDomain\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'word'\">\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input\n            id=\"capitalizeUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordCapitalize\"\n          />\n          <label for=\"capitalizeUsername\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n        </div>\n        <div class=\"form-check\">\n          <input\n            id=\"includeNumberUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordIncludeNumber\"\n          />\n          <label for=\"includeNumberUsername\" class=\"form-check-label\">{{\n            \"includeNumber\" | i18n\n          }}</label>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <div #form [appApiAction]=\"usernameGeneratingPromise\">\n    <button\n      type=\"button\"\n      class=\"btn btn-submit btn-primary\"\n      (click)=\"regenerate()\"\n      [disabled]=\"form.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"regenerateUsername\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n      {{ \"copyUsername\" | i18n }}\n    </button>\n  </div>\n</ng-container>\n<ng-template #historyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { GeneratorComponent as BaseGeneratorComponent } from \"@bitwarden/angular/components/generator.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\n\nimport { PasswordGeneratorHistoryComponent } from \"./password-generator-history.component\";\n\n@Component({\n  selector: \"app-generator\",\n  templateUrl: \"generator.component.html\",\n})\nexport class GeneratorComponent extends BaseGeneratorComponent {\n  @ViewChild(\"historyTemplate\", { read: ViewContainerRef, static: true })\n  historyModalRef: ViewContainerRef;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    usernameGenerationService: UsernameGenerationService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService,\n    route: ActivatedRoute,\n    private modalService: ModalService\n  ) {\n    super(\n      passwordGenerationService,\n      usernameGenerationService,\n      platformUtilsService,\n      stateService,\n      i18nService,\n      logService,\n      route,\n      window\n    );\n    if (platformUtilsService.isSelfHost()) {\n      // Cannot use Firefox Relay on self hosted web vaults due to CORS issues with Firefox Relay API\n      this.forwardOptions.splice(\n        this.forwardOptions.findIndex((o) => o.value === \"firefoxrelay\"),\n        1\n      );\n    }\n  }\n\n  async history() {\n    await this.modalService.openViewRef(PasswordGeneratorHistoryComponent, this.historyModalRef);\n  }\n\n  lengthChanged() {\n    document.getElementById(\"length\").focus();\n  }\n\n  minNumberChanged() {\n    document.getElementById(\"min-number\").focus();\n  }\n\n  minSpecialChanged() {\n    document.getElementById(\"min-special\").focus();\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-tools\",\n  templateUrl: \"tools.component.html\",\n})\nexport class ToolsComponent implements OnInit {\n  canAccessPremium = false;\n\n  constructor(private stateService: StateService, private messagingService: MessagingService) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card mb-4\">\n        <div class=\"card-header\">{{ \"tools\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"generator\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"generator\" | i18n }}\n          </a>\n          <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"importData\" | i18n }}\n          </a>\n          <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"exportVault\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { CipherWithIdRequest } from \"@bitwarden/common/models/request/cipherWithIdRequest\";\nimport { FolderWithIdRequest } from \"@bitwarden/common/models/request/folderWithIdRequest\";\nimport { UpdateKeyRequest } from \"@bitwarden/common/models/request/updateKeyRequest\";\n\n@Component({\n  selector: \"app-update-key\",\n  templateUrl: \"update-key.component.html\",\n})\nexport class UpdateKeyComponent {\n  masterPassword: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (hasEncKey) {\n      return;\n    }\n\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.makeRequest().then((request) => {\n        return this.apiService.postAccountKey(request);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"keyUpdated\"),\n        this.i18nService.t(\"logBackInOthersToo\"),\n        { timeout: 15000 }\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async makeRequest(): Promise<UpdateKeyRequest> {\n    const key = await this.cryptoService.getKey();\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n\n    await this.syncService.fullSync(true);\n\n    const folders = await firstValueFrom(this.folderService.folderViews$);\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    return request;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"updateEncKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"updateEncKeyTitle\">{{ \"updateEncryptionKey\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"updateEncryptionKeyShortDesc\" | i18n }} {{ \"updateEncryptionKeyDesc\" | i18n }}\n          <a\n            href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            >{{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <app-callout type=\"warning\">{{ \"updateEncryptionKeyWarning\" | i18n }}</app-callout>\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appAutofocus\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"updateEncryptionKey\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    protected folderService: FolderService,\n    protected folderApiService: FolderApiServiceAbstraction,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderApiService.save(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderApiService.delete(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"folderAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"folderAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"folder.name\"\n          required\n          appAutofocus\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"@bitwarden/angular/components/folder-add-edit.component\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  constructor(\n    folderService: FolderService,\n    folderApiService: FolderApiServiceAbstraction,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(folderService, folderApiService, i18nService, platformUtilsService, logService);\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Directive()\nexport class ShareComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collections: CollectionView[] = [];\n  organizations: Organization[] = [];\n\n  protected writeableCollections: CollectionView[] = [];\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n    const orgs = await this.organizationService.getAll();\n    this.organizations = orgs\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"))\n      .filter((o) => o.enabled && o.status === OrganizationUserStatusType.Confirmed);\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgName =\n      this.organizations.find((o) => o.id === this.organizationId)?.name ??\n      this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if ((this.collections[i] as any).checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"shareTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"shareTitle\">\n          {{ \"moveToOrganization\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!organizations || !organizations.length\">\n        {{ \"noOrganizationsList\" | i18n }}\n      </div>\n      <div class=\"modal-body\" *ngIf=\"organizations && organizations.length\">\n        <p>{{ \"moveToOrgDesc\" | i18n }}</p>\n        <div class=\"form-group\">\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            class=\"form-control\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [disabled]=\"form.loading || !canSave\"\n          [ngClass]=\"{ loading: form.loading }\"\n          *ngIf=\"organizations && organizations.length\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <a\n          href=\"#\"\n          routerLink=\"/create-organization\"\n          class=\"btn btn-primary\"\n          *ngIf=\"!organizations || !organizations.length\"\n        >\n          {{ \"newOrganization\" | i18n }}\n        </a>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { ShareComponent as BaseShareComponent } from \"@bitwarden/angular/components/share.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\nexport class ShareComponent extends BaseShareComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-verify-email\",\n  templateUrl: \"verify-email.component.html\",\n})\nexport class VerifyEmailComponent {\n  actionPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async send() {\n    if (this.actionPromise != null) {\n      return;\n    }\n    try {\n      this.actionPromise = this.apiService.postAccountVerifyEmail();\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"checkInboxForVerification\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","<div class=\"card border-warning\">\n  <div class=\"card-header bg-warning text-white\">\n    <i class=\"bwi bwi-envelope bwi-fw\" aria-hidden=\"true\"></i> {{ \"verifyEmail\" | i18n }}\n  </div>\n  <div class=\"card-body\">\n    <p>{{ \"verifyEmailDesc\" | i18n }}</p>\n    <button\n      type=\"button\"\n      class=\"btn btn-block btn-outline-secondary btn-submit\"\n      #sendBtn\n      [appApiAction]=\"actionPromise\"\n      [disabled]=\"sendBtn.loading\"\n      (click)=\"send()\"\n    >\n      <i class=\"bwi bwi-spin bwi-spinner\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>\n        {{ \"sendEmail\" | i18n }}\n      </span>\n    </button>\n  </div>\n</div>\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"groupings\">\n        <div class=\"content\">\n          <div class=\"inner-content\">\n            <app-vault-filter\n              #vaultFilter\n              [activeFilter]=\"activeFilter\"\n              (onFilterChange)=\"applyVaultFilter($event)\"\n              (onAddFolder)=\"addFolder()\"\n              (onEditFolder)=\"editFolder($event.id)\"\n              (onSearchTextChanged)=\"filterSearchText($event)\"\n            ></app-vault-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div [ngClass]=\"{ 'col-6': isShowingCards, 'col-9': !isShowingCards }\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"vaultItems\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <app-vault-bulk-actions\n            [ciphersComponent]=\"ciphersComponent\"\n            [deleted]=\"activeFilter.status === 'trash'\"\n          >\n          </app-vault-bulk-actions>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addCipher()\"\n            *ngIf=\"activeFilter.status !== 'trash'\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"addItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout\n        type=\"warning\"\n        *ngIf=\"activeFilter.status === 'trash'\"\n        icon=\"bwi-exclamation-triangle\"\n      >\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-vault-ciphers\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onShareClicked)=\"shareCipher($event)\"\n        (onCollectionsClicked)=\"editCipherCollections($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n        (onOrganzationBadgeClicked)=\"applyOrganizationFilter($event)\"\n      >\n      </app-vault-ciphers>\n    </div>\n    <div class=\"col-3\">\n      <div class=\"card border-warning mb-4\" *ngIf=\"showUpdateKey\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateKeyTitle\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateEncryptionKeyShortDesc\" | i18n }}</p>\n          <button class=\"btn btn-block btn-outline-secondary\" type=\"button\" (click)=\"updateKey()\">\n            {{ \"updateEncryptionKey\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-verify-email *ngIf=\"showVerifyEmail\" class=\"d-block mb-4\"></app-verify-email>\n      <div class=\"card border-warning mb-4\" *ngIf=\"showBrowserOutdated\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateBrowser\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateBrowserDesc\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            target=\"_blank\"\n            href=\"https://browser-update.org/update-browser.html\"\n            rel=\"noopener\"\n          >\n            {{ \"updateBrowser\" | i18n }}\n          </a>\n        </div>\n      </div>\n      <div class=\"card border-success mb-4\" *ngIf=\"showPremiumCallout\">\n        <div class=\"card-header bg-success text-white\">\n          <i class=\"bwi bwi-star-f bwi-fw\" aria-hidden=\"true\"></i> {{ \"goPremium\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            routerLink=\"/settings/subscription/premium\"\n          >\n            {{ \"goPremium\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #folderAddEdit></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #share></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #updateKeyTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { FolderAddEditComponent } from \"./folder-add-edit.component\";\nimport { ShareComponent } from \"./share.component\";\nimport { VaultService } from \"./shared/vault.service\";\nimport { VaultFilterService } from \"./vault-filter/shared/vault-filter.service\";\nimport { VaultFilterComponent } from \"./vault-filter/vault-filter.component\";\n\nconst BroadcasterSubscriptionId = \"VaultComponent\";\n\n@Component({\n  selector: \"app-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(\"vaultFilter\", { static: true }) filterComponent: VaultFilterComponent;\n  @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"folderAddEdit\", { read: ViewContainerRef, static: true })\n  folderAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"share\", { read: ViewContainerRef, static: true }) shareModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"updateKeyTemplate\", { read: ViewContainerRef, static: true })\n  updateKeyModalRef: ViewContainerRef;\n\n  folderId: string = null;\n  myVaultOnly = false;\n  showVerifyEmail = false;\n  showBrowserOutdated = false;\n  showUpdateKey = false;\n  showPremiumCallout = false;\n  trashCleanupWarning: string = null;\n  activeFilter: VaultFilter = new VaultFilter();\n\n  constructor(\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private tokenService: TokenService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private vaultService: VaultService,\n    private cipherService: CipherService,\n    private passwordRepromptService: PasswordRepromptService,\n    private vaultFilterService: VaultFilterService\n  ) {}\n\n  async ngOnInit() {\n    this.showVerifyEmail = !(await this.tokenService.getEmailVerified());\n    this.showBrowserOutdated = window.navigator.userAgent.indexOf(\"MSIE\") !== -1;\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      await this.syncService.fullSync(false);\n      const canAccessPremium = await this.stateService.getCanAccessPremium();\n      this.showPremiumCallout =\n        !this.showVerifyEmail && !canAccessPremium && !this.platformUtilsService.isSelfHost();\n\n      this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n      this.filterComponent.reloadOrganizations();\n      this.showUpdateKey = !(await this.cryptoService.hasEncKey());\n\n      const cipherId = getCipherIdFromParams(params);\n\n      if (cipherId) {\n        const cipherView = new CipherView();\n        cipherView.id = cipherId;\n        if (params.action === \"clone\") {\n          await this.cloneCipher(cipherView);\n        } else if (params.action === \"edit\") {\n          await this.editCipher(cipherView);\n        }\n      }\n      await this.ciphersComponent.reload();\n\n      this.route.queryParams.subscribe(async (params) => {\n        const cipherId = getCipherIdFromParams(params);\n        if (cipherId) {\n          if ((await this.cipherService.get(cipherId)) != null) {\n            this.editCipherId(cipherId);\n          } else {\n            this.platformUtilsService.showToast(\n              \"error\",\n              this.i18nService.t(\"errorOccurred\"),\n              this.i18nService.t(\"unknownCipher\")\n            );\n            this.router.navigate([], {\n              queryParams: { itemId: null, cipherId: null },\n              queryParamsHandling: \"merge\",\n            });\n          }\n        }\n      });\n\n      this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n        this.ngZone.run(async () => {\n          switch (message.command) {\n            case \"syncCompleted\":\n              if (message.successfully) {\n                await Promise.all([\n                  this.filterComponent.reloadCollectionsAndFolders(this.activeFilter),\n                  this.filterComponent.reloadOrganizations(),\n                  this.ciphersComponent.load(this.ciphersComponent.filter),\n                ]);\n                this.changeDetectorRef.detectChanges();\n              }\n              break;\n          }\n        });\n      });\n    });\n  }\n\n  get isShowingCards() {\n    return (\n      this.showBrowserOutdated ||\n      this.showPremiumCallout ||\n      this.showUpdateKey ||\n      this.showVerifyEmail\n    );\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async applyVaultFilter(vaultFilter: VaultFilter) {\n    this.ciphersComponent.showAddNew = vaultFilter.status !== \"trash\";\n    this.activeFilter = vaultFilter;\n    await this.ciphersComponent.reload(\n      this.activeFilter.buildFilter(),\n      vaultFilter.status === \"trash\"\n    );\n    this.filterComponent.searchPlaceholder = this.vaultService.calculateSearchBarLocalizationString(\n      this.activeFilter\n    );\n    this.go();\n  }\n\n  async applyOrganizationFilter(orgId: string) {\n    if (orgId == null) {\n      this.activeFilter.resetOrganization();\n      this.activeFilter.myVaultOnly = true;\n    } else {\n      this.activeFilter.selectedOrganizationId = orgId;\n    }\n    await this.vaultFilterService.ensureVaultFiltersAreExpanded();\n    await this.applyVaultFilter(this.activeFilter);\n  }\n\n  filterSearchText(searchText: string) {\n    this.ciphersComponent.searchText = searchText;\n    this.ciphersComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (cipher.organizationId == null && !canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    } else if (cipher.organizationId != null) {\n      const org = await this.organizationService.get(cipher.organizationId);\n      if (org != null && (org.maxStorageGb == null || org.maxStorageGb === 0)) {\n        this.messagingService.send(\"upgradeOrganization\", {\n          organizationId: cipher.organizationId,\n        });\n        return;\n      }\n    }\n\n    let madeAttachmentChanges = false;\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        comp.onReuploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.ciphersComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async shareCipher(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      ShareComponent,\n      this.shareModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        comp.onSharedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addFolder() {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = null;\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n      }\n    );\n  }\n\n  async editFolder(folderId: string) {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = folderId;\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n        comp.onDeletedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.type = this.activeFilter.cipherType;\n    component.folderId = this.folderId === \"none\" ? null : this.folderId;\n    if (this.activeFilter.selectedCollectionId != null) {\n      const collection = this.filterComponent.collections.fullList.filter(\n        (c) => c.id === this.activeFilter.selectedCollectionId\n      );\n      if (collection.length > 0) {\n        component.organizationId = collection[0].organizationId;\n        component.collectionIds = [this.activeFilter.selectedCollectionId];\n      }\n    }\n    if (this.activeFilter.selectedFolderId && this.activeFilter.selectedFolder) {\n      component.folderId = this.activeFilter.selectedFolderId;\n    }\n    if (this.activeFilter.selectedOrganizationId) {\n      component.organizationId = this.activeFilter.selectedOrganizationId;\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    return this.editCipherId(cipher?.id);\n  }\n\n  async editCipherId(id: string) {\n    const cipher = await this.cipherService.get(id);\n    if (cipher != null && cipher.reprompt != 0) {\n      if (!(await this.passwordRepromptService.showPasswordPrompt())) {\n        this.go({ cipherId: null, itemId: null });\n        return;\n      }\n    }\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = id;\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n\n    modal.onClosedPromise().then(() => {\n      this.go({ cipherId: null, itemId: null });\n    });\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n  }\n\n  async updateKey() {\n    await this.modalService.openViewRef(UpdateKeyComponent, this.updateKeyModalRef);\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        favorites: this.activeFilter.status === \"favorites\" ? true : null,\n        type: this.activeFilter.cipherType,\n        folderId: this.activeFilter.selectedFolderId,\n        collectionId: this.activeFilter.selectedCollectionId,\n        deleted: this.activeFilter.status === \"trash\" ? true : null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: \"merge\",\n      replaceUrl: true,\n    });\n  }\n}\n\n/**\n * Allows backwards compatibility with\n * old links that used the original `cipherId` param\n */\nconst getCipherIdFromParams = (params: Params): string => {\n  return params[\"itemId\"] || params[\"cipherId\"];\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { VaultComponent } from \"./vault.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VaultComponent,\n    data: { titleId: \"vaults\" },\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaultRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { VaultSharedModule } from \"./shared/vault-shared.module\";\nimport { VaultRoutingModule } from \"./vault-routing.module\";\nimport { VaultComponent } from \"./vault.component\";\n\n@NgModule({\n  imports: [VaultSharedModule, VaultRoutingModule],\n  declarations: [VaultComponent, CiphersComponent],\n  exports: [VaultComponent],\n})\nexport class VaultModule {}\n","import { NgModule } from \"@angular/core\";\nimport { Route, RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { LockGuard } from \"@bitwarden/angular/guards/lock.guard\";\nimport { UnauthGuard } from \"@bitwarden/angular/guards/unauth.guard\";\n\nimport { flagEnabled, FlagName } from \"../utils/flags\";\n\nimport { AcceptEmergencyComponent } from \"./accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"./accounts/accept-organization.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RecoverDeleteComponent } from \"./accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"./accounts/recover-two-factor.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TrialInitiationComponent } from \"./accounts/trial-initiation/trial-initiation.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"./accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"./accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"./accounts/verify-recover-delete.component\";\nimport { HomeGuard } from \"./guards/home.guard\";\nimport { FrontendLayoutComponent } from \"./layouts/frontend-layout.component\";\nimport { UserLayoutComponent } from \"./layouts/user-layout.component\";\nimport { OrganizationsRoutingModule } from \"./organizations/organization-routing.module\";\nimport { AcceptFamilySponsorshipComponent } from \"./organizations/sponsorships/accept-family-sponsorship.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"./organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ReportsModule } from \"./reports\";\nimport { AccessComponent } from \"./send/access.component\";\nimport { SendComponent } from \"./send/send.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { CreateOrganizationComponent } from \"./settings/create-organization.component\";\nimport { DomainRulesComponent } from \"./settings/domain-rules.component\";\nimport { EmergencyAccessViewComponent } from \"./settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"./settings/emergency-access.component\";\nimport { PreferencesComponent } from \"./settings/preferences.component\";\nimport { SecurityRoutingModule } from \"./settings/security-routing.module\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"./settings/sponsored-families.component\";\nimport { SubscriptionRoutingModule } from \"./settings/subscription-routing.module\";\nimport { GeneratorComponent } from \"./tools/generator.component\";\nimport { ToolsComponent } from \"./tools/tools.component\";\nimport { VaultModule } from \"./vault/vault.module\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    data: { doNotSaveUrl: true },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        children: [], // Children lets us have an empty component.\n        canActivate: [HomeGuard], // Redirects either to vault, login or lock page.\n      },\n      { path: \"login\", component: LoginComponent, canActivate: [UnauthGuard] },\n      { path: \"2fa\", component: TwoFactorComponent, canActivate: [UnauthGuard] },\n      {\n        path: \"register\",\n        component: RegisterComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"createAccount\" },\n      },\n      buildFlaggedRoute(\"showTrial\", {\n        path: \"trial\",\n        component: TrialInitiationComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"startTrial\" },\n      }),\n      {\n        path: \"sso\",\n        component: SsoComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"enterpriseSingleSignOn\" },\n      },\n      {\n        path: \"set-password\",\n        component: SetPasswordComponent,\n        data: { titleId: \"setMasterPassword\" },\n      },\n      {\n        path: \"hint\",\n        component: HintComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"passwordHint\" },\n      },\n      {\n        path: \"lock\",\n        component: LockComponent,\n        canActivate: [LockGuard],\n      },\n      { path: \"verify-email\", component: VerifyEmailTokenComponent },\n      {\n        path: \"accept-organization\",\n        component: AcceptOrganizationComponent,\n        data: { titleId: \"joinOrganization\", doNotSaveUrl: false },\n      },\n      {\n        path: \"accept-emergency\",\n        component: AcceptEmergencyComponent,\n        data: { titleId: \"acceptEmergency\", doNotSaveUrl: false },\n      },\n      {\n        path: \"accept-families-for-enterprise\",\n        component: AcceptFamilySponsorshipComponent,\n        data: { titleId: \"acceptFamilySponsorship\", doNotSaveUrl: false },\n      },\n      { path: \"recover\", pathMatch: \"full\", redirectTo: \"recover-2fa\" },\n      {\n        path: \"recover-2fa\",\n        component: RecoverTwoFactorComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"recoverAccountTwoStep\" },\n      },\n      {\n        path: \"recover-delete\",\n        component: RecoverDeleteComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"verify-recover-delete\",\n        component: VerifyRecoverDeleteComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"send/:sendId/:key\",\n        component: AccessComponent,\n        data: { title: \"Bitwarden Send\" },\n      },\n      {\n        path: \"update-temp-password\",\n        component: UpdateTempPasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"updateTempPassword\" },\n      },\n      {\n        path: \"update-password\",\n        component: UpdatePasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"updatePassword\" },\n      },\n      {\n        path: \"remove-password\",\n        component: RemovePasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"removeMasterPassword\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    component: UserLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: \"vault\",\n        loadChildren: () => VaultModule,\n      },\n      { path: \"sends\", component: SendComponent, data: { title: \"Send\" } },\n      {\n        path: \"create-organization\",\n        component: CreateOrganizationComponent,\n        data: { titleId: \"newOrganization\" },\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n          { path: \"account\", component: AccountComponent, data: { titleId: \"myAccount\" } },\n          {\n            path: \"preferences\",\n            component: PreferencesComponent,\n            data: { titleId: \"preferences\" },\n          },\n          {\n            path: \"security\",\n            loadChildren: () => SecurityRoutingModule,\n          },\n          {\n            path: \"domain-rules\",\n            component: DomainRulesComponent,\n            data: { titleId: \"domainRules\" },\n          },\n          {\n            path: \"subscription\",\n            loadChildren: () => SubscriptionRoutingModule,\n          },\n          {\n            path: \"emergency-access\",\n            children: [\n              {\n                path: \"\",\n                component: EmergencyAccessComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n              {\n                path: \":id\",\n                component: EmergencyAccessViewComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n            ],\n          },\n          {\n            path: \"sponsored-families\",\n            component: SponsoredFamiliesComponent,\n            data: { titleId: \"sponsoredFamilies\" },\n          },\n        ],\n      },\n      {\n        path: \"tools\",\n        component: ToolsComponent,\n        canActivate: [AuthGuard],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"generator\" },\n          {\n            path: \"\",\n            loadChildren: () =>\n              import(\"./tools/import-export/import-export.module\").then(\n                (m) => m.ImportExportModule\n              ),\n          },\n          {\n            path: \"generator\",\n            component: GeneratorComponent,\n            data: { titleId: \"generator\" },\n          },\n        ],\n      },\n      {\n        path: \"reports\",\n        loadChildren: () => ReportsModule,\n      },\n      { path: \"setup/families-for-enterprise\", component: FamiliesForEnterpriseSetupComponent },\n    ],\n  },\n  {\n    path: \"organizations\",\n    loadChildren: () => OrganizationsRoutingModule,\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      paramsInheritanceStrategy: \"always\",\n      // enableTracing: true,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class OssRoutingModule {}\n\nexport function buildFlaggedRoute(flagName: FlagName, route: Route): Route {\n  return flagEnabled(flagName)\n    ? route\n    : {\n        path: route.path,\n        redirectTo: \"/\",\n      };\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\n\nimport { VerticalStepContentComponent } from \"./vertical-step-content.component\";\nimport { VerticalStep } from \"./vertical-step.component\";\nimport { VerticalStepperComponent } from \"./vertical-stepper.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [VerticalStepperComponent, VerticalStep, VerticalStepContentComponent],\n  exports: [VerticalStepperComponent, VerticalStep],\n})\nexport class VerticalStepperModule {}\n","import { CdkStepperModule } from \"@angular/cdk/stepper\";\nimport { TitleCasePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { FormFieldModule } from \"@bitwarden/components\";\n\nimport { OrganizationCreateModule } from \"../../organizations/create/organization-create.module\";\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\nimport { RegisterFormModule } from \"../register-form/register-form.module\";\n\nimport { BillingComponent } from \"./billing.component\";\nimport { ConfirmationDetailsComponent } from \"./confirmation-details.component\";\nimport { EnterpriseContentComponent } from \"./enterprise-content.component\";\nimport { FamiliesContentComponent } from \"./families-content.component\";\nimport { TeamsContentComponent } from \"./teams-content.component\";\nimport { TrialInitiationComponent } from \"./trial-initiation.component\";\nimport { VerticalStepperModule } from \"./vertical-stepper/vertical-stepper.module\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    CdkStepperModule,\n    VerticalStepperModule,\n    FormFieldModule,\n    RegisterFormModule,\n    OrganizationCreateModule,\n    LooseComponentsModule,\n  ],\n  declarations: [\n    TrialInitiationComponent,\n    EnterpriseContentComponent,\n    FamiliesContentComponent,\n    TeamsContentComponent,\n    ConfirmationDetailsComponent,\n    BillingComponent,\n  ],\n  exports: [TrialInitiationComponent],\n  providers: [TitleCasePipe],\n})\nexport class TrialInitiationModule {}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\n\n@NgModule({\n  imports: [SharedModule, ScrollingModule],\n  declarations: [EntityUsersComponent],\n  exports: [EntityUsersComponent],\n})\nexport class OrganizationManageModule {}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\n\nimport { EnrollMasterPasswordReset } from \"./enroll-master-password-reset.component\";\n\n@NgModule({\n  imports: [SharedModule, ScrollingModule, LooseComponentsModule],\n  declarations: [EnrollMasterPasswordReset],\n  exports: [EnrollMasterPasswordReset],\n})\nexport class OrganizationUserModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { TrialInitiationModule } from \"./accounts/trial-initiation/trial-initiation.module\";\nimport { OrganizationCreateModule } from \"./organizations/create/organization-create.module\";\nimport { OrganizationManageModule } from \"./organizations/manage/organization-manage.module\";\nimport { OrganizationUserModule } from \"./organizations/users/organization-user.module\";\nimport { LooseComponentsModule, SharedModule } from \"./shared\";\nimport { OrganizationBadgeModule } from \"./vault/organization-badge/organization-badge.module\";\nimport { VaultFilterModule } from \"./vault/vault-filter/vault-filter.module\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    LooseComponentsModule,\n    TrialInitiationModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    OrganizationManageModule,\n    OrganizationUserModule,\n    OrganizationCreateModule,\n  ],\n  exports: [\n    SharedModule,\n    LooseComponentsModule,\n    TrialInitiationModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n  ],\n  bootstrap: [],\n})\nexport class OssModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nconst routes: Routes = [{ path: \"**\", redirectTo: \"\" }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WildcardRoutingModule {}\n","export class ProviderAddOrganizationRequest {\n  organizationId: string;\n  key: string;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { ProviderAddOrganizationRequest } from \"@bitwarden/common/models/request/provider/providerAddOrganizationRequest\";\n\n@Injectable()\nexport class WebProviderService {\n  constructor(\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private apiService: ApiService\n  ) {}\n\n  async addOrganizationToProvider(providerId: string, organizationId: string) {\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const providerKey = await this.cryptoService.getProviderKey(providerId);\n\n    const encryptedOrgKey = await this.cryptoService.encrypt(orgKey.key, providerKey);\n\n    const request = new ProviderAddOrganizationRequest();\n    request.organizationId = organizationId;\n    request.key = encryptedOrgKey.encryptedString;\n\n    const response = await this.apiService.postProviderAddOrganization(providerId, request);\n    await this.syncService.fullSync(true);\n    return response;\n  }\n\n  async detachOrganizastion(providerId: string, organizationId: string): Promise<any> {\n    await this.apiService.deleteProviderOrganization(providerId, organizationId);\n    await this.syncService.fullSync(true);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"addTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"addTitle\">\n          {{ \"addExistingOrganization\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <ng-container *ngIf=\"!loading\">\n          <table class=\"table table-hover table-list\">\n            <tr *ngFor=\"let o of organizations\">\n              <td width=\"30\">\n                <app-avatar [data]=\"o.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar>\n              </td>\n              <td>\n                {{ o.name }}\n              </td>\n              <td>\n                <button\n                  class=\"btn btn-outline-secondary pull-right\"\n                  (click)=\"add(o)\"\n                  [disabled]=\"formPromise\"\n                >\n                  Add\n                </button>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\n@Component({\n  selector: \"provider-add-organization\",\n  templateUrl: \"add-organization.component.html\",\n})\nexport class AddOrganizationComponent implements OnInit {\n  @Input() providerId: string;\n  @Input() organizations: Organization[];\n  @Output() onAddedOrganization = new EventEmitter();\n\n  provider: Provider;\n  formPromise: Promise<any>;\n  loading = true;\n\n  constructor(\n    private providerService: ProviderService,\n    private webProviderService: WebProviderService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private validationService: ValidationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    if (this.providerId == null) {\n      return;\n    }\n\n    this.provider = await this.providerService.get(this.providerId);\n\n    this.loading = false;\n  }\n\n  async add(organization: Organization) {\n    if (this.formPromise) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"addOrganizationConfirmation\", organization.name, this.provider.name),\n      organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.formPromise = this.webProviderService.addOrganizationToProvider(\n        this.providerId,\n        organization.id\n      );\n      await this.formPromise;\n    } catch (e) {\n      this.validationService.showError(e);\n      return;\n    } finally {\n      this.formPromise = null;\n    }\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"organizationJoinedProvider\")\n    );\n    this.onAddedOrganization.emit();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Permissions } from \"@bitwarden/common/enums/permissions\";\n\n@Injectable()\nexport class PermissionsGuard implements CanActivate {\n  constructor(private providerService: ProviderService, private router: Router) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const provider = await this.providerService.get(route.params.providerId);\n    const permissions = route.data == null ? null : (route.data.permissions as Permissions[]);\n\n    if (\n      (permissions.indexOf(Permissions.AccessEventLogs) !== -1 && provider.canAccessEventLogs) ||\n      (permissions.indexOf(Permissions.ManageProvider) !== -1 && provider.isProviderAdmin) ||\n      (permissions.indexOf(Permissions.ManageUsers) !== -1 && provider.canManageUsers)\n    ) {\n      return true;\n    }\n\n    this.router.navigate([\"/providers\", provider.id]);\n    return false;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\n\n@Injectable()\nexport class ProviderGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private providerService: ProviderService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const provider = await this.providerService.get(route.params.providerId);\n    if (provider == null) {\n      this.router.navigate([\"/\"]);\n      return false;\n    }\n    if (!provider.isProviderAdmin && !provider.enabled) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"providerIsDisabled\"));\n      this.router.navigate([\"/\"]);\n      return false;\n    }\n\n    return true;\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"container page-content\">\n  <div class=\"page-header d-flex\">\n    <h1>{{ \"providers\" | i18n }}</h1>\n  </div>\n  <p *ngIf=\"!loaded\" class=\"text-muted\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"loaded\">\n    <table class=\"table table-hover table-list\" *ngIf=\"providers && providers.length\">\n      <tbody>\n        <tr *ngFor=\"let p of providers\">\n          <td width=\"30\">\n            <app-avatar [data]=\"p.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" [routerLink]=\"['/providers', p.id]\">{{ p.name }}</a>\n            <ng-container *ngIf=\"!p.enabled\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-danger\"\n                title=\"{{ 'providerIsDisabled' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"providerIsDisabled\" | i18n }}</span>\n            </ng-container>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"app-providers\",\n  templateUrl: \"providers.component.html\",\n})\nexport class ProvidersComponent implements OnInit {\n  providers: Provider[];\n  loaded = false;\n  actionPromise: Promise<any>;\n\n  constructor(private providerService: ProviderService, private i18nService: I18nService) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    await this.load();\n  }\n\n  async load() {\n    const providers = await this.providerService.getAll();\n    providers.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.providers = providers;\n    this.loaded = true;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"clients\" | i18n }}</h1>\n\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <a class=\"btn btn-sm btn-outline-primary ml-3\" routerLink=\"create\" *ngIf=\"manageOrganizations\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newClientOrganization\" | i18n }}\n    </a>\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"addExistingOrganization()\"\n      *ngIf=\"manageOrganizations && showAddExisting\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"addExistingOrganization\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<ng-container\n  *ngIf=\"!loading && (clients | search: searchText:'organizationName':'id') as searchedClients\"\n>\n  <p *ngIf=\"!searchedClients.length\">{{ \"noClientsInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedClients.length\">\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <thead>\n        <tr>\n          <th colspan=\"2\">{{ \"name\" | i18n }}</th>\n          <th>{{ \"numberOfUsers\" | i18n }}</th>\n          <th>{{ \"billingPlan\" | i18n }}</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let o of searchedClients\">\n          <td width=\"30\">\n            <app-avatar\n              [data]=\"o.organizationName\"\n              size=\"25\"\n              [circle]=\"true\"\n              [fontSize]=\"14\"\n            ></app-avatar>\n          </td>\n          <td>\n            <a [routerLink]=\"['/organizations', o.organizationId]\">{{ o.organizationName }}</a>\n          </td>\n          <td>\n            <span>{{ o.userCount }}</span>\n            <span *ngIf=\"o.seats != null\"> / {{ o.seats }}</span>\n          </td>\n          <td>\n            <span>{{ o.plan }}</span>\n          </td>\n          <td class=\"table-list-options\" *ngIf=\"manageOrganizations\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(o)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n\n<ng-template #add></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ProviderOrganizationOrganizationDetailsResponse } from \"@bitwarden/common/models/response/provider/providerOrganizationResponse\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\nimport { AddOrganizationComponent } from \"./add-organization.component\";\n\nconst DisallowedPlanTypes = [\n  PlanType.Free,\n  PlanType.FamiliesAnnually2019,\n  PlanType.FamiliesAnnually,\n];\n\n@Component({\n  templateUrl: \"clients.component.html\",\n})\nexport class ClientsComponent implements OnInit {\n  @ViewChild(\"add\", { read: ViewContainerRef, static: true }) addModalRef: ViewContainerRef;\n\n  providerId: any;\n  searchText: string;\n  addableOrganizations: Organization[];\n  loading = true;\n  manageOrganizations = false;\n  showAddExisting = false;\n\n  clients: ProviderOrganizationOrganizationDetailsResponse[];\n  pagedClients: ProviderOrganizationOrganizationDetailsResponse[];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n  protected actionPromise: Promise<any>;\n  private pagedClientsCount = 0;\n\n  constructor(\n    private route: ActivatedRoute,\n    private providerService: ProviderService,\n    private apiService: ApiService,\n    private searchService: SearchService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private validationService: ValidationService,\n    private webProviderService: WebProviderService,\n    private logService: LogService,\n    private modalService: ModalService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n\n      await this.load();\n\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderClients(this.providerId);\n    this.clients = response.data != null && response.data.length > 0 ? response.data : [];\n    this.manageOrganizations =\n      (await this.providerService.get(this.providerId)).type === ProviderUserType.ProviderAdmin;\n    const candidateOrgs = (await this.organizationService.getAll()).filter(\n      (o) => o.isOwner && o.providerId == null\n    );\n    const allowedOrgsIds = await Promise.all(\n      candidateOrgs.map((o) => this.apiService.getOrganization(o.id))\n    ).then((orgs) =>\n      orgs.filter((o) => !DisallowedPlanTypes.includes(o.planType)).map((o) => o.id)\n    );\n    this.addableOrganizations = candidateOrgs.filter((o) => allowedOrgsIds.includes(o.id));\n\n    this.showAddExisting = this.addableOrganizations.length !== 0;\n    this.loading = false;\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.clients && this.clients.length > this.pageSize;\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  async resetPaging() {\n    this.pagedClients = [];\n    this.loadMore();\n  }\n\n  loadMore() {\n    if (!this.clients || this.clients.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedClients.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedClientsCount > this.pageSize) {\n      pagedSize = this.pagedClientsCount;\n    }\n    if (this.clients.length > pagedLength) {\n      this.pagedClients = this.pagedClients.concat(\n        this.clients.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedClientsCount = this.pagedClients.length;\n    this.didScroll = this.pagedClients.length > this.pageSize;\n  }\n\n  async addExistingOrganization() {\n    const [modal] = await this.modalService.openViewRef(\n      AddOrganizationComponent,\n      this.addModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.organizations = this.addableOrganizations;\n        comp.onAddedOrganization.subscribe(async () => {\n          try {\n            await this.load();\n            modal.close();\n          } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n          }\n        });\n      }\n    );\n  }\n\n  async remove(organization: ProviderOrganizationOrganizationDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"detachOrganizationConfirmation\"),\n      organization.organizationName,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.webProviderService.detachOrganizastion(\n      this.providerId,\n      organization.id\n    );\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"detachedOrganization\", organization.organizationName)\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationPlansComponent } from \"src/app/settings/organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  providerId: string;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n    });\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"newClientOrganization\" | i18n }}</h1>\n</div>\n<p>{{ \"newClientOrganizationDesc\" | i18n }}</p>\n<app-organization-plans [providerId]=\"providerId\"></app-organization-plans>\n","export class ProviderUserAcceptRequest {\n  token: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ providerName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinProviderDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ProviderUserAcceptRequest } from \"@bitwarden/common/models/request/provider/providerUserAcceptRequest\";\n\nimport { BaseAcceptComponent } from \"src/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-provider\",\n  templateUrl: \"accept-provider.component.html\",\n})\nexport class AcceptProviderComponent extends BaseAcceptComponent {\n  providerName: string;\n\n  failedMessage = \"providerInviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"providerUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    private apiService: ApiService,\n    platformUtilService: PlatformUtilsService\n  ) {\n    super(router, platformUtilService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params) {\n    const request = new ProviderUserAcceptRequest();\n    request.token = qParams.token;\n\n    await this.apiService.postProviderUserAccept(\n      qParams.providerId,\n      qParams.providerUserId,\n      request\n    );\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"providerInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params) {\n    this.providerName = qParams.providerName;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"eventLogs\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"form-inline\">\n      <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"start\"\n        placeholder=\"{{ 'startDate' | i18n }}\"\n        [(ngModel)]=\"start\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n      <span class=\"mx-2\">-</span>\n      <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"end\"\n        placeholder=\"{{ 'endDate' | i18n }}\"\n        [(ngModel)]=\"end\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n    </div>\n    <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary ml-3\"\n        (click)=\"loadEvents(true)\"\n        [disabled]=\"loaded && refreshForm.loading\"\n      >\n        <i\n          class=\"bwi bwi-refresh bwi-fw\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{ 'bwi-spin': loaded && refreshForm.loading }\"\n        ></i>\n        {{ \"refresh\" | i18n }}\n      </button>\n    </form>\n    <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\"\n        [ngClass]=\"{ loading: exportForm.loading }\"\n        (click)=\"exportEvents()\"\n        [disabled]=\"(loaded && exportForm.loading) || dirtyDates\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i>\n        <span>{{ \"export\" | i18n }}</span>\n      </button>\n    </form>\n  </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n  <p *ngIf=\"!events || !events.length\">{{ \"noEventsInList\" | i18n }}</p>\n  <table class=\"table table-hover\" *ngIf=\"events && events.length\">\n    <thead>\n      <tr>\n        <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n        <th class=\"border-top-0\" width=\"40\">\n          <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n        </th>\n        <th class=\"border-top-0\" width=\"150\">{{ \"user\" | i18n }}</th>\n        <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of events\">\n        <td>{{ e.date | date: \"medium\" }}</td>\n        <td>\n          <i\n            class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n            title=\"{{ e.appName }}, {{ e.ip }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n        </td>\n        <td>\n          <span title=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n        </td>\n        <td [innerHTML]=\"e.message\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <button\n    #moreBtn\n    [appApiAction]=\"morePromise\"\n    type=\"button\"\n    class=\"btn btn-block btn-link btn-submit\"\n    (click)=\"loadEvents(false)\"\n    [disabled]=\"loaded && moreBtn.loading\"\n    *ngIf=\"continuationToken\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"loadMore\" | i18n }}</span>\n  </button>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\n\nimport { BaseEventsComponent } from \"src/app/common/base.events.component\";\nimport { EventService } from \"src/app/core\";\n\n@Component({\n  selector: \"provider-events\",\n  templateUrl: \"events.component.html\",\n})\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n  exportFileName = \"provider-events\";\n  providerId: string;\n\n  private providerUsersUserIdMap = new Map<string, any>();\n  private providerUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    eventService: EventService,\n    i18nService: I18nService,\n    private providerService: ProviderService,\n    exportService: ExportService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    logService: LogService,\n    private userNamePipe: UserNamePipe,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      eventService,\n      i18nService,\n      exportService,\n      platformUtilsService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n      if (provider == null || !provider.useEvents) {\n        this.router.navigate([\"/providers\", this.providerId]);\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderUsers(this.providerId);\n    response.data.forEach((u) => {\n      const name = this.userNamePipe.transform(u);\n      this.providerUsersIdMap.set(u.id, { name: name, email: u.email });\n      this.providerUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n    });\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n    return this.apiService.getEventsProvider(\n      this.providerId,\n      startDate,\n      endDate,\n      continuationToken\n    );\n  }\n\n  protected getUserName(r: EventResponse, userId: string) {\n    return userId != null && this.providerUsersUserIdMap.has(userId)\n      ? this.providerUsersUserIdMap.get(userId)\n      : null;\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"provider\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"people\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canManageUsers\"\n          >\n            {{ \"people\" | i18n }}\n          </a>\n          <a\n            routerLink=\"events\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canAccessEventLogs && accessEvents\"\n          >\n            {{ \"eventLogs\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"provider-manage\",\n  templateUrl: \"manage.component.html\",\n})\nexport class ManageComponent implements OnInit {\n  provider: Provider;\n  accessEvents = false;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.provider = await this.providerService.get(params.providerId);\n      this.accessEvents = this.provider.useEvents;\n    });\n  }\n}\n","export class ProviderUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class ProviderUserConfirmRequest {\n  key: string;\n}\n","type ProviderUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class ProviderUserBulkConfirmRequest {\n  keys: ProviderUserBulkRequestEntry[];\n\n  constructor(keys: ProviderUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserBulkConfirmRequest } from \"@bitwarden/common/models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/providerUserBulkRequest\";\n\nimport { BulkConfirmComponent as OrganizationBulkConfirmComponent } from \"src/app/organizations/manage/bulk/bulk-confirm.component\";\nimport { BulkUserDetails } from \"src/app/organizations/manage/bulk/bulk-status.component\";\n\n@Component({\n  templateUrl:\n    \"../../../../../../../apps/web/src/app/organizations/manage/bulk/bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent extends OrganizationBulkConfirmComponent {\n  @Input() providerId: string;\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === ProviderUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    const request = new ProviderUserBulkRequest(this.filteredUsers.map((user) => user.id));\n    return await this.apiService.postProviderUsersPublicKey(this.providerId, request);\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getProviderKey(this.providerId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new ProviderUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.apiService.postProviderUserBulkConfirm(this.providerId, request);\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/providerUserBulkRequest\";\n\nimport { BulkRemoveComponent as OrganizationBulkRemoveComponent } from \"src/app/organizations/manage/bulk/bulk-remove.component\";\n\n@Component({\n  templateUrl:\n    \"../../../../../../../apps/web/src/app/organizations/manage/bulk/bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent extends OrganizationBulkRemoveComponent {\n  @Input() providerId: string;\n\n  async deleteUsers() {\n    const request = new ProviderUserBulkRequest(this.users.map((user) => user.id));\n    return await this.apiService.deleteManyProviderUsers(this.providerId, request);\n  }\n\n  protected get removeUsersWarning() {\n    return this.i18nService.t(\"removeUsersWarning\");\n  }\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserInviteRequest {\n  emails: string[] = [];\n  type: ProviderUserType;\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserUpdateRequest {\n  type: ProviderUserType;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"providerInviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/provider-users/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeServiceUser\"\n            [value]=\"userType.ServiceUser\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeServiceUser\">\n            {{ \"serviceUser\" | i18n }}\n            <small>{{ \"serviceUserDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeProviderAdmin\"\n            [value]=\"userType.ProviderAdmin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeProviderAdmin\">\n            {{ \"providerAdmin\" | i18n }}\n            <small>{{ \"providerAdminDesc\" | i18n }}</small>\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { PermissionsApi } from \"@bitwarden/common/models/api/permissionsApi\";\nimport { ProviderUserInviteRequest } from \"@bitwarden/common/models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"@bitwarden/common/models/request/provider/providerUserUpdateRequest\";\n\n@Component({\n  selector: \"provider-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() providerUserId: string;\n  @Input() providerId: string;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  emails: string;\n  type: ProviderUserType = ProviderUserType.ServiceUser;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  userType = ProviderUserType;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.providerUserId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.apiService.getProviderUser(this.providerId, this.providerUserId);\n        this.type = user.type;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new ProviderUserUpdateRequest();\n        request.type = this.type;\n        this.formPromise = this.apiService.putProviderUser(\n          this.providerId,\n          this.providerUserId,\n          request\n        );\n      } else {\n        const request = new ProviderUserInviteRequest();\n        request.emails = this.emails.trim().split(/\\s*,\\s*/);\n        request.type = this.type;\n        this.formPromise = this.apiService.postProviderUserInvite(this.providerId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteProviderUser(this.providerId, this.providerUserId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"people\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == null }\"\n        (click)=\"filter(null)\"\n      >\n        {{ \"all\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"allCount\">{{ allCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Invited }\"\n        (click)=\"filter(userStatusType.Invited)\"\n      >\n        {{ \"invited\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n        (click)=\"filter(userStatusType.Accepted)\"\n      >\n        {{ \"accepted\" | i18n }}\n        <span bitBadge badgeType=\"warning\" *ngIf=\"acceptedCount\">{{ acceptedCount }}</span>\n      </button>\n    </div>\n    <div class=\"ml-3\">\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <div class=\"dropdown ml-3\" appListDropdown>\n      <button\n        class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        appA11yTitle=\"{{ 'options' | i18n }}\"\n      >\n        <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n          <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n          {{ \"reinviteSelected\" | i18n }}\n        </button>\n        <button\n          class=\"dropdown-item text-success\"\n          appStopClick\n          (click)=\"bulkConfirm()\"\n          *ngIf=\"showBulkConfirmUsers\"\n        >\n          <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n          {{ \"confirmSelected\" | i18n }}\n        </button>\n        <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n          <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n          {{ \"remove\" | i18n }}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n          <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n          <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"inviteUser\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n  \"\n>\n  <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedUsers.length\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'confirmUsers' | i18n }}\"\n      icon=\"bwi bwi-check-circle\"\n      *ngIf=\"showConfirmUsers\"\n    >\n      {{ \"providerUsersNeedConfirmed\" | i18n }}\n    </app-callout>\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let u of searchedUsers\">\n          <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n            <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp />\n          </td>\n          <td width=\"30\">\n            <app-avatar\n              [data]=\"u | userName\"\n              [email]=\"u.email\"\n              size=\"25\"\n              [circle]=\"true\"\n              [fontSize]=\"14\"\n            >\n            </app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n              \"invited\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n              \"accepted\" | i18n\n            }}</span>\n            <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n          </td>\n          <td>\n            <ng-container *ngIf=\"u.twoFactorEnabled\">\n              <i\n                class=\"bwi bwi-lock\"\n                title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td>\n            <span *ngIf=\"u.type === userType.ProviderAdmin\">{{ \"providerAdmin\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.ServiceUser\">{{ \"serviceUser\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Custom\">{{ \"custom\" | i18n }}</span>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"reinvite(u)\"\n                  *ngIf=\"u.status === userStatusType.Invited\"\n                >\n                  <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                  {{ \"resendInvitation\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item text-success\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"confirm(u)\"\n                  *ngIf=\"u.status === userStatusType.Accepted\"\n                >\n                  <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                  {{ \"confirm\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"groups(u)\"\n                  *ngIf=\"accessGroups\"\n                >\n                  <i class=\"bwi bwi-fw bwi-sitemap\" aria-hidden=\"true\"></i>\n                  {{ \"groups\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"events(u)\"\n                  *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"\n                >\n                  <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                  {{ \"eventLogs\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n<ng-template #bulkStatusTemplate></ng-template>\n<ng-template #bulkConfirmTemplate></ng-template>\n<ng-template #bulkRemoveTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"@bitwarden/common/models/request/provider/providerUserConfirmRequest\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { ProviderUserBulkResponse } from \"@bitwarden/common/models/response/provider/providerUserBulkResponse\";\nimport { ProviderUserUserDetailsResponse } from \"@bitwarden/common/models/response/provider/providerUserResponse\";\n\nimport { BasePeopleComponent } from \"src/app/common/base.people.component\";\nimport { BulkStatusComponent } from \"src/app/organizations/manage/bulk/bulk-status.component\";\nimport { EntityEventsComponent } from \"src/app/organizations/manage/entity-events.component\";\n\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\n\n@Component({\n  selector: \"provider-people\",\n  templateUrl: \"people.component.html\",\n})\nexport class PeopleComponent\n  extends BasePeopleComponent<ProviderUserUserDetailsResponse>\n  implements OnInit\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = ProviderUserType;\n  userStatusType = ProviderUserStatusType;\n  providerId: string;\n  accessEvents = false;\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    private router: Router,\n    searchService: SearchService,\n    validationService: ValidationService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    stateService: StateService,\n    private providerService: ProviderService\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n\n      if (!provider.canManageUsers) {\n        this.router.navigate([\"../\"], { relativeTo: this.route });\n        return;\n      }\n\n      this.accessEvents = provider.useEvents;\n\n      await this.load();\n\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n        if (qParams.viewEvents != null) {\n          const user = this.users.filter((u) => u.id === qParams.viewEvents);\n          if (user.length > 0 && user[0].status === ProviderUserStatusType.Confirmed) {\n            this.events(user[0]);\n          }\n        }\n      });\n    });\n  }\n\n  getUsers(): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    return this.apiService.getProviderUsers(this.providerId);\n  }\n\n  deleteUser(id: string): Promise<any> {\n    return this.apiService.deleteProviderUser(this.providerId, id);\n  }\n\n  revokeUser(id: string): Promise<any> {\n    // Not implemented.\n    return null;\n  }\n\n  restoreUser(id: string): Promise<any> {\n    // Not implemented.\n    return null;\n  }\n\n  reinviteUser(id: string): Promise<any> {\n    return this.apiService.postProviderUserReinvite(this.providerId, id);\n  }\n\n  async confirmUser(user: ProviderUserUserDetailsResponse, publicKey: Uint8Array): Promise<any> {\n    const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n    const key = await this.cryptoService.rsaEncrypt(providerKey.key, publicKey.buffer);\n    const request = new ProviderUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.apiService.postProviderUserConfirm(this.providerId, user.id, request);\n  }\n\n  async edit(user: ProviderUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.providerId = this.providerId;\n        comp.providerUserId = user != null ? user.id : null;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n      }\n    );\n  }\n\n  async events(user: ProviderUserUserDetailsResponse) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = this.userNamePipe.transform(user);\n      comp.providerId = this.providerId;\n      comp.entityId = user.id;\n      comp.showUser = false;\n      comp.entity = \"user\";\n    });\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === ProviderUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const request = new ProviderUserBulkRequest(filteredUsers.map((user) => user.id));\n      const response = this.apiService.postManyProviderUserReinvite(this.providerId, request);\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  private async showBulkStatus(\n    users: ProviderUserUserDetailsResponse[],\n    filteredUsers: ProviderUserUserDetailsResponse[],\n    request: Promise<ListResponse<ProviderUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          // eslint-disable-next-line\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id), // eslint-disable-line\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav\" *ngIf=\"provider\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <div class=\"my-auto d-flex align-items-center pl-1\">\n        <app-avatar [data]=\"provider.name\" size=\"45\" [circle]=\"true\"></app-avatar>\n        <div class=\"org-name ml-3\">\n          <span>{{ provider.name }}</span>\n          <small class=\"text-muted\">{{ \"provider\" | i18n }}</small>\n        </div>\n        <div class=\"ml-3 card border-danger text-danger bg-transparent\" *ngIf=\"!provider.enabled\">\n          <div class=\"card-body py-2\">\n            <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n            {{ \"providerIsDisabled\" | i18n }}\n          </div>\n        </div>\n      </div>\n      <ul class=\"nav nav-tabs\" *ngIf=\"showMenuBar\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"clients\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i>\n            {{ \"clients\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showManageTab\">\n          <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-sliders\" aria-hidden=\"true\"></i>\n            {{ \"manage\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showSettingsTab\">\n          <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-cogs\" aria-hidden=\"true\"></i>\n            {{ \"settings\" | i18n }}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"providers-layout\",\n  templateUrl: \"providers-layout.component.html\",\n})\nexport class ProvidersLayoutComponent {\n  provider: Provider;\n  private providerId: string;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    this.route.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    this.provider = await this.providerService.get(this.providerId);\n  }\n\n  get showMenuBar() {\n    return this.showManageTab || this.showSettingsTab;\n  }\n\n  get showManageTab() {\n    return this.provider.canManageUsers || this.provider.canAccessEventLogs;\n  }\n\n  get showSettingsTab() {\n    return this.provider.isProviderAdmin;\n  }\n\n  get manageRoute(): string {\n    switch (true) {\n      case this.provider.canManageUsers:\n        return \"manage/people\";\n      case this.provider.canAccessEventLogs:\n        return \"manage/events\";\n    }\n  }\n}\n","export class ProviderUpdateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myProvider\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"provider && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"provider.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"provider.billingEmail\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <app-avatar data=\"{{ provider.name }}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { ProviderUpdateRequest } from \"@bitwarden/common/models/request/provider/providerUpdateRequest\";\nimport { ProviderResponse } from \"@bitwarden/common/models/response/provider/providerResponse\";\n\n@Component({\n  selector: \"provider-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  selfHosted = false;\n  loading = true;\n  provider: ProviderResponse;\n  formPromise: Promise<any>;\n  taxFormPromise: Promise<any>;\n\n  private providerId: string;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      try {\n        this.provider = await this.apiService.getProvider(this.providerId);\n      } catch (e) {\n        this.logService.error(`Handled exception: ${e}`);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new ProviderUpdateRequest();\n      request.name = this.provider.name;\n      request.businessName = this.provider.businessName;\n      request.billingEmail = this.provider.billingEmail;\n\n      this.formPromise = this.apiService.putProvider(this.providerId, request).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerUpdated\"));\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\n\n@Component({\n  selector: \"provider-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent {\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      await this.providerService.get(params.providerId);\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myProvider\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setupProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"setupProviderLoginDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Params } from \"@angular/router\";\n\nimport { BaseAcceptComponent } from \"src/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-setup-provider\",\n  templateUrl: \"setup-provider.component.html\",\n})\nexport class SetupProviderComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"email\", \"token\"];\n\n  async authedHandler(qParams: Params) {\n    this.router.navigate([\"/providers/setup\"], { queryParams: qParams });\n  }\n\n  async unauthedHandler(qParams: Params) {\n    // Empty\n  }\n}\n","export class ProviderSetupRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  token: string;\n  key: string;\n}\n","<app-navbar></app-navbar>\n<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"setupProvider\" | i18n }}</h1>\n  </div>\n  <p>{{ \"setupProviderDesc\" | i18n }}</p>\n\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"loading\">\n    <h2 class=\"mt-5\">{{ \"generalInformation\" | i18n }}</h2>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required />\n      </div>\n      <div class=\"form-group col-6\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"billingEmail\"\n          required\n        />\n      </div>\n    </div>\n\n    <div class=\"mt-4\">\n      <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"submit\" | i18n }}</span>\n      </button>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n        {{ \"cancel\" | i18n }}\n      </button>\n    </div>\n  </form>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { ProviderSetupRequest } from \"@bitwarden/common/models/request/provider/providerSetupRequest\";\n\n@Component({\n  selector: \"provider-setup\",\n  templateUrl: \"setup.component.html\",\n})\nexport class SetupComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  formPromise: Promise<any>;\n\n  providerId: string;\n  token: string;\n  name: string;\n  billingEmail: string;\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService\n  ) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.providerId == null || qParams.email == null || qParams.token == null;\n\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"emergencyInviteAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.providerId = qParams.providerId;\n      this.token = qParams.token;\n\n      // Check if provider exists, redirect if it does\n      try {\n        const provider = await this.apiService.getProvider(this.providerId);\n        if (provider.name != null) {\n          this.router.navigate([\"/providers\", provider.id], { replaceUrl: true });\n        }\n      } catch (e) {\n        this.validationService.showError(e);\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit();\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  async doSubmit() {\n    try {\n      const shareKey = await this.cryptoService.makeShareKey();\n      const key = shareKey[0].encryptedString;\n\n      const request = new ProviderSetupRequest();\n      request.name = this.name;\n      request.billingEmail = this.billingEmail;\n      request.token = this.token;\n      request.key = key;\n\n      const provider = await this.apiService.postProviderSetup(this.providerId, request);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerSetup\"));\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/providers\", provider.id]);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { Permissions } from \"@bitwarden/common/enums/permissions\";\n\nimport { FrontendLayoutComponent } from \"src/app/layouts/frontend-layout.component\";\nimport { ProvidersComponent } from \"src/app/providers/providers.component\";\n\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { PermissionsGuard } from \"./guards/provider-type.guard\";\nimport { ProviderGuard } from \"./guards/provider.guard\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    component: ProvidersComponent,\n  },\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    children: [\n      {\n        path: \"setup-provider\",\n        component: SetupProviderComponent,\n        data: { titleId: \"setupProvider\" },\n      },\n      {\n        path: \"accept-provider\",\n        component: AcceptProviderComponent,\n        data: { titleId: \"acceptProvider\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: \"setup\",\n        component: SetupComponent,\n      },\n      {\n        path: \":providerId\",\n        component: ProvidersLayoutComponent,\n        canActivate: [ProviderGuard],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"clients\" },\n          { path: \"clients/create\", component: CreateOrganizationComponent },\n          { path: \"clients\", component: ClientsComponent, data: { titleId: \"clients\" } },\n          {\n            path: \"manage\",\n            component: ManageComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"people\",\n              },\n              {\n                path: \"people\",\n                component: PeopleComponent,\n                canActivate: [PermissionsGuard],\n                data: {\n                  titleId: \"people\",\n                  permissions: [Permissions.ManageUsers],\n                },\n              },\n              {\n                path: \"events\",\n                component: EventsComponent,\n                canActivate: [PermissionsGuard],\n                data: {\n                  titleId: \"eventLogs\",\n                  permissions: [Permissions.AccessEventLogs],\n                },\n              },\n            ],\n          },\n          {\n            path: \"settings\",\n            component: SettingsComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"account\",\n              },\n              {\n                path: \"account\",\n                component: AccountComponent,\n                canActivate: [PermissionsGuard],\n                data: {\n                  titleId: \"myProvider\",\n                  permissions: [Permissions.ManageProvider],\n                },\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProvidersRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { ComponentFactoryResolver, NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\n\nimport { OssModule } from \"src/app/oss.module\";\n\nimport { AddOrganizationComponent } from \"./clients/add-organization.component\";\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { PermissionsGuard } from \"./guards/provider-type.guard\";\nimport { ProviderGuard } from \"./guards/provider.guard\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { BulkConfirmComponent } from \"./manage/bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./manage/bulk/bulk-remove.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { UserAddEditComponent } from \"./manage/user-add-edit.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { ProvidersRoutingModule } from \"./providers-routing.module\";\nimport { WebProviderService } from \"./services/webProvider.service\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, OssModule, JslibModule, ProvidersRoutingModule],\n  declarations: [\n    AcceptProviderComponent,\n    AccountComponent,\n    AddOrganizationComponent,\n    BulkConfirmComponent,\n    BulkRemoveComponent,\n    ClientsComponent,\n    CreateOrganizationComponent,\n    EventsComponent,\n    ManageComponent,\n    PeopleComponent,\n    ProvidersLayoutComponent,\n    SettingsComponent,\n    SetupComponent,\n    SetupProviderComponent,\n    UserAddEditComponent,\n  ],\n  providers: [WebProviderService, ProviderGuard, PermissionsGuard],\n})\nexport class ProvidersModule {\n  constructor(modalService: ModalService, componentFactoryResolver: ComponentFactoryResolver) {\n    modalService.registerComponentFactoryResolver(\n      AddOrganizationComponent,\n      componentFactoryResolver\n    );\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { ProvidersModule } from \"./providers/providers.module\";\n\nconst routes: Routes = [\n  {\n    path: \"providers\",\n    loadChildren: () => ProvidersModule,\n  },\n  {\n    path: \"sm\",\n    loadChildren: async () => (await import(\"./sm/sm.module\")).SecretsManagerModule,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class DisableSendPolicy extends BasePolicy {\n  name = \"disableSend\";\n  description = \"disableSendPolicyDesc\";\n  type = PolicyType.DisableSend;\n  component = DisableSendPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-send\",\n  templateUrl: \"disable-send.component.html\",\n})\nexport class DisableSendPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"disableSendExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minComplexity\">{{ \"minComplexityScore\" | i18n }}</label>\n      <select\n        id=\"minComplexity\"\n        name=\"minComplexity\"\n        formControlName=\"minComplexity\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of passwordScores\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        min=\"8\"\n        name=\"minLength\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireUpper\"\n      name=\"requireUpper\"\n      formControlName=\"requireUpper\"\n    />\n    <label class=\"form-check-label\" for=\"requireUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireLower\"\n      name=\"requireLower\"\n      formControlName=\"requireLower\"\n    />\n    <label class=\"form-check-label\" for=\"requireLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireNumbers\"\n      name=\"requireNumbers\"\n      formControlName=\"requireNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"requireNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireSpecial\"\n      name=\"requireSpecial\"\n      formControlName=\"requireSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"requireSpecial\">!@#$%^&amp;*</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class MasterPasswordPolicy extends BasePolicy {\n  name = \"masterPassPolicyTitle\";\n  description = \"masterPassPolicyDesc\";\n  type = PolicyType.MasterPassword;\n  component = MasterPasswordPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-master-password\",\n  templateUrl: \"master-password.component.html\",\n})\nexport class MasterPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    minComplexity: [null],\n    minLength: [null],\n    requireUpper: [null],\n    requireLower: [null],\n    requireNumbers: [null],\n    requireSpecial: [null],\n  });\n\n  passwordScores: { name: string; value: number }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    i18nService: I18nService,\n    private organizationService: OrganizationService\n  ) {\n    super();\n\n    this.passwordScores = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"weak\") + \" (0)\", value: 0 },\n      { name: i18nService.t(\"weak\") + \" (1)\", value: 1 },\n      { name: i18nService.t(\"weak\") + \" (2)\", value: 2 },\n      { name: i18nService.t(\"good\") + \" (3)\", value: 3 },\n      { name: i18nService.t(\"strong\") + \" (4)\", value: 4 },\n    ];\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group mb-0\">\n      <label for=\"defaultType\">{{ \"defaultType\" | i18n }}</label>\n      <select\n        id=\"defaultType\"\n        name=\"defaultType\"\n        formControlName=\"defaultType\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of defaultTypes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n  </div>\n  <h3 class=\"mt-4\">{{ \"password\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minLength\"\n        min=\"5\"\n        max=\"128\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumbers\">{{ \"minNumbers\" | i18n }}</label>\n      <input\n        id=\"minNumbers\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumbers\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minNumbers\"\n      />\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minSpecial\">{{ \"minSpecial\" | i18n }}</label>\n      <input\n        id=\"minSpecial\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minSpecial\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minSpecial\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useUpper\"\n      formControlName=\"useUpper\"\n      name=\"useUpper\"\n    />\n    <label class=\"form-check-label\" for=\"useUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useLower\"\n      name=\"useLower\"\n      formControlName=\"useLower\"\n    />\n    <label class=\"form-check-label\" for=\"useLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useNumbers\"\n      name=\"useNumbers\"\n      formControlName=\"useNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"useNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useSpecial\"\n      name=\"useSpecial\"\n      formControlName=\"useSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"useSpecial\">!@#$%^&amp;*</label>\n  </div>\n  <h3 class=\"mt-4\">{{ \"passphrase\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumberWords\">{{ \"minimumNumberOfWords\" | i18n }}</label>\n      <input\n        id=\"minNumberWords\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumberWords\"\n        min=\"3\"\n        max=\"20\"\n        formControlName=\"minNumberWords\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"capitalize\"\n      name=\"capitalize\"\n      formControlName=\"capitalize\"\n    />\n    <label class=\"form-check-label\" for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"includeNumber\"\n      name=\"includeNumber\"\n      formControlName=\"includeNumber\"\n    />\n    <label class=\"form-check-label\" for=\"includeNumber\">{{ \"includeNumber\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PasswordGeneratorPolicy extends BasePolicy {\n  name = \"passwordGenerator\";\n  description = \"passwordGeneratorPolicyDesc\";\n  type = PolicyType.PasswordGenerator;\n  component = PasswordGeneratorPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-password-generator\",\n  templateUrl: \"password-generator.component.html\",\n})\nexport class PasswordGeneratorPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    defaultType: [null],\n    minLength: [null],\n    useUpper: [null],\n    useLower: [null],\n    useNumbers: [null],\n    useSpecial: [null],\n    minNumbers: [null],\n    minSpecial: [null],\n    minNumberWords: [null],\n    capitalize: [null],\n    includeNumber: [null],\n  });\n\n  defaultTypes: { name: string; value: string }[];\n\n  constructor(private formBuilder: UntypedFormBuilder, i18nService: I18nService) {\n    super();\n\n    this.defaultTypes = [\n      { name: i18nService.t(\"userPreference\"), value: null },\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PersonalOwnershipPolicy extends BasePolicy {\n  name = \"personalOwnership\";\n  description = \"personalOwnershipPolicyDesc\";\n  type = PolicyType.PersonalOwnership;\n  component = PersonalOwnershipPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-personal-ownership\",\n  templateUrl: \"personal-ownership.component.html\",\n})\nexport class PersonalOwnershipPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"personalOwnershipExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class RequireSsoPolicy extends BasePolicy {\n  name = \"requireSso\";\n  description = \"requireSsoPolicyDesc\";\n  type = PolicyType.RequireSso;\n  component = RequireSsoPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useSso;\n  }\n}\n\n@Component({\n  selector: \"policy-require-sso\",\n  templateUrl: \"require-sso.component.html\",\n})\nexport class RequireSsoPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n<app-callout type=\"warning\">\n  {{ \"requireSsoExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<app-callout type=\"warning\">\n  {{ \"resetPasswordPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"resetPasswordPolicyAutoEnroll\" | i18n }}</h3>\n  <p>{{ \"resetPasswordPolicyAutoEnrollDescription\" | i18n }}</p>\n  <app-callout type=\"warning\">\n    {{ \"resetPasswordPolicyAutoEnrollWarning\" | i18n }}\n  </app-callout>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"autoEnrollEnabled\"\n      name=\"AutoEnrollEnabled\"\n      formControlName=\"autoEnrollEnabled\"\n    />\n    <label class=\"form-check-label\" for=\"autoEnrollEnabled\">\n      {{ \"resetPasswordPolicyAutoEnrollCheckbox\" | i18n }}\n    </label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class ResetPasswordPolicy extends BasePolicy {\n  name = \"resetPasswordPolicy\";\n  description = \"resetPasswordPolicyDescription\";\n  type = PolicyType.ResetPassword;\n  component = ResetPasswordPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useResetPassword;\n  }\n}\n\n@Component({\n  selector: \"policy-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    autoEnrollEnabled: false,\n  });\n\n  defaultTypes: { name: string; value: string }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private organizationService: OrganizationService\n  ) {\n    super();\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SendOptionsPolicy extends BasePolicy {\n  name = \"sendOptions\";\n  description = \"sendOptionsPolicyDesc\";\n  type = PolicyType.SendOptions;\n  component = SendOptionsPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-send-options\",\n  templateUrl: \"send-options.component.html\",\n})\nexport class SendOptionsPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    disableHideEmail: false,\n  });\n\n  constructor(private formBuilder: UntypedFormBuilder) {\n    super();\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"sendOptionsExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"disableHideEmail\"\n      name=\"DisableHideEmail\"\n      formControlName=\"disableHideEmail\"\n    />\n    <label class=\"form-check-label\" for=\"disableHideEmail\">{{ \"disableHideEmail\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SingleOrgPolicy extends BasePolicy {\n  name = \"singleOrg\";\n  description = \"singleOrgDesc\";\n  type = PolicyType.SingleOrg;\n  component = SingleOrgPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-single-org\",\n  templateUrl: \"single-org.component.html\",\n})\nexport class SingleOrgPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    if (!this.enabled.value) {\n      if (policiesEnabledMap.get(PolicyType.RequireSso) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"requireSso\"))\n        );\n      }\n\n      if (policiesEnabledMap.get(PolicyType.MaximumVaultTimeout) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"maximumVaultTimeoutLabel\"))\n        );\n      }\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"singleOrgPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class TwoFactorAuthenticationPolicy extends BasePolicy {\n  name = \"twoStepLoginPolicyTitle\";\n  description = \"twoStepLoginPolicyDesc\";\n  type = PolicyType.TwoFactorAuthentication;\n  component = TwoFactorAuthenticationPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-two-factor-authentication\",\n  templateUrl: \"two-factor-authentication.component.html\",\n})\nexport class TwoFactorAuthenticationPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"twoStepLoginPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { DOCUMENT } from \"@angular/common\";\nimport { Component, Inject, NgZone, OnDestroy, OnInit, SecurityContext } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport * as jq from \"jquery\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport Swal from \"sweetalert2\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { InternalFolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SettingsService } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\n\nimport { PolicyListService, RouterService } from \"./core\";\nimport { DisableSendPolicy } from \"./organizations/policies/disable-send.component\";\nimport { MasterPasswordPolicy } from \"./organizations/policies/master-password.component\";\nimport { PasswordGeneratorPolicy } from \"./organizations/policies/password-generator.component\";\nimport { PersonalOwnershipPolicy } from \"./organizations/policies/personal-ownership.component\";\nimport { RequireSsoPolicy } from \"./organizations/policies/require-sso.component\";\nimport { ResetPasswordPolicy } from \"./organizations/policies/reset-password.component\";\nimport { SendOptionsPolicy } from \"./organizations/policies/send-options.component\";\nimport { SingleOrgPolicy } from \"./organizations/policies/single-org.component\";\nimport { TwoFactorAuthenticationPolicy } from \"./organizations/policies/two-factor-authentication.component\";\n\nconst BroadcasterSubscriptionId = \"AppComponent\";\nconst IdleTimeout = 60000 * 10; // 10 minutes\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"app.component.html\",\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  private lastActivity: number = null;\n  private idleTimer: number = null;\n  private isIdle = false;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private broadcasterService: BroadcasterService,\n    private folderService: InternalFolderService,\n    private settingsService: SettingsService,\n    private syncService: SyncService,\n    private passwordGenerationService: PasswordGenerationService,\n    private cipherService: CipherService,\n    private authService: AuthService,\n    private router: Router,\n    private toastrService: ToastrService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    private vaultTimeoutService: VaultTimeoutService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private sanitizer: DomSanitizer,\n    private searchService: SearchService,\n    private notificationsService: NotificationsService,\n    private routerService: RouterService,\n    private stateService: StateService,\n    private eventService: EventService,\n    private policyService: InternalPolicyService,\n    protected policyListService: PolicyListService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  ngOnInit() {\n    this.i18nService.locale$.pipe(takeUntil(this.destroy$)).subscribe((locale) => {\n      this.document.documentElement.lang = locale;\n    });\n\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousemove = () => this.recordActivity();\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"loggedIn\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"loggedOut\":\n            this.routerService.setPreviousUrl(null);\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"unlocked\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"authBlocked\":\n            this.routerService.setPreviousUrl(message.url);\n            this.router.navigate([\"/\"]);\n            break;\n          case \"logout\":\n            this.logOut(!!message.expired);\n            break;\n          case \"lockVault\":\n            await this.vaultTimeoutService.lock();\n            break;\n          case \"locked\":\n            this.notificationsService.updateConnection(false);\n            this.router.navigate([\"lock\"]);\n            break;\n          case \"lockedUrl\":\n            this.routerService.setPreviousUrl(message.url);\n            break;\n          case \"syncStarted\":\n            break;\n          case \"syncCompleted\":\n            break;\n          case \"upgradeOrganization\": {\n            const upgradeConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"upgradeOrganizationDesc\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (upgradeConfirmed) {\n              this.router.navigate([\n                \"organizations\",\n                message.organizationId,\n                \"settings\",\n                \"billing\",\n              ]);\n            }\n            break;\n          }\n          case \"premiumRequired\": {\n            const premiumConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"premiumRequiredDesc\"),\n              this.i18nService.t(\"premiumRequired\"),\n              this.i18nService.t(\"learnMore\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (premiumConfirmed) {\n              this.router.navigate([\"settings/subscription/premium\"]);\n            }\n            break;\n          }\n          case \"emailVerificationRequired\": {\n            const emailVerificationConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"emailVerificationRequiredDesc\"),\n              this.i18nService.t(\"emailVerificationRequired\"),\n              this.i18nService.t(\"learnMore\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (emailVerificationConfirmed) {\n              this.platformUtilsService.launchUri(\n                \"https://bitwarden.com/help/create-bitwarden-account/\"\n              );\n            }\n            break;\n          }\n          case \"showToast\":\n            this.showToast(message);\n            break;\n          case \"setFullWidth\":\n            this.setFullWidth();\n            break;\n          case \"convertAccountToKeyConnector\":\n            this.router.navigate([\"/remove-password\"]);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n\n    this.router.events.pipe(takeUntil(this.destroy$)).subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        const modals = Array.from(document.querySelectorAll(\".modal\"));\n        for (const modal of modals) {\n          (jq(modal) as any).modal(\"hide\");\n        }\n\n        if (document.querySelector(\".swal-modal\") != null) {\n          Swal.close(undefined);\n        }\n      }\n    });\n\n    this.policyListService.addPolicies([\n      new TwoFactorAuthenticationPolicy(),\n      new MasterPasswordPolicy(),\n      new ResetPasswordPolicy(),\n      new PasswordGeneratorPolicy(),\n      new SingleOrgPolicy(),\n      new RequireSsoPolicy(),\n      new PersonalOwnershipPolicy(),\n      new DisableSendPolicy(),\n      new SendOptionsPolicy(),\n    ]);\n\n    this.setFullWidth();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n  }\n\n  private async logOut(expired: boolean) {\n    await this.eventService.uploadEvents();\n    const userId = await this.stateService.getUserId();\n    await Promise.all([\n      this.eventService.clearEvents(),\n      this.syncService.setLastSync(new Date(0)),\n      this.cryptoService.clearKeys(),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(),\n      this.keyConnectorService.clear(),\n    ]);\n\n    this.searchService.clearIndex();\n    this.authService.logOut(async () => {\n      if (expired) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          this.i18nService.t(\"loggedOut\"),\n          this.i18nService.t(\"loginExpired\")\n        );\n      }\n\n      await this.stateService.clean({ userId: userId });\n      Swal.close();\n      this.router.navigate([\"/\"]);\n    });\n  }\n\n  private async recordActivity() {\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    this.stateService.setLastActive(now);\n    // Idle states\n    if (this.isIdle) {\n      this.isIdle = false;\n      this.idleStateChanged();\n    }\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idleTimer = window.setTimeout(() => {\n      if (!this.isIdle) {\n        this.isIdle = true;\n        this.idleStateChanged();\n      }\n    }, IdleTimeout);\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private idleStateChanged() {\n    if (this.isIdle) {\n      this.notificationsService.disconnectFromInactivity();\n    } else {\n      this.notificationsService.reconnectFromActivity();\n    }\n  }\n\n  private async setFullWidth() {\n    const enableFullWidth = await this.stateService.getEnableFullWidth();\n    if (enableFullWidth) {\n      document.body.classList.add(\"full-width\");\n    } else {\n      document.body.classList.remove(\"full-width\");\n    }\n  }\n}\n","<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport {\n  BasePolicy,\n  BasePolicyComponent,\n} from \"src/app/organizations/policies/base-policy.component\";\n\nexport class DisablePersonalVaultExportPolicy extends BasePolicy {\n  name = \"disablePersonalVaultExport\";\n  description = \"disablePersonalVaultExportDesc\";\n  type = PolicyType.DisablePersonalVaultExport;\n  component = DisablePersonalVaultExportPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-personal-vault-export\",\n  templateUrl: \"disable-personal-vault-export.component.html\",\n})\nexport class DisablePersonalVaultExportPolicyComponent extends BasePolicyComponent {}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\n\nimport {\n  BasePolicy,\n  BasePolicyComponent,\n} from \"src/app/organizations/policies/base-policy.component\";\n\nexport class MaximumVaultTimeoutPolicy extends BasePolicy {\n  name = \"maximumVaultTimeout\";\n  description = \"maximumVaultTimeoutDesc\";\n  type = PolicyType.MaximumVaultTimeout;\n  component = MaximumVaultTimeoutPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-maximum-timeout\",\n  templateUrl: \"maximum-vault-timeout.component.html\",\n})\nexport class MaximumVaultTimeoutPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    hours: [null],\n    minutes: [null],\n  });\n\n  constructor(private formBuilder: UntypedFormBuilder, private i18nService: I18nService) {\n    super();\n  }\n\n  loadData() {\n    const minutes = this.policyResponse.data?.minutes;\n\n    if (minutes == null) {\n      return;\n    }\n\n    this.data.patchValue({\n      hours: Math.floor(minutes / 60),\n      minutes: minutes % 60,\n    });\n  }\n\n  buildRequestData() {\n    if (this.data.value.hours == null && this.data.value.minutes == null) {\n      return null;\n    }\n\n    return {\n      minutes: this.data.value.hours * 60 + this.data.value.minutes,\n    };\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    const data = this.buildRequestData();\n    if (data?.minutes == null || data?.minutes <= 0) {\n      throw new Error(this.i18nService.t(\"invalidMaximumVaultTimeout\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <label for=\"hours\">{{ \"maximumVaultTimeoutLabel\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AppComponent as BaseAppComponent } from \"src/app/app.component\";\n\nimport { DisablePersonalVaultExportPolicy } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicy } from \"./policies/maximum-vault-timeout.component\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"../../../../apps/web/src/app/app.component.html\",\n})\nexport class AppComponent extends BaseAppComponent {\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.policyListService.addPolicies([\n      new MaximumVaultTimeoutPolicy(),\n      new DisablePersonalVaultExportPolicy(),\n    ]);\n  }\n}\n","import { ScimProviderType } from \"@bitwarden/common/enums/scimProviderType\";\n\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class ScimConfigApi extends BaseResponse {\n  enabled: boolean;\n  scimProvider: ScimProviderType;\n\n  constructor(data: any) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.scimProvider = this.getResponseProperty(\"ScimProvider\");\n  }\n}\n","import { ScimProviderType } from \"@bitwarden/common/enums/scimProviderType\";\n\nexport class ScimConfigRequest {\n  constructor(private enabled: boolean, private scimProvider: ScimProviderType = null) {}\n}\n","<div class=\"page-header\">\n  <h1>{{ \"scim\" | i18n }}</h1>\n</div>\n\n<p>{{ \"scimDescription\" | i18n }}</p>\n\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  [formGroup]=\"formData\"\n  *ngIf=\"!loading\"\n>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n        aria-describedby=\"scimEnabledCheckboxDescHelpText\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"scimEnabledCheckboxDesc\" | i18n }}</label>\n      <div id=\"scimEnabledCheckboxDescHelpText\">\n        <small class=\"form-text text-muted\">{{ \"scimEnabledCheckboxDescHelpText\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n\n  <bit-form-field *ngIf=\"showScimSettings\">\n    <bit-label>{{ \"scimUrl\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"endpointUrl\" />\n    <button\n      type=\"button\"\n      bitSuffix\n      bitButton\n      (click)=\"copyScimUrl()\"\n      [appA11yTitle]=\"'copyScimUrl' | i18n\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-clone\"></i>\n    </button>\n  </bit-form-field>\n\n  <bit-form-field *ngIf=\"showScimSettings\">\n    <bit-label>{{ \"scimApiKey\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"clientSecret\" />\n    <ng-container #rotateButton [appApiAction]=\"rotatePromise\">\n      <button\n        [disabled]=\"rotateButton.loading\"\n        type=\"button\"\n        bitSuffix\n        bitButton\n        (click)=\"rotateScimKey()\"\n        [appA11yTitle]=\"'rotateScimKey' | i18n\"\n      >\n        <i\n          aria-hidden=\"true\"\n          class=\"bwi bwi-lg bwi-generate\"\n          [ngClass]=\"{ 'bwi-spin': rotateButton.loading }\"\n        ></i>\n      </button>\n    </ng-container>\n    <button\n      type=\"button\"\n      bitSuffix\n      bitButton\n      (click)=\"copyScimKey()\"\n      [appA11yTitle]=\"'copyScimKey' | i18n\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-clone\"></i>\n    </button>\n    <bit-hint>{{ \"scimApiKeyHelperText\" | i18n }}</bit-hint>\n  </bit-form-field>\n\n  <bit-submit-button buttonType=\"primary\" [loading]=\"form.loading\" [disabled]=\"form.loading\">\n    {{ \"save\" | i18n }}\n  </bit-submit-button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormBuilder, FormControl } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/enums/organizationApiKeyType\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/enums/organizationConnectionType\";\nimport { ScimConfigApi } from \"@bitwarden/common/models/api/scimConfigApi\";\nimport { OrganizationApiKeyRequest } from \"@bitwarden/common/models/request/organizationApiKeyRequest\";\nimport { OrganizationConnectionRequest } from \"@bitwarden/common/models/request/organizationConnectionRequest\";\nimport { ScimConfigRequest } from \"@bitwarden/common/models/request/scimConfigRequest\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/models/response/organizationConnectionResponse\";\n\n@Component({\n  selector: \"app-org-manage-scim\",\n  templateUrl: \"scim.component.html\",\n})\nexport class ScimComponent implements OnInit {\n  loading = true;\n  organizationId: string;\n  existingConnectionId: string;\n  formPromise: Promise<any>;\n  rotatePromise: Promise<any>;\n  enabled = new FormControl(false);\n  showScimSettings = false;\n\n  formData = this.formBuilder.group({\n    endpointUrl: new FormControl({ value: \"\", disabled: true }),\n    clientSecret: new FormControl({ value: \"\", disabled: true }),\n  });\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private environmentService: EnvironmentService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    const connection = await this.apiService.getOrganizationConnection(\n      this.organizationId,\n      OrganizationConnectionType.Scim,\n      ScimConfigApi\n    );\n    await this.setConnectionFormValues(connection);\n  }\n\n  async loadApiKey() {\n    const apiKeyRequest = new OrganizationApiKeyRequest();\n    apiKeyRequest.type = OrganizationApiKeyType.Scim;\n    apiKeyRequest.masterPasswordHash = \"N/A\";\n    const apiKeyResponse = await this.apiService.postOrganizationApiKey(\n      this.organizationId,\n      apiKeyRequest\n    );\n    this.formData.setValue({\n      endpointUrl: this.getScimEndpointUrl(),\n      clientSecret: apiKeyResponse.apiKey,\n    });\n  }\n\n  async copyScimUrl() {\n    this.platformUtilsService.copyToClipboard(this.getScimEndpointUrl());\n  }\n\n  async rotateScimKey() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"rotateScimKeyWarning\"),\n      this.i18nService.t(\"rotateScimKey\"),\n      this.i18nService.t(\"rotateKey\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    const request = new OrganizationApiKeyRequest();\n    request.type = OrganizationApiKeyType.Scim;\n    request.masterPasswordHash = \"N/A\";\n\n    this.rotatePromise = this.apiService.postOrganizationRotateApiKey(this.organizationId, request);\n\n    try {\n      const response = await this.rotatePromise;\n      this.formData.setValue({\n        endpointUrl: this.getScimEndpointUrl(),\n        clientSecret: response.apiKey,\n      });\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"scimApiKeyRotated\"));\n    } catch {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.rotatePromise = null;\n  }\n\n  async copyScimKey() {\n    this.platformUtilsService.copyToClipboard(this.formData.get(\"clientSecret\").value);\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationConnectionRequest(\n        this.organizationId,\n        OrganizationConnectionType.Scim,\n        true,\n        new ScimConfigRequest(this.enabled.value)\n      );\n      if (this.existingConnectionId == null) {\n        this.formPromise = this.apiService.createOrganizationConnection(request, ScimConfigApi);\n      } else {\n        this.formPromise = this.apiService.updateOrganizationConnection(\n          request,\n          ScimConfigApi,\n          this.existingConnectionId\n        );\n      }\n      const response = (await this.formPromise) as OrganizationConnectionResponse<ScimConfigApi>;\n      await this.setConnectionFormValues(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"scimSettingsSaved\"));\n    } catch (e) {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.formPromise = null;\n  }\n\n  getScimEndpointUrl() {\n    return this.environmentService.getScimUrl() + \"/\" + this.organizationId;\n  }\n\n  private async setConnectionFormValues(connection: OrganizationConnectionResponse<ScimConfigApi>) {\n    this.existingConnectionId = connection?.id;\n    if (connection !== null && connection.config?.enabled) {\n      this.showScimSettings = true;\n      this.enabled.setValue(true);\n      this.formData.setValue({\n        endpointUrl: this.getScimEndpointUrl(),\n        clientSecret: \"\",\n      });\n      await this.loadApiKey();\n    } else {\n      this.showScimSettings = false;\n      this.enabled.setValue(false);\n    }\n    this.loading = false;\n  }\n}\n","import { AbstractControl, ValidationErrors, Validators } from \"@angular/forms\";\n\n/**\n * Runs Validators.required on a field only if it's dirty. This prevents error messages from being displayed\n * to the user prematurely.\n */\nexport function dirtyRequired(control: AbstractControl): ValidationErrors | null {\n  return control.dirty ? Validators.required(control) : null;\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\n\nexport class OrganizationSsoRequest {\n  enabled = false;\n  data: SsoConfigApi;\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { SsoConfigApi } from \"../api/ssoConfigApi\";\n\nimport { View } from \"./view\";\n\nexport class SsoConfigView extends View {\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  openId: {\n    authority: string;\n    clientId: string;\n    clientSecret: string;\n    metadataAddress: string;\n    redirectBehavior: OpenIdConnectRedirectBehavior;\n    getClaimsFromUserInfoEndpoint: boolean;\n    additionalScopes: string;\n    additionalUserIdClaimTypes: string;\n    additionalEmailClaimTypes: string;\n    additionalNameClaimTypes: string;\n    acrValues: string;\n    expectedReturnAcrValue: string;\n  };\n\n  saml: {\n    spNameIdFormat: Saml2NameIdFormat;\n    spOutboundSigningAlgorithm: string;\n    spSigningBehavior: Saml2SigningBehavior;\n    spMinIncomingSigningAlgorithm: boolean;\n    spWantAssertionsSigned: boolean;\n    spValidateCertificates: boolean;\n\n    idpEntityId: string;\n    idpBindingType: Saml2BindingType;\n    idpSingleSignOnServiceUrl: string;\n    idpSingleLogoutServiceUrl: string;\n    idpX509PublicCert: string;\n    idpOutboundSigningAlgorithm: string;\n    idpAllowUnsolicitedAuthnResponse: boolean;\n    idpAllowOutboundLogoutRequests: boolean;\n    idpWantAuthnRequestsSigned: boolean;\n  };\n\n  constructor(api: SsoConfigApi) {\n    super();\n    if (api == null) {\n      return;\n    }\n\n    this.configType = api.configType;\n\n    this.keyConnectorEnabled = api.keyConnectorEnabled;\n    this.keyConnectorUrl = api.keyConnectorUrl;\n\n    if (this.configType === SsoType.OpenIdConnect) {\n      this.openId = {\n        authority: api.authority,\n        clientId: api.clientId,\n        clientSecret: api.clientSecret,\n        metadataAddress: api.metadataAddress,\n        redirectBehavior: api.redirectBehavior,\n        getClaimsFromUserInfoEndpoint: api.getClaimsFromUserInfoEndpoint,\n        additionalScopes: api.additionalScopes,\n        additionalUserIdClaimTypes: api.additionalUserIdClaimTypes,\n        additionalEmailClaimTypes: api.additionalEmailClaimTypes,\n        additionalNameClaimTypes: api.additionalNameClaimTypes,\n        acrValues: api.acrValues,\n        expectedReturnAcrValue: api.expectedReturnAcrValue,\n      };\n    } else if (this.configType === SsoType.Saml2) {\n      this.saml = {\n        spNameIdFormat: api.spNameIdFormat,\n        spOutboundSigningAlgorithm: api.spOutboundSigningAlgorithm,\n        spSigningBehavior: api.spSigningBehavior,\n        spMinIncomingSigningAlgorithm: api.spMinIncomingSigningAlgorithm,\n        spWantAssertionsSigned: api.spWantAssertionsSigned,\n        spValidateCertificates: api.spValidateCertificates,\n\n        idpEntityId: api.idpEntityId,\n        idpBindingType: api.idpBindingType,\n        idpSingleSignOnServiceUrl: api.idpSingleSignOnServiceUrl,\n        idpSingleLogoutServiceUrl: api.idpSingleLogoutServiceUrl,\n        idpX509PublicCert: api.idpX509PublicCert,\n        idpOutboundSigningAlgorithm: api.idpOutboundSigningAlgorithm,\n        idpAllowUnsolicitedAuthnResponse: api.idpAllowUnsolicitedAuthnResponse,\n        idpWantAuthnRequestsSigned: api.idpWantAuthnRequestsSigned,\n\n        // Value is inverted in the view model (allow instead of disable)\n        idpAllowOutboundLogoutRequests:\n          api.idpDisableOutboundLogoutRequests == null\n            ? null\n            : !api.idpDisableOutboundLogoutRequests,\n      };\n    }\n  }\n}\n","export class View {}\n","import { Directive, ElementRef, OnDestroy, OnInit } from \"@angular/core\";\nimport { NgControl } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\n\n@Directive({\n  selector: \"[appA11yInvalid]\",\n})\nexport class A11yInvalidDirective implements OnDestroy, OnInit {\n  private sub: Subscription;\n\n  constructor(private el: ElementRef<HTMLInputElement>, private formControlDirective: NgControl) {}\n\n  ngOnInit() {\n    this.sub = this.formControlDirective.control.statusChanges.subscribe((status) => {\n      if (status === \"INVALID\") {\n        this.el.nativeElement.setAttribute(\"aria-invalid\", \"true\");\n      } else if (status === \"VALID\") {\n        this.el.nativeElement.setAttribute(\"aria-invalid\", \"false\");\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub?.unsubscribe();\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"input[appInputStripSpaces]\",\n})\nexport class InputStripSpacesDirective {\n  constructor(private el: ElementRef<HTMLInputElement>) {}\n\n  @HostListener(\"input\") onInput() {\n    this.el.nativeElement.value = this.el.nativeElement.value.replace(/ /g, \"\");\n  }\n}\n","import { Directive, Input, OnInit, Self } from \"@angular/core\";\nimport { ControlValueAccessor, UntypedFormControl, NgControl, Validators } from \"@angular/forms\";\n\nimport { dirtyRequired } from \"@bitwarden/angular/validators/dirty.validator\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Directive()\nexport abstract class BaseCvaComponent implements ControlValueAccessor, OnInit {\n  get describedById() {\n    return this.showDescribedBy ? this.controlId + \"Desc\" : null;\n  }\n\n  get showDescribedBy() {\n    return this.helperText != null || this.controlDir.control.hasError(\"required\");\n  }\n\n  get isRequired() {\n    return (\n      this.controlDir.control.hasValidator(Validators.required) ||\n      this.controlDir.control.hasValidator(dirtyRequired)\n    );\n  }\n\n  @Input() label: string;\n  @Input() controlId: string;\n  @Input() helperText: string;\n\n  internalControl = new UntypedFormControl(\"\");\n\n  protected onChange: any;\n  protected onTouched: any;\n\n  constructor(@Self() public controlDir: NgControl) {\n    this.controlDir.valueAccessor = this;\n  }\n\n  ngOnInit() {\n    this.internalControl.valueChanges.subscribe(this.onValueChangesInternal);\n  }\n\n  onBlurInternal() {\n    this.onTouched();\n  }\n\n  // CVA interfaces\n  writeValue(value: string) {\n    this.internalControl.setValue(value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    if (isDisabled) {\n      this.internalControl.disable();\n    } else {\n      this.internalControl.enable();\n    }\n  }\n\n  protected onValueChangesInternal: any = (value: string) => this.onChange(value);\n  // End CVA interfaces\n}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      [attr.id]=\"controlId\"\n      [attr.aria-describedby]=\"describedById\"\n      [formControl]=\"internalControl\"\n      (blur)=\"onBlurInternal()\"\n    />\n    <label class=\"form-check-label\" [attr.for]=\"controlId\">{{ label }}</label>\n  </div>\n  <small *ngIf=\"showDescribedBy\" [attr.id]=\"describedById\" class=\"form-text text-muted\">{{\n    helperText\n  }}</small>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-checkbox\",\n  templateUrl: \"input-checkbox.component.html\",\n})\nexport class InputCheckboxComponent extends BaseCvaComponent {}\n","<div class=\"form-group\">\n  <label [attr.for]=\"controlId\">\n    {{ label }}\n    <small *ngIf=\"isRequired\" class=\"text-muted form-text d-inline\"\n      >({{ \"required\" | i18n }})</small\n    >\n  </label>\n  <input\n    [formControl]=\"internalControl\"\n    class=\"form-control\"\n    [attr.id]=\"controlId\"\n    [attr.aria-describedby]=\"describedById\"\n    [attr.aria-invalid]=\"controlDir.control.invalid\"\n    (blur)=\"onBlurInternal()\"\n  />\n  <div *ngIf=\"showDescribedBy\" [attr.id]=\"describedById\">\n    <small\n      *ngIf=\"helperText != null && !controlDir.control.hasError(helperTextSameAsError)\"\n      class=\"form-text text-muted\"\n    >\n      {{ helperText }}\n    </small>\n    <small class=\"error-inline\" *ngIf=\"controlDir.control.hasError('required')\" role=\"alert\">\n      <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n      <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n      {{\n        controlDir.control.hasError(helperTextSameAsError)\n          ? helperText\n          : (\"fieldRequiredError\" | i18n: label)\n      }}\n    </small>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-text[label][controlId]\",\n  templateUrl: \"input-text.component.html\",\n})\nexport class InputTextComponent extends BaseCvaComponent implements OnInit {\n  @Input() helperTextSameAsError: string;\n  @Input() requiredErrorMessage: string;\n  @Input() stripSpaces = false;\n\n  transformValue: (value: string) => string = null;\n\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.stripSpaces) {\n      this.transformValue = this.doStripSpaces;\n    }\n  }\n\n  writeValue(value: string) {\n    this.internalControl.setValue(value == null ? \"\" : value);\n  }\n\n  protected onValueChangesInternal: any = (value: string) => {\n    let newValue = value;\n    if (this.transformValue != null) {\n      newValue = this.transformValue(value);\n      this.internalControl.setValue(newValue, { emitEvent: false });\n    }\n    this.onChange(newValue);\n  };\n\n  protected onValueChangeInternal(value: string) {\n    let newValue = value;\n    if (this.transformValue != null) {\n      newValue = this.transformValue(value);\n      this.internalControl.setValue(newValue, { emitEvent: false });\n    }\n  }\n\n  private doStripSpaces(value: string) {\n    return value.replace(/ /g, \"\");\n  }\n}\n","<div class=\"form-group\">\n  <label>{{ label }}</label>\n  <div class=\"input-group\">\n    <input class=\"form-control\" readonly [value]=\"controlValue\" />\n    <div class=\"input-group-append\" *ngIf=\"showLaunch\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        appA11yTitle=\"{{ 'launch' | i18n }}\"\n        (click)=\"launchUri(controlValue)\"\n      >\n        <i class=\"bwi bwi-lg bwi-external-link\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <div class=\"input-group-append\" *ngIf=\"showCopy\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n        (click)=\"copy(controlValue)\"\n      >\n        <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-text-readonly\",\n  templateUrl: \"input-text-readonly.component.html\",\n})\nexport class InputTextReadOnlyComponent {\n  @Input() controlValue: string;\n  @Input() label: string;\n  @Input() showCopy = true;\n  @Input() showLaunch = false;\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  copy(value: string) {\n    this.platformUtilsService.copyToClipboard(value);\n  }\n\n  launchUri(url: string) {\n    this.platformUtilsService.launchUri(url);\n  }\n}\n","<div class=\"form-group\">\n  <label [attr.for]=\"controlId\">\n    {{ label }}\n    <small *ngIf=\"isRequired\" class=\"text-muted form-text d-inline\"\n      >({{ \"required\" | i18n }})</small\n    >\n  </label>\n  <select\n    class=\"form-control\"\n    [attr.id]=\"controlId\"\n    [attr.aria-invalid]=\"controlDir.control.invalid\"\n    [formControl]=\"internalControl\"\n    (blur)=\"onBlurInternal()\"\n  >\n    <option *ngFor=\"let o of selectOptions\" [ngValue]=\"o.value\" disabled=\"{{ o.disabled }}\">\n      {{ o.name }}\n    </option>\n  </select>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { SelectOptions } from \"@bitwarden/angular/interfaces/selectOptions\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-select\",\n  templateUrl: \"select.component.html\",\n})\nexport class SelectComponent extends BaseCvaComponent {\n  @Input() selectOptions: SelectOptions[];\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"singleSignOn\" | i18n }}</h1>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [formGroup]=\"ssoConfigForm\"\n  [appApiAction]=\"formPromise\"\n  *ngIf=\"!loading\"\n>\n  <p>\n    {{ \"ssoPolicyHelpStart\" | i18n }}\n    <a routerLink=\"../policies\">{{ \"ssoPolicyHelpLink\" | i18n }}</a>\n    {{ \"ssoPolicyHelpEnd\" | i18n }}\n    <br />\n    {{ \"ssoPolicyHelpKeyConnector\" | i18n }}\n  </p>\n\n  <!-- Root form -->\n  <ng-container>\n    <app-input-checkbox\n      controlId=\"enabled\"\n      [formControl]=\"enabled\"\n      [label]=\"'allowSso' | i18n\"\n      [helperText]=\"'allowSsoDesc' | i18n\"\n    ></app-input-checkbox>\n\n    <div class=\"form-group\">\n      <label>{{ \"memberDecryptionOption\" | i18n }}</label>\n      <div class=\"form-check form-check-block\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"memberDecryptionPass\"\n          [value]=\"false\"\n          formControlName=\"keyConnectorEnabled\"\n        />\n        <label class=\"form-check-label\" for=\"memberDecryptionPass\">\n          {{ \"masterPass\" | i18n }}\n          <small>{{ \"memberDecryptionPassDesc\" | i18n }}</small>\n        </label>\n      </div>\n      <div class=\"form-check mt-2 form-check-block\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"memberDecryptionKey\"\n          [value]=\"true\"\n          formControlName=\"keyConnectorEnabled\"\n          [attr.disabled]=\"!organization.useKeyConnector || null\"\n        />\n        <label class=\"form-check-label\" for=\"memberDecryptionKey\">\n          {{ \"keyConnector\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/about-key-connector/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n          <small>{{ \"memberDecryptionKeyConnectorDesc\" | i18n }}</small>\n        </label>\n      </div>\n    </div>\n\n    <!-- Key Connector -->\n    <ng-container *ngIf=\"ssoConfigForm.get('keyConnectorEnabled').value\">\n      <app-callout type=\"warning\" [useAlertRole]=\"true\">\n        {{ \"keyConnectorWarning\" | i18n }}\n      </app-callout>\n\n      <div class=\"form-group\">\n        <label for=\"keyConnectorUrl\">\n          {{ \"keyConnectorUrl\" | i18n }}\n          <small class=\"text-muted form-text d-inline\">({{ \"required\" | i18n }})</small>\n        </label>\n        <div class=\"input-group\">\n          <input\n            class=\"form-control\"\n            formControlName=\"keyConnectorUrl\"\n            id=\"keyConnectorUrl\"\n            aria-describedby=\"keyConnectorUrlDesc\"\n            (change)=\"haveTestedKeyConnector = false\"\n            appInputStripSpaces\n            appA11yInvalid\n          />\n          <div class=\"input-group-append\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary\"\n              (click)=\"validateKeyConnectorUrl()\"\n              [disabled]=\"!enableTestKeyConnector\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n                *ngIf=\"keyConnectorUrl.pending\"\n              ></i>\n              <span *ngIf=\"!keyConnectorUrl.pending\">\n                {{ \"keyConnectorTest\" | i18n }}\n              </span>\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"haveTestedKeyConnector\" id=\"keyConnectorUrlDesc\" aria-live=\"polite\">\n          <small\n            class=\"error-inline\"\n            *ngIf=\"keyConnectorUrl.hasError('invalidUrl'); else keyConnectorSuccess\"\n          >\n            <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n            <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n            {{ \"keyConnectorTestFail\" | i18n }}\n          </small>\n          <ng-template #keyConnectorSuccess>\n            <small class=\"text-success\">\n              <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n              {{ \"keyConnectorTestSuccess\" | i18n }}\n            </small>\n          </ng-template>\n        </div>\n      </div>\n    </ng-container>\n\n    <app-select\n      controlId=\"type\"\n      [label]=\"'type' | i18n\"\n      [selectOptions]=\"ssoTypeOptions\"\n      formControlName=\"configType\"\n    >\n    </app-select>\n  </ng-container>\n\n  <!-- OIDC -->\n  <div\n    *ngIf=\"ssoConfigForm.get('configType').value === ssoType.OpenIdConnect\"\n    [formGroup]=\"openIdForm\"\n  >\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"openIdConnectConfig\" | i18n }}</h2>\n\n      <app-input-text-readonly\n        [label]=\"'callbackPath' | i18n\"\n        [controlValue]=\"callbackPath\"\n      ></app-input-text-readonly>\n\n      <app-input-text-readonly\n        [label]=\"'signedOutCallbackPath' | i18n\"\n        [controlValue]=\"signedOutCallbackPath\"\n      ></app-input-text-readonly>\n\n      <app-input-text\n        [label]=\"'authority' | i18n\"\n        controlId=\"authority\"\n        [stripSpaces]=\"true\"\n        formControlName=\"authority\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'clientId' | i18n\"\n        controlId=\"clientId\"\n        [stripSpaces]=\"true\"\n        formControlName=\"clientId\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'clientSecret' | i18n\"\n        controlId=\"clientSecret\"\n        [stripSpaces]=\"true\"\n        formControlName=\"clientSecret\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'metadataAddress' | i18n\"\n        controlId=\"metadataAddress\"\n        [stripSpaces]=\"true\"\n        [helperText]=\"'openIdAuthorityRequired' | i18n\"\n        formControlName=\"metadataAddress\"\n      ></app-input-text>\n\n      <app-select\n        controlId=\"redirectBehavior\"\n        [label]=\"'oidcRedirectBehavior' | i18n\"\n        [selectOptions]=\"connectRedirectOptions\"\n        formControlName=\"redirectBehavior\"\n      >\n      </app-select>\n\n      <app-input-checkbox\n        controlId=\"getClaimsFromUserInfoEndpoint\"\n        formControlName=\"getClaimsFromUserInfoEndpoint\"\n        [label]=\"'getClaimsFromUserInfoEndpoint' | i18n\"\n      ></app-input-checkbox>\n\n      <!-- Optional customizations -->\n      <div\n        class=\"section-header d-flex flex-row align-items-center mt-3 mb-3\"\n        (click)=\"toggleOpenIdCustomizations()\"\n      >\n        <h3 class=\"mb-0 mr-2\" id=\"customizations-header\">\n          {{ \"openIdOptionalCustomizations\" | i18n }}\n        </h3>\n        <button\n          class=\"mb-1 btn btn-link\"\n          type=\"button\"\n          appStopClick\n          role=\"button\"\n          aria-controls=\"customizations\"\n          [attr.aria-expanded]=\"showOpenIdCustomizations\"\n          aria-labelledby=\"customizations-header\"\n        >\n          <i\n            class=\"bwi\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-down': !showOpenIdCustomizations,\n              'bwi-chevron-up': showOpenIdCustomizations\n            }\"\n          ></i>\n        </button>\n      </div>\n      <div id=\"customizations\" [hidden]=\"!showOpenIdCustomizations\">\n        <app-input-text\n          [label]=\"'additionalScopes' | i18n\"\n          controlId=\"additionalScopes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalScopes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'additionalUserIdClaimTypes' | i18n\"\n          controlId=\"additionalUserIdClaimTypes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalUserIdClaimTypes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'additionalEmailClaimTypes' | i18n\"\n          controlId=\"additionalEmailClaimTypes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalEmailClaimTypes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'additionalNameClaimTypes' | i18n\"\n          controlId=\"additionalNameClaimTypes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalNameClaimTypes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'acrValues' | i18n\"\n          controlId=\"acrValues\"\n          helperText=\"acr_values\"\n          formControlName=\"acrValues\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'expectedReturnAcrValue' | i18n\"\n          controlId=\"expectedReturnAcrValue\"\n          helperText=\"acr_validation\"\n          formControlName=\"expectedReturnAcrValue\"\n        ></app-input-text>\n      </div>\n    </div>\n  </div>\n\n  <!-- SAML2 SP -->\n  <div *ngIf=\"ssoConfigForm.get('configType').value === ssoType.Saml2\" [formGroup]=\"samlForm\">\n    <!-- SAML2 SP -->\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"samlSpConfig\" | i18n }}</h2>\n\n      <app-input-text-readonly\n        [label]=\"'spEntityId' | i18n\"\n        [controlValue]=\"spEntityId\"\n      ></app-input-text-readonly>\n\n      <app-input-text-readonly\n        [label]=\"'spMetadataUrl' | i18n\"\n        [controlValue]=\"spMetadataUrl\"\n        [showLaunch]=\"true\"\n      ></app-input-text-readonly>\n\n      <app-input-text-readonly\n        [label]=\"'spAcsUrl' | i18n\"\n        [controlValue]=\"spAcsUrl\"\n      ></app-input-text-readonly>\n\n      <app-select\n        controlId=\"spNameIdFormat\"\n        [label]=\"'spNameIdFormat' | i18n\"\n        [selectOptions]=\"saml2NameIdFormatOptions\"\n        formControlName=\"spNameIdFormat\"\n      >\n      </app-select>\n\n      <app-select\n        controlId=\"spOutboundSigningAlgorithm\"\n        [label]=\"'spOutboundSigningAlgorithm' | i18n\"\n        [selectOptions]=\"samlSigningAlgorithmOptions\"\n        formControlName=\"spOutboundSigningAlgorithm\"\n      >\n      </app-select>\n\n      <app-select\n        controlId=\"spSigningBehavior\"\n        [label]=\"'spSigningBehavior' | i18n\"\n        [selectOptions]=\"saml2SigningBehaviourOptions\"\n        formControlName=\"spSigningBehavior\"\n      >\n      </app-select>\n\n      <app-select\n        controlId=\"spMinIncomingSigningAlgorithm\"\n        [label]=\"'spMinIncomingSigningAlgorithm' | i18n\"\n        [selectOptions]=\"samlSigningAlgorithmOptions\"\n        formControlName=\"spMinIncomingSigningAlgorithm\"\n      >\n      </app-select>\n\n      <app-input-checkbox\n        controlId=\"spWantAssertionsSigned\"\n        formControlName=\"spWantAssertionsSigned\"\n        [label]=\"'spWantAssertionsSigned' | i18n\"\n      ></app-input-checkbox>\n\n      <app-input-checkbox\n        controlId=\"spValidateCertificates\"\n        formControlName=\"spValidateCertificates\"\n        [label]=\"'spValidateCertificates' | i18n\"\n      ></app-input-checkbox>\n    </div>\n\n    <!-- SAML2 IDP -->\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"samlIdpConfig\" | i18n }}</h2>\n\n      <app-input-text\n        [label]=\"'idpEntityId' | i18n\"\n        controlId=\"idpEntityId\"\n        formControlName=\"idpEntityId\"\n      ></app-input-text>\n\n      <app-select\n        controlId=\"idpBindingType\"\n        [label]=\"'idpBindingType' | i18n\"\n        [selectOptions]=\"saml2BindingTypeOptions\"\n        formControlName=\"idpBindingType\"\n      >\n      </app-select>\n\n      <app-input-text\n        [label]=\"'idpSingleSignOnServiceUrl' | i18n\"\n        controlId=\"idpSingleSignOnServiceUrl\"\n        [helperText]=\"'idpSingleSignOnServiceUrlRequired' | i18n\"\n        [stripSpaces]=\"true\"\n        formControlName=\"idpSingleSignOnServiceUrl\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'idpSingleLogoutServiceUrl' | i18n\"\n        controlId=\"idpSingleLogoutServiceUrl\"\n        [stripSpaces]=\"true\"\n        formControlName=\"idpSingleLogoutServiceUrl\"\n      ></app-input-text>\n\n      <div class=\"form-group\">\n        <label for=\"idpX509PublicCert\">\n          {{ \"idpX509PublicCert\" | i18n }}\n          <small class=\"text-muted form-text d-inline\">({{ \"required\" | i18n }})</small>\n        </label>\n        <textarea\n          formControlName=\"idpX509PublicCert\"\n          class=\"form-control form-control-sm text-monospace\"\n          rows=\"6\"\n          id=\"idpX509PublicCert\"\n          appA11yInvalid\n          aria-describedby=\"idpX509PublicCertDesc\"\n        ></textarea>\n        <small\n          id=\"idpX509PublicCertDesc\"\n          class=\"error-inline\"\n          role=\"alert\"\n          *ngIf=\"samlForm.get('idpX509PublicCert').hasError('required')\"\n        >\n          <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n          {{ \"fieldRequiredError\" | i18n: (\"idpX509PublicCert\" | i18n) }}\n        </small>\n      </div>\n\n      <app-select\n        controlId=\"idpOutboundSigningAlgorithm\"\n        [label]=\"'idpOutboundSigningAlgorithm' | i18n\"\n        [selectOptions]=\"samlSigningAlgorithmOptions\"\n        formControlName=\"idpOutboundSigningAlgorithm\"\n      >\n      </app-select>\n\n      <!--TODO: Uncomment once Unsolicited IdP Response is supported-->\n      <!-- <app-input-checkbox\n        controlId=\"idpAllowUnsolicitedAuthnResponse\"\n        formControlName=\"idpAllowUnsolicitedAuthnResponse\"\n        [label]=\"'idpAllowUnsolicitedAuthnResponse' | i18n\"\n      ></app-input-checkbox> -->\n\n      <app-input-checkbox\n        controlId=\"idpAllowOutboundLogoutRequests\"\n        formControlName=\"idpAllowOutboundLogoutRequests\"\n        [label]=\"'idpAllowOutboundLogoutRequests' | i18n\"\n      ></app-input-checkbox>\n\n      <app-input-checkbox\n        controlId=\"idpWantAuthnRequestsSigned\"\n        formControlName=\"idpWantAuthnRequestsSigned\"\n        [label]=\"'idpSignAuthenticationRequests' | i18n\"\n      ></app-input-checkbox>\n    </div>\n  </div>\n\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n  <div\n    id=\"errorSummary\"\n    class=\"error-summary text-danger\"\n    *ngIf=\"this.getErrorCount(ssoConfigForm) as errorCount\"\n  >\n    <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n    {{\n      (errorCount === 1 ? \"formErrorSummarySingle\" : \"formErrorSummaryPlural\") | i18n: errorCount\n    }}\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { AbstractControl, UntypedFormBuilder, UntypedFormGroup } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { SelectOptions } from \"@bitwarden/angular/interfaces/selectOptions\";\nimport { dirtyRequired } from \"@bitwarden/angular/validators/dirty.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"@bitwarden/common/enums/ssoEnums\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SsoConfigApi } from \"@bitwarden/common/models/api/ssoConfigApi\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationSsoRequest } from \"@bitwarden/common/models/request/organization/organizationSsoRequest\";\nimport { OrganizationSsoResponse } from \"@bitwarden/common/models/response/organization/organizationSsoResponse\";\nimport { SsoConfigView } from \"@bitwarden/common/models/view/ssoConfigView\";\n\nconst defaultSigningAlgorithm = \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\";\n\n@Component({\n  selector: \"app-org-manage-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent implements OnInit {\n  readonly ssoType = SsoType;\n\n  readonly ssoTypeOptions: SelectOptions[] = [\n    { name: this.i18nService.t(\"selectType\"), value: SsoType.None, disabled: true },\n    { name: \"OpenID Connect\", value: SsoType.OpenIdConnect },\n    { name: \"SAML 2.0\", value: SsoType.Saml2 },\n  ];\n\n  readonly samlSigningAlgorithms = [\n    \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha384\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha512\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\",\n  ];\n\n  readonly saml2SigningBehaviourOptions: SelectOptions[] = [\n    {\n      name: \"If IdP Wants Authn Requests Signed\",\n      value: Saml2SigningBehavior.IfIdpWantAuthnRequestsSigned,\n    },\n    { name: \"Always\", value: Saml2SigningBehavior.Always },\n    { name: \"Never\", value: Saml2SigningBehavior.Never },\n  ];\n  readonly saml2BindingTypeOptions: SelectOptions[] = [\n    { name: \"Redirect\", value: Saml2BindingType.HttpRedirect },\n    { name: \"HTTP POST\", value: Saml2BindingType.HttpPost },\n  ];\n  readonly saml2NameIdFormatOptions: SelectOptions[] = [\n    { name: \"Not Configured\", value: Saml2NameIdFormat.NotConfigured },\n    { name: \"Unspecified\", value: Saml2NameIdFormat.Unspecified },\n    { name: \"Email Address\", value: Saml2NameIdFormat.EmailAddress },\n    { name: \"X.509 Subject Name\", value: Saml2NameIdFormat.X509SubjectName },\n    { name: \"Windows Domain Qualified Name\", value: Saml2NameIdFormat.WindowsDomainQualifiedName },\n    { name: \"Kerberos Principal Name\", value: Saml2NameIdFormat.KerberosPrincipalName },\n    { name: \"Entity Identifier\", value: Saml2NameIdFormat.EntityIdentifier },\n    { name: \"Persistent\", value: Saml2NameIdFormat.Persistent },\n    { name: \"Transient\", value: Saml2NameIdFormat.Transient },\n  ];\n\n  readonly connectRedirectOptions: SelectOptions[] = [\n    { name: \"Redirect GET\", value: OpenIdConnectRedirectBehavior.RedirectGet },\n    { name: \"Form POST\", value: OpenIdConnectRedirectBehavior.FormPost },\n  ];\n\n  showOpenIdCustomizations = false;\n\n  loading = true;\n  haveTestedKeyConnector = false;\n  organizationId: string;\n  organization: Organization;\n  formPromise: Promise<any>;\n\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  enabled = this.formBuilder.control(false);\n\n  openIdForm = this.formBuilder.group(\n    {\n      authority: [\"\", dirtyRequired],\n      clientId: [\"\", dirtyRequired],\n      clientSecret: [\"\", dirtyRequired],\n      metadataAddress: [],\n      redirectBehavior: [OpenIdConnectRedirectBehavior.RedirectGet, dirtyRequired],\n      getClaimsFromUserInfoEndpoint: [],\n      additionalScopes: [],\n      additionalUserIdClaimTypes: [],\n      additionalEmailClaimTypes: [],\n      additionalNameClaimTypes: [],\n      acrValues: [],\n      expectedReturnAcrValue: [],\n    },\n    {\n      updateOn: \"blur\",\n    }\n  );\n\n  samlForm = this.formBuilder.group(\n    {\n      spNameIdFormat: [Saml2NameIdFormat.NotConfigured],\n      spOutboundSigningAlgorithm: [defaultSigningAlgorithm],\n      spSigningBehavior: [Saml2SigningBehavior.IfIdpWantAuthnRequestsSigned],\n      spMinIncomingSigningAlgorithm: [defaultSigningAlgorithm],\n      spWantAssertionsSigned: [],\n      spValidateCertificates: [],\n\n      idpEntityId: [\"\", dirtyRequired],\n      idpBindingType: [Saml2BindingType.HttpRedirect],\n      idpSingleSignOnServiceUrl: [],\n      idpSingleLogoutServiceUrl: [],\n      idpX509PublicCert: [\"\", dirtyRequired],\n      idpOutboundSigningAlgorithm: [defaultSigningAlgorithm],\n      idpAllowUnsolicitedAuthnResponse: [],\n      idpAllowOutboundLogoutRequests: [true],\n      idpWantAuthnRequestsSigned: [],\n    },\n    {\n      updateOn: \"blur\",\n    }\n  );\n\n  ssoConfigForm = this.formBuilder.group({\n    configType: [SsoType.None],\n    keyConnectorEnabled: [false],\n    keyConnectorUrl: [\"\"],\n    openId: this.openIdForm,\n    saml: this.samlForm,\n  });\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.ssoConfigForm.get(\"configType\").valueChanges.subscribe((newType: SsoType) => {\n      if (newType === SsoType.OpenIdConnect) {\n        this.openIdForm.enable();\n        this.samlForm.disable();\n      } else if (newType === SsoType.Saml2) {\n        this.openIdForm.disable();\n        this.samlForm.enable();\n      } else {\n        this.openIdForm.disable();\n        this.samlForm.disable();\n      }\n    });\n\n    this.samlForm\n      .get(\"spSigningBehavior\")\n      .valueChanges.subscribe(() =>\n        this.samlForm.get(\"idpX509PublicCert\").updateValueAndValidity()\n      );\n\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    const ssoSettings = await this.apiService.getOrganizationSso(this.organizationId);\n    this.populateForm(ssoSettings);\n\n    this.callbackPath = ssoSettings.urls.callbackPath;\n    this.signedOutCallbackPath = ssoSettings.urls.signedOutCallbackPath;\n    this.spEntityId = ssoSettings.urls.spEntityId;\n    this.spMetadataUrl = ssoSettings.urls.spMetadataUrl;\n    this.spAcsUrl = ssoSettings.urls.spAcsUrl;\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.validateForm(this.ssoConfigForm);\n\n    if (this.ssoConfigForm.get(\"keyConnectorEnabled\").value) {\n      await this.validateKeyConnectorUrl();\n    }\n\n    if (!this.ssoConfigForm.valid) {\n      this.readOutErrors();\n      return;\n    }\n\n    const request = new OrganizationSsoRequest();\n    request.enabled = this.enabled.value;\n    request.data = SsoConfigApi.fromView(this.ssoConfigForm.value as SsoConfigView);\n\n    this.formPromise = this.apiService.postOrganizationSso(this.organizationId, request);\n\n    try {\n      const response = await this.formPromise;\n      this.populateForm(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"ssoSettingsSaved\"));\n    } catch {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.formPromise = null;\n  }\n\n  async validateKeyConnectorUrl() {\n    if (this.haveTestedKeyConnector) {\n      return;\n    }\n\n    this.keyConnectorUrl.markAsPending();\n\n    try {\n      await this.apiService.getKeyConnectorAlive(this.keyConnectorUrl.value);\n      this.keyConnectorUrl.updateValueAndValidity();\n    } catch {\n      this.keyConnectorUrl.setErrors({\n        invalidUrl: true,\n      });\n    }\n\n    this.haveTestedKeyConnector = true;\n  }\n\n  toggleOpenIdCustomizations() {\n    this.showOpenIdCustomizations = !this.showOpenIdCustomizations;\n  }\n\n  getErrorCount(form: UntypedFormGroup): number {\n    return Object.values(form.controls).reduce((acc: number, control: AbstractControl) => {\n      if (control instanceof UntypedFormGroup) {\n        return acc + this.getErrorCount(control);\n      }\n\n      if (control.errors == null) {\n        return acc;\n      }\n      return acc + Object.keys(control.errors).length;\n    }, 0);\n  }\n\n  get enableTestKeyConnector() {\n    return (\n      this.ssoConfigForm.get(\"keyConnectorEnabled\").value &&\n      !Utils.isNullOrWhitespace(this.keyConnectorUrl?.value)\n    );\n  }\n\n  get keyConnectorUrl() {\n    return this.ssoConfigForm.get(\"keyConnectorUrl\");\n  }\n\n  get samlSigningAlgorithmOptions(): SelectOptions[] {\n    return this.samlSigningAlgorithms.map((algorithm) => ({ name: algorithm, value: algorithm }));\n  }\n\n  private validateForm(form: UntypedFormGroup) {\n    Object.values(form.controls).forEach((control: AbstractControl) => {\n      if (control.disabled) {\n        return;\n      }\n\n      if (control instanceof UntypedFormGroup) {\n        this.validateForm(control);\n      } else {\n        control.markAsDirty();\n        control.markAsTouched();\n        control.updateValueAndValidity();\n      }\n    });\n  }\n\n  private populateForm(ssoSettings: OrganizationSsoResponse) {\n    this.enabled.setValue(ssoSettings.enabled);\n    if (ssoSettings.data != null) {\n      const ssoConfigView = new SsoConfigView(ssoSettings.data);\n      this.ssoConfigForm.patchValue(ssoConfigView);\n    }\n  }\n\n  private readOutErrors() {\n    const errorText = this.i18nService.t(\"error\");\n    const errorCount = this.getErrorCount(this.ssoConfigForm);\n    const errorCountText = this.i18nService.t(\n      errorCount === 1 ? \"formErrorSummarySingle\" : \"formErrorSummaryPlural\",\n      errorCount.toString()\n    );\n\n    const div = document.createElement(\"div\");\n    div.className = \"sr-only\";\n    div.id = \"srErrorCount\";\n    div.setAttribute(\"aria-live\", \"polite\");\n    div.innerText = errorText + \": \" + errorCountText;\n\n    const existing = document.getElementById(\"srErrorCount\");\n    if (existing != null) {\n      existing.remove();\n    }\n\n    document.body.append(div);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { Permissions } from \"@bitwarden/common/enums/permissions\";\n\nimport { PermissionsGuard } from \"src/app/organizations/guards/permissions.guard\";\nimport { OrganizationLayoutComponent } from \"src/app/organizations/layouts/organization-layout.component\";\nimport { ManageComponent } from \"src/app/organizations/manage/manage.component\";\nimport { NavigationPermissionsService } from \"src/app/organizations/services/navigation-permissions.service\";\n\nimport { ScimComponent } from \"./manage/scim.component\";\nimport { SsoComponent } from \"./manage/sso.component\";\n\nconst routes: Routes = [\n  {\n    path: \"organizations/:organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuard, PermissionsGuard],\n    children: [\n      {\n        path: \"manage\",\n        component: ManageComponent,\n        canActivate: [PermissionsGuard],\n        data: {\n          permissions: NavigationPermissionsService.getPermissions(\"manage\"),\n        },\n        children: [\n          {\n            path: \"sso\",\n            component: SsoComponent,\n            canActivate: [PermissionsGuard],\n            data: {\n              permissions: [Permissions.ManageSso],\n            },\n          },\n          {\n            path: \"scim\",\n            component: ScimComponent,\n            canActivate: [PermissionsGuard],\n            data: {\n              permissions: [Permissions.ManageScim],\n            },\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"src/app/shared/shared.module\";\n\nimport { InputCheckboxComponent } from \"./components/input-checkbox.component\";\nimport { InputTextReadOnlyComponent } from \"./components/input-text-readonly.component\";\nimport { InputTextComponent } from \"./components/input-text.component\";\nimport { SelectComponent } from \"./components/select.component\";\nimport { ScimComponent } from \"./manage/scim.component\";\nimport { SsoComponent } from \"./manage/sso.component\";\nimport { OrganizationsRoutingModule } from \"./organizations-routing.module\";\n\n// Form components are for use in the SSO Configuration Form only and should not be exported for use elsewhere.\n// They will be deprecated by the Component Library.\n@NgModule({\n  imports: [SharedModule, OrganizationsRoutingModule],\n  declarations: [\n    InputCheckboxComponent,\n    InputTextComponent,\n    InputTextReadOnlyComponent,\n    SelectComponent,\n    SsoComponent,\n    ScimComponent,\n  ],\n})\nexport class OrganizationsModule {}\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\n\nimport { CoreModule } from \"src/app/core\";\nimport { OssRoutingModule } from \"src/app/oss-routing.module\";\nimport { OssModule } from \"src/app/oss.module\";\nimport { WildcardRoutingModule } from \"src/app/wildcard-routing.module\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { OrganizationsModule } from \"./organizations/organizations.module\";\nimport { DisablePersonalVaultExportPolicyComponent } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicyComponent } from \"./policies/maximum-vault-timeout.component\";\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    OssModule,\n    JslibModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CoreModule,\n    InfiniteScrollModule,\n    DragDropModule,\n    AppRoutingModule,\n    OssRoutingModule,\n    OrganizationsModule, // Must be after OssRoutingModule for competing routes to resolve properly\n    RouterModule,\n    WildcardRoutingModule, // Needs to be last to catch all non-existing routes\n  ],\n  declarations: [\n    AppComponent,\n    DisablePersonalVaultExportPolicyComponent,\n    MaximumVaultTimeoutPolicyComponent,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport \"bootstrap\";\nimport \"jquery\";\nimport \"popper.js\";\n\nrequire(\"src/scss/styles.scss\");\nrequire(\"src/scss/tailwind.css\");\n\nimport { AppModule } from \"./app/app.module\";\n\nif (process.env.NODE_ENV === \"production\") {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n  <input\n    id=\"masterPassword\"\n    type=\"password\"\n    name=\"MasterPasswordHash\"\n    class=\"form-control\"\n    [formControl]=\"secret\"\n    required\n    appAutofocus\n    appInputVerbatim\n  />\n  <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n    <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, UntypedFormControl, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Collects the user's master password, or if they are using Key Connector, prompts for an OTP via email.\n * This is exposed to the parent component via the ControlValueAccessor interface (e.g. bind it to a FormControl).\n * Use UserVerificationService to verify the user's input.\n */\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class UserVerificationComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector = false;\n  disableRequestOTP = false;\n  sentCode = false;\n\n  secret = new UntypedFormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    this.secret.valueChanges.subscribe((secret: string) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: Utils.isNullOrWhitespace(secret) ? null : secret,\n    });\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\n\nimport { ValidationService } from \"../services/validation.service\";\n\n/**\n * Provides error handling, in particular for any error returned by the server in an api call.\n * Attach it to a <form> element and provide the name of the class property that will hold the api call promise.\n * e.g. <form [appApiAction]=\"this.formPromise\">\n * Any errors/rejections that occur will be intercepted and displayed as error toasts.\n */\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if ((e as ErrorResponse).captchaRequired) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface CardRuleEntry {\n  cardLength: number;\n  blocks: number[];\n}\n\n// See https://baymard.com/checkout-usability/credit-card-patterns for\n// all possible credit card spacing patterns. For now, we just handle\n// the below.\nconst numberFormats: Record<string, CardRuleEntry[]> = {\n  Visa: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Mastercard: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Maestro: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 13, blocks: [4, 4, 5] },\n    { cardLength: 15, blocks: [4, 6, 5] },\n    { cardLength: 19, blocks: [4, 4, 4, 4, 3] },\n  ],\n  Discover: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  \"Diners Club\": [{ cardLength: 14, blocks: [4, 6, 4] }],\n  JCB: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  UnionPay: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 19, blocks: [6, 13] },\n  ],\n  Amex: [{ cardLength: 15, blocks: [4, 6, 5] }],\n  Mir: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 17, blocks: [5, 4, 4, 4] },\n    { cardLength: 18, blocks: [6, 4, 4, 4] },\n    { cardLength: 19, blocks: [7, 4, 4, 4] },\n  ],\n  Other: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n};\n\n@Pipe({ name: \"creditCardNumber\" })\nexport class CreditCardNumberPipe implements PipeTransform {\n  transform(creditCardNumber: string, brand: string): string {\n    let rules = numberFormats[brand];\n\n    if (rules == null) {\n      rules = numberFormats[\"Other\"];\n    }\n\n    const cardLength = creditCardNumber.length;\n\n    let matchingRule = rules.find((r) => r.cardLength == cardLength);\n    if (matchingRule == null) {\n      matchingRule = rules[0];\n    }\n\n    const blocks = matchingRule.blocks;\n\n    const chunks: string[] = [];\n    let total = 0;\n\n    blocks.forEach((c) => {\n      chunks.push(creditCardNumber.slice(total, total + c));\n      total += c;\n    });\n\n    // Append the remaining part\n    if (cardLength > total) {\n      chunks.push(creditCardNumber.slice(total));\n    }\n\n    return chunks.join(\" \");\n  }\n}\n","import { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AvatarComponent } from \"./components/avatar.component\";\nimport { CalloutComponent } from \"./components/callout.component\";\nimport { ExportScopeCalloutComponent } from \"./components/export-scope-callout.component\";\nimport { IconComponent } from \"./components/icon.component\";\nimport { BitwardenToastModule } from \"./components/toastr.component\";\nimport { A11yInvalidDirective } from \"./directives/a11y-invalid.directive\";\nimport { A11yTitleDirective } from \"./directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"./directives/api-action.directive\";\nimport { AutofocusDirective } from \"./directives/autofocus.directive\";\nimport { BlurClickDirective } from \"./directives/blur-click.directive\";\nimport { BoxRowDirective } from \"./directives/box-row.directive\";\nimport { FallbackSrcDirective } from \"./directives/fallback-src.directive\";\nimport { InputStripSpacesDirective } from \"./directives/input-strip-spaces.directive\";\nimport { InputVerbatimDirective } from \"./directives/input-verbatim.directive\";\nimport { NotPremiumDirective } from \"./directives/not-premium.directive\";\nimport { SelectCopyDirective } from \"./directives/select-copy.directive\";\nimport { StopClickDirective } from \"./directives/stop-click.directive\";\nimport { StopPropDirective } from \"./directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"./directives/true-false-value.directive\";\nimport { ColorPasswordCountPipe } from \"./pipes/color-password-count.pipe\";\nimport { ColorPasswordPipe } from \"./pipes/color-password.pipe\";\nimport { CreditCardNumberPipe } from \"./pipes/credit-card-number.pipe\";\nimport { EllipsisPipe } from \"./pipes/ellipsis.pipe\";\nimport { I18nPipe } from \"./pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"./pipes/search-ciphers.pipe\";\nimport { SearchPipe } from \"./pipes/search.pipe\";\nimport { UserNamePipe } from \"./pipes/user-name.pipe\";\nimport { PasswordStrengthComponent } from \"./shared/components/password-strength/password-strength.component\";\n\n@NgModule({\n  imports: [\n    BitwardenToastModule.forRoot({\n      maxOpened: 5,\n      autoDismiss: true,\n      closeButton: true,\n    }),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    AvatarComponent,\n    BlurClickDirective,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n  ],\n  exports: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    AvatarComponent,\n    BitwardenToastModule,\n    BlurClickDirective,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n  ],\n  providers: [CreditCardNumberPipe, DatePipe, I18nPipe, SearchPipe, UserNamePipe],\n})\nexport class JslibModule {}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"search\",\n})\nexport class SearchPipe implements PipeTransform {\n  transform(\n    items: any[],\n    searchText: string,\n    prop1?: string,\n    prop2?: string,\n    prop3?: string\n  ): any[] {\n    if (items == null || items.length === 0) {\n      return [];\n    }\n\n    if (searchText == null || searchText.length < 2) {\n      return items;\n    }\n\n    searchText = searchText.trim().toLowerCase();\n    return items.filter((i) => {\n      if (\n        prop1 != null &&\n        i[prop1] != null &&\n        i[prop1].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop2 != null &&\n        i[prop2] != null &&\n        i[prop2].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop3 != null &&\n        i[prop3] != null &&\n        i[prop3].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface User {\n  name?: string;\n  email: string;\n}\n\n@Pipe({\n  name: \"userName\",\n})\nexport class UserNamePipe implements PipeTransform {\n  transform(user?: User): string {\n    if (user == null) {\n      return null;\n    }\n\n    return user.name == null || user.name.trim() === \"\" ? user.email : user.name;\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\n\n@Injectable()\nexport class ValidationService {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import { TreeNode } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nexport class DynamicTreeNode<T extends CollectionView | FolderView> {\n  fullList: T[];\n  nestedList: TreeNode<T>[];\n\n  hasId(id: string): boolean {\n    return this.fullList != null && this.fullList.filter((i: T) => i.id === id).length > 0;\n  }\n\n  constructor(init?: Partial<DynamicTreeNode<T>>) {\n    Object.assign(this, init);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { firstValueFrom, from, mergeMap, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ServiceUtils } from \"@bitwarden/common/misc/serviceUtils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\n\nconst NestingDelimiter = \"/\";\n\n@Injectable()\nexport class VaultFilterService {\n  constructor(\n    protected stateService: StateService,\n    protected organizationService: OrganizationService,\n    protected folderService: FolderService,\n    protected cipherService: CipherService,\n    protected collectionService: CollectionService,\n    protected policyService: PolicyService\n  ) {}\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await this.stateService.setCollapsedGroupings(Array.from(collapsedFilterNodes));\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    return new Set(await this.stateService.getCollapsedGroupings());\n  }\n\n  async buildOrganizations(): Promise<Organization[]> {\n    return await this.organizationService.getAll();\n  }\n\n  buildNestedFolders(organizationId?: string): Observable<DynamicTreeNode<FolderView>> {\n    const transformation = async (storedFolders: FolderView[]) => {\n      let folders: FolderView[];\n      if (organizationId != null) {\n        const ciphers = await this.cipherService.getAllDecrypted();\n        const orgCiphers = ciphers.filter((c) => c.organizationId == organizationId);\n        folders = storedFolders.filter(\n          (f) =>\n            orgCiphers.filter((oc) => oc.folderId == f.id).length > 0 ||\n            ciphers.filter((c) => c.folderId == f.id).length < 1\n        );\n      } else {\n        folders = storedFolders;\n      }\n      const nestedFolders = await this.getAllFoldersNested(folders);\n      return new DynamicTreeNode<FolderView>({\n        fullList: folders,\n        nestedList: nestedFolders,\n      });\n    };\n\n    return this.folderService.folderViews$.pipe(\n      mergeMap((folders) => from(transformation(folders)))\n    );\n  }\n\n  async buildCollections(organizationId?: string): Promise<DynamicTreeNode<CollectionView>> {\n    const storedCollections = await this.collectionService.getAllDecrypted();\n    let collections: CollectionView[];\n    if (organizationId != null) {\n      collections = storedCollections.filter((c) => c.organizationId === organizationId);\n    } else {\n      collections = storedCollections;\n    }\n    const nestedCollections = await this.collectionService.getAllNested(collections);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: collections,\n      nestedList: nestedCollections,\n    });\n  }\n\n  async checkForSingleOrganizationPolicy(): Promise<boolean> {\n    return await this.policyService.policyAppliesToUser(PolicyType.SingleOrg);\n  }\n\n  async checkForPersonalOwnershipPolicy(): Promise<boolean> {\n    return await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership);\n  }\n\n  protected async getAllFoldersNested(folders: FolderView[]): Promise<TreeNode<FolderView>[]> {\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getFolderNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllFoldersNested(\n      await firstValueFrom(this.folderService.folderViews$)\n    );\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n}\n","import { OrganizationApiKeyType } from \"../enums/organizationApiKeyType\";\nimport { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { DeviceVerificationRequest } from \"../models/request/deviceVerificationRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationApiKeyRequest } from \"../models/request/organizationApiKeyRequest\";\nimport { OrganizationConnectionRequest } from \"../models/request/organizationConnectionRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingHistoryResponse } from \"../models/response/billingHistoryResponse\";\nimport { BillingPaymentResponse } from \"../models/response/billingPaymentResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DeviceVerificationResponse } from \"../models/response/deviceVerificationResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationApiKeyInformationResponse } from \"../models/response/organizationApiKeyInformationResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organizationConnectionResponse\";\nimport { OrganizationExportResponse } from \"../models/response/organizationExportResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organizationSponsorshipSyncStatusResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SsoPreValidateResponse } from \"../models/response/ssoPreValidateResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport abstract class ApiService {\n  send: (\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ) => Promise<any>;\n\n  postIdentityToken: (\n    request: PasswordTokenRequest | SsoTokenRequest | ApiTokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<any>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<any>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postAccountRequestOTP: () => Promise<void>;\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postConvertToKeyConnector: () => Promise<void>;\n\n  getUserBillingHistory: () => Promise<BillingHistoryResponse>;\n  getUserBillingPayment: () => Promise<BillingPaymentResponse>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getFullCipherDetails: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n  postImportOrganizationCiphers: (\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getCollectionDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionGroupDetailsResponse>;\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n  getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroup: (organizationId: string, id: string) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getOrganizationUser: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserDetailsResponse>;\n  getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n  getOrganizationUsers: (\n    organizationId: string\n  ) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n  getOrganizationUserResetPasswordDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserResetPasswordDetailsReponse>;\n  postOrganizationUserInvite: (\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ) => Promise<any>;\n  postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n  postManyOrganizationUserReinvite: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  postOrganizationUserAccept: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ) => Promise<any>;\n  postOrganizationUserConfirm: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ) => Promise<any>;\n  postOrganizationUsersPublicKey: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n  postOrganizationUserBulkConfirm: (\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  putOrganizationUser: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ) => Promise<any>;\n  putOrganizationUserGroups: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPasswordEnrollment: (\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPassword: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ) => Promise<any>;\n  deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  revokeOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  revokeManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  restoreOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  restoreManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  getSync: () => Promise<SyncResponse>;\n  postImportDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<any>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n  getDeviceVerificationSettings: () => Promise<DeviceVerificationResponse>;\n  putDeviceVerificationSettings: (\n    request: DeviceVerificationRequest\n  ) => Promise<DeviceVerificationResponse>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n\n  getOrganization: (id: string) => Promise<OrganizationResponse>;\n  getOrganizationBilling: (id: string) => Promise<BillingResponse>;\n  getOrganizationSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getCloudCommunicationsEnabled: () => Promise<boolean>;\n  abstract getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId: string\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  deleteOrganizationConnection: (id: string) => Promise<void>;\n  getOrganizationLicense: (id: string, installationId: string) => Promise<any>;\n  getOrganizationTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  getOrganizationAutoEnrollStatus: (\n    identifier: string\n  ) => Promise<OrganizationAutoEnrollStatusResponse>;\n  getOrganizationSso: (id: string) => Promise<OrganizationSsoResponse>;\n  postOrganization: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  putOrganization: (\n    id: string,\n    request: OrganizationUpdateRequest\n  ) => Promise<OrganizationResponse>;\n  putOrganizationTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<any>;\n  postLeaveOrganization: (id: string) => Promise<any>;\n  postOrganizationLicense: (data: FormData) => Promise<OrganizationResponse>;\n  postOrganizationLicenseUpdate: (id: string, data: FormData) => Promise<any>;\n  postOrganizationApiKey: (\n    id: string,\n    request: OrganizationApiKeyRequest\n  ) => Promise<ApiKeyResponse>;\n  getOrganizationApiKeyInformation: (\n    id: string,\n    type?: OrganizationApiKeyType\n  ) => Promise<ListResponse<OrganizationApiKeyInformationResponse>>;\n  postOrganizationRotateApiKey: (\n    id: string,\n    request: OrganizationApiKeyRequest\n  ) => Promise<ApiKeyResponse>;\n  postOrganizationSso: (\n    id: string,\n    request: OrganizationSsoRequest\n  ) => Promise<OrganizationSsoResponse>;\n  postOrganizationUpgrade: (\n    id: string,\n    request: OrganizationUpgradeRequest\n  ) => Promise<PaymentResponse>;\n  postOrganizationUpdateSubscription: (\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ) => Promise<void>;\n  postOrganizationSeat: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  postOrganizationStorage: (id: string, request: StorageRequest) => Promise<any>;\n  postOrganizationPayment: (id: string, request: PaymentRequest) => Promise<any>;\n  postOrganizationVerifyBank: (id: string, request: VerifyBankRequest) => Promise<any>;\n  postOrganizationCancel: (id: string) => Promise<any>;\n  postOrganizationReinstate: (id: string) => Promise<any>;\n  deleteOrganization: (id: string, request: SecretVerificationRequest) => Promise<any>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n  getOrganizationKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  postOrganizationKeys: (\n    id: string,\n    request: OrganizationKeysRequest\n  ) => Promise<OrganizationKeysResponse>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<any>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<SsoPreValidateResponse>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  getSponsorshipSyncStatus: (\n    sponsoredOrgId: string\n  ) => Promise<OrganizationSponsorshipSyncStatusResponse>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n  getOrganizationExport: (organizationId: string) => Promise<OrganizationExportResponse>;\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  saveWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: any, b: any) => number;\n  sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  getKeyForUserEncryption: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuffer: EncArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","import { EventType } from \"../enums/eventType\";\n\nexport abstract class EventService {\n  collect: (\n    eventType: EventType,\n    cipherId?: string,\n    uploadImmediately?: boolean,\n    organizationId?: string\n  ) => Promise<any>;\n  uploadEvents: (userId?: string) => Promise<any>;\n  clearEvents: (userId?: string) => Promise<any>;\n}\n","import { EventView } from \"../models/view/eventView\";\n\nexport type ExportFormat = \"csv\" | \"json\" | \"encrypted_json\";\n\nexport abstract class ExportService {\n  getExport: (format?: ExportFormat, organizationId?: string) => Promise<string>;\n  getPasswordProtectedExport: (password: string, organizationId?: string) => Promise<string>;\n  getOrganizationExport: (organizationId: string, format?: ExportFormat) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport abstract class FileDownloadService {\n  download: (request: FileDownloadRequest) => void;\n}\n","import { Observable } from \"rxjs\";\n\nimport { FolderData } from \"../../models/data/folderData\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { FolderView } from \"../../models/view/folderView\";\n\nexport abstract class FolderService {\n  folders$: Observable<Folder[]>;\n  folderViews$: Observable<FolderView[]>;\n\n  clearCache: () => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n  /**\n   * @deprecated Only use in CLI!\n   */\n  getAllDecryptedFromState: () => Promise<FolderView[]>;\n}\n\nexport abstract class InternalFolderService extends FolderService {\n  upsert: (folder: FolderData | FolderData[]) => Promise<void>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<void>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nexport abstract class I18nService {\n  locale$: Observable<string>;\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { Organization } from \"../models/domain/organization\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  convertNewSsoUserToKeyConnector: (\n    tokenResponse: IdentityTokenResponse,\n    orgId: string\n  ) => Promise<void>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n  time: (label: string) => void;\n  timeEnd: (label: string) => [number, number];\n}\n","import { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport abstract class OrganizationService {\n  get: (id: string) => Promise<Organization>;\n  getByIdentifier: (identifier: string) => Promise<Organization>;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  save: (orgs: { [id: string]: OrganizationData }) => Promise<any>;\n  canManageSponsorships: () => Promise<boolean>;\n  hasOrganizations: (userId?: string) => Promise<boolean>;\n}\n","import { ClientType } from \"../enums/clientType\";\nimport { DeviceType } from \"../enums/deviceType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  getClientType: () => ClientType;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  getApplicationVersion: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  supportsSecureStorage: () => boolean;\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { PolicyResponse } from \"../../models/response/policyResponse\";\n\nexport abstract class PolicyService {\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n\n  getMasterPasswordPolicyOptions: (policies?: Policy[]) => Promise<MasterPasswordPolicyOptions>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n\nexport abstract class InternalPolicyService extends PolicyService {\n  upsert: (policy: PolicyData) => Promise<any>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts: BehaviorSubject<{ [userId: string]: T }>;\n  activeAccount: BehaviorSubject<string>;\n\n  activeAccountUnlocked: Observable<boolean>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<any>;\n  setAddEditCipherInfo: (value: any, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getHasPremiumPersonally: (options?: StorageOptions) => Promise<boolean>;\n  setHasPremiumPersonally: (value: boolean, options?: StorageOptions) => Promise<void>;\n  setHasPremiumFromOrganization: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getHasPremiumFromOrganization: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<string[]>;\n  setCollapsedGroupings: (value: string[], options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecodedToken: (options?: StorageOptions) => Promise<any>;\n  setDecodedToken: (value: any, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableGravitars: (options?: StorageOptions) => Promise<boolean>;\n  setEnableGravitars: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<{ [orgId: string]: EncryptedOrganizationKeyData }>;\n  setEncryptedOrganizationKeys: (\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<any>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfIterations: (options?: StorageOptions) => Promise<number>;\n  setKdfIterations: (value: number, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<any>;\n  setLocalData: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getUsernameGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setUsernameGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getGeneratorOptions: (options?: StorageOptions) => Promise<any>;\n  setGeneratorOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  getSettings: (options?: StorageOptions) => Promise<any>;\n  setSettings: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n}\n","import {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { Verification } from \"../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n  OrganizationUser_Revoked = 1511,\n  OrganizationUser_Restored = 1512,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n  Organization_SponsorshipsSynced = 1608,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const DEFAULT_KDF_ITERATIONS = 100000;\nexport const SEND_KDF_ITERATIONS = 100000;\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","export enum Permissions {\n  AccessEventLogs,\n  AccessImportExport,\n  AccessReports,\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  ManageAllCollections,\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  ManageAssignedCollections,\n  ManageGroups,\n  ManageOrganization,\n  ManagePolicies,\n  ManageProvider,\n  ManageUsers,\n  ManageUsersPassword,\n  CreateNewCollections,\n  EditAnyCollection,\n  DeleteAnyCollection,\n  EditAssignedCollections,\n  DeleteAssignedCollections,\n  ManageSso,\n  ManageBilling,\n  ManageScim,\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../models/view/itemView\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/treeNode\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","export function getDomain(host: string): string | null {\n  return null;\n}\n\nexport function isValid(host: string): boolean {\n  return true;\n}\n","/* eslint-disable no-useless-escape */\nimport * as tldjs from \"tldjs\";\n\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: any = null;\n  static tldEndingRegex =\n    /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n    Utils.global = Utils.isNode && !Utils.isBrowser ? global : window;\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = window.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return window.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(window.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(window.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.hostname !== \"\" ? url.hostname : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    let httpUrl = uriString.startsWith(\"http://\") || uriString.startsWith(\"https://\");\n    if (\n      !httpUrl &&\n      uriString.indexOf(\"://\") < 0 &&\n      Utils.tldEndingRegex.test(uriString) &&\n      uriString.indexOf(\"@\") < 0\n    ) {\n      uriString = \"http://\" + uriString;\n      httpUrl = true;\n    }\n\n    if (httpUrl) {\n      try {\n        const url = Utils.getUrlObject(uriString);\n        const validHostname = tldjs?.isValid != null ? tldjs.isValid(url.hostname) : true;\n        if (!validHostname) {\n          return null;\n        }\n\n        if (url.hostname === \"localhost\" || Utils.validIpAddress(url.hostname)) {\n          return url.hostname;\n        }\n\n        const urlDomain =\n          tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n        return urlDomain != null ? urlDomain : url.hostname;\n      } catch (e) {\n        // Invalid domain, try another approach below.\n      }\n    }\n\n    try {\n      const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n      if (domain != null) {\n        return domain;\n      }\n    } catch {\n      return null;\n    }\n\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction(i18nService: I18nService, prop: string) {\n    return (a: any, b: any) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop], b[prop])\n        : a[prop].localeCompare(b[prop]);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  private static validIpAddress(ipString: string): boolean {\n    const ipRegex =\n      /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return ipRegex.test(ipString);\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (window != null) {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { LoginUriApi } from \"./loginUriApi\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { AttachmentResponse } from \"../response/attachmentResponse\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/cardApi\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherResponse } from \"../response/cipherResponse\";\n\nimport { AttachmentData } from \"./attachmentData\";\nimport { CardData } from \"./cardData\";\nimport { FieldData } from \"./fieldData\";\nimport { IdentityData } from \"./identityData\";\nimport { LoginData } from \"./loginData\";\nimport { PasswordHistoryData } from \"./passwordHistoryData\";\nimport { SecureNoteData } from \"./secureNoteData\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collectionResponse\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldApi } from \"../api/fieldApi\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { IdentityApi } from \"../api/identityApi\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { LoginApi } from \"../api/loginApi\";\n\nimport { LoginUriData } from \"./loginUriData\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/passwordHistoryResponse\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { AttachmentData } from \"../data/attachmentData\";\nimport { AttachmentView } from \"../view/attachmentView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string; // Readable size, ex: \"4.2 KB\" or \"1.43 GB\"\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      let cryptoService: CryptoService;\n      const containerService = (Utils.global as any).bitwardenContainerService;\n      if (containerService) {\n        cryptoService = containerService.getCryptoService();\n      } else {\n        throw new Error(\"global bitwardenContainerService not initialized.\");\n      }\n\n      try {\n        const orgKey = await cryptoService.getOrgKey(orgId);\n        const decValue = await cryptoService.decryptToBytes(this.key, orgKey ?? encKey);\n        view.key = new SymmetricCryptoKey(decValue);\n      } catch (e) {\n        // TODO: error?\n      }\n    }\n\n    return view;\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n}\n","import { CardData } from \"../data/cardData\";\nimport { CardView } from \"../view/cardView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secureNote\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Cipher extends Domain {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: any;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, localData: any = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      [\"id\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n}\n","import { CollectionData } from \"../data/collectionData\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import { IEncrypted } from \"@bitwarden/common/interfaces/IEncrypted\";\n\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncString implements IEncrypted {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      // data and header\n      const encType = encryptedStringOrType as EncryptionType;\n\n      if (iv != null) {\n        this.encryptedString = encType + \".\" + iv + \"|\" + data;\n      } else {\n        this.encryptedString = encType + \".\" + data;\n      }\n\n      // mac\n      if (mac != null) {\n        this.encryptedString += \"|\" + mac;\n      }\n\n      this.encryptionType = encType;\n      this.data = data;\n      this.iv = iv;\n      this.mac = mac;\n\n      return;\n    }\n\n    this.encryptedString = encryptedStringOrType as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const headerPieces = this.encryptedString.split(\".\");\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        this.encryptionType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = this.encryptedString.split(\"|\");\n      this.encryptionType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    switch (this.encryptionType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      if (key == null) {\n        key = await cryptoService.getOrgKey(orgId);\n      }\n      this.decryptedValue = await cryptoService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n\n  get ivBytes(): ArrayBuffer {\n    return this.iv == null ? null : Utils.fromB64ToArray(this.iv).buffer;\n  }\n\n  get macBytes(): ArrayBuffer {\n    return this.mac == null ? null : Utils.fromB64ToArray(this.mac).buffer;\n  }\n\n  get dataBytes(): ArrayBuffer {\n    return this.data == null ? null : Utils.fromB64ToArray(this.data).buffer;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldData } from \"../data/fieldData\";\nimport { FieldView } from \"../view/fieldView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n}\n","import { FolderData } from \"../data/folderData\";\nimport { FolderView } from \"../view/folderView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n}\n","import { IdentityData } from \"../data/identityData\";\nimport { IdentityView } from \"../view/identityView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n}\n","import { LoginData } from \"../data/loginData\";\nimport { LoginView } from \"../view/loginView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { LoginUri } from \"./loginUri\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriData } from \"../data/loginUriData\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n        match: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","import { PasswordHistoryData } from \"../data/passwordHistoryData\";\nimport { PasswordHistoryView } from \"../view/passwordHistoryView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(this, obj, {\n      password: null,\n    });\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteData } from \"../data/secureNoteData\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nimport Domain from \"./domainBase\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n\n  toJSON() {\n    // The whole object is constructed from the initial key, so just store the B64 key\n    return { keyB64: this.keyB64 };\n  }\n\n  static fromJSON(obj: Jsonify<SymmetricCryptoKey>): SymmetricCryptoKey {\n    if (obj == null) {\n      return null;\n    }\n\n    const arrayBuffer = Utils.fromB64ToArray(obj.keyB64).buffer;\n    return new SymmetricCryptoKey(arrayBuffer);\n  }\n}\n","import { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/encString\";\nimport { CardView } from \"../view/cardView\";\n\nexport class CardExport {\n  static template(): CardExport {\n    const req = new CardExport();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: CardExport, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: CardExport, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { EncString } from \"../domain/encString\";\nimport { Field as FieldDomain } from \"../domain/field\";\nimport { FieldView } from \"../view/fieldView\";\n\nexport class FieldExport {\n  static template(): FieldExport {\n    const req = new FieldExport();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: FieldExport, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: FieldExport, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\nimport { IdentityView } from \"../view/identityView\";\n\nexport class IdentityExport {\n  static template(): IdentityExport {\n    const req = new IdentityExport();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: IdentityExport, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: IdentityExport, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { EncString } from \"../domain/encString\";\nimport { LoginUri as LoginUriDomain } from \"../domain/loginUri\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nexport class LoginUriExport {\n  static template(): LoginUriExport {\n    const req = new LoginUriExport();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUriExport, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUriExport, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Login as LoginDomain } from \"../domain/login\";\nimport { LoginView } from \"../view/loginView\";\n\nimport { LoginUriExport } from \"./loginUriExport\";\n\nexport class LoginExport {\n  static template(): LoginExport {\n    const req = new LoginExport();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: LoginExport, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUriExport.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: LoginExport, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUriExport.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUriExport[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../domain/secureNote\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nexport class SecureNoteExport {\n  static template(): SecureNoteExport {\n    const req = new SecureNoteExport();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNoteExport, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNoteExport, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/encString\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { CardExport } from \"./cardExport\";\nimport { FieldExport } from \"./fieldExport\";\nimport { IdentityExport } from \"./identityExport\";\nimport { LoginExport } from \"./loginExport\";\nimport { SecureNoteExport } from \"./secureNoteExport\";\n\nexport class CipherExport {\n  static template(): CipherExport {\n    const req = new CipherExport();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: CipherExport, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => FieldExport.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = LoginExport.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteExport.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = CardExport.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityExport.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: CipherExport, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => FieldExport.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = LoginExport.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNoteExport.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = CardExport.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = IdentityExport.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: FieldExport[];\n  login: LoginExport;\n  secureNote: SecureNoteExport;\n  card: CardExport;\n  identity: IdentityExport;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      } else {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new LoginExport(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteExport(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardExport(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityExport(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { CipherExport } from \"./cipherExport\";\n\nexport class CipherWithIdExport extends CipherExport {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/encString\";\nimport { CollectionView } from \"../view/collectionView\";\n\nexport class CollectionExport {\n  static template(): CollectionExport {\n    const req = new CollectionExport();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: CollectionExport, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: CollectionExport, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport { CollectionExport } from \"./collectionExport\";\n\nexport class CollectionWithIdExport extends CollectionExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nexport class FolderExport {\n  static template(): FolderExport {\n    const req = new FolderExport();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: FolderExport, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: FolderExport, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nimport { FolderExport } from \"./folderExport\";\n\nexport class FolderWithIdExport extends FolderExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachmentRequest\";\nimport { PasswordHistoryRequest } from \"./passwordHistoryRequest\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Collection } from \"../domain/collection\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class CollectionRequest {\n  name: string;\n  externalId: string;\n  groups: SelectionReadOnlyRequest[] = [];\n\n  constructor(collection?: Collection) {\n    if (collection == null) {\n      return;\n    }\n    this.name = collection.name ? collection.name.encryptedString : null;\n    this.externalId = collection.externalId;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (status === 429) {\n      this.message = \"Rate limit exceeded. Try again later.\";\n    } else if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { View } from \"./view\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<AttachmentView>>): AttachmentView {\n    const key = obj.key == null ? null : SymmetricCryptoKey.fromJSON(obj.key);\n    return Object.assign(new AttachmentView(), obj, { key: key });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CardView>>): CardView {\n    return Object.assign(new CardView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachmentView\";\nimport { CardView } from \"./cardView\";\nimport { FieldView } from \"./fieldView\";\nimport { IdentityView } from \"./identityView\";\nimport { LoginView } from \"./loginView\";\nimport { PasswordHistoryView } from \"./passwordHistoryView\";\nimport { SecureNoteView } from \"./secureNoteView\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View {\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: any;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CipherView>>): CipherView {\n    const view = new CipherView();\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => AttachmentView.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => FieldView.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => PasswordHistoryView.fromJSON(ph));\n\n    Object.assign(view, obj, {\n      revisionDate: revisionDate,\n      deletedDate: deletedDate,\n      attachments: attachments,\n      fields: fields,\n      passwordHistory: passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        view.card = CardView.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityView.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        view.login = LoginView.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteView.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return view;\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\nimport { CollectionGroupDetailsResponse } from \"../response/collectionResponse\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field } from \"../domain/field\";\n\nimport { View } from \"./view\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<FieldView>>): FieldView {\n    return Object.assign(new FieldView(), obj);\n  }\n}\n","import { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\n\nimport { View } from \"./view\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<IdentityView>>): IdentityView {\n    return Object.assign(new IdentityView(), obj);\n  }\n}\n","import { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { View } from \"./view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { LoginUri } from \"../domain/loginUri\";\n\nimport { View } from \"./view\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginUriView>>): LoginUriView {\n    return Object.assign(new LoginUriView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./itemView\";\nimport { LoginUriView } from \"./loginUriView\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginView>>): LoginView {\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUriView.fromJSON(uri));\n\n    return Object.assign(new LoginView(), obj, {\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Password } from \"../domain/password\";\n\nimport { View } from \"./view\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<PasswordHistoryView>>): PasswordHistoryView {\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new PasswordHistoryView(), obj, {\n      lastUsedDate: lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secureNote\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<SecureNoteView>>): SecureNoteView {\n    return Object.assign(new SecureNoteView(), obj);\n  }\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","import * as hrtime from \"browser-hrtime\";\n\nimport { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n\n  time(label = \"default\") {\n    if (!this.timersMap.has(label)) {\n      this.timersMap.set(label, hrtime());\n    }\n  }\n\n  timeEnd(label = \"default\"): [number, number] {\n    const elapsed = hrtime(this.timersMap.get(label));\n    this.timersMap.delete(label);\n    this.write(LogLevelType.Info, `${label}: ${elapsed[0] * 1000 + elapsed[1] / 10e6}ms`);\n    return elapsed;\n  }\n}\n","import { Directive, ElementRef, HostBinding, Input } from \"@angular/core\";\n\ntype BadgeTypes = \"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\";\n\nconst styles: Record<BadgeTypes, string[]> = {\n  primary: [\"tw-bg-primary-500\"],\n  secondary: [\"tw-bg-text-muted\"],\n  success: [\"tw-bg-success-500\"],\n  danger: [\"tw-bg-danger-500\"],\n  warning: [\"tw-bg-warning-500\"],\n  info: [\"tw-bg-info-500\"],\n};\n\nconst hoverStyles: Record<BadgeTypes, string[]> = {\n  primary: [\"hover:tw-bg-primary-700\"],\n  secondary: [\"hover:tw-bg-secondary-700\"],\n  success: [\"hover:tw-bg-success-700\"],\n  danger: [\"hover:tw-bg-danger-700\"],\n  warning: [\"hover:tw-bg-warning-700\"],\n  info: [\"hover:tw-bg-info-700\"],\n};\n\n@Directive({\n  selector: \"span[bitBadge], a[bitBadge], button[bitBadge]\",\n})\nexport class BadgeDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-inline\",\n      \"tw-py-0.5\",\n      \"tw-px-1.5\",\n      \"tw-font-bold\",\n      \"tw-text-center\",\n      \"!tw-text-contrast\",\n      \"tw-rounded\",\n      \"tw-border-none\",\n      \"tw-box-border\",\n      \"tw-whitespace-no-wrap\",\n      \"tw-text-xs\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n      \"focus:tw-ring\",\n      \"focus:tw-ring-offset-2\",\n      \"focus:tw-ring-primary-700\",\n    ]\n      .concat(styles[this.badgeType])\n      .concat(this.hasHoverEffects ? hoverStyles[this.badgeType] : []);\n  }\n\n  @Input() badgeType: BadgeTypes = \"primary\";\n\n  private hasHoverEffects = false;\n\n  constructor(el: ElementRef<Element>) {\n    this.hasHoverEffects = el?.nativeElement?.nodeName != \"SPAN\";\n  }\n}\n","import { Input, HostBinding, Directive } from \"@angular/core\";\n\nexport type ButtonTypes = \"primary\" | \"secondary\" | \"danger\";\n\nconst buttonStyles: Record<ButtonTypes, string[]> = {\n  primary: [\n    \"tw-border-primary-500\",\n    \"tw-bg-primary-500\",\n    \"!tw-text-contrast\",\n    \"hover:tw-bg-primary-700\",\n    \"hover:tw-border-primary-700\",\n    \"focus:tw-bg-primary-700\",\n    \"focus:tw-border-primary-700\",\n  ],\n  secondary: [\n    \"tw-bg-transparent\",\n    \"tw-border-text-muted\",\n    \"!tw-text-muted\",\n    \"hover:tw-bg-secondary-500\",\n    \"hover:tw-border-secondary-500\",\n    \"hover:!tw-text-contrast\",\n    \"focus:tw-bg-secondary-500\",\n    \"focus:tw-border-secondary-500\",\n    \"focus:!tw-text-contrast\",\n  ],\n  danger: [\n    \"tw-bg-transparent\",\n    \"tw-border-danger-500\",\n    \"!tw-text-danger\",\n    \"hover:tw-bg-danger-500\",\n    \"hover:tw-border-danger-500\",\n    \"hover:!tw-text-contrast\",\n    \"focus:tw-bg-danger-500\",\n    \"focus:tw-border-danger-500\",\n    \"focus:!tw-text-contrast\",\n  ],\n};\n\n@Directive({\n  selector: \"button[bitButton], a[bitButton]\",\n})\nexport class ButtonDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-font-semibold\",\n      \"tw-py-1.5\",\n      \"tw-px-3\",\n      \"tw-rounded\",\n      \"tw-transition\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      \"tw-text-center\",\n      \"hover:tw-no-underline\",\n      \"disabled:tw-bg-secondary-100\",\n      \"disabled:tw-border-secondary-100\",\n      \"disabled:!tw-text-main\",\n      \"focus:tw-outline-none\",\n      \"focus:tw-ring\",\n      \"focus:tw-ring-offset-2\",\n      \"focus:tw-ring-primary-700\",\n      \"focus:tw-z-10\",\n    ]\n      .concat(this.block ? [\"tw-w-full\", \"tw-block\"] : [\"tw-inline-block\"])\n      .concat(buttonStyles[this.buttonType] ?? []);\n  }\n\n  @Input()\n  buttonType: ButtonTypes = \"secondary\";\n\n  @Input()\n  block = false;\n}\n","<div\n  class=\"tw-mb-4 tw-box-border tw-rounded tw-border tw-border-l-8 tw-border-solid tw-border-secondary-300 tw-bg-background-alt tw-py-3 tw-px-5 tw-leading-5 tw-text-main\"\n  [ngClass]=\"calloutClass\"\n>\n  <h3\n    class=\"tw-mt-0 tw-mb-2 tw-text-base tw-font-bold tw-uppercase\"\n    [ngClass]=\"headerClass\"\n    *ngIf=\"title\"\n  >\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\ntype CalloutTypes = \"success\" | \"info\" | \"warning\" | \"danger\";\n\nconst defaultIcon: Record<CalloutTypes, string> = {\n  success: \"bwi-check\",\n  info: \"bwi-info-circle\",\n  warning: \"bwi-exclamation-triangle\",\n  danger: \"bwi-error\",\n};\n\nconst defaultI18n: Partial<Record<CalloutTypes, string>> = {\n  warning: \"warning\",\n  danger: \"error\",\n};\n\n@Component({\n  selector: \"bit-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type: CalloutTypes = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() useAlertRole = false;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.icon ??= defaultIcon[this.type];\n    if (this.title == null && defaultI18n[this.type] != null) {\n      this.title = this.i18nService.t(defaultI18n[this.type]);\n    }\n  }\n\n  get calloutClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"tw-border-l-danger-500\";\n      case \"info\":\n        return \"tw-border-l-info-500\";\n      case \"success\":\n        return \"tw-border-l-success-500\";\n      case \"warning\":\n        return \"tw-border-l-warning-500\";\n    }\n  }\n\n  get headerClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"!tw-text-danger\";\n      case \"info\":\n        return \"!tw-text-info\";\n      case \"success\":\n        return \"!tw-text-success\";\n      case \"warning\":\n        return \"!tw-text-warning\";\n    }\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { AbstractControl, UntypedFormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"bit-error-summary\",\n  template: ` <ng-container *ngIf=\"errorCount > 0\">\n    <i class=\"bwi bwi-error\"></i> {{ \"fieldsNeedAttention\" | i18n: errorString }}\n  </ng-container>`,\n  host: {\n    class: \"tw-block tw-text-danger tw-mt-2\",\n    \"aria-live\": \"assertive\",\n  },\n})\nexport class BitErrorSummary {\n  @Input()\n  formGroup: UntypedFormGroup;\n\n  get errorCount(): number {\n    return this.getErrorCount(this.formGroup);\n  }\n\n  get errorString() {\n    return this.errorCount.toString();\n  }\n\n  private getErrorCount(form: UntypedFormGroup): number {\n    return Object.values(form.controls).reduce((acc: number, control: AbstractControl) => {\n      if (control instanceof UntypedFormGroup) {\n        return acc + this.getErrorCount(control);\n      }\n\n      if (control.errors == null) {\n        return acc;\n      }\n\n      return acc + Object.keys(control.errors).length;\n    }, 0);\n  }\n}\n","import { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Component({\n  selector: \"bit-error\",\n  template: `<i class=\"bwi bwi-error\"></i> {{ displayError }}`,\n  host: {\n    class: \"tw-block tw-mt-1 tw-text-danger\",\n    \"aria-live\": \"assertive\",\n  },\n})\nexport class BitErrorComponent {\n  @HostBinding() id = `bit-error-${nextId++}`;\n\n  @Input() error: [string, any];\n\n  constructor(private i18nService: I18nService) {}\n\n  get displayError() {\n    switch (this.error[0]) {\n      case \"required\":\n        return this.i18nService.t(\"inputRequired\");\n      case \"email\":\n        return this.i18nService.t(\"inputEmail\");\n      case \"minlength\":\n        return this.i18nService.t(\"inputMinLength\", this.error[1]?.requiredLength);\n      default:\n        // Attempt to show a custom error message.\n        if (this.error[1]?.message) {\n          return this.error[1]?.message;\n        }\n\n        return this.error;\n    }\n  }\n}\n","<label class=\"tw-mb-1 tw-block tw-font-semibold tw-text-main\" [attr.for]=\"input.id\">\n  <ng-content select=\"bit-label\"></ng-content>\n  <span *ngIf=\"input.required\" class=\"tw-text-xs tw-font-normal\"> ({{ \"required\" | i18n }})</span>\n</label>\n<div class=\"tw-flex\">\n  <div *ngIf=\"prefixChildren.length\" class=\"tw-flex\">\n    <ng-content select=\"[bitPrefix]\"></ng-content>\n  </div>\n  <ng-content></ng-content>\n  <div *ngIf=\"suffixChildren.length\" class=\"tw-flex\">\n    <ng-content select=\"[bitSuffix]\"></ng-content>\n  </div>\n</div>\n<ng-container [ngSwitch]=\"input.hasError\">\n  <ng-content select=\"bit-hint\" *ngSwitchCase=\"false\"></ng-content>\n  <bit-error [error]=\"input.error\" *ngSwitchCase=\"true\"></bit-error>\n</ng-container>\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChild,\n  ContentChildren,\n  QueryList,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { BitInputDirective } from \"../input/input.directive\";\n\nimport { BitErrorComponent } from \"./error.component\";\nimport { BitHintComponent } from \"./hint.component\";\nimport { BitPrefixDirective } from \"./prefix.directive\";\nimport { BitSuffixDirective } from \"./suffix.directive\";\n\n@Component({\n  selector: \"bit-form-field\",\n  templateUrl: \"./form-field.component.html\",\n  host: {\n    class: \"tw-mb-6 tw-block\",\n  },\n})\nexport class BitFormFieldComponent implements AfterContentChecked {\n  @ContentChild(BitInputDirective) input: BitInputDirective;\n  @ContentChild(BitHintComponent) hint: BitHintComponent;\n\n  @ViewChild(BitErrorComponent) error: BitErrorComponent;\n\n  @ContentChildren(BitPrefixDirective) prefixChildren: QueryList<BitPrefixDirective>;\n  @ContentChildren(BitSuffixDirective) suffixChildren: QueryList<BitSuffixDirective>;\n\n  ngAfterContentChecked(): void {\n    if (this.error) {\n      this.input.ariaDescribedBy = this.error.id;\n    } else if (this.hint) {\n      this.input.ariaDescribedBy = this.hint.id;\n    } else {\n      this.input.ariaDescribedBy = undefined;\n    }\n  }\n}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"bit-hint\",\n  host: {\n    class: \"tw-text-muted tw-inline-block tw-mt-1\",\n  },\n})\nexport class BitHintComponent {\n  @HostBinding() id = `bit-hint-${nextId++}`;\n}\n","import { Directive, HostBinding, Input } from \"@angular/core\";\n\nexport const PrefixClasses = [\n  \"tw-block\",\n  \"tw-px-3\",\n  \"tw-py-1.5\",\n  \"tw-bg-background-alt\",\n  \"tw-border\",\n  \"tw-border-solid\",\n  \"tw-border-secondary-500\",\n  \"tw-text-muted\",\n  \"tw-rounded-none\",\n  \"disabled:!tw-text-muted\",\n  \"disabled:tw-border-secondary-500\",\n];\n\n@Directive({\n  selector: \"[bitPrefix]\",\n})\nexport class BitPrefixDirective {\n  @HostBinding(\"class\") @Input() get classList() {\n    return PrefixClasses.concat([\"tw-border-r-0\", \"first:tw-rounded-l\"]);\n  }\n}\n","import { Directive, HostBinding, Input } from \"@angular/core\";\n\nimport { PrefixClasses } from \"./prefix.directive\";\n\n@Directive({\n  selector: \"[bitSuffix]\",\n})\nexport class BitSuffixDirective {\n  @HostBinding(\"class\") @Input() get classList() {\n    return PrefixClasses.concat([\"tw-border-l-0\", \"last:tw-rounded-r\"]);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BadgeDirective } from \"./badge.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [BadgeDirective],\n  declarations: [BadgeDirective],\n})\nexport class BadgeModule {}\n","<div\n  class=\"tw-flex tw-items-center tw-gap-2 tw-py-2.5 tw-px-4 tw-text-contrast\"\n  [ngClass]=\"bannerClass\"\n  [attr.role]=\"useAlertRole ? 'status' : null\"\n  [attr.aria-live]=\"useAlertRole ? 'polite' : null\"\n>\n  <i class=\"bwi tw-align-middle\" [ngClass]=\"icon\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n  <span class=\"tw-grow tw-text-base\">\n    <ng-content></ng-content>\n  </span>\n  <button class=\"tw-border-0 tw-bg-transparent tw-p-0 tw-text-contrast\" (click)=\"onClose.emit()\">\n    <i class=\"bwi bwi-close tw-text-sm\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n  </button>\n</div>\n","import { Component, Input, OnInit, Output, EventEmitter } from \"@angular/core\";\n\ntype BannerTypes = \"premium\" | \"info\" | \"warning\" | \"danger\";\n\nconst defaultIcon: Record<BannerTypes, string> = {\n  premium: \"bwi-star\",\n  info: \"bwi-info-circle\",\n  warning: \"bwi-exclamation-triangle\",\n  danger: \"bwi-error\",\n};\n\n@Component({\n  selector: \"bit-banner\",\n  templateUrl: \"./banner.component.html\",\n})\nexport class BannerComponent implements OnInit {\n  @Input(\"bannerType\") bannerType: BannerTypes = \"info\";\n  @Input() icon: string;\n  @Input() useAlertRole = true;\n\n  @Output() onClose = new EventEmitter<void>();\n\n  ngOnInit(): void {\n    this.icon ??= defaultIcon[this.bannerType];\n  }\n\n  get bannerClass() {\n    switch (this.bannerType) {\n      case \"danger\":\n        return \"tw-bg-danger-500\";\n      case \"info\":\n        return \"tw-bg-info-500\";\n      case \"premium\":\n        return \"tw-bg-success-500\";\n      case \"warning\":\n        return \"tw-bg-warning-500\";\n    }\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BannerComponent } from \"./banner.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [BannerComponent],\n  declarations: [BannerComponent],\n})\nexport class BannerModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ButtonDirective } from \"./button.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [ButtonDirective],\n  declarations: [ButtonDirective],\n})\nexport class ButtonModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { CalloutComponent } from \"./callout.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [CalloutComponent],\n  declarations: [CalloutComponent],\n})\nexport class CalloutModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitInputDirective } from \"./input.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitInputDirective],\n  exports: [BitInputDirective],\n})\nexport class InputModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule, Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\nimport { BitInputDirective } from \"../input/input.directive\";\nimport { InputModule } from \"../input/input.module\";\n\nimport { BitErrorSummary } from \"./error-summary.component\";\nimport { BitErrorComponent } from \"./error.component\";\nimport { BitFormFieldComponent } from \"./form-field.component\";\nimport { BitHintComponent } from \"./hint.component\";\nimport { BitLabel } from \"./label.directive\";\nimport { BitPrefixDirective } from \"./prefix.directive\";\nimport { BitSuffixDirective } from \"./suffix.directive\";\n\n/**\n * Temporarily duplicate this pipe\n */\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n\n@NgModule({\n  imports: [CommonModule, InputModule],\n  exports: [\n    BitErrorComponent,\n    BitErrorSummary,\n    BitFormFieldComponent,\n    BitHintComponent,\n    BitInputDirective,\n    BitLabel,\n    BitPrefixDirective,\n    BitSuffixDirective,\n  ],\n  declarations: [\n    BitErrorComponent,\n    BitErrorSummary,\n    BitFormFieldComponent,\n    BitHintComponent,\n    BitLabel,\n    BitPrefixDirective,\n    BitSuffixDirective,\n    I18nPipe,\n  ],\n})\nexport class FormFieldModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitIconComponent } from \"./icon.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitIconComponent],\n  exports: [BitIconComponent],\n})\nexport class IconModule {}\n","import { OverlayModule } from \"@angular/cdk/overlay\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { MenuDividerComponent } from \"./menu-divider.component\";\nimport { MenuItemDirective } from \"./menu-item.directive\";\nimport { MenuTriggerForDirective } from \"./menu-trigger-for.directive\";\nimport { MenuComponent } from \"./menu.component\";\n\n@NgModule({\n  imports: [CommonModule, OverlayModule],\n  declarations: [MenuComponent, MenuTriggerForDirective, MenuItemDirective, MenuDividerComponent],\n  exports: [MenuComponent, MenuTriggerForDirective, MenuItemDirective, MenuDividerComponent],\n})\nexport class MenuModule {}\n","import { Dialog, DialogConfig, DialogRef } from \"@angular/cdk/dialog\";\nimport { ComponentType } from \"@angular/cdk/overlay\";\nimport { Injectable, TemplateRef } from \"@angular/core\";\n\n@Injectable()\nexport class DialogService extends Dialog {\n  override open<R = unknown, D = unknown, C = unknown>(\n    componentOrTemplateRef: ComponentType<C> | TemplateRef<C>,\n    config?: DialogConfig<D, DialogRef<R, C>>\n  ): DialogRef<R, C> {\n    config = {\n      backdropClass: [\"tw-fixed\", \"tw-bg-black\", \"tw-bg-opacity-30\", \"tw-inset-0\", \"tw-z-40\"],\n      ...config,\n    };\n\n    return super.open(componentOrTemplateRef, config);\n  }\n}\n","import { DialogModule as CdkDialogModule } from \"@angular/cdk/dialog\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { DialogCloseDirective } from \"./dialog-close.directive\";\nimport { DialogService } from \"./dialog.service\";\nimport { DialogComponent } from \"./dialog/dialog.component\";\nimport { SimpleDialogComponent } from \"./simple-dialog/simple-dialog.component\";\n\n@NgModule({\n  imports: [CommonModule, CdkDialogModule],\n  declarations: [DialogCloseDirective, DialogComponent, SimpleDialogComponent],\n  exports: [CdkDialogModule, DialogComponent, SimpleDialogComponent],\n  providers: [DialogService],\n})\nexport class DialogModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ButtonModule } from \"../button\";\n\nimport { SubmitButtonComponent } from \"./submit-button.component\";\n\n@NgModule({\n  imports: [CommonModule, ButtonModule],\n  exports: [SubmitButtonComponent],\n  declarations: [SubmitButtonComponent],\n})\nexport class SubmitButtonModule {}\n","import { Input, HostBinding, Directive } from \"@angular/core\";\n\nexport type LinkType = \"primary\" | \"secondary\" | \"contrast\";\n\nconst linkStyles: Record<LinkType, string[]> = {\n  primary: [\n    \"!tw-text-primary-500\",\n    \"hover:!tw-text-primary-500\",\n    \"focus-visible:tw-ring-primary-700\",\n    \"disabled:!tw-text-primary-500/60\",\n  ],\n  secondary: [\n    \"!tw-text-main\",\n    \"hover:!tw-text-main\",\n    \"focus-visible:tw-ring-primary-700\",\n    \"disabled:!tw-text-muted/60\",\n  ],\n  contrast: [\n    \"!tw-text-contrast\",\n    \"hover:!tw-text-contrast\",\n    \"focus-visible:tw-ring-text-contrast\",\n    \"disabled:!tw-text-contrast/60\",\n  ],\n};\n\n@Directive({\n  selector: \"button[bitLink], a[bitLink]\",\n})\nexport class LinkDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-font-semibold\",\n      \"tw-py-0.5\",\n      \"tw-px-0\",\n      \"tw-bg-transparent\",\n      \"tw-border-0\",\n      \"tw-border-none\",\n      \"tw-rounded\",\n      \"tw-transition\",\n      \"hover:tw-underline\",\n      \"hover:tw-decoration-1\",\n      \"focus-visible:tw-outline-none\",\n      \"focus-visible:tw-underline\",\n      \"focus-visible:tw-decoration-1\",\n      \"focus-visible:tw-ring-2\",\n      \"focus-visible:tw-z-10\",\n      \"disabled:tw-no-underline\",\n      \"disabled:tw-cursor-not-allowed\",\n    ].concat(linkStyles[this.linkType] ?? []);\n  }\n\n  @Input()\n  linkType: LinkType = \"primary\";\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { LinkDirective } from \"./link.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [LinkDirective],\n  declarations: [LinkDirective],\n})\nexport class LinkModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { TabGroupComponent } from \"./tab-group.component\";\nimport { TabItemComponent } from \"./tab-item.component\";\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  exports: [TabGroupComponent, TabItemComponent],\n  declarations: [TabGroupComponent, TabItemComponent],\n})\nexport class TabsModule {}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-tab-group\",\n  templateUrl: \"./tab-group.component.html\",\n})\nexport class TabGroupComponent {}\n","<ng-container [ngSwitch]=\"disabled\">\n  <a\n    *ngSwitchCase=\"false\"\n    role=\"tab\"\n    [class]=\"baseClassList\"\n    [routerLink]=\"route\"\n    [routerLinkActive]=\"activeClassList\"\n    #rla=\"routerLinkActive\"\n    [attr.aria-selected]=\"rla.isActive\"\n  >\n    <ng-container [ngTemplateOutlet]=\"content\"></ng-container>\n  </a>\n  <button\n    *ngSwitchCase=\"true\"\n    type=\"button\"\n    role=\"tab\"\n    [class]=\"baseClassList\"\n    disabled\n    aria-disabled=\"true\"\n  >\n    <ng-container [ngTemplateOutlet]=\"content\"></ng-container>\n  </button>\n</ng-container>\n<ng-template #content>\n  <ng-content></ng-content>\n</ng-template>\n","<div\n  role=\"tablist\"\n  class=\"tw-inline-flex tw-flex-wrap tw-border-0 tw-border-b tw-border-solid tw-border-secondary-300 tw-leading-5\"\n>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-tab-item\",\n  templateUrl: \"./tab-item.component.html\",\n})\nexport class TabItemComponent {\n  @Input() route: string; // ['/route']\n  @Input() disabled = false;\n\n  get baseClassList(): string[] {\n    return [\n      \"tw-block\",\n      \"tw-relative\",\n      \"tw-py-2\",\n      \"tw-px-4\",\n      \"tw-font-semibold\",\n      \"tw-transition\",\n      \"tw-rounded-t\",\n      \"tw-border-0\",\n      \"tw-border-x\",\n      \"tw-border-t-4\",\n      \"tw-border-transparent\",\n      \"tw-border-solid\",\n      \"!tw-text-main\",\n      \"hover:tw-underline\",\n      \"hover:!tw-text-main\",\n      \"focus-visible:tw-z-10\",\n      \"focus-visible:tw-outline-none\",\n      \"focus-visible:tw-ring-2\",\n      \"focus-visible:tw-ring-primary-700\",\n      \"disabled:tw-bg-transparent\",\n      \"disabled:!tw-text-muted/60\",\n      \"disabled:tw-no-underline\",\n      \"disabled:tw-cursor-not-allowed\",\n    ];\n  }\n\n  get activeClassList(): string {\n    return [\n      \"tw--mb-px\",\n      \"tw-border-x-secondary-300\",\n      \"tw-border-t-primary-500\",\n      \"tw-border-b\",\n      \"tw-border-b-background\",\n      \"tw-bg-background\",\n      \"!tw-text-primary-500\",\n      \"hover:tw-border-t-primary-700\",\n      \"hover:!tw-text-primary-700\",\n      \"focus-visible:tw-border-t-primary-700\",\n      \"focus-visible:!tw-text-primary-700\",\n    ].join(\" \");\n  }\n}\n","import { Component, EventEmitter, HostBinding, Input, Output } from \"@angular/core\";\n\nlet nextId = 0;\n\n@Component({\n  selector: \"bit-toggle-group\",\n  templateUrl: \"./toggle-group.component.html\",\n  preserveWhitespaces: false,\n})\nexport class ToggleGroupComponent {\n  private id = nextId++;\n  name = `bit-toggle-group-${this.id}`;\n\n  @Input() selected?: unknown;\n  @Output() selectedChange = new EventEmitter<unknown>();\n\n  @HostBinding(\"attr.role\") role = \"radiogroup\";\n  @HostBinding(\"class\") classList = [\"tw-flex\"];\n\n  onInputInteraction(value: unknown) {\n    this.selected = value;\n    this.selectedChange.emit(value);\n  }\n}\n","<ng-content></ng-content>\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BadgeModule } from \"../badge\";\n\nimport { ToggleGroupComponent } from \"./toggle-group.component\";\nimport { ToggleComponent } from \"./toggle.component\";\n\n@NgModule({\n  imports: [CommonModule, BadgeModule],\n  exports: [ToggleGroupComponent, ToggleComponent],\n  declarations: [ToggleGroupComponent, ToggleComponent],\n})\nexport class ToggleGroupModule {}\n","import { Directive, HostBinding, Input, Optional, Self } from \"@angular/core\";\nimport { NgControl, Validators } from \"@angular/forms\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"input[bitInput], select[bitInput], textarea[bitInput]\",\n})\nexport class BitInputDirective {\n  @HostBinding(\"class\") @Input() get classList() {\n    return [\n      \"tw-block\",\n      \"tw-w-full\",\n      \"tw-px-3\",\n      \"tw-py-1.5\",\n      \"tw-bg-background-alt\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      this.hasError ? \"tw-border-danger-500\" : \"tw-border-secondary-500\",\n      \"tw-text-main\",\n      \"tw-placeholder-text-muted\",\n      // Rounded\n      \"tw-rounded-none\",\n      \"first:tw-rounded-l\",\n      \"last:tw-rounded-r\",\n      // Focus\n      \"focus:tw-outline-none\",\n      \"focus:tw-border-primary-700\",\n      \"focus:tw-ring-1\",\n      \"focus:tw-ring-primary-700\",\n      \"focus:tw-z-10\",\n      \"disabled:tw-bg-secondary-100\",\n    ].filter((s) => s != \"\");\n  }\n\n  @HostBinding() @Input() id = `bit-input-${nextId++}`;\n\n  @HostBinding(\"attr.aria-describedby\") ariaDescribedBy: string;\n\n  @HostBinding(\"attr.aria-invalid\") get ariaInvalid() {\n    return this.hasError ? true : undefined;\n  }\n\n  @HostBinding()\n  @Input()\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value: any) {\n    this._required = value != null && value !== false;\n  }\n  private _required: boolean;\n\n  @Input() hasPrefix = false;\n  @Input() hasSuffix = false;\n\n  get hasError() {\n    return this.ngControl?.status === \"INVALID\" && this.ngControl?.touched;\n  }\n\n  get error(): [string, any] {\n    const key = Object.keys(this.ngControl.errors)[0];\n    return [key, this.ngControl.errors[key]];\n  }\n  constructor(@Optional() @Self() private ngControl: NgControl) {}\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-menu-divider\",\n  templateUrl: \"./menu-divider.component.html\",\n})\nexport class MenuDividerComponent {}\n","<div\n  class=\"tw-my-2 tw-border-0 tw-border-t tw-border-solid tw-border-t-secondary-500\"\n  role=\"separator\"\n></div>\n","import { FocusableOption } from \"@angular/cdk/a11y\";\nimport { Directive, ElementRef, HostBinding } from \"@angular/core\";\n\n@Directive({\n  selector: \"[bitMenuItem]\",\n})\nexport class MenuItemDirective implements FocusableOption {\n  @HostBinding(\"class\") classList = [\n    \"tw-block\",\n    \"tw-py-1\",\n    \"tw-px-4\",\n    \"!tw-text-main\",\n    \"!tw-no-underline\",\n    \"tw-cursor-pointer\",\n    \"tw-border-none\",\n    \"tw-bg-background\",\n    \"tw-text-left\",\n    \"hover:tw-bg-secondary-100\",\n    \"focus:tw-bg-secondary-100\",\n    \"focus:tw-z-50\",\n    \"focus:tw-outline-none\",\n    \"focus:tw-ring\",\n    \"focus:tw-ring-offset-2\",\n    \"focus:tw-ring-primary-700\",\n    \"active:!tw-ring-0\",\n    \"active:!tw-ring-offset-0\",\n  ];\n  @HostBinding(\"attr.role\") role = \"menuitem\";\n  @HostBinding(\"tabIndex\") tabIndex = \"-1\";\n\n  constructor(private elementRef: ElementRef) {}\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n}\n","import { Overlay, OverlayConfig, OverlayRef } from \"@angular/cdk/overlay\";\nimport { TemplatePortal } from \"@angular/cdk/portal\";\nimport {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { filter, mergeWith } from \"rxjs/operators\";\n\nimport { MenuComponent } from \"./menu.component\";\n\n@Directive({\n  selector: \"[bitMenuTriggerFor]\",\n})\nexport class MenuTriggerForDirective implements OnDestroy {\n  @HostBinding(\"attr.aria-expanded\") isOpen = false;\n  @HostBinding(\"attr.aria-haspopup\") hasPopup = \"menu\";\n  @HostBinding(\"attr.role\") role = \"button\";\n\n  @Input(\"bitMenuTriggerFor\") menu: MenuComponent;\n\n  private overlayRef: OverlayRef;\n  private defaultMenuConfig: OverlayConfig = {\n    panelClass: \"bit-menu-panel\",\n    hasBackdrop: true,\n    backdropClass: \"cdk-overlay-transparent-backdrop\",\n    scrollStrategy: this.overlay.scrollStrategies.reposition(),\n    positionStrategy: this.overlay\n      .position()\n      .flexibleConnectedTo(this.elementRef)\n      .withPositions([\n        {\n          originX: \"start\",\n          originY: \"bottom\",\n          overlayX: \"start\",\n          overlayY: \"top\",\n        },\n        {\n          originX: \"end\",\n          originY: \"bottom\",\n          overlayX: \"end\",\n          overlayY: \"top\",\n        },\n      ])\n      .withLockedPosition(true)\n      .withFlexibleDimensions(false)\n      .withPush(false),\n  };\n  private closedEventsSub: Subscription;\n  private keyDownEventsSub: Subscription;\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    private viewContainerRef: ViewContainerRef,\n    private overlay: Overlay\n  ) {}\n\n  @HostListener(\"click\") toggleMenu() {\n    this.isOpen ? this.destroyMenu() : this.openMenu();\n  }\n\n  ngOnDestroy() {\n    this.disposeAll();\n  }\n\n  private openMenu() {\n    if (this.menu == null) {\n      throw new Error(\"Cannot find bit-menu element\");\n    }\n\n    this.isOpen = true;\n    this.overlayRef = this.overlay.create(this.defaultMenuConfig);\n\n    const templatePortal = new TemplatePortal(this.menu.templateRef, this.viewContainerRef);\n    this.overlayRef.attach(templatePortal);\n\n    this.closedEventsSub = this.getClosedEvents().subscribe((event: KeyboardEvent | undefined) => {\n      if (event?.key === \"Tab\") {\n        // Required to ensure tab order resumes correctly\n        this.elementRef.nativeElement.focus();\n      }\n      this.destroyMenu();\n    });\n    this.keyDownEventsSub = this.overlayRef\n      .keydownEvents()\n      .subscribe((event: KeyboardEvent) => this.menu.keyManager.onKeydown(event));\n  }\n\n  private destroyMenu() {\n    if (this.overlayRef == null || !this.isOpen) {\n      return;\n    }\n\n    this.isOpen = false;\n    this.disposeAll();\n  }\n\n  private getClosedEvents(): Observable<any> {\n    const detachments = this.overlayRef.detachments();\n    const escKey = this.overlayRef\n      .keydownEvents()\n      .pipe(filter((event: KeyboardEvent) => event.key === \"Escape\" || event.key === \"Tab\"));\n    const backdrop = this.overlayRef.backdropClick();\n    const menuClosed = this.menu.closed;\n\n    return detachments.pipe(mergeWith(escKey, backdrop, menuClosed));\n  }\n\n  private disposeAll() {\n    this.closedEventsSub?.unsubscribe();\n    this.overlayRef?.dispose();\n    this.keyDownEventsSub?.unsubscribe();\n  }\n}\n","<ng-template>\n  <div\n    (click)=\"closed.emit()\"\n    class=\"tw-flex tw-shrink-0 tw-flex-col tw-rounded tw-border tw-border-solid tw-border-secondary-500 tw-bg-background tw-bg-clip-padding tw-py-2\"\n    role=\"menu\"\n  >\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { FocusKeyManager } from \"@angular/cdk/a11y\";\nimport {\n  Component,\n  Output,\n  TemplateRef,\n  ViewChild,\n  EventEmitter,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n} from \"@angular/core\";\n\nimport { MenuItemDirective } from \"./menu-item.directive\";\n\n@Component({\n  selector: \"bit-menu\",\n  templateUrl: \"./menu.component.html\",\n  exportAs: \"menuComponent\",\n})\nexport class MenuComponent implements AfterContentInit {\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n  @Output() closed = new EventEmitter<void>();\n  @ContentChildren(MenuItemDirective, { descendants: true })\n  menuItems: QueryList<MenuItemDirective>;\n  keyManager: FocusKeyManager<MenuItemDirective>;\n\n  ngAfterContentInit() {\n    this.keyManager = new FocusKeyManager(this.menuItems).withWrap();\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + {\"182\":\"908a6243a602579442f6\",\"477\":\"eb4d3b8313512b1b882a\",\"584\":\"238f402a694e2a33f299\",\"754\":\"793b2c5e6eff20fdd404\",\"929\":\"ed1b8b6a36aa116b51b8\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t148: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_web_vault\"] = self[\"webpackChunk_bitwarden_web_vault\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [734], () => (__webpack_require__(47392)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","inProgress","dataWebpackPrefix","RegisterFormModule","OrganizationCreateModule","PermissionsGuard","constructor","router","organizationService","platformUtilsService","i18nService","syncService","canActivate","route","state","this","getLastSync","fullSync","org","get","params","organizationId","createUrlTree","isOwner","enabled","showToast","t","permissions","data","hasAnyPermission","cipherId","root","queryParamMap","queryParams","itemId","LooseComponentsModule","SharedModule","OrganizationBadgeModule","VaultFilterSharedModule","VaultFilterService","stateService","folderService","cipherService","collectionService","policyService","apiService","super","_collapsedFilterNodes","collapsedFilterNodes$","asObservable","buildCollapsedFilterNodes","nodes","next","storeCollapsedFilterNodes","collapsedFilterNodes","ensureVaultFiltersAreExpanded","has","delete","buildAdminCollections","result","collectionResponse","getCollections","length","collectionDomains","map","r","decryptMany","noneCollection","name","push","nestedCollections","getAllNested","fullList","nestedList","VaultFilterModule","ThemeType","ThemeBuilder","configuredTheme","systemTheme","effectiveTheme","System","updateSystemTheme","updateConfiguredTheme","ThemingService","window","document","_theme","BehaviorSubject","theme$","pipe","filter","x","monitorThemeChanges","getTheme","getSystemTheme","monitorConfiguredThemeChanges","monitorSystemThemeChanges","getValue","theme","setTheme","subscribe","documentElement","classList","remove","Light","Dark","Nord","SolarizedDark","add","matchMedia","matches","fromEvent","event","WINDOW","AbstractThemingService","AbstractEncryptService","AccountApiService","AccountService","AppIdService","AuditService","AuthService","BroadcasterService","CryptoFunctionService","EnvironmentService","FileUploadService","FolderApiServiceAbstraction","FormValidationErrorsService","MessagingService","NotificationsService","PasswordGenerationService","PasswordRepromptService","PolicyApiServiceAbstraction","ProviderService","SearchService","indexedEntityId","SendService","SettingsService","StateMigrationService","AbstractStorageService","TokenService","TotpService","TwoFactorService","StateVersion","UsernameGenerationService","VaultTimeoutService","AccountFactory","accountConstructor","create","args","GlobalStateFactory","globalStateConstructor","StateFactory","globalStateFactory","accountFactory","createGlobal","createAccount","EnvironmentUrls","base","api","identity","icons","notifications","events","webVault","keyConnector","EncryptionPair","DataEncryptionPair","TemporaryDataEncryption","AccountData","ciphers","folders","sends","collections","policies","passwordGenerationHistory","AccountKeys","cryptoSymmetricKey","organizationKeys","providerKeys","privateKey","AccountProfile","environmentUrls","pinProtected","vaultTimeoutAction","AccountTokens","init","keys","profile","settings","tokens","Object","assign","WindowState","stateVersion","One","DeviceType","DeviceRequest","appId","type","getDevice","getDeviceString","identifier","pushToken","TokenRequest","twoFactor","device","alterIdentityTokenHeaders","headers","setTwoFactor","toIdentityToken","clientId","obj","scope","client_id","deviceType","deviceIdentifier","deviceName","token","provider","twoFactorToken","twoFactorProvider","twoFactorRemember","remember","ApiTokenRequest","clientSecret","startsWith","grant_type","client_secret","TokenRequestTwoFactor","ApiKeyResponse","response","apiKey","getResponseProperty","revisionDate","Date","AttachmentResponse","id","url","fileName","key","size","sizeName","PasswordHistoryResponse","password","lastUsedDate","CipherResponse","folderId","notes","favorite","edit","viewPassword","organizationUseTotp","collectionIds","deletedDate","login","card","secureNote","fields","f","attachments","a","passwordHistory","h","reprompt","AttachmentUploadDataResponse","attachmentId","fileUploadType","cipherResponse","cipherMiniResponse","BillingResponse","invoices","transactions","balance","paymentSource","BillingSourceResponse","BillingTransactionResponse","i","BillingInvoiceResponse","cardBrand","description","needsVerification","pdfUrl","number","paid","date","amount","createdDate","refunded","partiallyRefunded","refundedAmount","paymentMethodType","details","BillingHistoryResponse","hasNoHistory","BillingPaymentResponse","BreachAccountResponse","addedDate","breachDate","dataClasses","domain","isActive","isVerified","logoPath","modifiedDate","pwnCount","title","SelectionReadOnlyResponse","readOnly","hidePasswords","CollectionResponse","externalId","CollectionDetailsResponse","CollectionGroupDetailsResponse","groups","g","DeviceVerificationResponse","isDeviceVerificationSectionEnabled","unknownDeviceVerificationEnabled","GlobalDomainResponse","domains","excluded","DomainsResponse","globalEquivalentDomains","equivalentDomains","d","EmergencyAccessGranteeDetailsResponse","granteeId","email","status","waitTimeDays","creationDate","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","keyEncrypted","kdf","kdfIterations","EmergencyAccessViewResponse","c","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","EventResponse","userId","providerId","collectionId","groupId","policyId","organizationUserId","providerUserId","providerOrganizationId","actingUserId","ipAddress","installationId","GroupResponse","accessAll","GroupDetailsResponse","IdentityCaptchaResponse","siteKey","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","resetMasterPassword","forcePasswordReset","apiUseKeyConnector","keyConnectorUrl","IdentityTwoFactorResponse","twoFactorProviders2","Map","captchaToken","twoFactorProviders","prop","hasOwnProperty","set","parseInt","KeyConnectorUserKeyResponse","ListResponse","dr","continuationToken","SsoConfigApi","configType","keyConnectorEnabled","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","static","view","OpenIdConnect","openId","Saml2","saml","idpAllowOutboundLogoutRequests","OrganizationSsoResponse","urls","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","OrganizationApiKeyInformationResponse","keyType","OrganizationAutoEnrollStatusResponse","resetPasswordEnabled","OrganizationConnectionResponse","rawConfig","config","OrganizationExportResponse","KeysResponse","publicKey","OrganizationKeysResponse","PlanResponse","product","isAnnual","nameLocalizationKey","descriptionLocalizationKey","canBeUsedByBusiness","baseSeats","baseStorageGb","maxCollections","maxUsers","hasAdditionalSeatsOption","maxAdditionalSeats","hasAdditionalStorageOption","maxAdditionalStorage","hasPremiumAccessOption","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","hasTotp","has2fa","hasApi","hasSso","hasResetPassword","usersGetPremium","upgradeSortOrder","displaySortOrder","legacyYear","disabled","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","basePrice","seatPrice","additionalStoragePricePerGb","premiumAccessOptionPrice","OrganizationResponse","businessName","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","billingEmail","plan","planType","seats","maxAutoscaleSeats","maxStorageGb","useGroups","useDirectory","useEvents","useTotp","use2fa","useApi","useResetPassword","hasPublicAndPrivateKeys","OrganizationSponsorshipSyncStatusResponse","lastSyncDate","SubscriptionResponse","storageName","storageGb","license","expiration","usingInAppPurchase","subscription","upcomingInvoice","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","items","trialEndDate","periodStartDate","periodEndDate","cancelledDate","cancelAtEndDate","cancelled","BillingSubscriptionItemResponse","quantity","interval","sponsoredSubscriptionItem","OrganizationSubscriptionResponse","OrganizationUserBulkPublicKeyResponse","OrganizationUserBulkResponse","error","PermissionsApi","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","manageScim","OrganizationUserResponse","resetPasswordEnrolled","OrganizationUserUserDetailsResponse","twoFactorEnabled","usesKeyConnector","OrganizationUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","resetPasswordKey","encryptedPrivateKey","ProfileOrganizationResponse","usePolicies","useSso","useKeyConnector","useScim","selfHost","ssoBound","providerName","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","familySponsorshipLastSyncDateString","familySponsorshipLastSyncDate","familySponsorshipValidUntilString","familySponsorshipValidUntil","familySponsorshipToDelete","ProfileProviderOrganizationResponse","ProfileProviderResponse","ProfileResponse","organizations","providers","providerOrganizations","emailVerified","masterPasswordHint","premiumPersonally","premiumFromOrganization","culture","securityStamp","o","PaymentResponse","userProfile","paymentIntentClientSecret","success","PolicyResponse","PreloginResponse","ProviderOrganizationResponse","userCount","ProviderOrganizationOrganizationDetailsResponse","organizationName","ProviderResponse","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","ProviderUserUserDetailsResponse","SendFileApi","SendTextApi","text","hidden","SendAccessResponse","file","expirationDate","creatorIdentifier","SendFileDownloadDataResponse","SendResponse","accessId","maxAccessCount","accessCount","deletionDate","disable","hideEmail","SendFileUploadDataResponse","sendResponse","SsoPreValidateResponse","FolderResponse","SyncResponse","p","s","TaxInfoResponse","taxId","taxIdType","line1","line2","city","postalCode","country","TaxRateResponse","rate","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","host","secretKey","integrationKey","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","code","TwoFactorWebAuthnResponse","k","KeyResponse","migrated","ChallengeResponse","attestation","authenticatorSelection","challenge","excludeCredentials","buffer","extensions","pubKeyCredParams","rp","timeout","user","TwoFactorYubiKeyResponse","key1","key2","key3","key4","key5","nfc","UserKeyResponse","HtmlStorageLocation","cryptoFunctionService","passwordLeaked","hashBytes","hash","toUpperCase","hashStart","substr","hashEnding","nativeFetch","Request","match","split","find","v","breachedAccounts","username","getHibpBreach","e","statusCode","Error","limit","throttleKey","AuthenticationStatus","KeySuffixOptions","TwoFactorProviderType","target","propertyKey","descriptor","originalMethod","value","allThrottles","throttles","getThrottles","argsThrottleKey","queue","Promise","resolve","reject","exec","onFinally","splice","indexOf","apply","then","val","catch","err","AuthenticationType","AuthResult","captchaSiteKey","requiresCaptcha","requiresTwoFactor","KeysRequest","LogInStrategy","cryptoService","tokenService","appIdService","messagingService","logService","twoFactorService","captchaBypassToken","logInTwoFactor","captchaResponse","tokenRequest","startLogIn","clearSelectedProvider","postIdentityToken","processTwoFactorResponse","processCaptchaResponse","processTokenResponse","onSuccessfulLogin","buildDeviceRequest","getAppId","buildTwoFactor","userProvidedTwoFactor","storedTwoFactorToken","getTwoFactorToken","Remember","saveAccountInformation","tokenResponse","accountInformation","decodeToken","addAccount","sub","hasPremiumPersonally","premium","kdfType","setTwoFactorToken","setEncKey","setEncPrivateKey","createKeyPairForOldAccount","send","setProviders","makeKeyPair","postAccountKeys","encryptedString","HashPurpose","ApiLogInStrategy","environmentService","keyConnectorService","getKeyConnectorUrl","getAndSetKey","logIn","credentials","setApiKeyClientId","setApiKeyClientSecret","PasswordTokenRequest","masterPasswordHash","PasswordLogInStrategy","authService","setKey","setKeyHash","localHashedPassword","masterPassword","makePreloginKey","hashPassword","LocalAuthorization","hashedPassword","SsoTokenRequest","codeVerifier","redirectUri","code_verifier","redirect_uri","SsoLogInStrategy","newSsoUser","convertNewSsoUserToKeyConnector","orgId","redirectUrl","PreloginRequest","sequentialize","cacheKey","caches","cache","getCache","argsCacheKey","EncArrayBuffer","encryptionType","dataBytes","ivBytes","macBytes","encBytes","Uint8Array","encType","minimumLength","ENC_TYPE_LENGTH","throwDecryptionError","slice","arrayBuffer","b64","SortedCiphersCache","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","sort","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","clear","clearTimeout","setTimeout","lastUsedIndex","Math","max","cipher","localData","lastLaunched","y","valueOf","getNextIndex","CipherBulkDeleteRequest","ids","CipherBulkMoveRequest","CipherBulkRestoreRequest","CipherWithIdRequest","CipherBulkShareRequest","forEach","CipherCollectionsRequest","CipherCreateRequest","CipherShareRequest","DomainMatchBlacklist","Set","CipherService","settingsService","fileUploadService","searchService","sortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","indexCiphers","clearCache","clearDecryptedCiphersState","encrypt","model","originalCipher","existingCipher","decrypt","ph","passwordRevisionDate","hasFields","existingHiddenFields","hiddenFields","ef","matchedField","getOrgKey","all","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","promises","encAttachments","attachment","promise","fieldsModel","self","encFields","reduce","field","encField","encryptField","fieldModel","linkedId","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getEncryptedCiphers","getLocalData","getAll","getAllDecrypted","getUserId","decCiphers","hasKey","getLocaleSortingFunction","getAllDecryptedForGrouping","groupingId","folder","isDeleted","getAllDecryptedForUrl","includeOtherTypes","defaultMatch","eqDomainsPromise","getEquivalentDomains","eqDomains","eqDomain","concat","matchingDomains","getDefaultUriMatch","uris","u","uri","domainUrlHost","urlHost","RegExp","test","getAllFromApiForOrganization","getCiphersOrganization","getLastUsedForUrl","autofillOnPageLoad","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","getTime","setLocalData","decryptedCipherCache","cached","updateLastLaunchedDate","saveNeverDomain","getNeverDomains","setNeverDomains","saveWithServer","request","postCipherCreate","postCipher","putCipher","upsert","shareWithServer","attachmentPromises","shareAttachmentWithServer","encCipher","putShareCipher","shareManyWithServer","encCiphers","putShareCiphers","toCipherData","saveAttachmentWithServer","unencryptedFile","admin","reader","FileReader","readAsArrayBuffer","onload","evt","cData","saveAttachmentRawWithServer","onerror","filename","encFileName","dataEncKey","makeEncKey","encData","encryptToBytes","fileSize","byteLength","adminRequest","uploadDataResponse","postCipherAttachment","uploadCipherAttachment","getSingleMessage","legacyServerAttachmentFileUpload","fd","FormData","blob","Blob","append","Buffer","from","filepath","contentType","postCipherAttachmentAdminLegacy","postCipherAttachmentLegacy","saveCollectionsWithServer","putCipherCollections","replace","setEncryptedCiphers","clearEncryptedCiphersState","moveManyWithServer","putMoveCiphers","deleteWithServer","deleteCipher","deleteManyWithServer","deleteManyCiphers","deleteAttachment","deleteAttachmentWithServer","deleteCipherAttachment","b","aLastUsed","bLastUsed","bothNotNull","sortCiphersByLastUsedThenName","aName","bName","collator","compare","localeCompare","softDelete","setDeletedDate","toISOString","softDeleteWithServer","putDeleteCipher","softDeleteManyWithServer","putDeleteManyCiphers","restore","clearDeletedDate","Array","restoreWithServer","putRestoreCipher","restoreManyWithServer","putRestoreManyCiphers","restores","attachmentView","attachmentResponse","toString","encBuf","fromResponse","decBuf","decryptFromBytes","postShareCipherAttachment","theProp","theObj","modelProp","totp","loginUri","cardholderName","brand","expMonth","expYear","firstName","middleName","lastName","address1","address2","address3","company","phone","ssn","passportNumber","licenseNumber","lastUsed","autofillOnPageLoadDefault","getAutoFillOnPageLoadDefault","clearSortedCiphers","EEFLongWordList","BaseEncryptedOrganizationKey","EncryptedOrganizationKey","ProviderEncryptedOrganizationKey","decValue","rsaDecrypt","toData","providerKey","getProviderKey","decryptToBytes","CryptoService","encryptService","platformUtilService","setCryptoMasterKey","storeKey","keyHash","encKey","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","encPrivateKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","orgs","providerOrgs","encOrgKeyData","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","getKey","keySuffix","inMemoryKey","getCryptoMasterKey","Auto","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","warning","clearSecretKeyStore","getKeyHash","compareAndUpdateKeyHash","storedKeyHash","localKeyHash","serverKeyHash","ServerAuthorization","getEncKey","getEncKeyHelper","getPublicKey","inMemoryPublicKey","getPrivateKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","getFingerprint","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","getOrgKeys","decryptedOrganizationKeys","getDecryptedOrganizationKeys","getEncryptedOrganizationKeys","encOrgKey","fromData","decOrgKey","orgKeys","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","hasKeyInMemory","hasKeyStored","Biometric","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","hasEncKey","getEncryptedCryptoSymmetricKey","clearKey","clearSecretStorage","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearPinProtectedKey","setEncryptedPinProtected","clearKeys","toggleKey","makeKey","salt","pbkdf2","makeKeyFromPin","pin","protectedKeyCs","pinProtectedKey","getEncryptedPinProtected","pinKey","makePinKey","decKey","makeShareKey","shareKey","randomBytes","rsaEncrypt","keyPair","rsaGenerateKeyPair","stretchKey","makeSendKey","keyMaterial","sendKey","hkdf","hashPurpose","iterations","theKey","getKeyForUserEncryption","buildEncKey","remakeEncKey","plainValue","encValue","privateKeyValue","headerPieces","encPieces","alg","encString","keyForEnc","decryptToUtf8","encBuffer","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","shouldStoreKey","keyB64","getVaultTimeout","getBiometricUnlock","supportsSecureStorage","getCryptoMasterKeyBiometric","newKey","macKey","minimumEntropy","entropyPerWord","log","numWords","hashArr","phrase","hashNumber","remainder","mod","divide","encKeyEnc","getDecryptedCryptoSymmetricKey","decEncKey","encKeyCipher","symmetricCryptoKey","EncryptedObject","EventData","EventRequest","EventExport","message","humanReadableMessage","appIcon","appName","userName","userEmail","ip","FileUploadType","AzureFileUploadService","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","Headers","toUTCString","searchParams","body","method","blobResponse","fetch","baseUrl","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","start","blockData","blockHeaders","blockRequest","blockResponse","json","blockListUrl","blockListXml","expiry","isNaN","setTime","now","utfBlockId","blockIdList","xml","version","Version","year","month","day","parts","Number","compareTo","BitwardenFileUploadService","encryptedFileName","encryptedFileData","apiCall","FolderData","OrganizationUserType","SetKeyConnectorKeyRequest","orgIdentifier","KeyConnectorUserKeyRequest","NotificationType","NotificationResponse","contextId","payload","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","OrganizationUserStatusType","Organization","isProviderUser","canAccess","Owner","Confirmed","isManager","Manager","Admin","isAdmin","canAccessEventLogs","canAccessImportExport","canAccessReports","canCreateNewCollections","canEditAnyCollection","canDeleteAnyCollection","canViewAllCollections","canEditAssignedCollections","canDeleteAssignedCollections","canViewAssignedCollections","canManageGroups","canManageSso","canManageScim","canManagePolicies","canManageUsers","canManageUsersPassword","isExemptFromPolicies","includes","P","canManageBilling","hasProvider","GeneratedPasswordHistory","PasswordGeneratorPolicyOptions","defaultType","minLength","useUppercase","useLowercase","useNumbers","numberCount","useSpecial","specialCount","minNumberWords","capitalize","includeNumber","inEffect","DefaultOptions","ambiguous","minNumber","uppercase","minUppercase","lowercase","minLowercase","special","minSpecial","wordSeparator","PolicyData","Policy","ResetPasswordPolicyOptions","autoEnrollEnabled","ProviderUserStatusType","ProviderUserType","Provider","isProviderAdmin","canCreateOrganizations","ProviderAdmin","SendType","indexing","index","immediateSearchLocales","defaultSearchableMinLength","searchableMinLength","locale$","locale","lunr","Pipeline","registerFunction","normalizeAccentsPipelineFunction","isSearchable","query","normalizeSearchQuery","time","builder","Builder","pipeline","ref","boost","extractor","subTitle","uriExtractor","fieldExtractor","attachmentExtractor","build","timeEnd","searchCiphers","results","trim","toLowerCase","isArray","every","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","search","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","deleted","hasUris","some","searchSends","toLocaleLowerCase","sendsMatched","lowPriorityMatched","joined","join","hasAttachments","lastIndexOf","hostname","protocolIndex","queryIndex","substring","searchableFields","metadata","normalize","SendFileData","SendTextData","SendData","Text","File","SendFileView","SendTextView","maskedText","SendView","urlB64Key","maxAccessCountReached","expired","pendingDelete","SendFile","buildDomainModel","decryptObj","SendText","Send","containerService","getCryptoService","cryptoKey","SendRequest","fileLength","Keys","StorageLocation","ProviderData","State","globals","accounts","authenticatedAccounts","accountActivity","partialKeys","storageService","secureStorageService","memoryStorageService","stateMigrationService","stateFactory","useAccountCache","activeAccount","activeAccountUnlocked","hasBeenInited","isRecoveredSession","accountDiskCache","needsMigration","migrate","setState","createGlobals","initAccountState","updateState","syncAccountFromDisk","storedActiveUser","activeUserId","pushAccounts","diskAccount","getAccountFromDisk","account","setAccountEnvironmentUrls","save","scaffoldNewAccountStorage","setLastActive","setActiveUser","clearDecryptedDataForActiveUser","clean","options","reconcileOptions","defaultInMemoryOptions","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getAccessToken","getTimeoutBasedStorageOptions","getAccount","setAccessToken","saveAccount","getAddEditCipherInfo","addEditCipherInfo","setAddEditCipherInfo","getAlwaysShowDock","getGlobals","defaultOnDiskOptions","alwaysShowDock","setAlwaysShowDock","saveGlobals","getApiKeyClientId","apiKeyClientId","getApiKeyClientSecret","apiKeyClientSecret","getAutoConfirmFingerPrints","autoConfirmFingerPrints","setAutoConfirmFingerprints","autoFillOnPageLoadDefault","setAutoFillOnPageLoadDefault","getBiometricAwaitingAcceptance","biometricAwaitingAcceptance","setBiometricAwaitingAcceptance","getBiometricFingerprintValidated","biometricFingerprintValidated","setBiometricFingerprintValidated","getBiometricText","biometricText","setBiometricText","biometricUnlock","setBiometricUnlock","getCanAccessPremium","getIsAuthenticated","getHasPremiumPersonally","getHasPremiumFromOrganization","setHasPremiumPersonally","hasPremiumFromOrganization","getOrganizations","setHasPremiumFromOrganization","getClearClipboard","defaultOnDiskLocalOptions","clearClipboard","setClearClipboard","getCollapsedGroupings","collapsedGroupings","setCollapsedGroupings","getConvertAccountToKeyConnector","convertAccountToKeyConnector","setConvertAccountToKeyConnector","cryptoMasterKey","nextValue","defaultSecureStorageOptions","saveSecureStorageKey","getCryptoMasterKeyB64","setCryptoMasterKeyB64","getDecodedToken","decodedToken","setDecodedToken","decrypted","getDecryptedCollections","setDecryptedCollections","getDecryptedPasswordGenerationHistory","setDecryptedPasswordGenerationHistory","getDecryptedPinProtected","setDecryptedPinProtected","getDecryptedPolicies","setDecryptedPolicies","decryptedSerialized","getDecryptedSends","setDecryptedSends","defaultUriMatch","setDefaultUriMatch","getDisableAddLoginNotification","disableAddLoginNotification","setDisableAddLoginNotification","getDisableAutoBiometricsPrompt","disableAutoBiometricsPrompt","setDisableAutoBiometricsPrompt","getDisableAutoTotpCopy","disableAutoTotpCopy","setDisableAutoTotpCopy","getDisableBadgeCounter","disableBadgeCounter","setDisableBadgeCounter","getDisableChangedPasswordNotification","disableChangedPasswordNotification","setDisableChangedPasswordNotification","getDisableContextMenuItem","disableContextMenuItem","setDisableContextMenuItem","getDisableFavicon","disableFavicon","setDisableFavicon","getDisableGa","disableGa","setDisableGa","getDontShowCardsCurrentTab","dontShowCardsCurrentTab","setDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","dontShowIdentitiesCurrentTab","setDontShowIdentitiesCurrentTab","getEmail","setEmail","getEmailVerified","setEmailVerified","getEnableAlwaysOnTop","accountPreference","enableAlwaysOnTop","globalPreference","setEnableAlwaysOnTop","getEnableAutoFillOnPageLoad","enableAutoFillOnPageLoad","setEnableAutoFillOnPageLoad","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","enableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","enableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","enableCloseToTray","setEnableCloseToTray","getEnableFullWidth","enableFullWidth","setEnableFullWidth","getEnableGravitars","enableGravitars","setEnableGravitars","getEnableMinimizeToTray","enableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","enableStartToTray","setEnableStartToTray","getEnableTray","enableTray","setEnableTray","defaultOnDiskMemoryOptions","encrypted","getEncryptedCollections","setEncryptedCollections","getEncryptedFolders","setEncryptedFolders","getEncryptedPasswordGenerationHistory","setEncryptedPasswordGenerationHistory","getEncryptedPolicies","setEncryptedPolicies","getEncryptedSends","setEncryptedSends","getEntityId","entityId","setEntityId","getEntityType","entityType","setEntityType","getEnvironmentUrls","getGlobalEnvironmentUrls","setEnvironmentUrls","setEquivalentDomains","getEventCollection","eventCollection","setEventCollection","getEverBeenUnlocked","everBeenUnlocked","setEverBeenUnlocked","getForcePasswordReset","setForcePasswordReset","getInstalledVersion","installedVersion","setInstalledVersion","getKdfIterations","setKdfIterations","getKdfType","setKdfType","getLastActive","lastSync","setLastSync","getLocale","setLocale","getMainWindowSize","mainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","minimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","neverDomains","getNoAutoPromptBiometrics","noAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","noAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","openAtLogin","setOpenAtLogin","getOrganizationInvitation","organizationInvitation","setOrganizationInvitation","setOrganizations","getPasswordGenerationOptions","passwordGenerationOptions","setPasswordGenerationOptions","getUsernameGenerationOptions","usernameGenerationOptions","setUsernameGenerationOptions","getGeneratorOptions","generatorOptions","setGeneratorOptions","getProtectedPin","protectedPin","setProtectedPin","getProviders","publicKeySerialized","getRefreshToken","setRefreshToken","getRememberedEmail","rememberedEmail","setRememberedEmail","getSecurityStamp","setSecurityStamp","getSettings","setSettings","getSsoCodeVerifier","ssoCodeVerifier","setSsoCodeVerifier","getSsoOrgIdentifier","ssoOrganizationIdentifier","setSsoOrganizationIdentifier","getSsoState","ssoState","setSsoState","getUsesKeyConnector","setUsesKeyConnector","vaultTimeout","setVaultTimeout","getVaultTimeoutAction","accountVaultTimeoutAction","globalVaultTimeoutAction","setVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","htmlStorageLocation","Local","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deepClone","JSON","parse","stringify","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","defaultOptions","Session","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","stateUpdater","updatedState","withPrototype","converter","originalResult","String","prototype","getOwnPropertyDescriptors","withPrototypeForArrayMembers","memberConstructor","memberConverter","withPrototypeForObjectValues","valuesConstructor","valuesConverter","entries","withPrototypeForMap","decoded","setTokens","clientIdClientSecret","setToken","setClientId","setClientSecret","getClientId","getClientSecret","getToken","clearTwoFactorToken","clearToken","storedToken","getTokenExpirationDate","exp","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","round","tokenNeedsRefresh","minutes","email_verified","getName","getIssuer","iss","getIsExternal","amr","v1Keys","autoConfirmFingerprints","enableBiometric","enableGravatars","encOrgKeys","encPrivate","history","lastActive","ssoIdentifier","stamp","usesConnector","v1KeyPrefixes","currentStateVersion","getCurrentStateVersion","Latest","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","Four","getAuthenticatedAccounts","migratedAccount","migrateAccountFrom4To5","setCurrentStateVersion","Five","migrateAccountFrom5To6","Six","clearV1Keys","clearingUserId","keyPrefix","defaultAccount","accountSettings","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","legacyEtmKey","authenticationStatus","authenticatedUserIds","encryptedOrgKeys","newVersion","OrganizationData","SyncService","sendService","providerService","folderApiService","logoutCallback","syncInProgress","toJSON","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","refreshIdentityToken","getSync","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","syncUpsertFolder","notification","isEdit","localFolder","remoteFolder","syncDeleteFolder","syncUpsertCipher","shouldUpdate","localCipher","checkCollections","remoteCipher","getFullCipherDetails","syncDeleteCipher","syncUpsertSend","localSend","remoteSend","getSend","sendId","syncDeleteSend","successfully","getAccountRevisionDate","userNeedsMigration","setConvertAccountRequired","removeConvertAccountRequired","global","B32Chars","SteamChars","TwoFactorProviders","Authenticator","priority","Yubikey","Duo","OrganizationDuo","Email","WebAuthn","VerifyOTPRequest","OTP","SecretVerificationRequest","wordCapitalize","wordIncludeNumber","subaddressType","catchallType","forwardedService","forwardedAnonAddyDomain","DecryptParameters","AuthGuard","routerState","authStatus","getAuthStatus","LoggedOut","Locked","promptBiometric","getConvertAccountRequired","LockGuard","homepage","loginpage","UnauthGuard","subscribers","messageCallback","unsubscribe","ModalRef","_onCreated","Subject","_onClose","_onClosed","_onShow","_onShown","onCreated","onClose","onClosed","onShow","onShown","show","shown","close","lastResult","closed","created","el","onClosedPromise","first","toPromise","DynamicModalComponent","modalService","cd","focusTrapFactory","modalRef","ngAfterViewInit","loadChildComponent","childComponentType","setComponentParameters","componentRef","instance","detectChanges","nativeElement","focusTrap","querySelector","focusFirstTabbableElementWhenReady","componentType","componentFactory","resolveComponentFactory","modalContentRef","createComponent","ngOnDestroy","destroy","getFocus","autoFocusEl","focus","ModalInjector","_parentInjector","_additionalTokens","notFoundValue","flags","ModalConfig","componentFactoryResolver","applicationRef","injector","modalList","factoryResolvers","addEventListener","modalCount","topModal","openViewRef","viewContainerRef","modalComponentRef","openInternal","insert","hostView","open","replaceTopModal","allowMultipleModals","registerComponentFactoryResolver","closeAll","modal","attachToDom","createModalComponent","attachView","domElem","rootNodes","appendChild","detachView","pop","setupHandlers","backdrop","modalEl","dialogEl","createElement","className","style","zIndex","prepend","stopPropagation","modals","querySelectorAll","closeElement","WeakMap","showPassword","togglePassword","submit","component","protectedFields","showPasswordPrompt","MEMORY_STORAGE","SECURE_STORAGE","STATE_FACTORY","STATE_SERVICE_USE_CACHE","LOGOUT_CALLBACK","LOCKED_CALLBACK","LOCALES_DIRECTORY","SYSTEM_LANGUAGE","LOG_MAC_FAILURES","JslibServicesModule","provide","useValue","useFactory","translationLocale","deps","navigator","language","useClass","makeAndGetAppId","getAnonymousAppId","existingId","guid","logInStrategy","strategy","clearState","saveState","logOut","callback","authingWithApiKey","authingWithSso","authingWithPassword","Unlocked","preloginResponse","postPrelogin","startSessionTimeout","clearSessionTimeout","sessionTimeout","_folders","_folderViews","folders$","folderViews$","unlocked","updateObservables","getAllDecryptedFromState","values","decryptFolders","updates","cId","foldersMap","decryptFolderPromises","decryptedFolders","noneFolder","useExisting","postFolder","putFolder","deleteFolder","deleteAccount","accountApiService","userVerificationService","verification","verificationRequest","buildRequest","collection","decCollections","decryptedCollections","collectionCopy","getNested","urlsSubject","scimUrl","setUrlsFromStorage","hasBaseUrl","getNotificationsUrl","notificationsUrl","getWebVaultUrl","webVaultUrl","getSendUrl","getIconsUrl","iconsUrl","getApiUrl","apiUrl","getIdentityUrl","identityUrl","getEventsUrl","eventsUrl","getScimUrl","envUrls","setUrls","formatUrl","scim","getUrls","getCode","period","digits","keyB32","isOtpAuth","isSteamAuth","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","floor","timeBytes","keyBytes","b32ToBytes","sign","offset","binary","otp","fullCode","trunc","getTimeInterval","l","b32ToHex","cleanedInput","bits","hex","byteIndex","charAt","chunk","signature","hmac","generatePassword","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","getOptions","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","enforcedPolicyOptions","getPasswordGeneratorPolicyOptions","currentPolicy","useUpper","useLower","minNumbers","saveOptions","getHistory","decryptHistory","addHistory","currentHistory","matchesPrevious","unshift","newHistory","encryptHistory","passwordStrength","userInputs","globalUserInputs","finalUserInputs","normalizeOptions","str","num","item","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","generateUsername","generateCatchall","generateSubaddress","generateForwarded","generateWord","word","zeroPad","subaddressEmail","atIndex","emailBeginning","emailEnding","subaddressString","randomString","website","catchallDomain","startString","forwardedSimpleLoginApiKey","generateSimpleLoginAlias","forwardedAnonAddyApiToken","generateAnonAddyAlias","forwardedFirefoxApiToken","generateFirefoxRelayAlias","charSet","width","requestInit","redirect","Authentication","note","alias","apiToken","websiteNote","Authorization","generated_for","full_address","customUserAgent","isWebClient","isDesktopClient","IEBrowser","ChromeBrowser","EdgeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","UnknownBrowser","VivaldiBrowser","WindowsDesktop","MacOsDesktop","LinuxDesktop","Accept","identityToken","getClientType","qsStringify","getCredentials","responseJson","isJsonResponse","TwoFactorProviders2","HCaptcha_SiteKey","doAuthRefresh","getProfile","getUserSubscription","getTaxInfo","putProfile","putTaxInfo","isDev","postEmailToken","postEmail","postPassword","setPassword","postSetKeyConnectorKey","postSecurityStamp","postPasswordHint","postRegister","postPremium","postIapCheck","postReinstatePremium","postCancelPremium","postAccountStorage","postAccountPayment","postAccountLicense","postAccountKey","postAccountVerifyEmail","postAccountVerifyEmailToken","postAccountVerifyPassword","postAccountRecoverDelete","postAccountRecoverDeleteToken","postAccountKdf","deleteSsoUser","getSsoUserIdentifier","postUserApiKey","postUserRotateApiKey","putUpdateTempPassword","postAccountRequestOTP","postAccountVerifyOTP","postConvertToKeyConnector","getUserBillingHistory","getUserBillingPayment","postSendAccess","getSendFileDownloadData","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getCipherAdmin","postCipherAdmin","putCipherAdmin","deleteCipherAdmin","deleteManyCiphersAdmin","putCipherCollectionsAdmin","postPurgeCiphers","path","postImportCiphers","postImportOrganizationCiphers","putDeleteCipherAdmin","putDeleteManyCiphersAdmin","putRestoreCipherAdmin","getAttachmentData","emergencyAccessId","deleteCipherAttachmentAdmin","renewAttachmentUploadUrl","postAttachmentFile","getCollectionDetails","getUserCollections","getCollectionUsers","postCollection","putCollection","putCollectionUsers","deleteCollection","deleteCollectionUser","getGroupDetails","getGroups","getGroupUsers","postGroup","putGroup","putGroupUsers","deleteGroup","deleteGroupUser","getOrganizationUser","getOrganizationUserGroups","getOrganizationUsers","getOrganizationUserResetPasswordDetails","getOrganizationAutoEnrollStatus","postOrganizationUserInvite","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserAccept","postOrganizationUserConfirm","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","putOrganizationUser","putOrganizationUserGroups","putOrganizationUserResetPasswordEnrollment","putOrganizationUserResetPassword","deleteOrganizationUser","deleteManyOrganizationUsers","revokeOrganizationUser","revokeManyOrganizationUsers","restoreOrganizationUser","restoreManyOrganizationUsers","getPlans","postImportDirectory","postPublicImportDirectory","getTaxRates","getSettingsDomains","putSettingsDomains","getTwoFactorProviders","getTwoFactorOrganizationProviders","getTwoFactorAuthenticator","getTwoFactorEmail","getTwoFactorDuo","getTwoFactorOrganizationDuo","getTwoFactorYubiKey","getTwoFactorWebAuthn","getTwoFactorWebAuthnChallenge","getTwoFactorRecover","putTwoFactorAuthenticator","putTwoFactorEmail","putTwoFactorDuo","putTwoFactorOrganizationDuo","putTwoFactorYubiKey","putTwoFactorWebAuthn","deviceResponse","rawId","btoa","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","deleteTwoFactorWebAuthn","putTwoFactorDisable","putTwoFactorOrganizationDisable","postTwoFactorRecover","postTwoFactorEmailSetup","postTwoFactorEmail","getDeviceVerificationSettings","putDeviceVerificationSettings","getEmergencyAccessTrusted","getEmergencyAccessGranted","getEmergencyAccess","getEmergencyGrantorPolicies","putEmergencyAccess","deleteEmergencyAccess","postEmergencyAccessInvite","postEmergencyAccessReinvite","postEmergencyAccessAccept","postEmergencyAccessConfirm","postEmergencyAccessInitiate","postEmergencyAccessApprove","postEmergencyAccessReject","postEmergencyAccessTakeover","postEmergencyAccessPassword","postEmergencyAccessView","getOrganization","getOrganizationBilling","getOrganizationSubscription","getCloudCommunicationsEnabled","getOrganizationConnection","createOrganizationConnection","updateOrganizationConnection","organizationConnectionId","deleteOrganizationConnection","getOrganizationLicense","getOrganizationTaxInfo","getOrganizationSso","postOrganization","putOrganization","putOrganizationTaxInfo","postLeaveOrganization","postOrganizationLicense","postOrganizationLicenseUpdate","postOrganizationApiKey","getOrganizationApiKeyInformation","postOrganizationRotateApiKey","postOrganizationSso","postOrganizationUpgrade","postOrganizationUpdateSubscription","postOrganizationSeat","postOrganizationStorage","postOrganizationPayment","postOrganizationVerifyBank","postOrganizationCancel","postOrganizationReinstate","deleteOrganization","getOrganizationKeys","postOrganizationKeys","postProviderSetup","getProvider","putProvider","getProviderUsers","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","postProviderAddOrganization","postProviderCreateOrganization","deleteProviderOrganization","getEvents","end","addEventParameters","getEventsCipher","getEventsOrganization","getEventsOrganizationUser","getEventsProvider","getEventsProviderUser","postEventsCollect","authHeader","getActiveBearerToken","getUserPublicKey","postBitPayInvoice","postSetupPayment","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","getOrganizationExport","getApplicationVersion","preValidateSso","encodeURIComponent","postCreateSponsorship","sponsoredOrgId","isSelfHost","getSponsorshipSyncStatus","deleteRevokeSponsorship","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","postPreValidateSponsorshipToken","sponsorshipToken","postRedeemSponsorship","postResendSponsorshipOffer","doRefreshToken","doApiTokenRefresh","deviceRequest","authed","hasResponse","alterHeaders","requestUrl","URL","href","tokenError","isTextResponse","Message","typeHeader","azureFileUploadService","bitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","getSettingsKey","setSettingsKey","lockedCallback","loggedOutCallback","inited","checkOnInterval","startCheck","checkVaultTimeout","setInterval","isViewOpen","shouldLock","executeTimeoutAction","lock","allowSoftLock","pinSet","isPinLockSet","isBiometricLockSet","setVaultTimeoutOptions","action","currentAction","policyAppliesToUser","policy","vaultTimeoutSeconds","getExport","format","getEncryptedExport","getDecryptedExport","getPasswordProtectedExport","clearText","encKeyValidation","encText","jsonDoc","passwordProtected","encKeyValidation_DO_NOT_EDIT","getOrganizationEncryptedExport","getOrganizationDecryptedExport","getEventExport","getFileName","prefix","extension","getFullYear","padNumber","getMonth","getDate","getHours","getMinutes","getSeconds","decFolders","firstValueFrom","exportCiphers","buildCommonCipher","exportData","exportPromises","decCol","decCipher","collectionsMap","orgKey","padCharacter","numString","login_uri","login_username","login_password","login_totp","connected","inactive","reconnectTimer","signalrConnection","off","stop","withUrl","accessTokenFactory","skipNegotiation","transport","withHubProtocol","on","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","sync","reconnectFromActivity","disconnectFromInactivity","isAuthenticated","payloadUserId","UserId","myUserId","random","win","crypto","subtle","algorithm","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","ikm","info","outputByteSize","hkdfParams","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","n","okm","md","valueBytes","toByteString","update","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","hmacFast","bytes","getBytes","compareFast","rand","Uint32Array","putInt32","aesEncrypt","iv","aesDecryptFastParameters","mac","meta","encKeyByteString","macKeyByteString","encKeyB64","macData","macKeyB64","aesDecryptFast","parameters","dataBuffer","decipher","finish","output","aesDecrypt","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","arr","getRandomValues","buf","logMacFailures","plainBuf","encObj","macLen","resolveLegacyKey","fastParams","computedMac","logMacFailed","encThing","msg","uploadEvents","collect","eventType","uploadImmediately","orgIds","req","clearEvents","decryptedPolicies","diskPolicies","getMasterPasswordPolicyOptions","minComplexity","requireUpper","requireLower","requireNumbers","requireSpecial","evaluateMasterPassword","newPassword","toLocaleUpperCase","getResetPasswordPolicyOptions","resetPasswordPolicyOptions","mapPoliciesFromToken","policiesResponse","policyType","policyFilter","filteredPolicies","policySet","Accepted","isExcemptFromPolicies","organization","getPolicy","getPolicies","getPoliciesByToken","getPoliciesByInvitedUser","getPolicyForOrganization","getMasterPasswordPoliciesForInvitedUsers","putPolicy","fileData","passwordHash","ArrayBuffer","encryptFileData","parseFile","decSends","sendData","legacyServerSendFileUpload","removePasswordWithServer","loggedInUsingSso","requiredByOrganization","getManagingOrganization","userIsNotUsingKeyConnector","migrateUser","keyConnectorRequest","handleKeyConnectorError","userKeyResponse","keyArr","pubKey","privKey","setPasswordRequest","requestClass","alreadyHashed","validateInput","secret","verifyUser","requestOTP","getByIdentifier","canManageSponsorships","hasOrganizations","selectedTwoFactorProviderType","getSupportedProviders","twoFactorProvidersData","supportsDuo","supportsWebAuthn","getDefaultProvider","webAuthnSupported","providerType","providerPriority","_value","setSelectedProvider","clearProviders","getFormValidationErrors","controls","errors","control","controlErrors","keyError","controlName","errorName","MemoryStorageService","store","BroadcasterMessagingService","broadcasterService","subscriber","arg","command","getDefaultDateFilters","setDate","toDateTimeLocalString","formatDateFilters","filterStart","filterEnd","getEventInfo","ev","EventOptions","appInfo","getAppInfo","getEventMessage","humanReadableMsg","formatCipherId","getShortId","formatCollectionId","formatGroupId","formatOrgUserId","formatPolicyId","p1","formatProviderUserId","formatProviderOrganizationId","Android","iOS","UWP","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","shortId","cipherInfo","makeAnchor","setAttribute","outerHTML","innerHTML","pad","norm","abs","HtmlStorageService","localStorage","getItem","sessionStorage","setItem","removeItem","ContainerService","attachToGlobal","bitwardenContainerService","InitService","notificationsService","vaultTimeoutService","eventLoggingService","themingService","location","origin","ModalService","modalOpen","A11yTitleDirective","renderer","appA11yTitle","ngOnInit","hasAttribute","BlurClickDirective","onClick","blur","PasswordRepromptComponent","PolicyListService","addPolicies","RouterService","activatedRoute","titleService","previousUrl","undefined","currentUrl","child","firstChild","titleId","snapshot","rawTitle","updateUrl","doNotSaveUrl","newTitle","setTitle","setPreviousUrl","getPreviousUrl","AccountSettings","Account","StateService","getRememberEmail","rememberEmail","setRememberEmail","FileDownloadBuilder","_request","blobOptions","fileType","blobData","downloadMethod","fileNameLower","endsWith","WebFileDownloadService","download","isSafari","createObjectURL","position","click","removeChild","ClientType","WebPlatformUtilsService","browserCache","userAgent","chrome","Web","isFirefox","isChrome","isEdge","isOpera","isVivaldi","isMacAppStore","launchUri","sameWindow","rel","PublicKeyCredential","showDialog","confirmText","cancelText","bodyIsHtml","iconClasses","bootstrapModal","removeAttribute","iconHtmlStr","confirmed","heightAuto","buttonsStyling","icon","iconHtml","html","titleText","showCancelButton","cancelButtonText","showConfirmButton","confirmButtonText","copyToClipboard","doc","clipboardData","setData","queryCommandSupported","textarea","textContent","copyEl","contains","select","execCommand","debug","console","warn","readFromClipboard","supportsBiometric","authenticateBiometric","CoreModule","parentModule","flagEnabled","flag","envFlags","initService","multi","systemLanguage","localesDirectory","getLocalesJson","_locale","ReplaySubject","supportedTranslationLocales","localeNames","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","p2","p3","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","content","replaceToken","replaceContent","filePath","localesResult","migrationStateFrom1To2","EmergencyAccessAcceptRequest","BaseAcceptComponent","loading","requiredParameters","failedShortMessage","failedMessage","qParams","errorMessage","authedHandler","unauthedHandler","navigate","AcceptEmergencyComponent","actionPromise","OrganizationUserAcceptRequest","AcceptOrganizationComponent","policyApiService","prepareAcceptRequest","orgName","performResetPasswordAutoEnroll","encryptedKey","policyList","PasswordHintRequest","HintComponent","successRoute","formPromise","onSuccessfulSubmit","ngZone","pinLock","webVaultHostname","invalidPinAttempts","load","failed","setKeyAndContinue","passwordValid","decPin","unlockBiometric","biometricLock","doContinue","input","getElementById","isStable","onStable","take","hideInput","vaultUrl","LockComponent","routerService","navigateByUrl","PasswordLogInCredentials","SsoLogInCredentials","CaptchaIFrame","iframeId","successCallback","errorCallback","infoCallback","parseFunction","parseMessage","bind","connectorLink","sendMessage","iframe","src","contentWindow","postMessage","base64Encode","fromCharCode","cleanup","removeEventListener","createParams","URLSearchParams","parent","initComponent","validMessage","parsedMessage","height","CaptchaProtectedComponent","setupCaptcha","captcha","showCaptcha","handleCaptchaRequired","passwordGenerationService","twoFactorRoute","forcePasswordResetRoute","alwaysRememberEmail","selfHostedDomain","focusInput","onSuccessfulLoginTwoFactorNavigate","onSuccessfulLoginForceResetNavigate","onSuccessfulLoginNavigate","launchSsoBrowser","ssoRedirectUri","passwordOptions","numbers","codeVerifierHash","codeChallenge","webUrl","LoginComponent","showResetPasswordAutoEnrollWarning","goAfterLogIn","invite","resetPasswordPolicy","enforcedPasswordPolicyOptions","strengthResult","getPasswordStrengthUserInput","masterPasswordScore","score","policiesData","userInput","atPosition","DeleteRecoverRequest","RecoverDeleteComponent","TwoFactorRecoveryRequest","RecoverTwoFactorComponent","recoveryCode","InputsFieldMatch","matchTo","inputsMatchError","inputsDoesntMatchError","fieldMatchTo","formGroup","fieldCtrl","fieldMatchToCtrl","setErrors","RegisterRequest","referenceData","formValidationErrorService","formBuilder","isInTrialFlow","createdAccount","showTerms","showErrorSummary","group","confirmMasterPassword","hint","validateInputsDoesntMatch","acceptPolicies","acceptPoliciesValidation","validator","validateFormInputsMatch","markAllAsTouched","hasError","invalid","errorText","getErrorToastMessage","passwordStrengthResult","orgInvite","emit","getStrengthResult","getPasswordScoreText","color","shift","errorTag","required","ReferenceEventRequest","PasswordStrengthComponent","showText","passwordScoreColor","scoreWidth","masterPasswordScoreColor","masterPasswordScoreText","ngOnChanges","changes","masterPasswordStrengthTimeout","updatePasswordStrength","currentValue","setPasswordScoreText","BitLabel","SubmitButtonComponent","buttonType","RegisterFormComponent","queryParamEmail","setValue","RegisterComponent","showCreateOrgMessage","layout","flow","reference","cookie","continuing","leaving","convert","leave","RemovePasswordComponent","OrganizationUserResetPasswordEnrollmentRequest","SetPasswordRequest","strongPassword","setupSubmitActions","performSubmitActions","masterPasswordRetype","syncLoading","resetPasswordAutoEnroll","onSetPasswordSuccess","userEncKey","resetRequest","onSuccessfulChangePassword","confirmField","SetPasswordComponent","loggingIn","changePasswordRoute","checkState","getOrgIdentifierFromState","returnUri","includeUserIdentifier","initiateSsoFormPromise","authorizeUrl","buildAuthorizeUrl","userIdentifier","orgIdFromState","sso","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","PlanType","ProductType","SsoComponent","storedIdentifier","VerticalStep","subLabel","applyBorder","VerticalStepContentComponent","onSelectStep","selected","selectStep","selectStepByIndex","VerticalStepperComponent","activeClass","isNextButtonHidden","steps","selectedIndex","isStepDisabled","_","completed","changedBusinessOwned","OrganizationInformationComponent","nameOnly","createOrganization","isProvider","acceptingSponsorship","EnterpriseContentComponent","FamiliesContentComponent","TeamsContentComponent","ConfirmationDetailsComponent","PaymentMethodType","OrganizationCreateRequest","OrganizationKeysRequest","OrganizationUpgradeRequest","ProviderOrganizationCreateRequest","clientOwnerEmail","organizationCreateRequest","changeMethod","bank","lightInputColor","lightInputPlaceholderColor","darkInputColor","darkInputPlaceholderColor","PaymentComponent","showMethods","showOptions","Card","hideBank","hidePaypal","hideCredit","trialFlow","destroy$","routing_number","account_number","account_holder_name","account_holder_type","currency","btInstance","stripe","stripeElements","stripeCardNumberElement","stripeCardExpiryElement","stripeCardCvcElement","stripeScript","async","Stripe","elements","setStripeElement","btScript","StripeElementStyle","fontFamily","fontSize","fontSmoothing","StripeElementClasses","empty","PayPal","BankAccount","Credit","head","complete","btStylesheet","braintree","dropin","authorization","container","paymentOptionPriority","paypal","buttonStyle","label","shape","tagline","createErr","createPaymentToken","requestPaymentMethod","nonce","handleCardSetup","setupIntent","payment_method","createToken","handleStripeCardPayment","handleCardPayment","paymentIntent","classes","placeholder","mount","takeUntil","TaxInfoUpdateRequest","OrganizationTaxInfoUpdateRequest","taxInfo","TaxInfoComponent","onCountryChanged","includeTaxId","pristine","taxRates","taxRate","localTaxRate","getTaxInfoRequest","submitTaxInfo","hasChanged","changeCountry","changedProduct","changedCountry","cancel","changedOwnedBusiness","OrganizationPlansComponent","showFree","showCancel","Free","onSuccess","onCanceled","onTrialBillingSuccess","selfHosted","productTypes","singleOrgPolicyBlock","discount","businessOwned","premiumAccessAddon","additionalStorage","additionalSeats","plans","Enterprise","Teams","Families","addValidators","selectedPlan","selectedPlanInterval","selectableProducts","validPlans","Custom","familyPlan","FamiliesAnnually","selectablePlans","additionalStoragePriceMonthly","seatPriceMonthly","additionalStorageTotal","seatTotal","subtotal","subTotal","freeTrial","taxCharges","taxComponent","total","paymentDesc","TeamsAnnually","paymentComponent","userHasBlockingSingleOrgPolicy","doSubmit","collectionCt","createSelfHosted","createCloudHosted","updateOrganization","subLabelText","billingSubLabelText","additionalStorageGb","billingAddressCountry","billingAddressPostalCode","orgShareKey","collectionName","tokenResult","paymentToken","taxIdNumber","billingAddressLine1","billingAddressLine2","billingAddressCity","billingAddressState","providerRequest","files","price","BillingComponent","previousStep","patchValue","orgInfoForm","stepBack","billingSuccess","stepSelectionChange","navigateToOrgVault","navigateToOrgInvite","TrialInitiationComponent","titleCasePipe","orgInfoSubLabel","orgLabel","billingSubLabel","accountCreateOnly","validOrgs","orgInfoFormGroup","transform","EnterpriseAnnually","previouslySelectedIndex","verticalStepper","previous","WebAuthnIFrame","webAuthnNewTab","btnText","allow","TwoFactorEmailRequest","webAuthnReady","selectedProviderType","webAuthn","twoFactorEmail","loginRoute","webAuthnAllow","authing","needsLock","cleanupWebAuthn","providerData","authWebAuthn","Host","sig_request","Signature","submit_callback","sig","sendEmail","doToast","emailPromise","Window","onProviderSelected","onRecoverSelected","choose","recover","TwoFactorOptionsComponent","StopClickDirective","$event","preventDefault","TwoFactorComponent","anotherMethod","twoFactorOptionsModal","comp","PasswordRequest","currentMasterPassword","newMasterPasswordHash","UpdatePasswordComponent","OrganizationUserResetPasswordRequest","UpdateTempPasswordRequest","newPasswordHash","newEncKey","UpdateTempPasswordComponent","VerifyEmailRequest","VerifyEmailTokenComponent","VerifyDeleteRecoverRequest","VerifyRecoverDeleteComponent","HomeGuard","FrontendLayoutComponent","FooterComponent","manage","tools","NavigationPermissionsService","current","canAccessTools","canAccessSettings","canAccessManage","getPermissions","AvatarComponent","sanitizer","charCount","textColor","fontWeight","dynamic","circle","generate","chars","upperData","getFirstLetters","unicodeSafeSubstring","charObj","getCharText","stringToColor","svg","getSvg","svgHtml","unescape","charCodeAt","count","svgTag","backgroundColor","character","textTag","characters","StopPropDirective","NavbarComponent","buildOrganizations","run","UserLayoutComponent","OrganizationSwitcherComponent","activeOrganization","loaded","canAccessAdmin","BroadcasterSubscriptionId","OrganizationLayoutComponent","showManageTab","showToolsTab","showSettingsTab","toolsRoute","manageRoute","SelectionReadOnlyRequest","selectAll","check","CollectionAddEditComponent","onSavedCollection","onDeletedCollection","editMode","accessGroups","groupsResponse","checked","deletePromise","selectedChanged","filterSelected","EntityUsersComponent","onEditedUsers","organizationUserType","organizationUserStatusType","showSelected","selectedCount","allUsers","loadUsers","users","searchedUsers","searchText","scrollViewportStyle","entity","selections","loadMore","CollectionsComponent","canCreate","didScroll","pageSize","pagedCollectionsCount","decryptCollections","assignedCollections","resetPaging","pagedLength","pagedCollections","pagedSize","canEdit","canDelete","addEditModalRef","canSave","removeCollection","usersModalRef","entityName","isSearching","isPaging","searching","EventView","BaseEventsComponent","eventService","exportService","fileDownloadService","dirtyDates","defaultDates","exportEvents","appApiPromiseUnfulfilled","dates","parseDates","exportPromise","export","loadEvents","clearExisting","loadAndParseEvents","refreshPromise","morePromise","startDate","endDate","requestEvents","eventInfo","getUserName","exportFileName","EventsComponent","userNamePipe","orgUsersUserIdMap","GroupRequest","GroupAddEditComponent","onSavedGroup","onDeletedGroup","access","loadCollections","GroupsComponent","pagedGroupsCount","pagedGroups","removeGroup","ManageComponent","accessPolicies","accessEvents","accessSso","accessScim","OrganizationUserBulkRequest","OrganizationUserConfirmRequest","UserConfirmComponent","onConfirmedUser","dontAskAgain","fingerprint","BasePeopleComponent","validationService","searchPipe","statusMap","pagedUsers","activeUsers","pagedUsersCount","allCount","invitedCount","userStatusType","Invited","acceptedCount","confirmedCount","revokedCount","Revoked","showConfirmUsers","showBulkConfirmUsers","getUsers","checkUser","filteredUsers","selectCount","removeUserConfirmationDialog","deleteUser","removeUser","showError","revoke","revokeWarningMessage","revokeUser","restoreUser","reinvite","reinviteUser","confirm","confirmUser","mapIndex","updateUser","publicKeyResponse","autoConfirm","confirmModalRef","getCheckedUsers","OrganizationUserBulkConfirmRequest","publicKeys","fingerprints","statuses","done","excludedUsers","isAccepted","getPublicKeys","entry","getCryptoKey","userIdsWithKeys","postConfirmRequest","deleteUsers","removeUsersWarning","BulkRestoreRevokeComponent","isRevoking","bulkTitle","titleKey","performBulkUserAction","bulkMessage","BulkStatusComponent","EntityEventsComponent","showUser","orgUsersIdMap","ResetPasswordComponent","onPasswordReset","loggedOutWarningName","passwordStrengthComponent","copy","orgSymKey","decPrivateKey","OrganizationUserInviteRequest","emails","OrganizationUserUpdateRequest","NestedCheckboxComponent","onSavedUser","onDeletedUser","parentIndeterminate","parentChecked","checkboxes","pascalize","handleDependentPermissions","UserAddEditComponent","onRevokedUser","onRestoredUser","isRevoked","User","showCustom","manageAllCollectionsCheckboxes","manageAssignedCollectionsCheckboxes","customUserTypeSelected","setRequestPermissions","clearPermissions","OrganizationUserUpdateGroupsRequest","groupIds","UserGroupsComponent","userGroups","ug","bulkConfirm","resetPassword","PeopleComponent","userType","canResetPassword","orgUseResetPassword","orgHasKeys","orgResetPasswordPolicyEnabled","callingUserType","viewEvents","relativeTo","allowResetPassword","orgUser","callingUserHasPermission","showEnrolledStatus","groupsModalRef","bulkRemove","bulkRemoveModalRef","bulkRevoke","bulkRevokeOrRestore","bulkRestore","bulkReinvite","showBulkStatus","bulkConfirmModalRef","eventsModalRef","resetPasswordModalRef","warningMessage","successfullMessage","childComponent","bulkStatusModalRef","keyedErrors","keyedFilteredUsers","PolicyRequest","BasePolicy","display","BasePolicyComponent","policyResponse","loadData","buildRequestData","policiesEnabledMap","PolicyEditComponent","cdr","onSavedPolicy","factory","policyComponent","policyFormRef","Enabled","PoliciesComponent","policyListService","policyIdFromEvents","orgPolicy","orgPolicies","op","editModalRef","OrganizationUpdateRequest","ApiKeyComponent","postKey","PurgeVaultComponent","CountBasedLocalizationKey","singular","plural","OrganizationContentSummaryItem","localizationKeyOptions","localizationKey","OrganizationContentSummary","totalItemCount","itemCountByType","DeleteOrganizationComponent","deleteOrganizationRequestType","organizationContentSummary","buildOrganizationContentSummary","organizationItems","cipherType","getOrganizationItemCountByType","getOrganizationItemLocalizationKeysByType","viewApiKey","rotateApiKey","AccountComponent","canUseApi","taxFormPromise","deleteModalRef","purgeVault","purgeModalRef","apiKeyModalRef","grantType","apiKeyTitle","apiKeyWarning","apiKeyDescription","rotateApiKeyModalRef","isRotation","TransactionType","VerifyBankRequest","BitPayInvoiceRequest","AddCreditComponent","onAdded","ppLoading","payPalConfig","ppButtonFormAction","ppButtonBusinessId","creditAmount","ppButtonCustomField","subject","returnUrl","ppButtonFormRef","BitPay","credit","creditAmountNumber","bitPayUrl","formatAmount","floatAmount","parseFloat","toFixed","PaymentRequest","AdjustPaymentComponent","onAdjusted","taxInfoComponent","addCredit","closeAddCredit","verifyBank","changePayment","closePayment","OrganizationBillingComponent","firstLoaded","showAdjustPayment","showAddCredit","transactionType","billing","amount1","verifyAmount1","amount2","verifyAmount2","verifyBankPromise","paymentSourceInApp","isCreditBalance","creditOrBalance","AppleInApp","GoogleInApp","OrganizationApiKeyType","OrganizationConnectionType","BillingSyncConfigApi","billingSyncKey","BillingSyncConfigRequest","OrganizationConnectionRequest","BillingSyncKeyComponent","CloudBillingSync","existingConnectionId","setParentConnection","deleteConnection","OrganizationApiKeyRequest","Default","cancelRotate","rotateToken","BillingSyncApiKeyComponent","showRotateScreen","BillingSync","keyRevisionDate","hasBillingToken","syncStatus","dayDiff","date1","date2","diffTime","submitButtonText","showLastSyncText","showAwaitingSyncText","daysBetween","StorageRequest","AdjustStorageComponent","storageGbPrice","storageAdjustment","storageGbAdjustment","paymentFailed","adjustedStorageTotal","OrganizationSubscriptionUpdateRequest","seatAdjustment","AdjustSubscription","limitSubscription","newSeatCount","currentSeatCount","newMaxSeats","limitSubscriptionChanged","adjustedSeatTotal","maxSeatTotal","ChangePlanComponent","onChanged","defaultUpgradePlan","defaultUpgradeProduct","DownloadLicenseComponent","onDownloaded","licenseString","ImageSubscriptionHiddenComponent","UpdateLicenseComponent","onUpdated","updatePromise","reinstate","changePlan","closeChangePlan","subscriptionAdjusted","removeSponsorship","adjustStorage","closeStorage","downloadLicense","manageBillingSync","closeDownloadLicense","closeUpdateLicense","manageBillingSyncSelfHosted","updateLicense","OrganizationSubscriptionComponent","adjustSeatsAdd","showAdjustSeats","showAdjustSeatAutoscale","adjustStorageAdd","showAdjustStorage","showUpdateLicense","showBillingSyncKey","showDownloadLicense","showChangePlan","userOrg","apiKeyResponse","hasBillingSyncToken","existingBillingSyncConnection","reinstatePromise","cancelPromise","changed","setupBillingSyncModalRef","updated","removeSponsorshipPromise","billingSyncKeyRef","billingSyncKeyViewContainerRef","connection","isExpired","subscriptionMarkedForCancel","nextInvoice","storagePercentage","storageProgressWidth","billingInterval","canAdjustSeats","isSponsoredSubscription","canDownloadLicense","canManageBillingSync","EnterpriseMonthly","EnterpriseAnnually2019","EnterpriseMonthly2019","subscriptionDesc","FamiliesAnnually2019","showChangePlanButton","billingSyncSetUp","SettingsComponent","access2fa","showBilling","UpdateTwoFactorDuoRequest","TwoFactorProviderRequest","TwoFactorBaseComponent","twoFactorProviderType","auth","authResponse","hashedSecret","verificationType","enable","enableFunction","buildRequestModel","TwoFactorVerifyComponent","onAuthed","TwoFactorDuoComponent","processResponse","ikey","skey","DeviceVerificationRequest","UpdateTwoFactorAuthenticatorRequest","TwoFactorAuthenticatorComponent","qrScript","QRious","element","UpdateTwoFactorEmailRequest","TwoFactorEmailComponent","sentEmail","print","TwoFactorRecoveryComponent","w","write","onafterprint","formatString","UpdateTwoFactorWebAuthnDeleteRequest","UpdateTwoFactorWebAuthnRequest","readKey","TwoFactorWebAuthnComponent","keyIdAvailable","keysConfiguredCount","webAuthnResponse","removePromise","challengePromise","readDevice","webAuthnChallenge","resetWebAuthn","webAuthnListening","webAuthnError","listening","configured","UpdateTwoFactorYubioOtpRequest","TwoFactorYubiKeyComponent","disablePromise","existingKey","padRight","NotPremiumDirective","templateRef","viewContainer","createEmbeddedView","premiumRequired","PremiumBadgeComponent","showPolicyWarning","canAccessPremium","deviceVerificationSettings","enableDeviceVerification","filterProvider","evaluatePolicies","openModal","authenticatorModalRef","updateStatus","yubikeyModalRef","duoModalRef","emailModalRef","webAuthnModalRef","recoveryModalRef","TwoFactorSetupComponent","duoComp","auditService","passwordRepromptService","cloneMode","onSavedCipher","onDeletedCipher","onRestoredCipher","onCancelled","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","onGenerateUsername","showCardNumber","showCardCode","ownershipOptions","currentDate","allowPersonal","canUseReprompt","typeOptions","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","uriMatchOptions","autofillOnPageLoadOptions","myEmail","writeableCollections","loadCipher","organizationChanged","previousCipherId","encryptCipher","saveCipher","addUri","removeUri","trackByFunction","share","editCollections","restorePromise","restoreCipher","toggleCardNumber","toggleCardCode","toggleUriOptions","loginUriMatchChanged","checkPassword","checkPasswordPromise","repromptChanged","addFieldType","linkedFieldOptions","fieldType","addFieldTypeOptions","addFieldLinkedTypeOption","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","newField","removeField","toggleFieldValue","showValue","drop","previousIndex","currentIndex","linkedFieldOption","i18nKey","TrueFalseValueDirective","elementRef","trueValue","falseValue","propagateChange","onHostChange","writeValue","setProperty","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","AddEditCustomFieldsComponent","upgradeOrganization","launch","viewHistory","toggleFavorite","totpService","showRevisionDate","hasPasswordHistory","viewingPasswordHistory","viewOnly","passwordRevisionDisplayDate","cleanUp","totpUpdateCode","totpTick","totpInterval","canLaunch","typeI18nKey","aType","clearInterval","totpCode","half","totpCodeFormatted","allowOwnershipAssignment","intervalSeconds","totpSec","totpDash","totpLow","AddEditComponent","CipherReportComponent","requiresPaid","hasLoaded","setCiphers","selectCipher","repromptCipher","cipherAddEditModalRef","checkAccess","FallbackSrcDirective","onError","appFallbackSrc","cardIcons","Visa","Mastercard","Amex","Discover","JCB","Maestro","UnionPay","RuPay","Mir","IconComponent","image","fallbackImage","imageEnabled","setLoginIcon","setCardIcon","hostnameUri","isWebsite","exposedPasswordMap","allCiphers","getAllCiphers","exposedPasswordCiphers","exposedCount","canManageCipher","ExposedPasswordsReportComponent","manageableCiphers","services","cipherDocs","load2fa","inactive2faCiphers","docs","service","serviceData","documentation","additionalDomain","InactiveTwoFactorReportComponent","ciphersWithPasswords","passwordUseMap","reusedPasswordCiphers","ReusedPasswordsReportComponent","ToolsComponent","unsecuredCiphers","UnsecuredWebsitesReportComponent","passwordStrengthMap","passwordStrengthCache","weakPasswordCiphers","isUserNameNotEmpty","getCacheKey","hasUserName","scoreKey","WeakPasswordsReportComponent","PipesModule","VaultService","calculateSearchBarLocalizationString","vaultFilter","selectedFolderId","selectedCollection","selectedOrganizationId","myVaultOnly","VaultSharedModule","VaultFilter","selectedFolder","refreshCollectionsAndFolders","resetFilter","selectedCollectionId","resetOrganization","buildFilter","cipherPassesFilter","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","hasUpdatedKey","fileEl","saveCipherAttachment","cipherDomain","downloading","canAccessAttachments","reuploadCipherAttachment","foundAttachment","a2","reupload","showFixOldAttachments","AttachmentsComponent","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","searchPlaceholder","searchPending","searchTimeout","deletedFilter","applyFilter","reload","refresh","indexedCiphers","doSearch","rightClickCipher","addCipher","addCipherOptions","GetOrgNameFromIdPipe","onOrganizationClicked","profileName","clone","checkCipher","showAddNew","onAttachmentsClicked","onShareClicked","onCollectionsClicked","onCloneClicked","onOrganzationBadgeClicked","pagedCiphers","userHasPremiumAccess","pagedCiphersCount","refreshing","permanent","displayTotpCopyButton","getSelected","getSelectedIds","hasOldAttachments","CiphersComponent","onEventsClicked","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","vaultFilterService","activeFilter","hideFolders","hideCollections","hideFavorites","hideTrash","hideOrganizations","onFilterChange","onAddFolder","onEditFolder","isLoaded","displayCollections","activePersonalOwnershipPolicy","checkForPersonalOwnershipPolicy","activeSingleOrganizationPolicy","checkForSingleOrganizationPolicy","buildNestedFolders","initCollections","buildCollections","toggleFilterNodeCollapseState","node","reloadCollectionsAndFolders","pruneInvalidatedFilterSelections","reloadOrganizations","addFolder","editFolder","pruneInvalidFolderSelection","pruneInvalidCollectionSelection","hasId","hide","onNodeCollapseStateChange","collectionsGrouping","collectionNodes","isCollapsed","toggleCollapse","CollectionFilterComponent","foldersGrouping","folderNodes","nestedFolders","FolderFilterComponent","cipherStatus","StatusFilterComponent","selectedCipherType","typesNode","cipherTypeEnum","TypeFilterComponent","organizationGrouping","displayMode","hasActiveFilter","applyOrganizationFilter","applyMyVaultFilter","clearFilter","EnrollMasterPasswordReset","toastStringRef","keyString","LinkSsoComponent","ngAfterContentInit","toggleResetPasswordEnrollment","unlinkSso","OrganizationOptionsComponent","allowEnrollmentChanges","OrganizationFilterComponent","displayText","searchTextChanged","onSearchTextChanged","VaultFilterComponent","BulkDeleteComponent","cipherIds","onDeleted","deleteCiphersAdmin","deleteCiphers","deleteRequest","BulkMoveComponent","onMoved","BulkRestoreComponent","onRestored","BulkShareComponent","onShared","nonShareableCount","shareableCiphers","allCollections","filterCollections","checkedCollectionIds","bulkMove","bulkShare","BulkActionsComponent","bulkDelete","promptPassword","selectedIds","ciphersComponent","bulkDeleteModalRef","bulkRestoreModalRef","selectedCiphers","bulkShareModalRef","bulkMoveModalRef","VaultComponent","changeDetectorRef","vaultService","trashCleanupWarning","vaultFilterComponent","getCipherIdFromParams","editCipherId","queryParamsHandling","applyVaultFilter","go","filterSearchText","editCipherAttachments","madeAttachmentChanges","attachmentsModalRef","editCipherCollections","collectionsModalRef","editCipher","cloneCipher","replaceUrl","routes","VaultRoutingModule","VaultModule","children","pathMatch","redirectTo","loadChildren","m","OrganizationImportExportModule","OrganizationsRoutingModule","PlanSponsorshipType","AcceptFamilySponsorshipComponent","register","OrganizationSponsorshipRedeemRequest","FamiliesForEnterpriseSetupComponent","badToken","showNewOrganization","_selectedFamilyOrganizationId","organizationPlansComponent","onOrganizationCreateSuccess","existingFamilyOrganizations","selectedFamilyOrganizationId","planSponsorshipType","FamiliesForEnterprise","sponsoredOrganizationId","HasPremiumGuard","userHasPremium","ReportVariant","ReportType","BreachReportComponent","checkedUsername","reports","ExposedPasswords","ReusedPasswords","WeakPasswords","UnsecuredWebsites","Inactive2fa","DataBreach","IconSvg","reportExposedPasswords","reportReusedPasswords","reportWeakPasswords","reportUnsecuredWebsites","reportInactiveTwoFactor","reportBreach","BitIconComponent","domSanitizer","innerHtml","bypassSecurityTrustHtml","ReportCardComponent","variant","requiresPremium","RequiresPremium","ReportListComponent","ReportsHomeComponent","reportRequiresPremium","ReportsLayoutComponent","ReportsRoutingModule","ReportsModule","SendAccessView","SendAccess","SendAccessRequest","toggleText","copyText","AccessComponent","sendType","passwordRequired","unavailable","sendText","downloadData","accessRequest","keyArray","sendAccess","disableSend","filteredSends","hasSearched","onSuccessfulLoad","applyTextSearch","removePassword","onSuccessfulRemovePassword","onSuccessfulDelete","link","clearSelections","selectedAll","selectType","selectedType","BrowserPath","DateField","DatePreset","datePipe","onSavedSend","onDeletedSend","copyLink","disableHideEmail","alertShown","sendLinkBaseUrl","isDateTimeLocalSupported","setDates","loadSend","hasPassword","encryptSend","encSend","uploadPromise","copySuccess","copyLinkToClipboard","typeChanged","toggleOptions","togglePasswordVisible","datesChanged","datesForm","selectedDeletionDatePreset","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","expirationDatePresets","Never","browserPath","Firefox","Safari","formattedDeletionDate","miliseconds","formattedExpirationDate","safariDeletionTimePresetOptions","safariTimePresetOptions","DeletionDate","safariExpirationTimePresetOptions","ExpriationDate","nextWeek","setInitialFormValues","emitDates","valueChanges","onDeletionDatePresetSelect","clearExpiration","initialDeletionDate","toTimeString","initialExpirationDate","twentyFourHour","noon","midnight","ams","pms","hour","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","EffluxDatesComponent","editSend","addSend","SendComponent","sendAddEditModalRef","DeauthorizeSessionsComponent","DeleteAccountComponent","accountService","deleteForm","EmailTokenRequest","EmailRequest","reset","ChangeEmailComponent","tokenSent","showTwoFactorEmailWarning","newEmail","UpdateProfileRequest","ProfileComponent","showChangeEmail","deauthorizeSessions","deauthModalRef","CreateOrganizationComponent","orgPlansComponent","UpdateDomainsRequest","toggleExcluded","customize","DomainRulesComponent","custom","globalDomain","excludedGlobalEquivalentDomains","d2","indexTrackBy","EmergencyAccessAttachmentsComponent","EmergencyAddEditComponent","viewAttachments","EmergencyAccessViewComponent","oldKeyBuffer","oldEncKey","cipherData","EmergencyAccessStatusType","EmergencyAccessType","EmergencyAccessConfirmRequest","EmergencyAccessInviteRequest","EmergencyAccessUpdateRequest","EmergencyAccessAddEditComponent","onSaved","View","emergencyAccessType","waitTimes","emergencyAccess","waitTime","EmergencyAccessConfirmComponent","onConfirmed","EmergencyAccessPasswordRequest","EmergencyAccessTakeoverComponent","onDone","takeoverResponse","approve","requestAccess","takeover","EmergencyAccessComponent","emergencyAccessStatusType","isOrganizationOwner","trustedContacts","grantedContacts","contact","doConfirmation","removeGrantee","removeGrantor","RecoveryInitiated","RecoveryApproved","takeoverModalRef","form","hours","CUSTOM_VALUE","exceedsMinimumTimout","customTimeInMinutes","MIN_CUSTOM_MINUTES","vaultTimeoutPolicy","vaultTimeoutPolicyHours","vaultTimeoutPolicyMinutes","vaultTimeouts","validatorChange","onChange","onTouched","validate","policyError","minTimeoutError","registerOnValidatorChange","VaultTimeoutInputComponent","PreferencesComponent","localeOptions","themeOptions","enableFavicons","startingLocale","startingTheme","valid","vaultTimeoutActionChanged","newValue","FolderWithIdRequest","SendWithIdRequest","UpdateKeyRequest","ChangePasswordComponent","rotateEncKey","rotateEncKeyClicked","updateKey","updateEmergencyAccesses","updateAllResetPasswordKeys","allowedStatuses","filteredAccesses","updateRequest","KdfRequest","ChangeKdfComponent","kdfOptions","recommendedKdfIterations","SecurityKeysComponent","showChangeKdf","viewUserApiKey","viewUserApiKeyModalRef","rotateUserApiKey","rotateUserApiKeyModalRef","SecurityComponent","showChangePassword","SecurityRoutingModule","hasFamilySponsorshipAvailable","hasPremiumFromOrg","hideSubscription","notAllowedValueAsync","valueGetter","caseInsensitive","notAllowedValue","controlValue","resendEmail","SponsoringOrgRowComponent","sponsoringOrg","isSelfHosted","sponsorshipRemoved","statusMessage","statusClass","setStatus","revokeSponsorship","revokeSponsorshipPromise","doRevokeSponsorship","resendEmailPromise","isSentAwaitingSync","toDelete","validUntil","SponsoredFamiliesComponent","availableSponsorshipOrgs","activeSponsorshipOrgs","sponsorshipForm","selectedSponsorshipOrgId","validators","sponsorshipEmail","asyncValidators","updateOn","sponsoredEmail","friendlyName","resetForm","forceReload","allOrgs","sponsorshipEmailControl","anyActiveSponsorships","anyOrgsAvailable","PaymentMethodComponent","PremiumComponent","premiumPrice","finalizePremium","paymentResponse","SubscriptionComponent","hasPremium","subscriptionRoute","UserBillingHistoryComponent","UserSubscriptionComponent","SubscriptionRoutingModule","usernameGenerationService","comingFromAddEdit","onSelected","usernameOptions","avoidAmbiguous","usernameWebsite","passTypeOptions","usernameTypeOptions","desc","subaddressOptions","catchallOptions","forwardOptions","passwordOptionsResponse","websiteOption","regenerateWithoutButtonPress","regenerate","regeneratePassword","regenerateUsername","sliderChanged","savePasswordOptions","sliderInput","normalizePasswordOptions","saveUsernameOptions","usernameGeneratingPromise","copyOptions","SelectCopyDirective","onCopy","selection","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","ColorPasswordPipe","generateTemplate","templateGenerator","passwordArray","colorizedPassword","isSpecial","PasswordGeneratorHistoryComponent","lengthChanged","minNumberChanged","minSpecialChanged","GeneratorComponent","findIndex","historyModalRef","UpdateKeyComponent","makeRequest","onSavedFolder","onDeletedFolder","FolderAddEditComponent","onSharedCipher","cipherView","ShareComponent","VerifyEmailComponent","showVerifyEmail","showBrowserOutdated","showUpdateKey","showPremiumCallout","filterComponent","isShowingCards","shareCipher","shareModalRef","folderAddEditModalRef","updateKeyModalRef","favorites","flagName","ImportExportModule","OssRoutingModule","useHash","paramsInheritanceStrategy","VerticalStepperModule","TrialInitiationModule","OrganizationManageModule","OrganizationUserModule","OssModule","WildcardRoutingModule","ProviderAddOrganizationRequest","WebProviderService","addOrganizationToProvider","encryptedOrgKey","detachOrganizastion","AddOrganizationComponent","webProviderService","onAddedOrganization","ProviderGuard","ProvidersComponent","addExistingOrganization","DisallowedPlanTypes","ClientsComponent","manageOrganizations","showAddExisting","pagedClientsCount","clients","candidateOrgs","allowedOrgsIds","addableOrganizations","pagedClients","addModalRef","ProviderUserAcceptRequest","AcceptProviderComponent","providerUsersUserIdMap","providerUsersIdMap","ProviderUserBulkRequest","ProviderUserConfirmRequest","ProviderUserBulkConfirmRequest","BulkConfirmComponent","BulkRemoveComponent","ProviderUserInviteRequest","ProviderUserUpdateRequest","ServiceUser","ProvidersLayoutComponent","showMenuBar","ProviderUpdateRequest","SetupProviderComponent","ProviderSetupRequest","SetupComponent","ProvidersRoutingModule","ProvidersModule","SecretsManagerModule","AppRoutingModule","DisableSendPolicy","DisableSendPolicyComponent","MasterPasswordPolicy","MasterPasswordPolicyComponent","showKeyConnectorInfo","passwordScores","PasswordGeneratorPolicy","PasswordGeneratorPolicyComponent","defaultTypes","PersonalOwnershipPolicy","PersonalOwnershipPolicyComponent","RequireSsoPolicy","RequireSsoPolicyComponent","singleOrgEnabled","ResetPasswordPolicy","ResetPasswordPolicyComponent","SendOptionsPolicy","SendOptionsPolicyComponent","SingleOrgPolicy","SingleOrgPolicyComponent","TwoFactorAuthenticationPolicy","TwoFactorAuthenticationPolicyComponent","toastrService","lastActivity","idleTimer","isIdle","lang","runOutsideAngular","onmousemove","recordActivity","onmousedown","ontouchstart","onclick","onscroll","onkeypress","setFullWidth","idleStateChanged","sanitize","enableHtml","trustedHtml","timeOut","DisablePersonalVaultExportPolicy","DisablePersonalVaultExportPolicyComponent","MaximumVaultTimeoutPolicy","MaximumVaultTimeoutPolicyComponent","AppComponent","ScimConfigApi","scimProvider","ScimConfigRequest","copyScimUrl","rotateScimKey","copyScimKey","ScimComponent","showScimSettings","formData","endpointUrl","Scim","setConnectionFormValues","loadApiKey","apiKeyRequest","getScimEndpointUrl","rotatePromise","dirtyRequired","dirty","OrganizationSsoRequest","SsoConfigView","A11yInvalidDirective","formControlDirective","statusChanges","InputStripSpacesDirective","onInput","BaseCvaComponent","controlDir","internalControl","onValueChangesInternal","valueAccessor","describedById","showDescribedBy","controlId","helperText","isRequired","hasValidator","onBlurInternal","InputCheckboxComponent","InputTextComponent","stripSpaces","transformValue","emitEvent","doStripSpaces","onValueChangeInternal","InputTextReadOnlyComponent","showCopy","showLaunch","SelectComponent","validateKeyConnectorUrl","toggleOpenIdCustomizations","defaultSigningAlgorithm","ssoType","ssoTypeOptions","None","samlSigningAlgorithms","saml2SigningBehaviourOptions","IfIdpWantAuthnRequestsSigned","Always","saml2BindingTypeOptions","HttpRedirect","HttpPost","saml2NameIdFormatOptions","NotConfigured","Unspecified","EmailAddress","X509SubjectName","WindowsDomainQualifiedName","KerberosPrincipalName","EntityIdentifier","Persistent","Transient","connectRedirectOptions","RedirectGet","FormPost","showOpenIdCustomizations","haveTestedKeyConnector","openIdForm","samlForm","ssoConfigForm","newType","updateValueAndValidity","ssoSettings","populateForm","validateForm","readOutErrors","fromView","markAsPending","invalidUrl","getErrorCount","acc","enableTestKeyConnector","samlSigningAlgorithmOptions","markAsDirty","markAsTouched","ssoConfigView","errorCount","errorCountText","div","innerText","existing","OrganizationsModule","AppModule","bootstrapModule","preserveWhitespaces","CalloutComponent","useAlertRole","calloutStyle","enforcedPolicyMessage","getPasswordScoreAlertDisplay","UserVerificationComponent","disableRequestOTP","sentCode","processChanges","opacity","ApiActionDirective","appApiAction","captchaRequired","AutofocusDirective","appAutofocus","condition","autofocus","InputVerbatimDirective","appInputVerbatim","disableComplete","BitwardenToast","toastPackage","BitwardenToastGlobalConfig","toastComponent","BitwardenToastModule","ngModule","default","numberFormats","cardLength","blocks","Other","CreditCardNumberPipe","creditCardNumber","rules","matchingRule","chunks","JslibModule","forRoot","maxOpened","autoDismiss","closeButton","I18nPipe","SearchPipe","prop1","prop2","prop3","UserNamePipe","ValidationService","defaultErrorMessage","validationErrors","getAllMessages","DynamicTreeNode","transformation","storedFolders","orgCiphers","oc","getAllFoldersNested","storedCollections","folderCopy","getFolderNested","ApiService","CollectionService","EventService","ExportService","FileDownloadService","FolderService","InternalFolderService","I18nService","KeyConnectorService","LogService","OrganizationService","PlatformUtilsService","PolicyService","InternalPolicyService","UserVerificationService","CipherRepromptType","CipherType","EncryptionType","EventType","FieldType","KdfType","DEFAULT_KDF_TYPE","PBKDF2_SHA256","DEFAULT_KDF_ITERATIONS","SEND_KDF_ITERATIONS","LoginLinkedId","CardLinkedId","IdentityLinkedId","Permissions","PolicyType","SecureNoteType","UriMatchType","VerificationType","LinkedMetadata","_i18nKey","TreeNode","ServiceUtils","nodeTree","partIndex","delimiter","partName","nestedTraverse","newPartName","getTreeNodeObject","getDomain","isValid","nodeURL","Utils","isNode","process","release","isBrowser","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","binaryString","atob","fromB64ToArray","fromUrlB64ToB64","strUtf8","fromB64toUrlB64","fromBufferToB64","b64Str","encodedString","decodeURIComponent","escape","call","urlB64Str","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","uriString","getUrl","httpUrl","tldEndingRegex","getUrlObject","validIpAddress","urlDomain","pair","source","ipString","mobile","vendor","opera","hasProtocol","anchor","regexpEmojiPresentation","CardApi","FieldApi","IdentityApi","LoginApi","LoginUriApi","SecureNoteApi","AttachmentData","CardData","CipherData","CollectionData","FieldData","IdentityData","LoginData","LoginUriData","PasswordHistoryData","SecureNoteData","Attachment","toAttachmentData","buildDataModel","toCardData","Cipher","decAttachment","decField","decPh","toLoginData","toSecureNoteData","toIdentityData","toFieldData","toPasswordHistoryData","Collection","Domain","dataObj","notEncList","objProp","notEncStringList","viewModel","mapProp","EncString","encryptedStringOrType","decryptedValue","Field","Folder","Identity","Login","toLoginUriData","LoginUri","MasterPasswordPolicyOptions","Password","SecureNote","SymmetricCryptoKey","CardExport","FieldExport","IdentityExport","LoginUriExport","LoginExport","toView","toDomain","SecureNoteExport","CipherExport","CipherWithIdExport","CollectionExport","CollectionWithIdExport","FolderExport","FolderWithIdExport","AttachmentRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","CollectionRequest","FolderRequest","BaseResponse","propertyName","exactName","otherCasePropertyName","ErrorResponse","identityResponse","errorModel","responseErrorModel","messages","lastSep","AttachmentView","CardView","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","formatYear","CipherView","linkedFieldValue","linkedFieldI18nKey","CollectionView","FieldView","showCount","maskedValue","FolderView","IdentityView","_firstName","_lastName","fullName","fullAddress","address","fullAddressPart2","addressPart2","ItemView","CanLaunchWhitelist","LoginUriView","_uri","_domain","_hostname","_host","_canLaunch","hostnameOrUri","hostOrUri","LoginView","maskedPassword","PasswordHistoryView","SecureNoteView","LogLevelType","ConsoleLogService","timersMap","Debug","Info","Warning","level","hrtime","elapsed","styles","primary","secondary","danger","hoverStyles","BadgeDirective","badgeType","hasHoverEffects","nodeName","buttonStyles","ButtonDirective","block","defaultIcon","defaultI18n","calloutClass","headerClass","BitErrorSummary","errorString","nextId","BitErrorComponent","displayError","requiredLength","BitFormFieldComponent","ngAfterContentChecked","ariaDescribedBy","BitHintComponent","PrefixClasses","BitPrefixDirective","BitSuffixDirective","BadgeModule","BannerComponent","bannerType","bannerClass","BannerModule","ButtonModule","CalloutModule","InputModule","FormFieldModule","IconModule","MenuModule","DialogService","componentOrTemplateRef","backdropClass","DialogModule","SubmitButtonModule","linkStyles","contrast","LinkDirective","linkType","LinkModule","TabsModule","TabGroupComponent","TabItemComponent","baseClassList","activeClassList","ToggleGroupComponent","selectedChange","role","onInputInteraction","ToggleGroupModule","BitInputDirective","ngControl","hasPrefix","hasSuffix","ariaInvalid","_required","touched","MenuDividerComponent","MenuItemDirective","tabIndex","MenuTriggerForDirective","overlay","isOpen","hasPopup","defaultMenuConfig","panelClass","hasBackdrop","scrollStrategy","scrollStrategies","reposition","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","withLockedPosition","withFlexibleDimensions","withPush","toggleMenu","destroyMenu","openMenu","disposeAll","menu","overlayRef","templatePortal","attach","closedEventsSub","getClosedEvents","keyDownEventsSub","keydownEvents","keyManager","onKeydown","detachments","escKey","backdropClick","menuClosed","dispose","MenuComponent","menuItems","withWrap","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","definition","defineProperty","enumerable","chunkId","miniCssF","globalThis","Function","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","nc","onScriptComplete","prev","doneFns","parentNode","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}