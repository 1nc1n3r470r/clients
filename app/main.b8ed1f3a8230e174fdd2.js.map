{"version":3,"file":"app/main.b8ed1f3a8230e174fdd2.js","mappings":"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","sources":["webpack://@bitwarden/web-vault/webpack/runtime/chunk loaded","webpack://@bitwarden/web-vault/webpack/runtime/load script","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/eventView.ts","webpack://@bitwarden/web-vault/./src/app/common/base.events.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/not-premium.directive.ts","webpack://@bitwarden/web-vault/./src/app/components/premium-badge.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/injection-tokens.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/themeBuilder.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/theming.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/abstractEncrypt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/account/account-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/config-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/stateMigration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/storage.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/userVerification/userVerification-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/stateVersion.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/accountFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/globalStateFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/stateFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/environmentUrls.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/account.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/windowState.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/globalState.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/deviceType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/deviceRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/tokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/apiTokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/apiKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/attachmentUploadDataResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billingResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billingHistoryResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billingPaymentResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/breachAccountResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/selectionReadOnlyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/collectionResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/deviceVerificationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/globalDomainResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/domainsResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/eventResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/groupResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identityCaptchaResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identityTokenResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identityTwoFactorResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/keyConnectorUserKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/listResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationConnectionResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationExportResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationSponsorshipSyncStatusResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationUserBulkPublicKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationUserBulkResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationUserResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profileOrganizationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profileProviderOrganizationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profileProviderResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profileResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/paymentResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/planResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/preloginResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerOrganizationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerUserBulkPublicKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerUserBulkResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerUserResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sendAccessResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sendFileDownloadDataResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sendResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sendFileUploadDataResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/ssoPreValidateResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/subscriptionResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/folderResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/syncResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/taxInfoResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/taxRateResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorAuthenticatorResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorDuoResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorEmailResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorProviderResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorRescoverResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorWebAuthnResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorYubiKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/userKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/htmlStorageLocation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/audit.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/throttle.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/authResult.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/logIn.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/apiLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/passwordTokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/passwordLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/ssoTokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/ssoLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/preloginRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/sequentialize.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sortedCiphersCache.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherBulkMoveRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherBulkRestoreRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherBulkShareRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherShareRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cipher.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/server-config-response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/server-config.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/server-config.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/wordlist.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encryptedOrganizationKey.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/crypto.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encryptedObject.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/eventData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/eventRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/eventExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/fileUploadType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/azureFileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/bitwardenFileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/folderData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/account/setKeyConnectorKeyRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/keyConnectorUserKeyRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/notificationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/notificationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization/organizationSsoResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationApiKeyInformationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationAutoEnrollStatusResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/keysResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationKeysResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationSubscriptionResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/generatedPasswordHistory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/resetPasswordPolicyOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/provider.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/search.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/sendFileData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/sendTextData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/sendData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/storageLocation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/providerData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/state.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/token.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/stateMigration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/organizationData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/sync/sync.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/totp.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/account/verifyOTPRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/anonAddyForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/duckDuckGoForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/fastmailForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/firefoxRelayForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/forwarderOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/simpleLoginForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/usernameGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/decryptParameters.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/jslib-services.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/appId.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/auth.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/folder/folder.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/folder/folder-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/account/account-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/account/account.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/environment.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/fileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/settings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/vaultTimeout/vaultTimeoutSettings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/vaultTimeout/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/export.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/notifications.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/webCryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/encrypt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/event.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/policy/policy.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/policy/policy-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/send.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/keyConnector.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/userVerification/userVerification.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/provider.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/formValidationErrors.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/userVerification/userVerification-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization/organization-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/config.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/config/config.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/config/config-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/memoryStorage.service.ts","webpack://@bitwarden/web-vault/./src/app/core/broadcaster-messaging.service.ts","webpack://@bitwarden/web-vault/./src/app/core/event.service.ts","webpack://@bitwarden/web-vault/./src/app/core/html-storage.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/container.service.ts","webpack://@bitwarden/web-vault/./src/app/core/init.service.ts","webpack://@bitwarden/web-vault/./src/app/core/modal.service.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.html","webpack://@bitwarden/web-vault/./src/app/core/password-reprompt.service.ts","webpack://@bitwarden/web-vault/./src/app/core/policy-list.service.ts","webpack://@bitwarden/web-vault/./src/app/core/state/account.ts","webpack://@bitwarden/web-vault/./src/app/core/state/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileDownload/fileDownloadBuilder.ts","webpack://@bitwarden/web-vault/./src/app/core/web-file-download.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/clientType.ts","webpack://@bitwarden/web-vault/./src/app/core/web-platform-utils.service.ts","webpack://@bitwarden/web-vault/./src/app/core/core.module.ts","webpack://@bitwarden/web-vault/./src/app/core/state/global-state.ts","webpack://@bitwarden/web-vault/./src/app/core/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/i18n.service.ts","webpack://@bitwarden/web-vault/./src/app/core/state-migration.service.ts","webpack://@bitwarden/web-vault/./src/app/core/router.service.ts","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-create.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/guards/org-permissions.guard.ts","webpack://@bitwarden/web-vault/./src/app/organizations/navigation-permissions.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policies.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/policyRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/base-policy.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policy-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policy-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policies.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policies.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-settings-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-settings.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/shared/guards/has-premium.guard.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/breach-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/breach-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-breach.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-exposed-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-inactive-two-factor.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-reused-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-unsecured-websites.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-weak-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports.ts","webpack://@bitwarden/web-vault/./src/app/reports/shared/reports-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reports-home.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reports-home.component.html","webpack://@bitwarden/web-vault/./src/app/reports/reports-layout.component.html","webpack://@bitwarden/web-vault/./src/app/reports/reports-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports.module.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/cipher-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/exposed-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/inactive-two-factor-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reused-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/unsecured-websites-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/weak-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/shared/models/report-variant.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/shared/report-card/report-card.component.html","webpack://@bitwarden/web-vault/./src/app/reports/shared/report-card/report-card.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/shared/report-list/report-list.component.html","webpack://@bitwarden/web-vault/./src/app/reports/shared/report-list/report-list.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/storageRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.html","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.html","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/transactionType.ts","webpack://@bitwarden/web-vault/./src/app/settings/billing-history.component.html","webpack://@bitwarden/web-vault/./src/app/settings/billing-history.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verifyBankRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/bitPayInvoiceRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/paymentRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment-method.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment-method.component.ts","webpack://@bitwarden/web-vault/./src/scss/export.module.scss","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.html","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.html","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/twoFactorProviderRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-base.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorDuoRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/deviceVerificationRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorAuthenticatorRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorEmailRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorWebAuthnDeleteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorWebAuthnRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorYubioOtpRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.html","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.html","webpack://@bitwarden/web-vault/./src/app/shared/loose-components.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge/badge.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/submit-button/submit-button.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tabs.module.ts","webpack://@bitwarden/web-vault/./src/app/shared/locales.ts","webpack://@bitwarden/web-vault/./src/app/shared/shared.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/true-false-value.directive.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.html","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-badge.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/vault-filter-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/vault-filter.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/flags.ts","webpack://@bitwarden/web-vault/./src/utils/flags.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessAcceptRequest.ts","webpack://@bitwarden/web-vault/./src/app/common/base.accept.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserAcceptRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/passwordHintRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/hint.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/lock.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/logInCredentials.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/captcha_iframe.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/iframe_component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/captchaProtected.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/login.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/login.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/deleteRecoverRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/twoFactorRecoveryRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/inputsFieldMatch.validator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/registerRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/register.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/referenceEventRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/shared/components/password-strength/password-strength.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/shared/components/password-strength/password-strength.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/error-summary.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/register.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/register.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/remove-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserResetPasswordEnrollmentRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/setPasswordRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/change-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/set-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/sso.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/productType.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-information.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-information.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-forbes.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-forbes.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-us-news.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-us-news.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/confirmation-details.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/confirmation-details.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationCreateRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUpgradeRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerOrganizationCreateRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.html","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/billing.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/billing.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/default-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/default-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise1-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise1-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise2-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise2-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams1-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams1-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams2-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams2-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-cnet.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-cnet.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-individual-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-individual-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/webauthn_iframe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/two-factor.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/passwordRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/update-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserResetPasswordRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTempPasswordRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/update-temp-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verifyEmailRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verifyDeleteRecoverRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.html","webpack://@bitwarden/web-vault/./src/app/guards/home.guard.ts","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-item.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-trigger-for.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-divider.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-divider.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-item.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-item.component.ts","webpack://@bitwarden/web-vault/./src/app/components/organization-switcher.component.html","webpack://@bitwarden/web-vault/./src/app/components/organization-switcher.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/layouts/organization-layout.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/layouts/organization-layout.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/selectionReadOnlyRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/groupRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserBulkRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserConfirmRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/common/base.people.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserBulkConfirmRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-remove.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-restore-revoke.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-restore-revoke.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-status.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-status.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/reset-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserInviteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/components/nested-checkbox.component.html","webpack://@bitwarden/web-vault/./src/app/components/nested-checkbox.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserUpdateGroupsRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/people.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/people.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/pipes/pipes.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/vault.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/vault-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-filter/vault-filter.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/models/vault-filter.model.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.html","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/attachments.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/ciphers.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/ellipsis.pipe.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-name-badge.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-name-badge.component.html","webpack://@bitwarden/web-vault/./src/app/vault/shared/pipes/get-organization-name.pipe.ts","webpack://@bitwarden/web-vault/./src/app/vault/ciphers.component.html","webpack://@bitwarden/web-vault/./src/app/vault/ciphers.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/ciphers.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.html","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/collections.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/vault-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/collection-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/collection-filter/collection-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/collection-filter/collection-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/folder-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/folder-filter/folder-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/folder-filter/folder-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/status-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/status-filter/status-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/status-filter/status-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/type-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/type-filter/type-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/type-filter/type-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/organization-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/enroll-master-password-reset.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/enroll-master-password-reset.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/link-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/link-sso.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-options.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-options.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-filter/vault-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-delete.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-move.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-move.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-restore.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-restore.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-actions.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-actions.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/organization-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/planSponsorshipType.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/accept-family-sponsorship.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/accept-family-sponsorship.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization/organizationSponsorshipRedeemRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sendAccessView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sendAccess.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/sendAccessRequest.ts","webpack://@bitwarden/web-vault/./src/app/send/access.component.html","webpack://@bitwarden/web-vault/./src/app/send/access.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/send.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.html","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/send.component.html","webpack://@bitwarden/web-vault/./src/app/send/send.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.html","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emailTokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emailRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateProfileRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.html","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateDomainsRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.html","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/emergencyAccessStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/emergencyAccessType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessConfirmRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessInviteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessPasswordRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.html","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/preferences.component.html","webpack://@bitwarden/web-vault/./src/app/settings/preferences.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/folderWithIdRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/sendWithIdRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateKeyRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/kdfRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security-keys.component.html","webpack://@bitwarden/web-vault/./src/app/settings/security-keys.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security.component.html","webpack://@bitwarden/web-vault/./src/app/settings/security.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/notAllowedValueAsync.validator.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/billing-history-view.component.html","webpack://@bitwarden/web-vault/./src/app/settings/billing-history-view.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.html","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/subscription-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/generator.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/password-generator-history.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/select-copy.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/color-password.pipe.ts","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.html","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.html","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.html","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/share.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault.module.ts","webpack://@bitwarden/web-vault/./src/app/oss-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/organization-manage.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/organization-user.module.ts","webpack://@bitwarden/web-vault/./src/app/oss.module.ts","webpack://@bitwarden/web-vault/./src/app/wildcard-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerAddOrganizationRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/services/webProvider.service.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/add-organization.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/add-organization.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/guards/provider-permissions.guard.ts","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.html","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/clients.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/clients.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/create-organization.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/create-organization.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserAcceptRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/accept-provider.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/accept-provider.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/events.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/events.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/manage.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/manage.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserBulkRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserConfirmRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserBulkConfirmRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserInviteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserUpdateRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/people.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/people.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-layout.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-layout.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUpdateRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/account.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/account.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/settings.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup-provider.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup-provider.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerSetupRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-routing.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/app.component.ts","webpack://@bitwarden/web-vault/./src/app/app.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/disable-personal-vault-export.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/disable-personal-vault-export.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/maximum-vault-timeout.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/maximum-vault-timeout.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/scimConfigApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/scimConfigRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/scim.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/scim.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization/organizationSsoRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/ssoConfigView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/view.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/input-strip-spaces.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/copy-click.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/launch-click.directive.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/base-cva.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-checkbox.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-checkbox.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/sso.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/sso.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/organizations-routing.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/organizations.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/main.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/avatar.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/callout.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/callout.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/fallback-src.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/icon.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/icon.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/modal.ref.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/user-verification.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/user-verification.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/a11y-title.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/api-action.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/autofocus.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/input-verbatim.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/stop-click.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/stop-prop.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/auth.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/lock.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/unauth.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/toastr.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/credit-card-number.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/jslib.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/i18n.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/search.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/user-name.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/dynamic-modal.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/modal-injector.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/modal.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/theming.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/validation.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/models/dynamic-tree-node.model.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/services/vault-filter.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/account/account.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/appId.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/audit.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/auth.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/cipher.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/crypto.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/cryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/environment.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/event.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/export.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileDownload/fileDownload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/folder/folder-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/folder/folder.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/formValidationErrors.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/keyConnector.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/log.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/messaging.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/notifications.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization/organization-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/platformUtils.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/policy/policy-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/policy/policy.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/provider.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/search.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/send.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/settings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/sync/sync.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/token.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/totp.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/twoFactor.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/userVerification/userVerification.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/usernameGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/vaultTimeout/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/vaultTimeout/vaultTimeoutSettings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authenticationStatus.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authenticationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/cipherRepromptType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/cipherType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/encryptionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/eventType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/fieldType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/hashPurpose.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/kdfType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/keySuffixOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/linkedIdType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationApiKeyType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationConnectionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationUserStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationUserType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/paymentMethodType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/planType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/policyType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/providerUserStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/providerUserType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/secureNoteType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/sendType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/ssoEnums.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/themeType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/twoFactorProviderType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/uriMatchType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/verificationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/linkedFieldOption.decorator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/treeNode.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/serviceUtils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/tldjs.noop.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/utils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/cardApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/fieldApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/identityApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/loginApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/loginUriApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/permissionsApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/secureNoteApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/sendFileApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/sendTextApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/ssoConfigApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/attachmentData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/cardData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/cipherData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/collectionData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/fieldData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/identityData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/loginData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/loginUriData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/passwordHistoryData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/policyData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/secureNoteData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/attachment.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/card.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/cipher.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/collection.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/domainBase.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encArrayBuffer.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encString.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/field.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/folder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/identity.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/login.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/loginUri.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/masterPasswordPolicyOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/organization.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/password.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/policy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/secureNote.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sendFile.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sendText.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/symmetricCryptoKey.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cardExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/fieldExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/identityExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/loginUriExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/loginExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/secureNoteExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cipherExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cipherWithIdsExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/collectionExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/collectionWithIdExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/folderExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/folderWithIdExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherBulkDeleteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherCollectionsRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherCreateRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/attachmentRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherWithIdRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/folderRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/tokenRequestTwoFactor.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/keysRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationApiKeyRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationConnectionRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationKeysRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationTaxInfoUpdateRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/secretVerificationRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/sendRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/taxInfoUpdateRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/twoFactorEmailRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/attachmentResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/baseResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/passwordHistoryResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/cipherResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/emergencyAccessResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/errorResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/policyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/attachmentView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/cardView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/cipherView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/collectionView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/fieldView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/folderView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/identityView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/itemView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/loginUriView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/loginView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/passwordHistoryView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/secureNoteView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sendFileView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sendTextView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sendView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/logLevelType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/consoleLog.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/twoFactor.service.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge/badge.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/error.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/input/input.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/shared.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/hint.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/label.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/prefix.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/suffix.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.ts","webpack://@bitwarden/web-vault/../../libs/components/src/input/input.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/i18n.pipe.ts","webpack://@bitwarden/web-vault/../../libs/components/src/submit-button/submit-button.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/submit-button/submit-button.component.html","webpack://@bitwarden/web-vault/webpack/bootstrap","webpack://@bitwarden/web-vault/webpack/runtime/compat get default export","webpack://@bitwarden/web-vault/webpack/runtime/define property getters","webpack://@bitwarden/web-vault/webpack/runtime/ensure chunk","webpack://@bitwarden/web-vault/webpack/runtime/get javascript chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/get mini-css chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/global","webpack://@bitwarden/web-vault/webpack/runtime/hasOwnProperty shorthand","webpack://@bitwarden/web-vault/webpack/runtime/make namespace object","webpack://@bitwarden/web-vault/webpack/runtime/node module decorator","webpack://@bitwarden/web-vault/webpack/runtime/publicPath","webpack://@bitwarden/web-vault/webpack/runtime/jsonp chunk loading","webpack://@bitwarden/web-vault/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"@bitwarden/web-vault:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { RegisterFormComponent } from \"./register-form.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [RegisterFormComponent],\n  exports: [RegisterFormComponent],\n})\nexport class RegisterFormModule {}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventView {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: EventType;\n  installationId: string;\n\n  constructor(data: Required<EventView>) {\n    this.message = data.message;\n    this.humanReadableMessage = data.humanReadableMessage;\n    this.appIcon = data.appIcon;\n    this.appName = data.appName;\n    this.userId = data.userId;\n    this.userName = data.userName;\n    this.userEmail = data.userEmail;\n    this.date = data.date;\n    this.ip = data.ip;\n    this.type = data.type;\n    this.installationId = data.installationId;\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { EventView } from \"@bitwarden/common/models/view/eventView\";\n\nimport { EventService } from \"../core\";\n\n@Directive()\nexport abstract class BaseEventsComponent {\n  loading = true;\n  loaded = false;\n  events: EventView[];\n  start: string;\n  end: string;\n  dirtyDates = true;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  exportPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  abstract readonly exportFileName: string;\n\n  constructor(\n    protected eventService: EventService,\n    protected i18nService: I18nService,\n    protected exportService: ExportService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected fileDownloadService: FileDownloadService\n  ) {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n  }\n\n  async exportEvents() {\n    if (this.appApiPromiseUnfulfilled() || this.dirtyDates) {\n      return;\n    }\n\n    this.loading = true;\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    try {\n      this.exportPromise = this.export(dates[0], dates[1]);\n\n      await this.exportPromise;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    this.exportPromise = null;\n    this.loading = false;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.appApiPromiseUnfulfilled()) {\n      return;\n    }\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    this.loading = true;\n    let events: EventView[] = [];\n    try {\n      const promise = this.loadAndParseEvents(\n        dates[0],\n        dates[1],\n        clearExisting ? null : this.continuationToken\n      );\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      const result = await promise;\n      this.continuationToken = result.continuationToken;\n      events = result.events;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.dirtyDates = false;\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n\n  protected abstract requestEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ): Promise<ListResponse<EventResponse>>;\n  protected abstract getUserName(r: EventResponse, userId: string): { name: string; email: string };\n\n  protected async loadAndParseEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ) {\n    const response = await this.requestEvents(startDate, endDate, continuationToken);\n\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user = this.getUserName(r, userId);\n        const userName = user != null ? user.name : this.i18nService.t(\"unknown\");\n\n        return new EventView({\n          message: eventInfo.message,\n          humanReadableMessage: eventInfo.humanReadableMessage,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: r.installationId != null ? `Installation: ${r.installationId}` : userName,\n          userEmail: user != null ? user.email : \"\",\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n          installationId: r.installationId,\n        });\n      })\n    );\n    return { continuationToken: response.continuationToken, events: events };\n  }\n\n  protected parseDates() {\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return null;\n    }\n    return dates;\n  }\n\n  protected appApiPromiseUnfulfilled() {\n    return this.refreshPromise != null || this.morePromise != null || this.exportPromise != null;\n  }\n\n  private async export(start: string, end: string) {\n    let continuationToken = this.continuationToken;\n    let events = [].concat(this.events);\n\n    while (continuationToken != null) {\n      const result = await this.loadAndParseEvents(start, end, continuationToken);\n      continuationToken = result.continuationToken;\n      events = events.concat(result.events);\n    }\n\n    const data = await this.exportService.getEventExport(events);\n    const fileName = this.exportService.getFileName(this.exportFileName, \"csv\");\n    this.fileDownloadService.download({\n      fileName,\n      blobData: data,\n      blobOptions: { type: \"text/plain\" },\n    });\n  }\n}\n","import { Directive, OnInit, TemplateRef, ViewContainerRef } from \"@angular/core\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n/**\n * Hides the element if the user has premium.\n */\n@Directive({\n  selector: \"[appNotPremium]\",\n})\nexport class NotPremiumDirective implements OnInit {\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    const premium = await this.stateService.getCanAccessPremium();\n\n    if (premium) {\n      this.viewContainer.clear();\n    } else {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\n@Component({\n  selector: \"app-premium-badge\",\n  template: `\n    <button type=\"button\" *appNotPremium bitBadge badgeType=\"success\" (click)=\"premiumRequired()\">\n      {{ \"premium\" | i18n }}\n    </button>\n  `,\n})\nexport class PremiumBadgeComponent {\n  constructor(private messagingService: MessagingService) {}\n\n  premiumRequired() {\n    this.messagingService.send(\"premiumRequired\");\n  }\n}\n","import { InjectionToken } from \"@angular/core\";\n\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\n\nexport const WINDOW = new InjectionToken<Window>(\"WINDOW\");\nexport const MEMORY_STORAGE = new InjectionToken<AbstractStorageService>(\"MEMORY_STORAGE\");\nexport const SECURE_STORAGE = new InjectionToken<AbstractStorageService>(\"SECURE_STORAGE\");\nexport const STATE_FACTORY = new InjectionToken<StateFactory>(\"STATE_FACTORY\");\nexport const STATE_SERVICE_USE_CACHE = new InjectionToken<boolean>(\"STATE_SERVICE_USE_CACHE\");\nexport const LOGOUT_CALLBACK = new InjectionToken<(expired: boolean, userId?: string) => void>(\n  \"LOGOUT_CALLBACK\"\n);\nexport const LOCKED_CALLBACK = new InjectionToken<() => void>(\"LOCKED_CALLBACK\");\nexport const CLIENT_TYPE = new InjectionToken<boolean>(\"CLIENT_TYPE\");\nexport const LOCALES_DIRECTORY = new InjectionToken<string>(\"LOCALES_DIRECTORY\");\nexport const SYSTEM_LANGUAGE = new InjectionToken<string>(\"SYSTEM_LANGUAGE\");\nexport const LOG_MAC_FAILURES = new InjectionToken<string>(\"LOG_MAC_FAILURES\");\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport class ThemeBuilder implements Theme {\n  get effectiveTheme(): ThemeType {\n    return this.configuredTheme != ThemeType.System ? this.configuredTheme : this.systemTheme;\n  }\n\n  constructor(readonly configuredTheme: ThemeType, readonly systemTheme: ThemeType) {}\n\n  updateSystemTheme(systemTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(this.configuredTheme, systemTheme);\n  }\n\n  updateConfiguredTheme(configuredTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(configuredTheme, this.systemTheme);\n  }\n}\n","import { DOCUMENT } from \"@angular/common\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, filter, fromEvent, Observable } from \"rxjs\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { WINDOW } from \"../injection-tokens\";\n\nimport { Theme } from \"./theme\";\nimport { ThemeBuilder } from \"./themeBuilder\";\nimport { AbstractThemingService } from \"./theming.service.abstraction\";\n\n@Injectable()\nexport class ThemingService implements AbstractThemingService {\n  private _theme = new BehaviorSubject<ThemeBuilder | null>(null);\n  theme$: Observable<Theme> = this._theme.pipe(filter((x) => x !== null));\n\n  constructor(\n    private stateService: StateService,\n    @Inject(WINDOW) private window: Window,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.monitorThemeChanges();\n  }\n\n  async monitorThemeChanges(): Promise<void> {\n    this._theme.next(\n      new ThemeBuilder(await this.stateService.getTheme(), await this.getSystemTheme())\n    );\n    this.monitorConfiguredThemeChanges();\n    this.monitorSystemThemeChanges();\n  }\n\n  updateSystemTheme(systemTheme: ThemeType): void {\n    this._theme.next(this._theme.getValue().updateSystemTheme(systemTheme));\n  }\n\n  async updateConfiguredTheme(theme: ThemeType): Promise<void> {\n    await this.stateService.setTheme(theme);\n    this._theme.next(this._theme.getValue().updateConfiguredTheme(theme));\n  }\n\n  protected monitorConfiguredThemeChanges(): void {\n    this.theme$.subscribe((theme: Theme) => {\n      this.document.documentElement.classList.remove(\n        \"theme_\" + ThemeType.Light,\n        \"theme_\" + ThemeType.Dark,\n        \"theme_\" + ThemeType.Nord,\n        \"theme_\" + ThemeType.SolarizedDark\n      );\n      this.document.documentElement.classList.add(\"theme_\" + theme.effectiveTheme);\n    });\n  }\n\n  // We use a media match query for monitoring the system theme on web and browser, but this doesn't work for electron apps on Linux.\n  // In desktop we override these methods to track systemTheme with the electron renderer instead, which works for all OSs.\n  protected async getSystemTheme(): Promise<ThemeType> {\n    return this.window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ? ThemeType.Dark\n      : ThemeType.Light;\n  }\n\n  protected monitorSystemThemeChanges(): void {\n    fromEvent<MediaQueryListEvent>(\n      this.window.matchMedia(\"(prefers-color-scheme: dark)\"),\n      \"change\"\n    ).subscribe((event) => {\n      this.updateSystemTheme(event.matches ? ThemeType.Dark : ThemeType.Light);\n    });\n  }\n}\n","import { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { IEncrypted } from \"../interfaces/IEncrypted\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport abstract class AbstractEncryptService {\n  abstract encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString>;\n  abstract encryptToBytes: (\n    plainValue: ArrayBuffer,\n    key?: SymmetricCryptoKey\n  ) => Promise<EncArrayBuffer>;\n  abstract decryptToUtf8: (encString: EncString, key: SymmetricCryptoKey) => Promise<string>;\n  abstract decryptToBytes: (encThing: IEncrypted, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  abstract resolveLegacyKey: (key: SymmetricCryptoKey, encThing: IEncrypted) => SymmetricCryptoKey;\n}\n","import { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\n\nexport abstract class AccountApiService {\n  abstract deleteAccount(request: SecretVerificationRequest): Promise<void>;\n}\n","import { ServerConfigResponse } from \"@bitwarden/common/models/response/server-config-response\";\n\nexport abstract class ConfigApiServiceAbstraction {\n  get: () => Promise<ServerConfigResponse>;\n}\n","import { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { StorageOptions } from \"../models/domain/storageOptions\";\n\nexport abstract class AbstractStorageService {\n  abstract get<T>(key: string, options?: StorageOptions): Promise<T>;\n  abstract has(key: string, options?: StorageOptions): Promise<boolean>;\n  abstract save<T>(key: string, obj: T, options?: StorageOptions): Promise<void>;\n  abstract remove(key: string, options?: StorageOptions): Promise<void>;\n}\n\nexport abstract class AbstractCachedStorageService extends AbstractStorageService {\n  abstract getBypassCache<T>(key: string, options?: StorageOptions): Promise<T>;\n}\n","import { VerifyOTPRequest } from \"@bitwarden/common/models/request/account/verifyOTPRequest\";\n\nexport abstract class UserVerificationApiServiceAbstraction {\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postAccountRequestOTP: () => Promise<void>;\n}\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Five = 5, // Migrate to new storage of encrypted organization keys\n  Six = 6, // Delete account.keys.legacyEtmKey property\n  Latest = Six,\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/globalState\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/globalState\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","export class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n}\n","import { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CollectionData } from \"../data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../data/eventData\";\nimport { FolderData } from \"../data/folderData\";\nimport { OrganizationData } from \"../data/organizationData\";\nimport { PolicyData } from \"../data/policyData\";\nimport { ProviderData } from \"../data/providerData\";\nimport { SendData } from \"../data/sendData\";\nimport { ServerConfigData } from \"../data/server-config.data\";\nimport { CipherView } from \"../view/cipherView\";\nimport { CollectionView } from \"../view/collectionView\";\nimport { SendView } from \"../view/sendView\";\n\nimport { EncString } from \"./encString\";\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { GeneratedPasswordHistory } from \"./generatedPasswordHistory\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n  decryptedSerialized?: string;\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\n// This is a temporary structure to handle migrated `DataEncryptionPair` to\n//  avoid needing a data migration at this stage. It should be replaced with\n//  proper data migrations when `DataEncryptionPair` is deprecated.\nexport class TemporaryDataEncryption<TEncrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders? = new TemporaryDataEncryption<FolderData>();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Map<string, SymmetricCryptoKey>\n  > = new EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Map<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  publicKey?: ArrayBuffer;\n  publicKeySerialized?: string;\n  apiKeyClientSecret?: string;\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  hasPremiumFromOrganization?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  enableGravitars?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  usernameGenerationOptions?: any;\n  generatorOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: AccountSettingsSettings; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n  serverConfig?: ServerConfigData;\n}\n\nexport type AccountSettingsSettings = {\n  equivalentDomains?: { [id: string]: any };\n};\n\nexport class AccountTokens {\n  accessToken?: string;\n  decodedToken?: any;\n  refreshToken?: string;\n  securityStamp?: string;\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { WindowState } from \"./windowState\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string;\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","import { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n\n  constructor(protected twoFactor: TokenRequestTwoFactor, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenRequestTwoFactor) {\n    this.twoFactor = twoFactor;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    if (this.twoFactor.token && this.twoFactor.provider != null) {\n      obj.twoFactorToken = this.twoFactor.token;\n      obj.twoFactorProvider = this.twoFactor.provider;\n      obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n    }\n\n    return obj;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class ApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { BillingInvoiceResponse, BillingTransactionResponse } from \"./billingResponse\";\n\nexport class BillingHistoryResponse extends BaseResponse {\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { BillingSourceResponse } from \"./billingResponse\";\n\nexport class BillingPaymentResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class DeviceVerificationResponse extends BaseResponse {\n  isDeviceVerificationSectionEnabled: boolean;\n  unknownDeviceVerificationEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.isDeviceVerificationSectionEnabled = this.getResponseProperty(\n      \"IsDeviceVerificationSectionEnabled\"\n    );\n    this.unknownDeviceVerificationEnabled = this.getResponseProperty(\n      \"UnknownDeviceVerificationEnabled\"\n    );\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { GlobalDomainResponse } from \"./globalDomainResponse\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n  installationId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n    this.installationId = this.getResponseProperty(\"InstallationId\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\nimport { BillingSyncConfigApi } from \"../api/billingSyncConfigApi\";\nimport { ScimConfigApi } from \"../api/scimConfigApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\n/**API response config types for OrganizationConnectionResponse */\nexport type OrganizationConnectionConfigApis = BillingSyncConfigApi | ScimConfigApi;\n\nexport class OrganizationConnectionResponse<\n  TConfig extends OrganizationConnectionConfigApis\n> extends BaseResponse {\n  id: string;\n  type: OrganizationConnectionType;\n  organizationId: string;\n  enabled: boolean;\n  config: TConfig;\n\n  constructor(response: any, configType: { new (response: any): TConfig }) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const rawConfig = this.getResponseProperty(\"Config\");\n    this.config = rawConfig == null ? null : new configType(rawConfig);\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionResponse } from \"./collectionResponse\";\nimport { ListResponse } from \"./listResponse\";\n\nexport class OrganizationExportResponse extends BaseResponse {\n  collections: ListResponse<CollectionResponse>;\n  ciphers: ListResponse<CipherResponse>;\n\n  constructor(response: any) {\n    super(response);\n    this.collections = this.getResponseProperty(\"Collections\");\n    this.ciphers = this.getResponseProperty(\"Ciphers\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationSponsorshipSyncStatusResponse extends BaseResponse {\n  lastSyncDate?: Date;\n\n  constructor(response: any) {\n    super(response);\n    const lastSyncDate = this.getResponseProperty(\"LastSyncDate\");\n    if (lastSyncDate) {\n      this.lastSyncDate = new Date(lastSyncDate);\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useScim = this.getResponseProperty(\"UseScim\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n    const familySponsorshipLastSyncDateString = this.getResponseProperty(\n      \"FamilySponsorshipLastSyncDate\"\n    );\n    if (familySponsorshipLastSyncDateString) {\n      this.familySponsorshipLastSyncDate = new Date(familySponsorshipLastSyncDateString);\n    }\n    const familySponsorshipValidUntilString = this.getResponseProperty(\n      \"FamilySponsorshipValidUntil\"\n    );\n    if (familySponsorshipValidUntilString) {\n      this.familySponsorshipValidUntil = new Date(familySponsorshipValidUntilString);\n    }\n    this.familySponsorshipToDelete = this.getResponseProperty(\"FamilySponsorshipToDelete\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"./profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"./profileProviderResponse\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premiumPersonally: boolean;\n  premiumFromOrganization: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premiumPersonally = this.getResponseProperty(\"Premium\");\n    this.premiumFromOrganization = this.getResponseProperty(\"PremiumFromOrganization\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n  userCount: number;\n  seats?: number;\n  plan?: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.userCount = this.getResponseProperty(\"UserCount\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.plan = this.getResponseProperty(\"Plan\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../organizationUserBulkPublicKeyResponse\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissionsApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SsoPreValidateResponse extends BaseResponse {\n  token: string;\n\n  constructor(response: any) {\n    super(response);\n    this.token = this.getResponseProperty(\"Token\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionDetailsResponse } from \"./collectionResponse\";\nimport { DomainsResponse } from \"./domainsResponse\";\nimport { FolderResponse } from \"./folderResponse\";\nimport { PolicyResponse } from \"./policyResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../../models/domain/logInCredentials\";\nimport { DeviceRequest } from \"../../models/request/deviceRequest\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\nimport { KeysRequest } from \"../../models/request/keysRequest\";\nimport { IdentityCaptchaResponse } from \"../../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../../models/response/identityTwoFactorResponse\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult>;\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected onSuccessfulLogin(response: IdentityTokenResponse): Promise<void> {\n    // Implemented in subclass if required\n    return null;\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenRequestTwoFactor) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return new TokenRequestTwoFactor(TwoFactorProviderType.Remember, storedTwoFactorToken, false);\n    }\n\n    return new TokenRequestTwoFactor();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    await this.onSuccessfulLogin(response);\n\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { ApiLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class ApiLogInStrategy extends LogInStrategy {\n  tokenRequest: ApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: ApiLogInCredentials) {\n    this.tokenRequest = new ApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","import { ClientType } from \"../../../enums/clientType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captchaProtectedRequest\";\nimport { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { SsoLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { CipherView } from \"../view/cipherView\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipherWithIdRequest\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { AccountSettingsSettings } from \"../models/domain/account\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domainBase\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/loginUri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secureNote\";\nimport { SortedCiphersCache } from \"../models/domain/sortedCiphersCache\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { AttachmentView } from \"../models/view/attachmentView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { PasswordHistoryView } from \"../models/view/passwordHistoryView\";\nimport { View } from \"../models/view/view\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    const userId = await this.stateService.getUserId();\n    if ((await this.getDecryptedCipherCache()) != null) {\n      if (\n        this.searchService != null &&\n        (this.searchService().indexedEntityId ?? userId) !== userId\n      ) {\n        await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n      }\n      return await this.getDecryptedCipherCache();\n    }\n\n    const decCiphers: CipherView[] = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<number>[] = [];\n    const ciphers = await this.getAll();\n    ciphers.forEach(async (cipher) => {\n      promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.getLocaleSortingFunction());\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : firstValueFrom(this.settingsService.settings$).then(\n            (settings: AccountSettingsSettings) => {\n              let matches: any[] = [];\n              settings.equivalentDomains.forEach((eqDomain: any) => {\n                if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                  matches = matches.concat(eqDomain);\n                }\n              });\n\n              if (!matches.length) {\n                matches.push(domain);\n              }\n\n              return matches;\n            }\n          );\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n    if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n      const decCiphers: CipherView[] = [];\n      const promises: any[] = [];\n      ciphers.data.forEach((r) => {\n        const data = new CipherData(r);\n        const cipher = new Cipher(data);\n        promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n      });\n      await Promise.all(promises);\n      decCiphers.sort(this.getLocaleSortingFunction());\n      return decCiphers;\n    } else {\n      return [];\n    }\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async saveWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.id == null) {\n      if (cipher.collectionIds != null) {\n        const request = new CipherCreateRequest(cipher);\n        response = await this.apiService.postCipherCreate(request);\n      } else {\n        const request = new CipherRequest(cipher);\n        response = await this.apiService.postCipher(request);\n      }\n      cipher.id = response.id;\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    await this.upsert(encCiphers.map((c) => c.toCipherData()));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(response, cipher.collectionIds);\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData();\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const encBuf = await EncArrayBuffer.fromResponse(attachmentResponse);\n    const decBuf = await this.cryptoService.decryptFromBytes(encBuf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ServerConfigResponse extends BaseResponse {\n  version: string;\n  gitHash: string;\n  server: ThirdPartyServerConfigResponse;\n  environment: EnvironmentServerConfigResponse;\n\n  constructor(response: any) {\n    super(response);\n\n    if (response == null) {\n      return;\n    }\n\n    this.version = this.getResponseProperty(\"Version\");\n    this.gitHash = this.getResponseProperty(\"GitHash\");\n    this.server = new ThirdPartyServerConfigResponse(this.getResponseProperty(\"Server\"));\n    this.environment = new EnvironmentServerConfigResponse(this.getResponseProperty(\"Environment\"));\n  }\n}\n\nexport class EnvironmentServerConfigResponse extends BaseResponse {\n  vault: string;\n  api: string;\n  identity: string;\n  notifications: string;\n  sso: string;\n\n  constructor(data: any = null) {\n    super(data);\n\n    if (data == null) {\n      return;\n    }\n\n    this.vault = this.getResponseProperty(\"Vault\");\n    this.api = this.getResponseProperty(\"Api\");\n    this.identity = this.getResponseProperty(\"Identity\");\n    this.notifications = this.getResponseProperty(\"Notifications\");\n    this.sso = this.getResponseProperty(\"Sso\");\n  }\n}\n\nexport class ThirdPartyServerConfigResponse extends BaseResponse {\n  name: string;\n  url: string;\n\n  constructor(data: any = null) {\n    super(data);\n\n    if (data == null) {\n      return;\n    }\n\n    this.name = this.getResponseProperty(\"Name\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import {\n  ServerConfigResponse,\n  ThirdPartyServerConfigResponse,\n  EnvironmentServerConfigResponse,\n} from \"../response/server-config-response\";\n\nexport class ServerConfigData {\n  version: string;\n  gitHash: string;\n  server?: ThirdPartyServerConfigData;\n  environment?: EnvironmentServerConfigData;\n  utcDate: string;\n\n  constructor(serverConfigReponse: ServerConfigResponse) {\n    this.version = serverConfigReponse?.version;\n    this.gitHash = serverConfigReponse?.gitHash;\n    this.server = serverConfigReponse?.server\n      ? new ThirdPartyServerConfigData(serverConfigReponse.server)\n      : null;\n    this.utcDate = new Date().toISOString();\n    this.environment = serverConfigReponse?.environment\n      ? new EnvironmentServerConfigData(serverConfigReponse.environment)\n      : null;\n  }\n}\n\nexport class ThirdPartyServerConfigData {\n  name: string;\n  url: string;\n\n  constructor(response: ThirdPartyServerConfigResponse) {\n    this.name = response.name;\n    this.url = response.url;\n  }\n}\n\nexport class EnvironmentServerConfigData {\n  vault: string;\n  api: string;\n  identity: string;\n  notifications: string;\n  sso: string;\n\n  constructor(response: EnvironmentServerConfigResponse) {\n    this.vault = response.vault;\n    this.api = response.api;\n    this.identity = response.identity;\n    this.notifications = response.notifications;\n    this.sso = response.sso;\n  }\n}\n","import {\n  ServerConfigData,\n  ThirdPartyServerConfigData,\n  EnvironmentServerConfigData,\n} from \"@bitwarden/common/models/data/server-config.data\";\n\nconst dayInMilliseconds = 24 * 3600 * 1000;\nconst eighteenHoursInMilliseconds = 18 * 3600 * 1000;\n\nexport class ServerConfig {\n  version: string;\n  gitHash: string;\n  server?: ThirdPartyServerConfigData;\n  environment?: EnvironmentServerConfigData;\n  utcDate: Date;\n\n  constructor(serverConfigData: ServerConfigData) {\n    this.version = serverConfigData.version;\n    this.gitHash = serverConfigData.gitHash;\n    this.server = serverConfigData.server;\n    this.utcDate = new Date(serverConfigData.utcDate);\n    this.environment = serverConfigData.environment;\n\n    if (this.server?.name == null && this.server?.url == null) {\n      this.server = null;\n    }\n  }\n\n  private getAgeInMilliseconds(): number {\n    return new Date().getTime() - this.utcDate?.getTime();\n  }\n\n  isValid(): boolean {\n    return this.getAgeInMilliseconds() <= dayInMilliseconds;\n  }\n\n  expiresSoon(): boolean {\n    return this.getAgeInMilliseconds() >= eighteenHoursInMilliseconds;\n  }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptedOrganizationKeyData } from \"../../models/data/encryptedOrganizationKeyData\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport abstract class BaseEncryptedOrganizationKey {\n  decrypt: (cryptoService: CryptoService) => Promise<SymmetricCryptoKey>;\n\n  static fromData(data: EncryptedOrganizationKeyData) {\n    switch (data.type) {\n      case \"organization\":\n        return new EncryptedOrganizationKey(data.key);\n\n      case \"provider\":\n        return new ProviderEncryptedOrganizationKey(data.key, data.providerId);\n\n      default:\n        return null;\n    }\n  }\n}\n\nexport class EncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const decValue = await cryptoService.rsaDecrypt(this.key);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"organization\",\n      key: this.key,\n    };\n  }\n}\n\nexport class ProviderEncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string, private providerId: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const providerKey = await cryptoService.getProviderKey(this.providerId);\n    const decValue = await cryptoService.decryptToBytes(new EncString(this.key), providerKey);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"provider\",\n      key: this.key,\n      providerId: this.providerId,\n    };\n  }\n}\n","import * as bigInt from \"big-integer\";\n\nimport { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { BaseEncryptedOrganizationKey } from \"../models/domain/encryptedOrganizationKey\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private encryptService: AbstractEncryptService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[] = [],\n    providerOrgs: ProfileProviderOrganizationResponse[] = []\n  ): Promise<void> {\n    const encOrgKeyData: { [orgId: string]: EncryptedOrganizationKeyData } = {};\n\n    orgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"organization\",\n        key: org.key,\n      };\n    });\n\n    providerOrgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"provider\",\n        providerId: org.providerId,\n        key: org.key,\n      };\n    });\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(encOrgKeyData);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const result: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeyData = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeyData == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId of Object.keys(encOrgKeyData)) {\n      if (result.has(orgId)) {\n        continue;\n      }\n\n      const encOrgKey = BaseEncryptedOrganizationKey.fromData(encOrgKeyData[orgId]);\n      const decOrgKey = await encOrgKey.decrypt(this);\n      result.set(orgId, decOrgKey);\n\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(result);\n    }\n\n    return result;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForUserEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encrypt\n   */\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.encrypt(plainValue, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encryptToBytes\n   */\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    key = await this.getKeyForUserEncryption(key);\n    return this.encryptService.encryptToBytes(plainValue, key);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForUserEncryption(key);\n    return this.encryptService.decryptToBytes(encString, keyForEnc);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToUtf8\n   */\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.decryptToUtf8(encString, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptFromBytes(encBuffer: EncArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuffer == null) {\n      throw new Error(\"No buffer provided for decryption.\");\n    }\n\n    key = await this.getKeyForUserEncryption(key);\n\n    return this.encryptService.decryptToBytes(encBuffer, key);\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // ---HELPERS---\n\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  async getKeyForUserEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    // Legacy support: encryption used to be done with the user key (derived from master password).\n    // Users who have not migrated will have a null encKey and must use the user key instead.\n    return await this.getKey();\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EEFLongWordList.length);\n      hashNumber = hashNumber.divide(EEFLongWordList.length);\n      phrase.push(EEFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","import { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/eventView\";\n\nexport class EventExport {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n  installationId: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n    this.installationId = event.installationId;\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport class BitwardenFileUploadService {\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { FolderResponse } from \"../response/folderResponse\";\n\nexport class FolderData {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse) {\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../keysRequest\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n}\n","import { NotificationType } from \"../../enums/notificationType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  identifier: string;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationApiKeyInformationResponse extends BaseResponse {\n  keyType: OrganizationApiKeyType;\n\n  constructor(response: any) {\n    super(response);\n    this.keyType = this.getResponseProperty(\"KeyType\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keysResponse\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { PlanResponse } from \"./planResponse\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { OrganizationResponse } from \"./organizationResponse\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscriptionResponse\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncString } from \"../models/domain/encString\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\n\nconst DefaultOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: any): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EEFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EEFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: any\n  ): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies: Policy[] =\n      this.policyService == null\n        ? null\n        : await this.policyService.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<any> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    await this.stateService.setDecryptedPasswordGenerationHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/providerData\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  private static registeredPipeline = false;\n\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private readonly immediateSearchLocales: string[] = [\"zh-CN\", \"zh-TW\", \"ja\", \"ko\", \"vi\"];\n  private readonly defaultSearchableMinLength: number = 2;\n  private searchableMinLength: number = this.defaultSearchableMinLength;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    this.i18nService.locale$.subscribe((locale) => {\n      if (this.immediateSearchLocales.indexOf(locale) !== -1) {\n        this.searchableMinLength = 1;\n      } else {\n        this.searchableMinLength = this.defaultSearchableMinLength;\n      }\n    });\n\n    // Currently have to ensure this is only done a single time. Lunr allows you to register a function\n    // multiple times but they will add a warning message to the console. The way they do that breaks when ran on a service worker.\n    if (!SearchService.registeredPipeline) {\n      SearchService.registeredPipeline = true;\n      //register lunr pipeline function\n      lunr.Pipeline.registerFunction(this.normalizeAccentsPipelineFunction, \"normalizeAccents\");\n    }\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    query = SearchService.normalizeSearchQuery(query);\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.pipeline.add(this.normalizeAccentsPipelineFunction);\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", {\n      boost: 10,\n    });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.info(\"Finished search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        c.login &&\n        c.login.hasUris &&\n        c.login.uris.some((loginUri) => loginUri?.uri?.toLowerCase().indexOf(query) > -1)\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLocaleLowerCase());\n    if (query === null) {\n      return sends;\n    }\n    const sendsMatched: SendView[] = [];\n    const lowPriorityMatched: SendView[] = [];\n    sends.forEach((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        sendsMatched.push(s);\n      } else if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        lowPriorityMatched.push(s);\n      } else if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      }\n    });\n    return sendsMatched.concat(lowPriorityMatched);\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n\n  private normalizeAccentsPipelineFunction(token: lunr.Token): any {\n    const searchableFields = [\"name\", \"login.username\", \"subtitle\", \"notes\"];\n    const fields = (token as any).metadata[\"fields\"];\n    const checkFields = fields.every((i: any) => searchableFields.includes(i));\n\n    if (checkFields) {\n      return SearchService.normalizeSearchQuery(token.toString());\n    }\n\n    return token;\n  }\n\n  // Remove accents/diacritics characters from text. This regex is equivalent to the Diacritic unicode property escape, i.e. it will match all diacritic characters.\n  static normalizeSearchQuery(query: string): string {\n    return query?.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n}\n","import { SendFileApi } from \"../api/sendFileApi\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/sendResponse\";\n\nimport { SendFileData } from \"./sendFileData\";\nimport { SendTextData } from \"./sendTextData\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/sendData\";\nimport { SendView } from \"../view/sendView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      [\"id\", \"accessId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    const cryptoService = Utils.getContainerService().getCryptoService();\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profileProviderResponse\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { Account } from \"./account\";\nimport { GlobalState } from \"./globalState\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { LocalData } from \"../models/data/localData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { ServerConfigData } from \"../models/data/server-config.data\";\nimport {\n  Account,\n  AccountData,\n  AccountSettings,\n  AccountSettingsSettings,\n} from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { SendView } from \"../models/view/sendView\";\n\nconst keys = {\n  state: \"state\",\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  accounts = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  private activeAccountSubject = new BehaviorSubject<string>(null);\n  activeAccount$ = this.activeAccountSubject.asObservable();\n\n  private activeAccountUnlockedSubject = new BehaviorSubject<boolean>(false);\n  activeAccountUnlocked$ = this.activeAccountUnlockedSubject.asObservable();\n\n  private hasBeenInited = false;\n  private isRecoveredSession = false;\n\n  private accountDiskCache = new Map<string, TAccount>();\n\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected memoryStorageService: AbstractStorageService,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {\n    // If the account gets changed, verify the new account is unlocked\n    this.activeAccountSubject\n      .pipe(\n        concatMap(async (userId) => {\n          if (userId == null && this.activeAccountUnlockedSubject.getValue() == false) {\n            return;\n          } else if (userId == null) {\n            this.activeAccountUnlockedSubject.next(false);\n          }\n\n          // FIXME: This should be refactored into AuthService or a similar service,\n          //  as checking for the existance of the crypto key is a low level\n          //  implementation detail.\n          this.activeAccountUnlockedSubject.next((await this.getCryptoMasterKey()) != null);\n        })\n      )\n      .subscribe();\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.state().then(async (state) => {\n      if (state == null) {\n        await this.setState(new State<TGlobalState, TAccount>(this.createGlobals()));\n      } else {\n        this.isRecoveredSession = true;\n      }\n    });\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    if (this.isRecoveredSession) {\n      return;\n    }\n\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts =\n        (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n      for (const i in state.authenticatedAccounts) {\n        if (i != null) {\n          await this.syncAccountFromDisk(state.authenticatedAccounts[i]);\n        }\n      }\n      const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n      if (storedActiveUser != null) {\n        state.activeUserId = storedActiveUser;\n      }\n      await this.pushAccounts();\n      this.activeAccountSubject.next(state.activeUserId);\n\n      return state;\n    });\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    await this.updateState(async (state) => {\n      state.accounts[userId] = this.createAccount();\n      const diskAccount = await this.getAccountFromDisk({ userId: userId });\n      state.accounts[userId].profile = diskAccount.profile;\n      return state;\n    });\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts.push(account.profile.userId);\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n      state.accounts[account.profile.userId] = account;\n      return state;\n    });\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccountSubject.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    await this.updateState(async (state) => {\n      state.activeUserId = userId;\n      await this.storageService.save(keys.activeUserId, userId);\n      this.activeAccountSubject.next(state.activeUserId);\n      return state;\n    });\n\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === (await this.state())?.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    return (\n      (await this.getHasPremiumPersonally(options)) ||\n      (await this.getHasPremiumFromOrganization(options))\n    );\n  }\n\n  async getHasPremiumPersonally(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.profile?.hasPremiumPersonally;\n  }\n\n  async setHasPremiumPersonally(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumPersonally = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getHasPremiumFromOrganization(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    if (account.profile?.hasPremiumFromOrganization) {\n      return true;\n    }\n\n    // TODO: older server versions won't send the hasPremiumFromOrganization flag, so we're keeping the old logic\n    // for backwards compatibility. It can be removed after everyone has upgraded.\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async setHasPremiumFromOrganization(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumFromOrganization = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototype(SymmetricCryptoKey, SymmetricCryptoKey.fromJSON)\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n\n    if (options.userId == this.activeAccountSubject.getValue()) {\n      const nextValue = value != null;\n\n      // Avoid emitting if we are already unlocked\n      if (this.activeAccountUnlockedSubject.getValue() != nextValue) {\n        this.activeAccountUnlockedSubject.next(nextValue);\n      }\n    }\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.autoKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  async getDecodedToken(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.tokens?.decodedToken;\n  }\n\n  async setDecodedToken(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.tokens.decodedToken = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(CipherView, CipherView.fromJSON)\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(CollectionView)\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototype(SymmetricCryptoKey, SymmetricCryptoKey.fromJSON)\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForMap(SymmetricCryptoKey, SymmetricCryptoKey.fromJSON)\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.organizationKeys?.decrypted;\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.organizationKeys.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototype(EncString)\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(Policy)\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    const privateKey = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.privateKey;\n    let result = privateKey?.decrypted;\n    if (result == null && privateKey?.decryptedSerialized != null) {\n      result = Utils.fromByteStringToArray(privateKey.decryptedSerialized);\n    }\n    return result;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.privateKey.decrypted = value;\n    account.keys.privateKey.decryptedSerialized =\n      value == null ? null : Utils.fromBufferToByteString(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForMap(SymmetricCryptoKey, SymmetricCryptoKey.fromJSON)\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.providerKeys?.decrypted;\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.providerKeys.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(SendView)\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.email = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableGravitars(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableGravitars ?? false\n    );\n  }\n\n  async setEnableGravitars(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableGravitars = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CipherData)\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CollectionData)\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(FolderData)\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<{ [orgId: string]: EncryptedOrganizationKeyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(PolicyData)\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(SendData)\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  @withPrototype(EnvironmentUrls)\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if ((await this.state())?.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(EventData)\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<{ [cipherId: string]: LocalData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n\n  async setLocalData(\n    value: { [cipherId: string]: LocalData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUsernameGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.usernameGenerationOptions;\n  }\n\n  async setUsernameGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.usernameGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getGeneratorOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.generatorOptions;\n  }\n\n  async setGeneratorOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.generatorOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(ProviderData)\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    const keys = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys;\n    let result = keys?.publicKey;\n    if (result == null && keys?.publicKeySerialized != null) {\n      result = Utils.fromByteStringToArray(keys.publicKeySerialized);\n    }\n    return result;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.publicKey = value;\n    account.keys.publicKeySerialized = value == null ? null : Utils.fromBufferToByteString(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getSettings(options?: StorageOptions): Promise<AccountSettingsSettings> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: AccountSettingsSettings, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async setServerConfig(value: ServerConfigData, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.serverConfig = value;\n    return await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getServerConfig(options: StorageOptions): Promise<ServerConfigData> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.serverConfig;\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = await this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected async getGlobalsFromMemory(): Promise<TGlobalState> {\n    return (await this.state()).globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected async saveGlobalsToMemory(globals: TGlobalState): Promise<void> {\n    await this.updateState(async (state) => {\n      state.globals = globals;\n      return state;\n    });\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = await this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async getAccountFromMemory(options: StorageOptions): Promise<TAccount> {\n    return await this.state().then(async (state) => {\n      if (state.accounts == null) {\n        return null;\n      }\n      return state.accounts[await this.getUserIdFromMemory(options)];\n    });\n  }\n\n  protected async getUserIdFromMemory(options: StorageOptions): Promise<string> {\n    return await this.state().then((state) => {\n      return options?.userId != null\n        ? state.accounts[options.userId]?.profile?.userId\n        : state.activeUserId;\n    });\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && (await this.state())?.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.get(options.userId);\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.set(options.userId, account);\n    }\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(options.userId);\n    }\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      await this.updateState((state) => {\n        return new Promise((resolve) => {\n          state.accounts[account.profile.userId] = account;\n          resolve(state);\n        });\n      });\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<AccountSettings>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    await this.state().then((state) => {\n      if (state.accounts == null || Object.keys(state.accounts).length < 1) {\n        this.accounts.next(null);\n        return;\n      }\n\n      this.accounts.next(state.accounts);\n    });\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected async defaultInMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Memory,\n      userId: (await this.state()).activeUserId,\n    };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: (await this.state())?.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected async removeAccountFromMemory(userId: string = null): Promise<void> {\n    await this.updateState(async (state) => {\n      userId = userId ?? state.activeUserId;\n      delete state.accounts[userId];\n\n      if (this.useAccountCache) {\n        this.accountDiskCache.delete(userId);\n      }\n\n      return state;\n    });\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in (await this.state())?.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        await this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected async clearDecryptedDataForActiveUser(): Promise<void> {\n    await this.updateState(async (state) => {\n      const userId = state?.activeUserId;\n      if (userId != null && state?.accounts[userId]?.data != null) {\n        state.accounts[userId].data = new AccountData();\n      }\n\n      return state;\n    });\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string): Promise<void> {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts = state.authenticatedAccounts.filter((id) => id !== userId);\n\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n\n      return state;\n    });\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    const accounts = (await this.state())?.accounts;\n    if (accounts == null || Object.keys(accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? await this.defaultInMemoryOptions()\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n\n  protected state(): Promise<State<TGlobalState, TAccount>> {\n    return this.memoryStorageService.get<State<TGlobalState, TAccount>>(keys.state);\n  }\n\n  private async setState(state: State<TGlobalState, TAccount>): Promise<void> {\n    await this.memoryStorageService.save(keys.state, state);\n  }\n\n  protected async updateState(\n    stateUpdater: (state: State<TGlobalState, TAccount>) => Promise<State<TGlobalState, TAccount>>\n  ) {\n    await this.state().then(async (state) => {\n      const updatedState = await stateUpdater(state);\n      if (updatedState == null) {\n        throw new Error(\"Attempted to update state to null value\");\n      }\n\n      await this.setState(updatedState);\n    });\n  }\n}\n\nexport function withPrototype<T>(\n  constructor: new (...args: any[]) => T,\n  converter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<T> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          return result == null ||\n            result.constructor.name === constructor.prototype.constructor.name\n            ? converter(result as T)\n            : converter(\n                Object.create(constructor.prototype, Object.getOwnPropertyDescriptors(result)) as T\n              );\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForArrayMembers<T>(\n  memberConstructor: new (...args: any[]) => T,\n  memberConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T[]> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<any[]> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else if (!(result instanceof Array)) {\n            throw new Error(\n              `Attempted to retrieve non array type from state as an array for method ${String(\n                propertyKey\n              )}`\n            );\n          } else {\n            return result.map((r) => {\n              return r == null ||\n                r.constructor.name === memberConstructor.prototype.constructor.name\n                ? memberConverter(r)\n                : memberConverter(\n                    Object.create(memberConstructor.prototype, Object.getOwnPropertyDescriptors(r))\n                  );\n            });\n          }\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForObjectValues<T>(\n  valuesConstructor: new (...args: any[]) => T,\n  valuesConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<{ [key: string]: T }> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<{ [key: string]: T }> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else {\n            for (const [key, val] of Object.entries(result)) {\n              result[key] =\n                val == null || val.constructor.name === valuesConstructor.prototype.constructor.name\n                  ? valuesConverter(val)\n                  : valuesConverter(\n                      Object.create(\n                        valuesConstructor.prototype,\n                        Object.getOwnPropertyDescriptors(val)\n                      )\n                    );\n            }\n\n            return result as { [key: string]: T };\n          }\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForMap<T>(\n  valuesConstructor: new (...args: any[]) => T,\n  valuesConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<Map<string, T>> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<any> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else if (result instanceof Map) {\n            return result;\n          } else {\n            for (const key in Object.keys(result)) {\n              result[key] =\n                result[key] == null ||\n                result[key].constructor.name === valuesConstructor.prototype.constructor.name\n                  ? valuesConverter(result[key])\n                  : valuesConverter(\n                      Object.create(\n                        valuesConstructor.prototype,\n                        Object.getOwnPropertyDescriptors(result[key])\n                      )\n                    );\n            }\n            return new Map<string, T>(Object.entries(result));\n          }\n        });\n      },\n    };\n  };\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { Utils } from \"../misc/utils\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    const storedToken = await this.stateService.getDecodedToken();\n    if (token === null && storedToken != null) {\n      return storedToken;\n    }\n\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountSettings, AccountSettingsSettings } from \"../models/domain/account\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableGravatars: \"enableGravatars\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n        case StateVersion.Four: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom4To5(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Five);\n          break;\n        }\n        case StateVersion.Five: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom5To6(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Six);\n          break;\n        }\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      enableGravitars:\n        (await this.get<boolean>(v1Keys.enableGravatars)) ??\n        defaultAccount.settings.enableGravitars,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      },\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings:\n        userId == null\n          ? null\n          : await this.get<AccountSettingsSettings>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateAccountFrom4To5(account: TAccount): Promise<TAccount> {\n    const encryptedOrgKeys = account.keys?.organizationKeys?.encrypted;\n    if (encryptedOrgKeys != null) {\n      for (const [orgId, encKey] of Object.entries(encryptedOrgKeys)) {\n        encryptedOrgKeys[orgId] = {\n          type: \"organization\",\n          key: encKey as unknown as string, // Account v4 does not reflect the current account model so we have to cast\n        };\n      }\n    }\n\n    return account;\n  }\n\n  protected async migrateAccountFrom5To6(account: TAccount): Promise<TAccount> {\n    delete (account as any).keys?.legacyEtmKey;\n    return account;\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n\n  protected async setCurrentStateVersion(newVersion: StateVersion): Promise<void> {\n    const globals = await this.getGlobals();\n    globals.stateVersion = newVersion;\n    await this.set(keys.global, globals);\n  }\n\n  protected async getAuthenticatedAccounts(): Promise<TAccount[]> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    return Promise.all(authenticatedUserIds.map((id) => this.get<TAccount>(id)));\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { ProfileOrganizationResponse } from \"../response/profileOrganizationResponse\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useScim = response.useScim;\n    this.useResetPassword = response.useResetPassword;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = response.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = response.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = response.familySponsorshipToDelete;\n  }\n}\n","import { Subject } from \"rxjs\";\n\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CollectionService } from \"../../abstractions/collection.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { FolderApiServiceAbstraction } from \"../../abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { OrganizationService } from \"../../abstractions/organization.service\";\nimport { InternalPolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { ProviderService } from \"../../abstractions/provider.service\";\nimport { SendService } from \"../../abstractions/send.service\";\nimport { SettingsService } from \"../../abstractions/settings.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../../abstractions/sync/sync.service.abstraction\";\nimport { sequentialize } from \"../../misc/sequentialize\";\nimport { CipherData } from \"../../models/data/cipherData\";\nimport { CollectionData } from \"../../models/data/collectionData\";\nimport { FolderData } from \"../../models/data/folderData\";\nimport { OrganizationData } from \"../../models/data/organizationData\";\nimport { PolicyData } from \"../../models/data/policyData\";\nimport { ProviderData } from \"../../models/data/providerData\";\nimport { SendData } from \"../../models/data/sendData\";\nimport { CipherResponse } from \"../../models/response/cipherResponse\";\nimport { CollectionDetailsResponse } from \"../../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../../models/response/domainsResponse\";\nimport { FolderResponse } from \"../../models/response/folderResponse\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../../models/response/notificationResponse\";\nimport { PolicyResponse } from \"../../models/response/policyResponse\";\nimport { ProfileResponse } from \"../../models/response/profileResponse\";\nimport { SendResponse } from \"../../models/response/sendResponse\";\nimport { SyncEventArgs } from \"../../types/syncEventArgs\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  private _sync = new Subject<SyncEventArgs>();\n\n  sync$ = this._sync.asObservable();\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: InternalFolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: InternalPolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    private folderApiService: FolderApiServiceAbstraction,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  @sequentialize(() => \"fullSync\")\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(response.ciphers);\n      await this.syncSends(response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.folderApiService.get(notification.id);\n          if (remoteFolder != null) {\n            await this.folderService.upsert(new FolderData(remoteFolder));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getFullCipherDetails(notification.id);\n          if (remoteCipher != null) {\n            await this.cipherService.upsert(new CipherData(remoteCipher));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            await this.sendService.upsert(new SendData(remoteSend));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n    this._sync.next({ status: \"Started\" });\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    this._sync.next({ status: successfully ? \"SuccessfullyCompleted\" : \"UnsuccessfullyCompleted\" });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setHasPremiumPersonally(response.premiumPersonally);\n    await this.stateService.setHasPremiumFromOrganization(response.premiumFromOrganization);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.save(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class AnonAddyForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    if (options.anonaddy?.domain == null || options.anonaddy.domain === \"\") {\n      throw \"Invalid AnonAddy domain.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://app.anonaddy.com/api/v1/aliases\";\n    requestInit.body = JSON.stringify({\n      domain: options.anonaddy.domain,\n      description:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.data?.email;\n    }\n    if (response.status === 401) {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    throw \"Unknown AnonAddy error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class DuckDuckGoForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://quack.duckduckgo.com/api/email/addresses\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      if (json.address) {\n        return `${json.address}@duck.com`;\n      }\n    } else if (response.status === 401) {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    throw \"Unknown DuckDuckGo error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class FastmailForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Fastmail API token.\";\n    }\n\n    const accountId = await this.getAccountId(apiService, options);\n    if (accountId == null || accountId === \"\") {\n      throw \"Unable to obtain Fastmail masked email account ID.\";\n    }\n\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://api.fastmail.com/jmap/api/\";\n    requestInit.body = JSON.stringify({\n      using: [\"https://www.fastmail.com/dev/maskedemail\", \"urn:ietf:params:jmap:core\"],\n      methodCalls: [\n        [\n          \"MaskedEmail/set\",\n          {\n            accountId: accountId,\n            create: {\n              \"new-masked-email\": {\n                state: \"enabled\",\n                description: \"\",\n                url: options.website,\n                emailPrefix: options.fastmail.prefix,\n              },\n            },\n          },\n          \"0\",\n        ],\n      ],\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (\n        json.methodResponses != null &&\n        json.methodResponses.length > 0 &&\n        json.methodResponses[0].length > 0\n      ) {\n        if (json.methodResponses[0][0] === \"MaskedEmail/set\") {\n          if (json.methodResponses[0][1]?.created?.[\"new-masked-email\"] != null) {\n            return json.methodResponses[0][1]?.created?.[\"new-masked-email\"]?.email;\n          }\n          if (json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"] != null) {\n            throw (\n              \"Fastmail error: \" +\n              json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"]?.description\n            );\n          }\n        } else if (json.methodResponses[0][0] === \"error\") {\n          throw \"Fastmail error: \" + json.methodResponses[0][1]?.description;\n        }\n      }\n    }\n    if (response.status === 401 || response.status === 403) {\n      throw \"Invalid Fastmail API token.\";\n    }\n    throw \"Unknown Fastmail error occurred.\";\n  }\n\n  private async getAccountId(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      method: \"GET\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n      }),\n    };\n    const url = \"https://api.fastmail.com/.well-known/jmap\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (json.primaryAccounts != null) {\n        return json.primaryAccounts[\"https://www.fastmail.com/dev/maskedemail\"];\n      }\n    }\n    return null;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class FirefoxRelayForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Token \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://relay.firefox.com/api/v1/relayaddresses/\";\n    requestInit.body = JSON.stringify({\n      enabled: true,\n      generated_for: options.website,\n      description:\n        (options.website != null ? options.website + \" - \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.full_address;\n    }\n    if (response.status === 401) {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    throw \"Unknown Firefox Relay error occurred.\";\n  }\n}\n","export class ForwarderOptions {\n  apiKey: string;\n  website: string;\n  fastmail = new FastmailForwarderOptions();\n  anonaddy = new AnonAddyForwarderOptions();\n}\n\nexport class FastmailForwarderOptions {\n  prefix: string;\n}\n\nexport class AnonAddyForwarderOptions {\n  domain: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class SimpleLoginForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authentication: options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    let url = \"https://app.simplelogin.io/api/alias/random/new\";\n    if (options.website != null) {\n      url += \"?hostname=\" + options.website;\n    }\n    requestInit.body = JSON.stringify({\n      note:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json.alias;\n    }\n    if (response.status === 401) {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    try {\n      const json = await response.json();\n      if (json?.error != null) {\n        throw \"SimpleLogin error:\" + json.error;\n      }\n    } catch {\n      // Do nothing...\n    }\n    throw \"Unknown SimpleLogin error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { UsernameGenerationService as BaseUsernameGenerationService } from \"../abstractions/usernameGeneration.service\";\nimport { AnonAddyForwarder } from \"../emailForwarders/anonAddyForwarder\";\nimport { DuckDuckGoForwarder } from \"../emailForwarders/duckDuckGoForwarder\";\nimport { FastmailForwarder } from \"../emailForwarders/fastmailForwarder\";\nimport { FirefoxRelayForwarder } from \"../emailForwarders/firefoxRelayForwarder\";\nimport { Forwarder } from \"../emailForwarders/forwarder\";\nimport { ForwarderOptions } from \"../emailForwarders/forwarderOptions\";\nimport { SimpleLoginForwarder } from \"../emailForwarders/simpleLoginForwarder\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\n\nconst DefaultOptions = {\n  type: \"word\",\n  wordCapitalize: true,\n  wordIncludeNumber: true,\n  subaddressType: \"random\",\n  catchallType: \"random\",\n  forwardedService: \"simplelogin\",\n  forwardedAnonAddyDomain: \"anonaddy.me\",\n};\n\nexport class UsernameGenerationService implements BaseUsernameGenerationService {\n  constructor(\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  generateUsername(options: any): Promise<string> {\n    if (options.type === \"catchall\") {\n      return this.generateCatchall(options);\n    } else if (options.type === \"subaddress\") {\n      return this.generateSubaddress(options);\n    } else if (options.type === \"forwarded\") {\n      return this.generateForwarded(options);\n    } else {\n      return this.generateWord(options);\n    }\n  }\n\n  async generateWord(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.wordCapitalize == null) {\n      o.wordCapitalize = true;\n    }\n    if (o.wordIncludeNumber == null) {\n      o.wordIncludeNumber = true;\n    }\n\n    const wordIndex = await this.cryptoService.randomNumber(0, EEFLongWordList.length - 1);\n    let word = EEFLongWordList[wordIndex];\n    if (o.wordCapitalize) {\n      word = word.charAt(0).toUpperCase() + word.slice(1);\n    }\n    if (o.wordIncludeNumber) {\n      const num = await this.cryptoService.randomNumber(1, 9999);\n      word = word + this.zeroPad(num.toString(), 4);\n    }\n    return word;\n  }\n\n  async generateSubaddress(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    const subaddressEmail = o.subaddressEmail;\n    if (subaddressEmail == null || subaddressEmail.length < 3) {\n      return o.subaddressEmail;\n    }\n    const atIndex = subaddressEmail.indexOf(\"@\");\n    if (atIndex < 1 || atIndex >= subaddressEmail.length - 1) {\n      return subaddressEmail;\n    }\n    if (o.subaddressType == null) {\n      o.subaddressType = \"random\";\n    }\n\n    const emailBeginning = subaddressEmail.substr(0, atIndex);\n    const emailEnding = subaddressEmail.substr(atIndex + 1, subaddressEmail.length);\n\n    let subaddressString = \"\";\n    if (o.subaddressType === \"random\") {\n      subaddressString = await this.randomString(8);\n    } else if (o.subaddressType === \"website-name\") {\n      subaddressString = o.website;\n    }\n    return emailBeginning + \"+\" + subaddressString + \"@\" + emailEnding;\n  }\n\n  async generateCatchall(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.catchallDomain == null || o.catchallDomain === \"\") {\n      return null;\n    }\n    if (o.catchallType == null) {\n      o.catchallType = \"random\";\n    }\n\n    let startString = \"\";\n    if (o.catchallType === \"random\") {\n      startString = await this.randomString(8);\n    } else if (o.catchallType === \"website-name\") {\n      startString = o.website;\n    }\n    return startString + \"@\" + o.catchallDomain;\n  }\n\n  async generateForwarded(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.forwardedService == null) {\n      return null;\n    }\n\n    let forwarder: Forwarder = null;\n    const forwarderOptions = new ForwarderOptions();\n    forwarderOptions.website = o.website;\n    if (o.forwardedService === \"simplelogin\") {\n      forwarder = new SimpleLoginForwarder();\n      forwarderOptions.apiKey = o.forwardedSimpleLoginApiKey;\n    } else if (o.forwardedService === \"anonaddy\") {\n      forwarder = new AnonAddyForwarder();\n      forwarderOptions.apiKey = o.forwardedAnonAddyApiToken;\n      forwarderOptions.anonaddy.domain = o.forwardedAnonAddyDomain;\n    } else if (o.forwardedService === \"firefoxrelay\") {\n      forwarder = new FirefoxRelayForwarder();\n      forwarderOptions.apiKey = o.forwardedFirefoxApiToken;\n    } else if (o.forwardedService === \"fastmail\") {\n      forwarder = new FastmailForwarder();\n      forwarderOptions.apiKey = o.forwardedFastmailApiToken;\n    } else if (o.forwardedService === \"duckduckgo\") {\n      forwarder = new DuckDuckGoForwarder();\n      forwarderOptions.apiKey = o.forwardedDuckDuckGoToken;\n    }\n\n    if (forwarder == null) {\n      return null;\n    }\n\n    return forwarder.generate(this.apiService, forwarderOptions);\n  }\n\n  async getOptions(): Promise<any> {\n    let options = await this.stateService.getUsernameGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setUsernameGenerationOptions(options);\n    return options;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setUsernameGenerationOptions(options);\n  }\n\n  private async randomString(length: number) {\n    let str = \"\";\n    const charSet = \"abcdefghijklmnopqrstuvwxyz1234567890\";\n    for (let i = 0; i < length; i++) {\n      const randomCharIndex = await this.cryptoService.randomNumber(0, charSet.length - 1);\n      str += charSet.charAt(randomCharIndex);\n    }\n    return str;\n  }\n\n  // ref: https://stackoverflow.com/a/10073788\n  private zeroPad(number: string, width: number) {\n    return number.length >= width\n      ? number\n      : new Array(width - number.length + 1).join(\"0\") + number;\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"@bitwarden/common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import {\n  BroadcasterService as BroadcasterServiceAbstraction,\n  MessageBase,\n} from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: MessageBase) => void> = new Map<\n    string,\n    (message: MessageBase) => void\n  >();\n\n  send(message: MessageBase, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: MessageBase) => void) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationComponent for any other situation where you need to verify the user's identity.\n */\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\nimport { ModalService } from \"./modal.service\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationService for any other situation where you need to verify the user's identity.\n */\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { ThemingService } from \"@bitwarden/angular/services/theming/theming.service\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { AbstractEncryptService } from \"@bitwarden/common/abstractions/abstractEncrypt.service\";\nimport { AccountApiService as AccountApiServiceAbstraction } from \"@bitwarden/common/abstractions/account/account-api.service.abstraction\";\nimport { AccountService as AccountServiceAbstraction } from \"@bitwarden/common/abstractions/account/account.service.abstraction\";\nimport { ApiService as ApiServiceAbstraction } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService as CipherServiceAbstraction } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"@bitwarden/common/abstractions/collection.service\";\nimport { ConfigApiServiceAbstraction } from \"@bitwarden/common/abstractions/config/config-api.service.abstraction\";\nimport { ConfigServiceAbstraction } from \"@bitwarden/common/abstractions/config/config.service.abstraction\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport {\n  FolderService as FolderServiceAbstraction,\n  InternalFolderService,\n} from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FormValidationErrorsService as FormValidationErrorsServiceAbstraction } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport {\n  PolicyService as PolicyServiceAbstraction,\n  InternalPolicyService,\n} from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { ProviderService as ProviderServiceAbstraction } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService as TokenServiceAbstraction } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationApiServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { Account } from \"@bitwarden/common/models/domain/account\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/globalState\";\nimport { AccountApiService } from \"@bitwarden/common/services/account/account-api.service\";\nimport { AccountService } from \"@bitwarden/common/services/account/account.service\";\nimport { ApiService } from \"@bitwarden/common/services/api.service\";\nimport { AppIdService } from \"@bitwarden/common/services/appId.service\";\nimport { AuditService } from \"@bitwarden/common/services/audit.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { CipherService } from \"@bitwarden/common/services/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/services/collection.service\";\nimport { ConfigApiService } from \"@bitwarden/common/services/config/config-api.service\";\nimport { ConfigService } from \"@bitwarden/common/services/config/config.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { CryptoService } from \"@bitwarden/common/services/crypto.service\";\nimport { EncryptService } from \"@bitwarden/common/services/encrypt.service\";\nimport { EnvironmentService } from \"@bitwarden/common/services/environment.service\";\nimport { EventService } from \"@bitwarden/common/services/event.service\";\nimport { ExportService } from \"@bitwarden/common/services/export.service\";\nimport { FileUploadService } from \"@bitwarden/common/services/fileUpload.service\";\nimport { FolderApiService } from \"@bitwarden/common/services/folder/folder-api.service\";\nimport { FolderService } from \"@bitwarden/common/services/folder/folder.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/services/formValidationErrors.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/services/keyConnector.service\";\nimport { NotificationsService } from \"@bitwarden/common/services/notifications.service\";\nimport { OrganizationService } from \"@bitwarden/common/services/organization.service\";\nimport { OrganizationApiService } from \"@bitwarden/common/services/organization/organization-api.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/services/passwordGeneration.service\";\nimport { PolicyApiService } from \"@bitwarden/common/services/policy/policy-api.service\";\nimport { PolicyService } from \"@bitwarden/common/services/policy/policy.service\";\nimport { ProviderService } from \"@bitwarden/common/services/provider.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\nimport { SendService } from \"@bitwarden/common/services/send.service\";\nimport { SettingsService } from \"@bitwarden/common/services/settings.service\";\nimport { StateService } from \"@bitwarden/common/services/state.service\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\nimport { SyncService } from \"@bitwarden/common/services/sync/sync.service\";\nimport { TokenService } from \"@bitwarden/common/services/token.service\";\nimport { TotpService } from \"@bitwarden/common/services/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/services/twoFactor.service\";\nimport { UserVerificationApiService } from \"@bitwarden/common/services/userVerification/userVerification-api.service\";\nimport { UserVerificationService } from \"@bitwarden/common/services/userVerification/userVerification.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/services/usernameGeneration.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeoutSettings.service\";\nimport { WebCryptoFunctionService } from \"@bitwarden/common/services/webCryptoFunction.service\";\n\nimport { AuthGuard } from \"../guards/auth.guard\";\nimport { LockGuard } from \"../guards/lock.guard\";\nimport { UnauthGuard } from \"../guards/unauth.guard\";\n\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport {\n  WINDOW,\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n  LOGOUT_CALLBACK,\n  LOCKED_CALLBACK,\n  LOCALES_DIRECTORY,\n  SYSTEM_LANGUAGE,\n  LOG_MAC_FAILURES,\n} from \"./injection-tokens\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./passwordReprompt.service\";\nimport { ValidationService } from \"./validation.service\";\n\n@NgModule({\n  declarations: [],\n  providers: [\n    ValidationService,\n    AuthGuard,\n    UnauthGuard,\n    LockGuard,\n    ModalService,\n    { provide: WINDOW, useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    {\n      provide: LOCALES_DIRECTORY,\n      useValue: \"./locales\",\n    },\n    {\n      provide: SYSTEM_LANGUAGE,\n      useFactory: (window: Window) => window.navigator.language,\n      deps: [WINDOW],\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: true,\n    },\n    {\n      provide: LOGOUT_CALLBACK,\n      useFactory:\n        (messagingService: MessagingServiceAbstraction) => (expired: boolean, userId?: string) =>\n          messagingService.send(\"logout\", { expired: expired, userId: userId }),\n      deps: [MessagingServiceAbstraction],\n    },\n    {\n      provide: LOCKED_CALLBACK,\n      useValue: null,\n    },\n    {\n      provide: LOG_MAC_FAILURES,\n      useValue: true,\n    },\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [AbstractStorageService],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        I18nServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: InternalFolderService,\n      useExisting: FolderServiceAbstraction,\n    },\n    {\n      provide: FolderApiServiceAbstraction,\n      useClass: FolderApiService,\n      deps: [FolderServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AccountApiServiceAbstraction,\n      useClass: AccountApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: AccountServiceAbstraction,\n      useClass: AccountService,\n      deps: [\n        AccountApiServiceAbstraction,\n        UserVerificationServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n      ],\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        AbstractEncryptService,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: UsernameGenerationServiceAbstraction,\n      useClass: UsernameGenerationService,\n      deps: [CryptoServiceAbstraction, StateServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useClass: ApiService,\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        AppIdServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useClass: SyncService,\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n        ProviderServiceAbstraction,\n        FolderApiServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutSettingsServiceAbstraction,\n      useClass: VaultTimeoutSettingsService,\n      deps: [\n        CryptoServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useClass: VaultTimeoutService,\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n        VaultTimeoutSettingsServiceAbstraction,\n        LOCKED_CALLBACK,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useClass: StateService,\n      deps: [\n        AbstractStorageService,\n        SECURE_STORAGE,\n        MEMORY_STORAGE,\n        LogService,\n        StateMigrationServiceAbstraction,\n        STATE_FACTORY,\n        STATE_SERVICE_USE_CACHE,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useClass: NotificationsService,\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        LOGOUT_CALLBACK,\n        LogService,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [WINDOW],\n    },\n    {\n      provide: AbstractEncryptService,\n      useClass: EncryptService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, LOG_MAC_FAILURES],\n    },\n    {\n      provide: EventServiceAbstraction,\n      useClass: EventService,\n      deps: [\n        ApiServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction],\n    },\n    {\n      provide: InternalPolicyService,\n      useExisting: PolicyServiceAbstraction,\n    },\n    {\n      provide: PolicyApiServiceAbstraction,\n      useClass: PolicyApiService,\n      deps: [\n        PolicyServiceAbstraction,\n        ApiServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        UserVerificationApiServiceAbstraction,\n      ],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TwoFactorServiceAbstraction,\n      useClass: TwoFactorService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: AbstractThemingService,\n      useClass: ThemingService,\n    },\n    {\n      provide: FormValidationErrorsServiceAbstraction,\n      useClass: FormValidationErrorsService,\n    },\n    {\n      provide: UserVerificationApiServiceAbstraction,\n      useClass: UserVerificationApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: OrganizationApiServiceAbstraction,\n      useClass: OrganizationApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: ConfigServiceAbstraction,\n      useClass: ConfigService,\n      deps: [StateServiceAbstraction, ConfigApiServiceAbstraction],\n    },\n    {\n      provide: ConfigApiServiceAbstraction,\n      useClass: ConfigApiService,\n      deps: [ApiServiceAbstraction],\n    },\n  ],\n})\nexport class JslibServicesModule {}\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: AbstractStorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/twoFactor.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthenticationType } from \"../enums/authenticationType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { ApiLogInStrategy } from \"../misc/logInStrategies/apiLogin.strategy\";\nimport { PasswordLogInStrategy } from \"../misc/logInStrategies/passwordLogin.strategy\";\nimport { SsoLogInStrategy } from \"../misc/logInStrategies/ssoLogin.strategy\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy ? this.logInStrategy.email : null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  private logInStrategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n  private sessionTimeout: any;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService\n  ) {}\n\n  async logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n\n    if (credentials.type === AuthenticationType.Password) {\n      strategy = new PasswordLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this\n      );\n    } else if (credentials.type === AuthenticationType.Sso) {\n      strategy = new SsoLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.keyConnectorService\n      );\n    } else if (credentials.type === AuthenticationType.Api) {\n      strategy = new ApiLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.environmentService,\n        this.keyConnectorService\n      );\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithApiKey(): boolean {\n    return this.logInStrategy instanceof ApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  async getAuthStatus(userId?: string): Promise<AuthenticationStatus> {\n    const isAuthenticated = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!isAuthenticated) {\n      return AuthenticationStatus.LoggedOut;\n    }\n\n    // Keys aren't stored for a device that is locked or logged out\n    // Make sure we're logged in before checking this, otherwise we could mix up those states\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    const hasKeyInMemory = await this.cryptoService.hasKeyInMemory(userId);\n    if (!hasKeyInMemory) {\n      return AuthenticationStatus.Locked;\n    }\n\n    return AuthenticationStatus.Unlocked;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  private saveState(strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { InternalFolderService as InternalFolderServiceAbstraction } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { CipherData } from \"../../models/data/cipherData\";\nimport { FolderData } from \"../../models/data/folderData\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { FolderView } from \"../../models/view/folderView\";\n\nexport class FolderService implements InternalFolderServiceAbstraction {\n  protected _folders: BehaviorSubject<Folder[]> = new BehaviorSubject([]);\n  protected _folderViews: BehaviorSubject<FolderView[]> = new BehaviorSubject([]);\n\n  folders$ = this._folders.asObservable();\n  folderViews$ = this._folderViews.asObservable();\n\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._folders.next([]);\n            this._folderViews.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getEncryptedFolders();\n\n          await this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async clearCache(): Promise<void> {\n    this._folderViews.next([]);\n  }\n\n  // TODO: This should be moved to EncryptService or something\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = this._folders.getValue();\n\n    return folders.find((folder) => folder.id === id);\n  }\n\n  /**\n   * @deprecated Only use in CLI!\n   */\n  async getAllDecryptedFromState(): Promise<FolderView[]> {\n    const data = await this.stateService.getEncryptedFolders();\n    const folders = Object.values(data || {}).map((f) => new Folder(f));\n\n    return this.decryptFolders(folders);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<void> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<void> {\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._folders.next([]);\n      this._folderViews.next([]);\n    }\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  private async updateObservables(foldersMap: { [id: string]: FolderData }) {\n    const folders = Object.values(foldersMap || {}).map((f) => new Folder(f));\n\n    this._folders.next(folders);\n\n    if (await this.cryptoService.hasKey()) {\n      this._folderViews.next(await this.decryptFolders(folders));\n    }\n  }\n\n  private async decryptFolders(folders: Folder[]) {\n    const decryptFolderPromises = folders.map((f) => f.decrypt());\n    const decryptedFolders = await Promise.all(decryptFolderPromises);\n\n    decryptedFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decryptedFolders.push(noneFolder);\n\n    return decryptedFolders;\n  }\n}\n","import { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FolderData } from \"@bitwarden/common/models/data/folderData\";\nimport { Folder } from \"@bitwarden/common/models/domain/folder\";\nimport { FolderRequest } from \"@bitwarden/common/models/request/folderRequest\";\nimport { FolderResponse } from \"@bitwarden/common/models/response/folderResponse\";\n\nexport class FolderApiService implements FolderApiServiceAbstraction {\n  constructor(private folderService: InternalFolderService, private apiService: ApiService) {}\n\n  async save(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.putFolder(folder.id, request);\n    }\n\n    const data = new FolderData(response);\n    await this.folderService.upsert(data);\n  }\n\n  async delete(id: string): Promise<any> {\n    await this.deleteFolder(id);\n    await this.folderService.delete(id);\n  }\n\n  async get(id: string): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  private async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  private deleteFolder(id: string): Promise<any> {\n    return this.apiService.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n}\n","import { AccountApiService as AccountApiServiceAbstraction } from \"@bitwarden/common/abstractions/account/account-api.service.abstraction\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\n\nexport class AccountApiService implements AccountApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  deleteAccount(request: SecretVerificationRequest): Promise<void> {\n    return this.apiService.send(\"DELETE\", \"/accounts\", request, true, false);\n  }\n}\n","import { AccountApiService } from \"@bitwarden/common/abstractions/account/account-api.service.abstraction\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\n\nimport { AccountService as AccountServiceAbstraction } from \"../../abstractions/account/account.service.abstraction\";\nimport { Verification } from \"../../types/verification\";\n\nexport class AccountService implements AccountServiceAbstraction {\n  constructor(\n    private accountApiService: AccountApiService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async delete(verification: Verification): Promise<void> {\n    try {\n      const verificationRequest = await this.userVerificationService.buildRequest(verification);\n      await this.accountApiService.deleteAccount(verificationRequest);\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","import { concatMap, Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  protected baseUrl: string;\n  protected webVaultUrl: string;\n  protected apiUrl: string;\n  protected identityUrl: string;\n  protected iconsUrl: string;\n  protected notificationsUrl: string;\n  protected eventsUrl: string;\n  private keyConnectorUrl: string;\n  private scimUrl: string = null;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount$\n      .pipe(\n        concatMap(async () => {\n          await this.setUrlsFromStorage();\n        })\n      )\n      .subscribe();\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  getScimUrl() {\n    if (this.scimUrl != null) {\n      return this.scimUrl + \"/v2\";\n    }\n\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://scim.bitwarden.com/v2\"\n      : this.getWebVaultUrl() + \"/scim/v2\";\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    // scimUrl is not saved to storage\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    // scimUrl cannot be cleared\n    urls.scim = this.formatUrl(urls.scim) ?? this.scimUrl;\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n      // scimUrl is not saved to storage\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    this.scimUrl = urls.scim;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n      scim: this.scimUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n\n  isCloud(): boolean {\n    return [\"https://api.bitwarden.com\", \"https://vault.bitwarden.com/api\"].includes(\n      this.getApiUrl()\n    );\n  }\n}\n","import { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { Utils } from \"../misc/utils\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { DeviceRequest } from \"../models/request/deviceRequest\";\nimport { DeviceVerificationRequest } from \"../models/request/deviceVerificationRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationConnectionRequest } from \"../models/request/organizationConnectionRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingHistoryResponse } from \"../models/response/billingHistoryResponse\";\nimport { BillingPaymentResponse } from \"../models/response/billingPaymentResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DeviceVerificationResponse } from \"../models/response/deviceVerificationResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organizationConnectionResponse\";\nimport { OrganizationExportResponse } from \"../models/response/organizationExportResponse\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organizationSponsorshipSyncStatusResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SsoPreValidateResponse } from \"../models/response/ssoPreValidateResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  TwoFactorWebAuthnResponse,\n  ChallengeResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport class ApiService implements ApiServiceAbstraction {\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private appIdService: AppIdService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof ApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  postRegister(request: RegisterRequest): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      false,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<void> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Account Billing APIs\n\n  async getUserBillingHistory(): Promise<BillingHistoryResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/history\", null, true, true);\n    return new BillingHistoryResponse(r);\n  }\n\n  async getUserBillingPayment(): Promise<BillingPaymentResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/payment-method\", null, true, true);\n    return new BillingPaymentResponse(r);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getFullCipherDetails(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/details\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Organization User APIs\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getOrganizationUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<void> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  revokeOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/revoke\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async revokeManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/revoke\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  restoreOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/restore\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async restoreManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/restore\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, false, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  async getDeviceVerificationSettings(): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/two-factor/get-device-verification-settings\",\n      null,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async putDeviceVerificationSettings(\n    request: DeviceVerificationRequest\n  ): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/two-factor/device-verification-settings\",\n      request,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getCloudCommunicationsEnabled(): Promise<boolean> {\n    const r = await this.send(\"GET\", \"/organizations/connections/enabled\", null, true, true);\n    return r as boolean;\n  }\n\n  async getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"GET\", `/organizations/connections/${id}/${type}`, null, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"POST\", \"/organizations/connections/\", request, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId?: string\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/connections/\" + organizationConnectionId,\n      request,\n      true,\n      true\n    );\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async deleteOrganizationConnection(id: string): Promise<void> {\n    return this.send(\"DELETE\", \"/organizations/connections/\" + id, null, true, false);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getOrganizationExport(organizationId: string): Promise<OrganizationExportResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/export\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationExportResponse(r);\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersion()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<SsoPreValidateResponse> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      const body = await response.json();\n      return new SsoPreValidateResponse(body);\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoredOrgId +\n        \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getSponsorshipSyncStatus(\n    sponsoredOrgId: string\n  ): Promise<OrganizationSponsorshipSyncStatusResponse> {\n    const response = await this.send(\n      \"GET\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/sync-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSponsorshipSyncStatusResponse(response);\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const appId = await this.appIdService.getAppId();\n    const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n    const tokenRequest = new ApiTokenRequest(\n      clientId,\n      clientSecret,\n      new TokenRequestTwoFactor(),\n      deviceRequest\n    );\n\n    const response = await this.postIdentityToken(tokenRequest);\n    if (!(response instanceof IdentityTokenResponse)) {\n      throw new Error(\"Invalid response received when refreshing api token\");\n    }\n\n    await this.tokenService.setToken(response.accessToken);\n  }\n\n  async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    if (hasResponse && response.status === 200) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    if (\n      authed &&\n      ((tokenError && response.status === 400) ||\n        response.status === 401 ||\n        response.status === 403)\n    ) {\n      await this.logoutCallback(true);\n      return null;\n    }\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService();\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { Utils } from \"../misc/utils\";\nimport { AccountSettingsSettings } from \"../models/domain/account\";\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  private _settings: BehaviorSubject<AccountSettingsSettings> = new BehaviorSubject({});\n\n  settings$ = this._settings.asObservable();\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._settings.next({});\n            return;\n          }\n\n          const data = await this.stateService.getSettings();\n\n          this._settings.next(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    const settings = this._settings.getValue() ?? {};\n\n    settings.equivalentDomains = equivalentDomains;\n\n    this._settings.next(settings);\n    await this.stateService.setSettings(settings);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._settings.next({});\n    }\n\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { PolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"../../abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { PolicyType } from \"../../enums/policyType\";\n\nexport class VaultTimeoutSettingsService implements VaultTimeoutSettingsServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n}\n","import { AuthService } from \"../../abstractions/auth.service\";\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CollectionService } from \"../../abstractions/collection.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { FolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { SearchService } from \"../../abstractions/search.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../../abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"../../abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { AuthenticationStatus } from \"../../enums/authenticationStatus\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private authService: AuthService,\n    private vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (expired: boolean, userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    for (const userId in this.stateService.accounts.getValue()) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.vaultTimeoutSettingsService.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      await this.folderService.clearCache();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(false, userId);\n    }\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    const authStatus = await this.authService.getAuthStatus(userId);\n    if (\n      authStatus === AuthenticationStatus.Locked ||\n      authStatus === AuthenticationStatus.LoggedOut\n    ) {\n      return false;\n    }\n\n    const vaultTimeout = await this.vaultTimeoutSettingsService.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(userId);\n  }\n}\n","import * as papa from \"papaparse\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\nimport { CipherWithIdExport as CipherExport } from \"../models/export/cipherWithIdsExport\";\nimport { CollectionWithIdExport as CollectionExport } from \"../models/export/collectionWithIdExport\";\nimport { EventExport } from \"../models/export/eventExport\";\nimport { FolderWithIdExport as FolderExport } from \"../models/export/folderWithIdExport\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { EventView } from \"../models/view/eventView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfIterations\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfIterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new EventExport(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      firstValueFrom(this.folderService.folderViews$).then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      firstValueFrom(this.folderService.folders$).then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getOrganizationExport(organizationId).then((exportData) => {\n        const exportPromises: any = [];\n        if (exportData != null) {\n          if (\n            exportData.collections != null &&\n            exportData.collections.data != null &&\n            exportData.collections.data.length > 0\n          ) {\n            exportData.collections.data.forEach((c) => {\n              const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n              exportPromises.push(\n                collection.decrypt().then((decCol) => {\n                  decCollections.push(decCol);\n                })\n              );\n            });\n          }\n          if (\n            exportData.ciphers != null &&\n            exportData.ciphers.data != null &&\n            exportData.ciphers.data.length > 0\n          ) {\n            exportData.ciphers.data\n              .filter((c) => c.deletedDate === null)\n              .forEach((c) => {\n                const cipher = new Cipher(new CipherData(c));\n                exportPromises.push(\n                  cipher.decrypt().then((decCipher) => {\n                    decCiphers.push(decCipher);\n                  })\n                );\n              });\n          }\n        }\n        return Promise.all(exportPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync/sync.service.abstraction\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { NotificationType } from \"../enums/notificationType\";\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService,\n    private authService: AuthService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    // eslint-disable-next-line\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback(true);\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    const authStatus = await this.authService.getAuthStatus();\n    return authStatus >= AuthenticationStatus.Unlocked;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n\n  constructor(win: Window | typeof global) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = forge.util.createBuffer(parameters.data);\n    const decipher = forge.cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { EncryptedObject } from \"@bitwarden/common/models/domain/encryptedObject\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { IEncrypted } from \"../interfaces/IEncrypted\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport class EncryptService implements AbstractEncryptService {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService,\n    private logMacFailures: boolean\n  ) {}\n\n  async encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async decryptToUtf8(encString: EncString, key: SymmetricCryptoKey): Promise<string> {\n    if (key == null) {\n      throw new Error(\"No key provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encString);\n\n    if (key.macKey != null && encString?.mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (key.encType !== encString.encryptionType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  async decryptToBytes(encThing: IEncrypted, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (encThing == null) {\n      throw new Error(\"Nothing provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encThing);\n\n    if (key.macKey != null && encThing.macBytes == null) {\n      return null;\n    }\n\n    if (key.encType !== encThing.encryptionType) {\n      return null;\n    }\n\n    if (key.macKey != null && encThing.macBytes != null) {\n      const macData = new Uint8Array(encThing.ivBytes.byteLength + encThing.dataBytes.byteLength);\n      macData.set(new Uint8Array(encThing.ivBytes), 0);\n      macData.set(new Uint8Array(encThing.dataBytes), encThing.ivBytes.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        key.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(encThing.macBytes, computedMac);\n      if (!macsMatch) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    const result = await this.cryptoFunctionService.aesDecrypt(\n      encThing.dataBytes,\n      encThing.ivBytes,\n      key.encKey\n    );\n\n    return result ?? null;\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = key;\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private logMacFailed(msg: string) {\n    if (this.logMacFailures) {\n      this.logService.error(msg);\n    }\n  }\n\n  /**\n   * Transform into new key for the old encrypt-then-mac scheme if required, otherwise return the current key unchanged\n   * @param encThing The encrypted object (e.g. encString or encArrayBuffer) that you want to decrypt\n   */\n  resolveLegacyKey(key: SymmetricCryptoKey, encThing: IEncrypted): SymmetricCryptoKey {\n    if (\n      encThing.encryptionType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      return new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n    }\n\n    return key;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { EventService as EventServiceAbstraction } from \"../abstractions/event.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EventType } from \"../enums/eventType\";\nimport { EventData } from \"../models/data/eventData\";\nimport { EventRequest } from \"../models/request/eventRequest\";\n\nexport class EventService implements EventServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private apiService: ApiService,\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false,\n    organizationId: string = null\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    if (organizationId != null) {\n      if (!orgIds.has(organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    event.organizationId = organizationId;\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.uploadEvents();\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      req.organizationId = e.organizationId;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import { OrganizationService } from \"../../abstractions/organization.service\";\nimport { InternalPolicyService as InternalPolicyServiceAbstraction } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/masterPasswordPolicyOptions\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { PolicyResponse } from \"../../models/response/policyResponse\";\n\nexport class PolicyService implements InternalPolicyServiceAbstraction {\n  policyCache: Policy[];\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        // eslint-disable-next-line\n        if (diskPolicies.hasOwnProperty(id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\n    let enforcedOptions: MasterPasswordPolicyOptions = null;\n\n    if (policies == null) {\n      policies = await this.getAll(PolicyType.MasterPassword);\n    } else {\n      policies = policies.filter((p) => p.type === PolicyType.MasterPassword);\n    }\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new MasterPasswordPolicyOptions();\n      }\n\n      if (\n        currentPolicy.data.minComplexity != null &&\n        currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n      ) {\n        enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.requireUpper) {\n        enforcedOptions.requireUpper = true;\n      }\n\n      if (currentPolicy.data.requireLower) {\n        enforcedOptions.requireLower = true;\n      }\n\n      if (currentPolicy.data.requireNumbers) {\n        enforcedOptions.requireNumbers = true;\n      }\n\n      if (currentPolicy.data.requireSpecial) {\n        enforcedOptions.requireSpecial = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n    const organizations = await this.organizationService.getAll(userId);\n    let filteredPolicies;\n\n    if (policyFilter != null) {\n      filteredPolicies = policies.filter((p) => p.enabled && policyFilter(p));\n    } else {\n      filteredPolicies = policies.filter((p) => p.enabled);\n    }\n\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.enabled &&\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        !this.isExcemptFromPolicies(o, policyType) &&\n        policySet.has(o.id)\n    );\n  }\n\n  async upsert(policy: PolicyData): Promise<any> {\n    let policies = await this.stateService.getEncryptedPolicies();\n    if (policies == null) {\n      policies = {};\n    }\n\n    policies[policy.id] = policy;\n\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n}\n","import { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nexport class PolicyApiService implements PolicyApiServiceAbstraction {\n  constructor(\n    private policyService: InternalPolicyService,\n    private apiService: ApiService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPolicyForOrganization(policyType: PolicyType, organizationId: string): Promise<Policy> {\n    const org = await this.organizationService.get(organizationId);\n    if (org?.isProviderUser) {\n      const orgPolicies = await this.getPolicies(organizationId);\n      const policy = orgPolicies.data.find((p) => p.organizationId === organizationId);\n\n      if (policy == null) {\n        return null;\n      }\n\n      return new Policy(new PolicyData(policy));\n    }\n\n    const policies = await this.policyService.getAll(policyType);\n    return policies.find((p) => p.organizationId === organizationId);\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.policyService.mapPoliciesFromToken(response);\n    return this.policyService.getMasterPasswordPolicyOptions(policies);\n  }\n\n  async putPolicy(organizationId: string, type: PolicyType, request: PolicyRequest): Promise<any> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    const response = new PolicyResponse(r);\n    const data = new PolicyData(response);\n    await this.policyService.upsert(data);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SEND_KDF_ITERATIONS } from \"../enums/kdfType\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/sendFile\";\nimport { SendText } from \"../models/domain/sendText\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { Utils } from \"../misc/utils\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private logoutCallback: (expired: boolean, userId?: string) => void\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      kdfIterations\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n\n  private handleKeyConnectorError(e: any) {\n    this.logService.error(e);\n    if (this.logoutCallback != null) {\n      this.logoutCallback(false);\n    }\n    throw new Error(\"Key Connector error\");\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../../abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"../../enums/verificationType\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verifyOTPRequest\";\nimport { SecretVerificationRequest } from \"../../models/request/secretVerificationRequest\";\nimport { Verification } from \"../../types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Use it to verify the input collected by UserVerificationComponent.\n */\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private userVerificationApiService: UserVerificationApiServiceAbstraction\n  ) {}\n\n  /**\n   * Create a new request model to be used for server-side verification\n   * @param verification User-supplied verification data (Master Password or OTP)\n   * @param requestClass The request model to create\n   * @param alreadyHashed Whether the master password is already hashed\n   */\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  /**\n   * Used to verify the Master Password client-side, or send the OTP to the server for verification (with no other data)\n   * Generally used for client-side verification only.\n   * @param verification User-supplied verification data (Master Password or OTP)\n   */\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.userVerificationApiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.userVerificationApiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPassRequired\"));\n      }\n    }\n  }\n}\n","import { OrganizationService as OrganizationServiceAbstraction } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport class OrganizationService implements OrganizationServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Organization> {\n    const organizations = await this.stateService.getOrganizations();\n    // eslint-disable-next-line\n    if (organizations == null || !organizations.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Organization(organizations[id]);\n  }\n\n  async getByIdentifier(identifier: string): Promise<Organization> {\n    const organizations = await this.getAll();\n    if (organizations == null || organizations.length === 0) {\n      return null;\n    }\n\n    return organizations.find((o) => o.identifier === identifier);\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizations = await this.stateService.getOrganizations({ userId: userId });\n    const response: Organization[] = [];\n    for (const id in organizations) {\n      // eslint-disable-next-line\n      if (organizations.hasOwnProperty(id) && !organizations[id].isProviderUser) {\n        response.push(new Organization(organizations[id]));\n      }\n    }\n    const sortedResponse = response.sort((a, b) => a.name.localeCompare(b.name));\n    return sortedResponse;\n  }\n\n  async save(organizations: { [id: string]: OrganizationData }) {\n    return await this.stateService.setOrganizations(organizations);\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const orgs = await this.getAll();\n    return orgs.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  async hasOrganizations(userId?: string): Promise<boolean> {\n    const organizations = await this.getAll(userId);\n    return organizations.length > 0;\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import { UntypedFormGroup, ValidationErrors } from \"@angular/forms\";\n\nimport {\n  FormGroupControls,\n  FormValidationErrorsService as FormValidationErrorsAbstraction,\n  AllValidationErrors,\n} from \"../abstractions/formValidationErrors.service\";\n\nexport class FormValidationErrorsService implements FormValidationErrorsAbstraction {\n  getFormValidationErrors(controls: FormGroupControls): AllValidationErrors[] {\n    let errors: AllValidationErrors[] = [];\n    Object.keys(controls).forEach((key) => {\n      const control = controls[key];\n      if (control instanceof UntypedFormGroup) {\n        errors = errors.concat(this.getFormValidationErrors(control.controls));\n      }\n\n      const controlErrors: ValidationErrors = controls[key].errors;\n      if (controlErrors !== null) {\n        Object.keys(controlErrors).forEach((keyError) => {\n          errors.push({\n            controlName: key,\n            errorName: keyError,\n          });\n        });\n      }\n    });\n\n    return errors;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verifyOTPRequest\";\n\nexport class UserVerificationApiService implements UserVerificationApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n  async postAccountRequestOTP(): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"../../abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\nimport { ImportDirectoryRequest } from \"../../models/request/importDirectoryRequest\";\nimport { OrganizationSsoRequest } from \"../../models/request/organization/organizationSsoRequest\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organizationApiKeyRequest\";\nimport { OrganizationCreateRequest } from \"../../models/request/organizationCreateRequest\";\nimport { OrganizationKeysRequest } from \"../../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organizationUpgradeRequest\";\nimport { PaymentRequest } from \"../../models/request/paymentRequest\";\nimport { SeatRequest } from \"../../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../../models/request/secretVerificationRequest\";\nimport { StorageRequest } from \"../../models/request/storageRequest\";\nimport { VerifyBankRequest } from \"../../models/request/verifyBankRequest\";\nimport { ApiKeyResponse } from \"../../models/response/apiKeyResponse\";\nimport { BillingResponse } from \"../../models/response/billingResponse\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../../models/response/organization/organizationSsoResponse\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organizationApiKeyInformationResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organizationSubscriptionResponse\";\nimport { PaymentResponse } from \"../../models/response/paymentResponse\";\nimport { TaxInfoResponse } from \"../../models/response/taxInfoResponse\";\n\nexport class OrganizationApiService implements OrganizationApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  async get(id: string): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getBilling(id: string): Promise<BillingResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/billing\",\n      null,\n      true,\n      true\n    );\n    return new BillingResponse(r);\n  }\n\n  async getSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/subscription\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getLicense(id: string, installationId: string): Promise<unknown> {\n    return this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getAutoEnrollStatus(identifier: string): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  async create(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"POST\", \"/organizations\", request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async createLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async save(id: string, request: OrganizationUpdateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async updatePayment(id: string, request: PaymentRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  async upgrade(id: string, request: OrganizationUpgradeRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/upgrade\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/subscription\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async updateSeats(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/seat\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/storage\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async verifyBank(id: string, request: VerifyBankRequest): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/verify-bank\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async cancel(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  async reinstate(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  async leave(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n  }\n\n  async delete(id: string, request: SecretVerificationRequest): Promise<void> {\n    return this.apiService.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n  }\n\n  async updateLicense(id: string, data: FormData): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async importDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/import\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getOrCreateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getApiKeyInformation(\n    id: string,\n    organizationApiKeyType: OrganizationApiKeyType = null\n  ): Promise<ListResponse<OrganizationApiKeyInformationResponse>> {\n    const uri =\n      organizationApiKeyType === null\n        ? \"/organizations/\" + id + \"/api-key-information\"\n        : \"/organizations/\" + id + \"/api-key-information/\" + organizationApiKeyType;\n    const r = await this.apiService.send(\"GET\", uri, null, true, true);\n    return new ListResponse(r, OrganizationApiKeyInformationResponse);\n  }\n\n  async rotateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async updateTaxInfo(id: string, request: OrganizationTaxInfoUpdateRequest): Promise<void> {\n    return this.apiService.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  async getKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async updateKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/keys\",\n      request,\n      true,\n      true\n    );\n    return new OrganizationKeysResponse(r);\n  }\n\n  async getSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async updateSso(id: string, request: OrganizationSsoRequest): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/sso\",\n      request,\n      true,\n      true\n    );\n    return new OrganizationSsoResponse(r);\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { ServerConfig } from \"./server-config\";\n\nexport abstract class ConfigServiceAbstraction {\n  serverConfig$: Observable<ServerConfig | null>;\n}\n","import { BehaviorSubject, concatMap, map, switchMap, timer, EMPTY } from \"rxjs\";\n\nimport { ServerConfigData } from \"@bitwarden/common/models/data/server-config.data\";\n\nimport { ConfigApiServiceAbstraction } from \"../../abstractions/config/config-api.service.abstraction\";\nimport { ConfigServiceAbstraction } from \"../../abstractions/config/config.service.abstraction\";\nimport { ServerConfig } from \"../../abstractions/config/server-config\";\nimport { StateService } from \"../../abstractions/state.service\";\n\nexport class ConfigService implements ConfigServiceAbstraction {\n  private _serverConfig = new BehaviorSubject<ServerConfig | null>(null);\n  serverConfig$ = this._serverConfig.asObservable();\n\n  constructor(\n    private stateService: StateService,\n    private configApiService: ConfigApiServiceAbstraction\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        switchMap((unlocked) => {\n          if (!unlocked) {\n            this._serverConfig.next(null);\n            return EMPTY;\n          }\n\n          // Re-fetch the server config every hour\n          return timer(0, 3600 * 1000).pipe(map(() => unlocked));\n        }),\n        concatMap(async (unlocked) => {\n          return unlocked ? await this.buildServerConfig() : null;\n        })\n      )\n      .subscribe((serverConfig) => {\n        this._serverConfig.next(serverConfig);\n      });\n  }\n\n  private async buildServerConfig(): Promise<ServerConfig> {\n    const data = await this.stateService.getServerConfig();\n    const domain = data ? new ServerConfig(data) : null;\n\n    if (domain == null || !domain.isValid() || domain.expiresSoon()) {\n      const value = await this.fetchServerConfig();\n      return value ?? domain;\n    }\n\n    return domain;\n  }\n\n  private async fetchServerConfig(): Promise<ServerConfig> {\n    const response = await this.configApiService.get();\n    const data = new ServerConfigData(response);\n\n    if (data != null) {\n      await this.stateService.setServerConfig(data);\n      return new ServerConfig(data);\n    }\n\n    return null;\n  }\n}\n","import { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { ConfigApiServiceAbstraction as ConfigApiServiceAbstraction } from \"@bitwarden/common/abstractions/config/config-api.service.abstraction\";\nimport { ServerConfigResponse } from \"@bitwarden/common/models/response/server-config-response\";\n\nexport class ConfigApiService implements ConfigApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  async get(): Promise<ServerConfigResponse> {\n    const r = await this.apiService.send(\"GET\", \"/config\", null, true, true);\n    return new ServerConfigResponse(r);\n  }\n}\n","import { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\n\nexport class MemoryStorageService implements AbstractStorageService {\n  private store = new Map<string, any>();\n\n  get<T>(key: string): Promise<T> {\n    if (this.store.has(key)) {\n      const obj = this.store.get(key);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string): Promise<boolean> {\n    return this.get(key) != null;\n  }\n\n  save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      return this.remove(key);\n    }\n    this.store.set(key, obj);\n    return Promise.resolve();\n  }\n\n  remove(key: string): Promise<any> {\n    this.store.delete(key);\n    return Promise.resolve();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\n@Injectable()\nexport class BroadcasterMessagingService implements MessagingService {\n  constructor(private broadcasterService: BroadcasterService) {}\n\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    this.broadcasterService.send(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\n\n@Injectable()\nexport class EventService {\n  constructor(private i18nService: I18nService, private policyService: PolicyService) {}\n\n  getDefaultDateFilters() {\n    const d = new Date();\n    const end = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59);\n    d.setDate(d.getDate() - 30);\n    const start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0);\n    return [this.toDateTimeLocalString(start), this.toDateTimeLocalString(end)];\n  }\n\n  formatDateFilters(filterStart: string, filterEnd: string) {\n    const start: Date = new Date(filterStart);\n    const end: Date = new Date(filterEnd + \":59.999\");\n    if (isNaN(start.getTime()) || isNaN(end.getTime()) || end < start) {\n      throw new Error(\"Invalid date range.\");\n    }\n    return [start.toISOString(), end.toISOString()];\n  }\n\n  async getEventInfo(ev: EventResponse, options = new EventOptions()): Promise<EventInfo> {\n    const appInfo = this.getAppInfo(ev.deviceType);\n    const { message, humanReadableMessage } = await this.getEventMessage(ev, options);\n    return {\n      message: message,\n      humanReadableMessage: humanReadableMessage,\n      appIcon: appInfo[0],\n      appName: appInfo[1],\n    };\n  }\n\n  private async getEventMessage(ev: EventResponse, options: EventOptions) {\n    let msg = \"\";\n    let humanReadableMsg = \"\";\n    switch (ev.type) {\n      // User\n      case EventType.User_LoggedIn:\n        msg = humanReadableMsg = this.i18nService.t(\"loggedIn\");\n        break;\n      case EventType.User_ChangedPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"changedPassword\");\n        break;\n      case EventType.User_Updated2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledUpdated2fa\");\n        break;\n      case EventType.User_Disabled2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"disabled2fa\");\n        break;\n      case EventType.User_Recovered2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"recovered2fa\");\n        break;\n      case EventType.User_FailedLogIn:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin\");\n        break;\n      case EventType.User_FailedLogIn2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin2fa\");\n        break;\n      case EventType.User_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedVault\");\n        break;\n      case EventType.User_UpdatedTempPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"updatedMasterPassword\");\n        break;\n      case EventType.User_MigratedKeyToKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"migratedKeyConnector\");\n        break;\n      // Cipher\n      case EventType.Cipher_Created:\n        msg = this.i18nService.t(\"createdItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"createdItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Updated:\n        msg = this.i18nService.t(\"editedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"editedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Deleted:\n        msg = this.i18nService.t(\"permanentlyDeletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"permanentlyDeletedItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_SoftDeleted:\n        msg = this.i18nService.t(\"deletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"deletedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Restored:\n        msg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        break;\n      case EventType.Cipher_AttachmentCreated:\n        msg = this.i18nService.t(\"createdAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"createdAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_AttachmentDeleted:\n        msg = this.i18nService.t(\"deletedAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_Shared:\n        msg = this.i18nService.t(\"movedItemIdToOrg\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"movedItemIdToOrg\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientViewed:\n        msg = this.i18nService.t(\"viewedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledPasswordVisible:\n        msg = this.i18nService.t(\"viewedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledHiddenFieldVisible:\n        msg = this.i18nService.t(\"viewedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientToggledCardCodeVisible:\n        msg = this.i18nService.t(\"viewedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedHiddenField:\n        msg = this.i18nService.t(\"copiedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedPassword:\n        msg = this.i18nService.t(\"copiedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"copiedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientCopiedCardCode:\n        msg = this.i18nService.t(\"copiedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientAutofilled:\n        msg = this.i18nService.t(\"autofilledItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"autofilledItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_UpdatedCollections:\n        msg = this.i18nService.t(\"editedCollectionsForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionsForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      // Collection\n      case EventType.Collection_Created:\n        msg = this.i18nService.t(\"createdCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Updated:\n        msg = this.i18nService.t(\"editedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Deleted:\n        msg = this.i18nService.t(\"deletedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      // Group\n      case EventType.Group_Created:\n        msg = this.i18nService.t(\"createdGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"createdGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Updated:\n        msg = this.i18nService.t(\"editedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Deleted:\n        msg = this.i18nService.t(\"deletedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"deletedGroupId\", this.getShortId(ev.groupId));\n        break;\n      // Org user\n      case EventType.OrganizationUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"invitedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UpdatedGroups:\n        msg = this.i18nService.t(\"editedGroupsForUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedGroupsForUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UnlinkedSso:\n        msg = this.i18nService.t(\"unlinkedSsoUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"unlinkedSsoUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Enroll:\n        msg = this.i18nService.t(\"eventEnrollPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventEnrollPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Withdraw:\n        msg = this.i18nService.t(\"eventWithdrawPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventWithdrawPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_AdminResetPassword:\n        msg = this.i18nService.t(\"eventAdminPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventAdminPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetSsoLink:\n        msg = this.i18nService.t(\"eventResetSsoLink\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventResetSsoLink\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_FirstSsoLogin:\n        msg = this.i18nService.t(\"firstSsoLogin\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"firstSsoLogin\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Revoked:\n        msg = this.i18nService.t(\"revokedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"revokedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Restored:\n        msg = this.i18nService.t(\"restoredUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"restoredUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      // Org\n      case EventType.Organization_Updated:\n        msg = humanReadableMsg = this.i18nService.t(\"editedOrgSettings\");\n        break;\n      case EventType.Organization_PurgedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"purgedOrganizationVault\");\n        break;\n      case EventType.Organization_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedOrganizationVault\");\n        break;\n      case EventType.Organization_VaultAccessed:\n        msg = humanReadableMsg = this.i18nService.t(\"vaultAccessedByProvider\");\n        break;\n      case EventType.Organization_EnabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledSso\");\n        break;\n      case EventType.Organization_DisabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledSso\");\n        break;\n      case EventType.Organization_EnabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledKeyConnector\");\n        break;\n      case EventType.Organization_DisabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledKeyConnector\");\n        break;\n      case EventType.Organization_SponsorshipsSynced:\n        msg = humanReadableMsg = this.i18nService.t(\"sponsorshipsSynced\");\n        break;\n      // Policies\n      case EventType.Policy_Updated: {\n        msg = this.i18nService.t(\"modifiedPolicyId\", this.formatPolicyId(ev));\n\n        const policies = await this.policyService.getAll();\n        const policy = policies.filter((p) => p.id === ev.policyId)[0];\n        let p1 = this.getShortId(ev.policyId);\n        if (policy != null) {\n          p1 = PolicyType[policy.type];\n        }\n\n        humanReadableMsg = this.i18nService.t(\"modifiedPolicyId\", p1);\n        break;\n      }\n      // Provider users:\n      case EventType.ProviderUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"invitedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.providerUserId)\n        );\n        break;\n      case EventType.ProviderUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"removedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderOrganization_Created:\n        msg = this.i18nService.t(\"createdOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Added:\n        msg = this.i18nService.t(\"addedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"addedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Removed:\n        msg = this.i18nService.t(\"removedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_VaultAccessed:\n        msg = this.i18nService.t(\"accessedClientVault\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"accessedClientVault\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      default:\n        break;\n    }\n    return {\n      message: msg === \"\" ? null : msg,\n      humanReadableMessage: humanReadableMsg === \"\" ? null : humanReadableMsg,\n    };\n  }\n\n  private getAppInfo(deviceType: DeviceType): [string, string] {\n    switch (deviceType) {\n      case DeviceType.Android:\n        return [\"bwi-android\", this.i18nService.t(\"mobile\") + \" - Android\"];\n      case DeviceType.iOS:\n        return [\"bwi-apple\", this.i18nService.t(\"mobile\") + \" - iOS\"];\n      case DeviceType.UWP:\n        return [\"bwi-windows\", this.i18nService.t(\"mobile\") + \" - Windows\"];\n      case DeviceType.ChromeExtension:\n        return [\"bwi-chrome\", this.i18nService.t(\"extension\") + \" - Chrome\"];\n      case DeviceType.FirefoxExtension:\n        return [\"bwi-firefox\", this.i18nService.t(\"extension\") + \" - Firefox\"];\n      case DeviceType.OperaExtension:\n        return [\"bwi-opera\", this.i18nService.t(\"extension\") + \" - Opera\"];\n      case DeviceType.EdgeExtension:\n        return [\"bwi-edge\", this.i18nService.t(\"extension\") + \" - Edge\"];\n      case DeviceType.VivaldiExtension:\n        return [\"bwi-puzzle\", this.i18nService.t(\"extension\") + \" - Vivaldi\"];\n      case DeviceType.SafariExtension:\n        return [\"bwi-safari\", this.i18nService.t(\"extension\") + \" - Safari\"];\n      case DeviceType.WindowsDesktop:\n        return [\"bwi-windows\", this.i18nService.t(\"desktop\") + \" - Windows\"];\n      case DeviceType.MacOsDesktop:\n        return [\"bwi-apple\", this.i18nService.t(\"desktop\") + \" - macOS\"];\n      case DeviceType.LinuxDesktop:\n        return [\"bwi-linux\", this.i18nService.t(\"desktop\") + \" - Linux\"];\n      case DeviceType.ChromeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Chrome\"];\n      case DeviceType.FirefoxBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Firefox\"];\n      case DeviceType.OperaBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Opera\"];\n      case DeviceType.SafariBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Safari\"];\n      case DeviceType.VivaldiBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Vivaldi\"];\n      case DeviceType.EdgeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Edge\"];\n      case DeviceType.IEBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - IE\"];\n      case DeviceType.UnknownBrowser:\n        return [\n          \"bwi-globe\",\n          this.i18nService.t(\"webVault\") + \" - \" + this.i18nService.t(\"unknown\"),\n        ];\n      default:\n        return [\"bwi-globe\", this.i18nService.t(\"unknown\")];\n    }\n  }\n\n  private formatCipherId(ev: EventResponse, options: EventOptions) {\n    const shortId = this.getShortId(ev.cipherId);\n    if (ev.organizationId == null || !options.cipherInfo) {\n      return \"<code>\" + shortId + \"</code>\";\n    }\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/vault?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.cipherId\n    );\n    return a.outerHTML;\n  }\n\n  private formatGroupId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.groupId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/groups?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatCollectionId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.collectionId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/collections?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatOrgUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.organizationUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.organizationUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/providers/\" +\n        ev.providerId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.providerUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderOrganizationId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerOrganizationId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\"href\", \"#/providers/\" + ev.providerId + \"/clients?search=\" + shortId);\n    return a.outerHTML;\n  }\n\n  private formatPolicyId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.policyId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/policies?policyId=\" + ev.policyId\n    );\n    return a.outerHTML;\n  }\n\n  private makeAnchor(shortId: string) {\n    const a = document.createElement(\"a\");\n    a.title = this.i18nService.t(\"view\");\n    a.innerHTML = \"<code>\" + shortId + \"</code>\";\n    return a;\n  }\n\n  private getShortId(id: string) {\n    return id?.substring(0, 8);\n  }\n\n  private toDateTimeLocalString(date: Date) {\n    return (\n      date.getFullYear() +\n      \"-\" +\n      this.pad(date.getMonth() + 1) +\n      \"-\" +\n      this.pad(date.getDate()) +\n      \"T\" +\n      this.pad(date.getHours()) +\n      \":\" +\n      this.pad(date.getMinutes())\n    );\n  }\n\n  private pad(num: number) {\n    const norm = Math.floor(Math.abs(num));\n    return (norm < 10 ? \"0\" : \"\") + norm;\n  }\n}\n\nexport class EventInfo {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n}\n\nexport class EventOptions {\n  cipherInfo = true;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"@bitwarden/common/enums/htmlStorageLocation\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storageOptions\";\n\n@Injectable()\nexport class HtmlStorageService implements AbstractStorageService {\n  get defaultOptions(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Session };\n  }\n\n  get<T>(key: string, options: StorageOptions = this.defaultOptions): Promise<T> {\n    let json: string = null;\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        json = window.localStorage.getItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        json = window.sessionStorage.getItem(key);\n        break;\n    }\n\n    if (json != null) {\n      const obj = JSON.parse(json);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string, options: StorageOptions = this.defaultOptions): Promise<boolean> {\n    return (await this.get(key, options)) != null;\n  }\n\n  save(key: string, obj: any, options: StorageOptions = this.defaultOptions): Promise<any> {\n    if (obj == null) {\n      return this.remove(key, options);\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const json = JSON.stringify(obj);\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.setItem(key, json);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.setItem(key, json);\n        break;\n    }\n    return Promise.resolve();\n  }\n\n  remove(key: string, options: StorageOptions = this.defaultOptions): Promise<any> {\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.removeItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.removeItem(key);\n        break;\n    }\n    return Promise.resolve();\n  }\n}\n","import { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\n\nexport class ContainerService {\n  constructor(\n    private cryptoService: CryptoService,\n    private encryptService: AbstractEncryptService\n  ) {}\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  /**\n   * @throws Will throw if CryptoService was not instantiated and provided to the ContainerService constructor\n   */\n  getCryptoService(): CryptoService {\n    if (this.cryptoService == null) {\n      throw new Error(\"ContainerService.cryptoService not initialized.\");\n    }\n    return this.cryptoService;\n  }\n\n  /**\n   * @throws Will throw if EncryptService was not instantiated and provided to the ContainerService constructor\n   */\n  getEncryptService(): AbstractEncryptService {\n    if (this.encryptService == null) {\n      throw new Error(\"ContainerService.encryptService not initialized.\");\n    }\n    return this.encryptService;\n  }\n}\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport { WINDOW } from \"@bitwarden/angular/services/injection-tokens\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { AbstractEncryptService } from \"@bitwarden/common/abstractions/abstractEncrypt.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventService as EventLoggingServiceAbstraction } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { ContainerService } from \"@bitwarden/common/services/container.service\";\nimport { EventService as EventLoggingService } from \"@bitwarden/common/services/event.service\";\nimport { VaultTimeoutService as VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeout.service\";\n\nimport { I18nService } from \"./i18n.service\";\n\n@Injectable()\nexport class InitService {\n  constructor(\n    @Inject(WINDOW) private win: Window,\n    private environmentService: EnvironmentServiceAbstraction,\n    private notificationsService: NotificationsServiceAbstraction,\n    private vaultTimeoutService: VaultTimeoutServiceAbstraction,\n    private i18nService: I18nServiceAbstraction,\n    private eventLoggingService: EventLoggingServiceAbstraction,\n    private twoFactorService: TwoFactorServiceAbstraction,\n    private stateService: StateServiceAbstraction,\n    private cryptoService: CryptoServiceAbstraction,\n    private themingService: AbstractThemingService,\n    private encryptService: AbstractEncryptService\n  ) {}\n\n  init() {\n    return async () => {\n      await this.stateService.init();\n\n      const urls = process.env.URLS as Urls;\n      urls.base ??= this.win.location.origin;\n      this.environmentService.setUrls(urls);\n\n      setTimeout(() => this.notificationsService.init(), 3000);\n      (this.vaultTimeoutService as VaultTimeoutService).init(true);\n      const locale = await this.stateService.getLocale();\n      await (this.i18nService as I18nService).init(locale);\n      (this.eventLoggingService as EventLoggingService).init(true);\n      this.twoFactorService.init();\n      const htmlEl = this.win.document.documentElement;\n      htmlEl.classList.add(\"locale_\" + this.i18nService.translationLocale);\n      await this.themingService.monitorThemeChanges();\n      const containerService = new ContainerService(this.cryptoService, this.encryptService);\n      containerService.attachToGlobal(this.win);\n    };\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, Injectable, Injector } from \"@angular/core\";\nimport * as jq from \"jquery\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService as BaseModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Injectable()\nexport class ModalService extends BaseModalService {\n  el: any = null;\n  modalOpen = false;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    applicationRef: ApplicationRef,\n    injector: Injector,\n    private messagingService: MessagingService\n  ) {\n    super(componentFactoryResolver, applicationRef, injector);\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    modalRef.onCreated.pipe(first()).subscribe(() => {\n      const modals = Array.from(document.querySelectorAll(\".modal\"));\n      if (modals.length > 0) {\n        this.el = jq(modals[0]);\n        this.el.modal(\"show\");\n\n        this.el.on(\"show.bs.modal\", () => {\n          modalRef.show();\n          this.messagingService.send(\"modalShow\");\n        });\n        this.el.on(\"shown.bs.modal\", () => {\n          modalRef.shown();\n          this.messagingService.send(\"modalShown\");\n          if (!Utils.isMobileBrowser) {\n            this.el.find(\"*[appAutoFocus]\").focus();\n          }\n        });\n        this.el.on(\"hide.bs.modal\", () => {\n          this.messagingService.send(\"modalClose\");\n        });\n        this.el.on(\"hidden.bs.modal\", () => {\n          modalRef.closed();\n          this.messagingService.send(\"modalClosed\");\n        });\n      }\n    });\n\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      if (this.el != null) {\n        this.el.modal(\"hide\");\n      }\n    });\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"@bitwarden/angular/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"passwordConfirmation\" | i18n }}\n        </h2>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"passwordConfirmationDesc\" | i18n }}\n\n        <div class=\"form-group\">\n          <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n          <div class=\"d-flex\">\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n            <button\n              type=\"button\"\n              class=\"ml-1 btn btn-link\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\">\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"@bitwarden/angular/services/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","import { BasePolicy } from \"../organizations/policies\";\n\nexport class PolicyListService {\n  private policies: BasePolicy[] = [];\n\n  addPolicies(policies: BasePolicy[]) {\n    this.policies.push(...policies);\n  }\n\n  getPolicies(): BasePolicy[] {\n    return this.policies;\n  }\n}\n","import {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"@bitwarden/common/models/domain/account\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout: number = process.env.NODE_ENV === \"development\" ? null : 15;\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n  }\n}\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport {\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n} from \"@bitwarden/angular/services/injection-tokens\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateMigrationService } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { FolderData } from \"@bitwarden/common/models/data/folderData\";\nimport { SendData } from \"@bitwarden/common/models/data/sendData\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storageOptions\";\nimport { StateService as BaseStateService } from \"@bitwarden/common/services/state.service\";\n\nimport { Account } from \"./account\";\nimport { GlobalState } from \"./global-state\";\n\n@Injectable()\nexport class StateService extends BaseStateService<GlobalState, Account> {\n  constructor(\n    storageService: AbstractStorageService,\n    @Inject(SECURE_STORAGE) secureStorageService: AbstractStorageService,\n    @Inject(MEMORY_STORAGE) memoryStorageService: AbstractStorageService,\n    logService: LogService,\n    stateMigrationService: StateMigrationService,\n    @Inject(STATE_FACTORY) stateFactory: StateFactory<GlobalState, Account>,\n    @Inject(STATE_SERVICE_USE_CACHE) useAccountCache = true\n  ) {\n    super(\n      storageService,\n      secureStorageService,\n      memoryStorageService,\n      logService,\n      stateMigrationService,\n      stateFactory,\n      useAccountCache\n    );\n  }\n\n  async addAccount(account: Account) {\n    // Apply web overrides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getRememberEmail(options?: StorageOptions) {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberEmail;\n  }\n\n  async setRememberEmail(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedCiphers(options);\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedCiphers(value, options);\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedCollections(options);\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedCollections(value, options);\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedFolders(options);\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedFolders(value, options);\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedSends(options);\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedSends(value, options);\n  }\n\n  override async getLastSync(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getLastSync(options);\n  }\n\n  override async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setLastSync(value, options);\n  }\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport class FileDownloadBuilder {\n  get blobOptions(): any {\n    const options = this._request.blobOptions ?? {};\n    if (options.type == null) {\n      options.type = this.fileType;\n    }\n    return options;\n  }\n\n  get blob(): Blob {\n    if (this.blobOptions != null) {\n      return new Blob([this._request.blobData], this.blobOptions);\n    } else {\n      return new Blob([this._request.blobData]);\n    }\n  }\n\n  get downloadMethod(): \"save\" | \"open\" {\n    if (this._request.downloadMethod != null) {\n      return this._request.downloadMethod;\n    }\n    return this.fileType != \"application/pdf\" ? \"save\" : \"open\";\n  }\n\n  private get fileType() {\n    const fileNameLower = this._request.fileName.toLowerCase();\n    if (fileNameLower.endsWith(\".pdf\")) {\n      return \"application/pdf\";\n    } else if (fileNameLower.endsWith(\".xlsx\")) {\n      return \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    } else if (fileNameLower.endsWith(\".docx\")) {\n      return \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n    } else if (fileNameLower.endsWith(\".pptx\")) {\n      return \"application/vnd.openxmlformats-officedocument.presentationml.presentation\";\n    } else if (fileNameLower.endsWith(\".csv\")) {\n      return \"text/csv\";\n    } else if (fileNameLower.endsWith(\".png\")) {\n      return \"image/png\";\n    } else if (fileNameLower.endsWith(\".jpg\") || fileNameLower.endsWith(\".jpeg\")) {\n      return \"image/jpeg\";\n    } else if (fileNameLower.endsWith(\".gif\")) {\n      return \"image/gif\";\n    }\n    return null;\n  }\n\n  constructor(private readonly _request: FileDownloadRequest) {}\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FileDownloadBuilder } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadBuilder\";\nimport { FileDownloadRequest } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadRequest\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Injectable()\nexport class WebFileDownloadService implements FileDownloadService {\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  download(request: FileDownloadRequest): void {\n    const builder = new FileDownloadBuilder(request);\n    const a = window.document.createElement(\"a\");\n    if (builder.downloadMethod === \"save\") {\n      a.download = request.fileName;\n    } else if (!this.platformUtilsService.isSafari()) {\n      a.target = \"_blank\";\n    }\n    a.href = URL.createObjectURL(builder.blob);\n    a.style.position = \"fixed\";\n    window.document.body.appendChild(a);\n    a.click();\n    window.document.body.removeChild(a);\n  }\n}\n","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","import { Injectable } from \"@angular/core\";\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ClientType } from \"@bitwarden/common/enums/clientType\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\n\n@Injectable()\nexport class WebPlatformUtilsService implements PlatformUtilsService {\n  private browserCache: DeviceType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.browserCache != null) {\n      return this.browserCache;\n    }\n\n    if (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    ) {\n      this.browserCache = DeviceType.FirefoxBrowser;\n    } else if (navigator.userAgent.indexOf(\" OPR/\") >= 0) {\n      this.browserCache = DeviceType.OperaBrowser;\n    } else if (navigator.userAgent.indexOf(\" Edg/\") !== -1) {\n      this.browserCache = DeviceType.EdgeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Vivaldi/\") !== -1) {\n      this.browserCache = DeviceType.VivaldiBrowser;\n    } else if (\n      navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n      navigator.userAgent.indexOf(\"Chrome\") === -1\n    ) {\n      this.browserCache = DeviceType.SafariBrowser;\n    } else if ((window as any).chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1) {\n      this.browserCache = DeviceType.ChromeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Trident/\") !== -1) {\n      this.browserCache = DeviceType.IEBrowser;\n    } else {\n      this.browserCache = DeviceType.UnknownBrowser;\n    }\n\n    return this.browserCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"browser\", \"\");\n  }\n\n  getClientType() {\n    return ClientType.Web;\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxBrowser;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeBrowser;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeBrowser;\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaBrowser;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiBrowser;\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariBrowser;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  isViewOpen(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  launchUri(uri: string, options?: any): void {\n    const a = document.createElement(\"a\");\n    a.href = uri;\n    if (options == null || !options.sameWindow) {\n      a.target = \"_blank\";\n      a.rel = \"noreferrer noopener\";\n    }\n    a.classList.add(\"d-none\");\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(process.env.APPLICATION_VERSION || \"-\");\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  async showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml = false\n  ) {\n    let iconClasses: string = null;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const bootstrapModal = document.querySelector(\"div.modal\");\n    if (bootstrapModal != null) {\n      bootstrapModal.removeAttribute(\"tabindex\");\n    }\n\n    const iconHtmlStr =\n      iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml: iconHtmlStr,\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      titleText: title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n    });\n\n    if (bootstrapModal != null) {\n      bootstrapModal.setAttribute(\"tabindex\", \"-1\");\n    }\n\n    return confirmed.value;\n  }\n\n  isDev(): boolean {\n    return process.env.NODE_ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return process.env.ENV.toString() === \"selfhosted\";\n  }\n\n  copyToClipboard(text: string, options?: any): void | boolean {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      let copyEl = doc.body;\n      // For some reason copy command won't work when modal is open if appending to body\n      if (doc.body.classList.contains(\"modal-open\")) {\n        copyEl = doc.body.querySelector<HTMLElement>(\".modal\");\n      }\n      copyEl.appendChild(textarea);\n      textarea.select();\n      let success = false;\n      try {\n        // Security exception may be thrown by some browsers.\n        success = doc.execCommand(\"copy\");\n        if (!success) {\n          this.logService.debug(\"Copy command unsupported or disabled.\");\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        copyEl.removeChild(textarea);\n      }\n      return success;\n    }\n  }\n\n  readFromClipboard(options?: any): Promise<string> {\n    throw new Error(\"Cannot read from clipboard on web.\");\n  }\n\n  supportsBiometric() {\n    return Promise.resolve(false);\n  }\n\n  authenticateBiometric() {\n    return Promise.resolve(false);\n  }\n\n  supportsSecureStorage() {\n    return false;\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { APP_INITIALIZER, NgModule, Optional, SkipSelf } from \"@angular/core\";\n\nimport {\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n  LOCALES_DIRECTORY,\n  SYSTEM_LANGUAGE,\n  MEMORY_STORAGE,\n} from \"@bitwarden/angular/services/injection-tokens\";\nimport { JslibServicesModule } from \"@bitwarden/angular/services/jslib-services.module\";\nimport { ModalService as ModalServiceAbstraction } from \"@bitwarden/angular/services/modal.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { MemoryStorageService } from \"@bitwarden/common/services/memoryStorage.service\";\n\nimport { BroadcasterMessagingService } from \"./broadcaster-messaging.service\";\nimport { EventService } from \"./event.service\";\nimport { HtmlStorageService } from \"./html-storage.service\";\nimport { I18nService } from \"./i18n.service\";\nimport { InitService } from \"./init.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./password-reprompt.service\";\nimport { PolicyListService } from \"./policy-list.service\";\nimport { RouterService } from \"./router.service\";\nimport { Account, GlobalState, StateService } from \"./state\";\nimport { StateMigrationService } from \"./state-migration.service\";\nimport { WebFileDownloadService } from \"./web-file-download.service\";\nimport { WebPlatformUtilsService } from \"./web-platform-utils.service\";\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, JslibServicesModule],\n  providers: [\n    InitService,\n    RouterService,\n    EventService,\n    PolicyListService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (initService: InitService) => initService.init(),\n      deps: [InitService],\n      multi: true,\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: false,\n    },\n    {\n      provide: I18nServiceAbstraction,\n      useClass: I18nService,\n      deps: [SYSTEM_LANGUAGE, LOCALES_DIRECTORY],\n    },\n    { provide: AbstractStorageService, useClass: HtmlStorageService },\n    {\n      provide: SECURE_STORAGE,\n      // TODO: platformUtilsService.isDev has a helper for this, but using that service here results in a circular dependency.\n      // We have a tech debt item in the backlog to break up platformUtilsService, but in the meantime simply checking the environement here is less cumbersome.\n      useClass: process.env.NODE_ENV === \"development\" ? HtmlStorageService : MemoryStorageService,\n    },\n    {\n      provide: MEMORY_STORAGE,\n      useClass: MemoryStorageService,\n    },\n    {\n      provide: PlatformUtilsServiceAbstraction,\n      useClass: WebPlatformUtilsService,\n    },\n    { provide: MessagingServiceAbstraction, useClass: BroadcasterMessagingService },\n    { provide: ModalServiceAbstraction, useClass: ModalService },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    StateService,\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateService,\n    },\n    {\n      provide: PasswordRepromptServiceAbstraction,\n      useClass: PasswordRepromptService,\n    },\n    {\n      provide: FileDownloadService,\n      useClass: WebFileDownloadService,\n    },\n  ],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule?: CoreModule) {\n    if (parentModule) {\n      throw new Error(\"CoreModule is already loaded. Import it in the AppModule only\");\n    }\n  }\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { GlobalState as BaseGlobalState } from \"@bitwarden/common/models/domain/globalState\";\n\nexport class GlobalState extends BaseGlobalState {\n  theme?: ThemeType = ThemeType.Light;\n  rememberEmail = true;\n}\n","import { I18nService as BaseI18nService } from \"@bitwarden/common/services/i18n.service\";\n\nexport class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string, localesDirectory: string) {\n    super(systemLanguage || \"en-US\", localesDirectory, async (formattedLocale: string) => {\n      const filePath =\n        this.localesDirectory +\n        \"/\" +\n        formattedLocale +\n        \"/messages.json?cache=\" +\n        process.env.CACHE_TAG;\n      const localesResult = await fetch(filePath);\n      const locales = await localesResult.json();\n      return locales;\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"af\",\n      \"ar\",\n      \"az\",\n      \"be\",\n      \"bg\",\n      \"bn\",\n      \"bs\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"en-GB\",\n      \"en-IN\",\n      \"eo\",\n      \"es\",\n      \"et\",\n      \"eu\",\n      \"fi\",\n      \"fil\",\n      \"fr\",\n      \"he\",\n      \"hi\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"ka\",\n      \"km\",\n      \"kn\",\n      \"ko\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"nn\",\n      \"pl\",\n      \"pt-PT\",\n      \"pt-BR\",\n      \"ro\",\n      \"ru\",\n      \"si\",\n      \"sk\",\n      \"sl\",\n      \"sr\",\n      \"sv\",\n      \"tr\",\n      \"uk\",\n      \"vi\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n}\n","import { Observable, ReplaySubject } from \"rxjs\";\n\nimport { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  private _locale = new ReplaySubject<string>(1);\n  locale$: Observable<string> = this._locale.asObservable();\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"ar\", \"العربية الفصحى\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"eu\", \"euskara\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.translationLocale = locale != null ? locale : this.systemLanguage;\n    this._locale.next(this.translationLocale);\n\n    try {\n      this.collator = new Intl.Collator(this.translationLocale, {\n        numeric: true,\n        sensitivity: \"base\",\n      });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1);\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2);\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3);\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { StateMigrationService as BaseStateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\n\nimport { Account } from \"./state/account\";\nimport { GlobalState } from \"./state/global-state\";\n\nexport class StateMigrationService extends BaseStateMigrationService<GlobalState, Account> {\n  protected async migrationStateFrom1To2(): Promise<void> {\n    await super.migrateStateFrom1To2();\n    const globals = (await this.get<GlobalState>(\"global\")) ?? this.stateFactory.createGlobal(null);\n    globals.rememberEmail = (await this.get<boolean>(\"rememberEmail\")) ?? globals.rememberEmail;\n    await this.set(\"global\", globals);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { ActivatedRoute, NavigationEnd, Router } from \"@angular/router\";\nimport { filter } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Injectable()\nexport class RouterService {\n  private previousUrl: string = undefined;\n  private currentUrl: string = undefined;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n    i18nService: I18nService\n  ) {\n    this.currentUrl = this.router.url;\n\n    router.events\n      .pipe(filter((e) => e instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => {\n        this.currentUrl = event.url;\n\n        let title = i18nService.t(\"pageTitle\", \"Bitwarden\");\n        let child = this.activatedRoute.firstChild;\n        while (child.firstChild) {\n          child = child.firstChild;\n        }\n\n        const titleId: string = child?.snapshot?.data?.titleId;\n        const rawTitle: string = child?.snapshot?.data?.title;\n        const updateUrl = !child?.snapshot?.data?.doNotSaveUrl ?? true;\n\n        if (titleId != null || rawTitle != null) {\n          const newTitle = rawTitle != null ? rawTitle : i18nService.t(titleId);\n          if (newTitle != null && newTitle !== \"\") {\n            title = newTitle + \" | \" + title;\n          }\n        }\n        this.titleService.setTitle(title);\n        if (updateUrl) {\n          this.setPreviousUrl(this.currentUrl);\n        }\n      });\n  }\n\n  getPreviousUrl() {\n    return this.previousUrl;\n  }\n\n  setPreviousUrl(url: string) {\n    this.previousUrl = url;\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { OrganizationInformationComponent } from \"./organization-information.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [OrganizationInformationComponent],\n  exports: [OrganizationInformationComponent],\n})\nexport class OrganizationCreateModule {}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { canAccessOrgAdmin } from \"../navigation-permissions\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OrganizationPermissionsGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private syncService: SyncService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    // TODO: We need to fix this issue once and for all.\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n\n    const org = await this.organizationService.get(route.params.organizationId);\n    if (org == null) {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    if (!org.isOwner && !org.enabled) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"organizationIsDisabled\")\n      );\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    const permissionsCallback: (organization: Organization) => boolean =\n      route.data?.organizationPermissions;\n    const hasPermissions = permissionsCallback == null || permissionsCallback(org);\n\n    if (!hasPermissions) {\n      // Handle linkable ciphers for organizations the user only has view access to\n      // https://bitwarden.atlassian.net/browse/EC-203\n      const cipherId =\n        state.root.queryParamMap.get(\"itemId\") || state.root.queryParamMap.get(\"cipherId\");\n      if (cipherId) {\n        return this.router.createUrlTree([\"/vault\"], {\n          queryParams: {\n            itemId: cipherId,\n          },\n        });\n      }\n\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"accessDenied\"));\n      return canAccessOrgAdmin(org)\n        ? this.router.createUrlTree([\"/organizations\", org.id])\n        : this.router.createUrlTree([\"/\"]);\n    }\n\n    return true;\n  }\n}\n","import { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nexport function canAccessMembersTab(org: Organization): boolean {\n  return org.canManageUsers || org.canManageUsersPassword;\n}\n\nexport function canAccessGroupsTab(org: Organization): boolean {\n  return org.canManageGroups;\n}\n\nexport function canAccessReportingTab(org: Organization): boolean {\n  return org.canAccessReports || org.canAccessEventLogs;\n}\n\nexport function canAccessBillingTab(org: Organization): boolean {\n  return org.canManageBilling;\n}\n\nexport function canAccessSettingsTab(org: Organization): boolean {\n  return org.isOwner;\n}\n\nexport function canAccessOrgAdmin(org: Organization): boolean {\n  return (\n    canAccessMembersTab(org) ||\n    canAccessGroupsTab(org) ||\n    canAccessReportingTab(org) ||\n    canAccessBillingTab(org) ||\n    canAccessSettingsTab(org)\n  );\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\n\nimport { DisableSendPolicyComponent } from \"./disable-send.component\";\nimport { MasterPasswordPolicyComponent } from \"./master-password.component\";\nimport { PasswordGeneratorPolicyComponent } from \"./password-generator.component\";\nimport { PersonalOwnershipPolicyComponent } from \"./personal-ownership.component\";\nimport { PoliciesComponent } from \"./policies.component\";\nimport { PolicyEditComponent } from \"./policy-edit.component\";\nimport { RequireSsoPolicyComponent } from \"./require-sso.component\";\nimport { ResetPasswordPolicyComponent } from \"./reset-password.component\";\nimport { SendOptionsPolicyComponent } from \"./send-options.component\";\nimport { SingleOrgPolicyComponent } from \"./single-org.component\";\nimport { TwoFactorAuthenticationPolicyComponent } from \"./two-factor-authentication.component\";\n\n@NgModule({\n  imports: [SharedModule, LooseComponentsModule],\n  declarations: [\n    DisableSendPolicyComponent,\n    MasterPasswordPolicyComponent,\n    PasswordGeneratorPolicyComponent,\n    PersonalOwnershipPolicyComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    SendOptionsPolicyComponent,\n    SingleOrgPolicyComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    PoliciesComponent,\n    PolicyEditComponent,\n  ],\n  exports: [\n    DisableSendPolicyComponent,\n    MasterPasswordPolicyComponent,\n    PasswordGeneratorPolicyComponent,\n    PersonalOwnershipPolicyComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    SendOptionsPolicyComponent,\n    SingleOrgPolicyComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    PoliciesComponent,\n    PolicyEditComponent,\n  ],\n})\nexport class PoliciesModule {}\n","import { PolicyType } from \"../../enums/policyType\";\n\nexport class PolicyRequest {\n  type: PolicyType;\n  enabled: boolean;\n  data: any;\n}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nexport abstract class BasePolicy {\n  abstract name: string;\n  abstract description: string;\n  abstract type: PolicyType;\n  abstract component: any;\n\n  display(organization: Organization) {\n    return true;\n  }\n}\n\n@Directive()\nexport abstract class BasePolicyComponent implements OnInit {\n  @Input() policyResponse: PolicyResponse;\n  @Input() policy: BasePolicy;\n\n  enabled = new UntypedFormControl(false);\n  data: UntypedFormGroup = null;\n\n  ngOnInit(): void {\n    this.enabled.setValue(this.policyResponse.enabled);\n\n    if (this.policyResponse.data != null) {\n      this.loadData();\n    }\n  }\n\n  loadData() {\n    this.data.patchValue(this.policyResponse.data ?? {});\n  }\n\n  buildRequestData() {\n    if (this.data != null) {\n      return this.data.value;\n    }\n\n    return null;\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>) {\n    const request = new PolicyRequest();\n    request.enabled = this.enabled.value;\n    request.type = this.policy.type;\n    request.data = this.buildRequestData();\n\n    return Promise.resolve(request);\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class DisableSendPolicy extends BasePolicy {\n  name = \"disableSend\";\n  description = \"disableSendPolicyDesc\";\n  type = PolicyType.DisableSend;\n  component = DisableSendPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-send\",\n  templateUrl: \"disable-send.component.html\",\n})\nexport class DisableSendPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"disableSendExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minComplexity\">{{ \"minComplexityScore\" | i18n }}</label>\n      <select\n        id=\"minComplexity\"\n        name=\"minComplexity\"\n        formControlName=\"minComplexity\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of passwordScores\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        min=\"8\"\n        name=\"minLength\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireUpper\"\n      name=\"requireUpper\"\n      formControlName=\"requireUpper\"\n    />\n    <label class=\"form-check-label\" for=\"requireUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireLower\"\n      name=\"requireLower\"\n      formControlName=\"requireLower\"\n    />\n    <label class=\"form-check-label\" for=\"requireLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireNumbers\"\n      name=\"requireNumbers\"\n      formControlName=\"requireNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"requireNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireSpecial\"\n      name=\"requireSpecial\"\n      formControlName=\"requireSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"requireSpecial\">!@#$%^&amp;*</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class MasterPasswordPolicy extends BasePolicy {\n  name = \"masterPassPolicyTitle\";\n  description = \"masterPassPolicyDesc\";\n  type = PolicyType.MasterPassword;\n  component = MasterPasswordPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-master-password\",\n  templateUrl: \"master-password.component.html\",\n})\nexport class MasterPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    minComplexity: [null],\n    minLength: [null],\n    requireUpper: [null],\n    requireLower: [null],\n    requireNumbers: [null],\n    requireSpecial: [null],\n  });\n\n  passwordScores: { name: string; value: number }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    i18nService: I18nService,\n    private organizationService: OrganizationService\n  ) {\n    super();\n\n    this.passwordScores = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"weak\") + \" (0)\", value: 0 },\n      { name: i18nService.t(\"weak\") + \" (1)\", value: 1 },\n      { name: i18nService.t(\"weak\") + \" (2)\", value: 2 },\n      { name: i18nService.t(\"good\") + \" (3)\", value: 3 },\n      { name: i18nService.t(\"strong\") + \" (4)\", value: 4 },\n    ];\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group mb-0\">\n      <label for=\"defaultType\">{{ \"defaultType\" | i18n }}</label>\n      <select\n        id=\"defaultType\"\n        name=\"defaultType\"\n        formControlName=\"defaultType\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of defaultTypes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n  </div>\n  <h3 class=\"mt-4\">{{ \"password\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minLength\"\n        min=\"5\"\n        max=\"128\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumbers\">{{ \"minNumbers\" | i18n }}</label>\n      <input\n        id=\"minNumbers\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumbers\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minNumbers\"\n      />\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minSpecial\">{{ \"minSpecial\" | i18n }}</label>\n      <input\n        id=\"minSpecial\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minSpecial\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minSpecial\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useUpper\"\n      formControlName=\"useUpper\"\n      name=\"useUpper\"\n    />\n    <label class=\"form-check-label\" for=\"useUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useLower\"\n      name=\"useLower\"\n      formControlName=\"useLower\"\n    />\n    <label class=\"form-check-label\" for=\"useLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useNumbers\"\n      name=\"useNumbers\"\n      formControlName=\"useNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"useNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useSpecial\"\n      name=\"useSpecial\"\n      formControlName=\"useSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"useSpecial\">!@#$%^&amp;*</label>\n  </div>\n  <h3 class=\"mt-4\">{{ \"passphrase\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumberWords\">{{ \"minimumNumberOfWords\" | i18n }}</label>\n      <input\n        id=\"minNumberWords\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumberWords\"\n        min=\"3\"\n        max=\"20\"\n        formControlName=\"minNumberWords\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"capitalize\"\n      name=\"capitalize\"\n      formControlName=\"capitalize\"\n    />\n    <label class=\"form-check-label\" for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"includeNumber\"\n      name=\"includeNumber\"\n      formControlName=\"includeNumber\"\n    />\n    <label class=\"form-check-label\" for=\"includeNumber\">{{ \"includeNumber\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PasswordGeneratorPolicy extends BasePolicy {\n  name = \"passwordGenerator\";\n  description = \"passwordGeneratorPolicyDesc\";\n  type = PolicyType.PasswordGenerator;\n  component = PasswordGeneratorPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-password-generator\",\n  templateUrl: \"password-generator.component.html\",\n})\nexport class PasswordGeneratorPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    defaultType: [null],\n    minLength: [null],\n    useUpper: [null],\n    useLower: [null],\n    useNumbers: [null],\n    useSpecial: [null],\n    minNumbers: [null],\n    minSpecial: [null],\n    minNumberWords: [null],\n    capitalize: [null],\n    includeNumber: [null],\n  });\n\n  defaultTypes: { name: string; value: string }[];\n\n  constructor(private formBuilder: UntypedFormBuilder, i18nService: I18nService) {\n    super();\n\n    this.defaultTypes = [\n      { name: i18nService.t(\"userPreference\"), value: null },\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PersonalOwnershipPolicy extends BasePolicy {\n  name = \"personalOwnership\";\n  description = \"personalOwnershipPolicyDesc\";\n  type = PolicyType.PersonalOwnership;\n  component = PersonalOwnershipPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-personal-ownership\",\n  templateUrl: \"personal-ownership.component.html\",\n})\nexport class PersonalOwnershipPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"personalOwnershipExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class RequireSsoPolicy extends BasePolicy {\n  name = \"requireSso\";\n  description = \"requireSsoPolicyDesc\";\n  type = PolicyType.RequireSso;\n  component = RequireSsoPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useSso;\n  }\n}\n\n@Component({\n  selector: \"policy-require-sso\",\n  templateUrl: \"require-sso.component.html\",\n})\nexport class RequireSsoPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n<app-callout type=\"warning\">\n  {{ \"requireSsoExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<app-callout type=\"warning\">\n  {{ \"resetPasswordPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"resetPasswordPolicyAutoEnroll\" | i18n }}</h3>\n  <p>{{ \"resetPasswordPolicyAutoEnrollDescription\" | i18n }}</p>\n  <app-callout type=\"warning\">\n    {{ \"resetPasswordPolicyAutoEnrollWarning\" | i18n }}\n  </app-callout>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"autoEnrollEnabled\"\n      name=\"AutoEnrollEnabled\"\n      formControlName=\"autoEnrollEnabled\"\n    />\n    <label class=\"form-check-label\" for=\"autoEnrollEnabled\">\n      {{ \"resetPasswordPolicyAutoEnrollCheckbox\" | i18n }}\n    </label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class ResetPasswordPolicy extends BasePolicy {\n  name = \"resetPasswordPolicy\";\n  description = \"resetPasswordPolicyDescription\";\n  type = PolicyType.ResetPassword;\n  component = ResetPasswordPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useResetPassword;\n  }\n}\n\n@Component({\n  selector: \"policy-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    autoEnrollEnabled: false,\n  });\n\n  defaultTypes: { name: string; value: string }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private organizationService: OrganizationService\n  ) {\n    super();\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SendOptionsPolicy extends BasePolicy {\n  name = \"sendOptions\";\n  description = \"sendOptionsPolicyDesc\";\n  type = PolicyType.SendOptions;\n  component = SendOptionsPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-send-options\",\n  templateUrl: \"send-options.component.html\",\n})\nexport class SendOptionsPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    disableHideEmail: false,\n  });\n\n  constructor(private formBuilder: UntypedFormBuilder) {\n    super();\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"sendOptionsExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"disableHideEmail\"\n      name=\"DisableHideEmail\"\n      formControlName=\"disableHideEmail\"\n    />\n    <label class=\"form-check-label\" for=\"disableHideEmail\">{{ \"disableHideEmail\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SingleOrgPolicy extends BasePolicy {\n  name = \"singleOrg\";\n  description = \"singleOrgDesc\";\n  type = PolicyType.SingleOrg;\n  component = SingleOrgPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-single-org\",\n  templateUrl: \"single-org.component.html\",\n})\nexport class SingleOrgPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    if (!this.enabled.value) {\n      if (policiesEnabledMap.get(PolicyType.RequireSso) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"requireSso\"))\n        );\n      }\n\n      if (policiesEnabledMap.get(PolicyType.MaximumVaultTimeout) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"maximumVaultTimeoutLabel\"))\n        );\n      }\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"singleOrgPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class TwoFactorAuthenticationPolicy extends BasePolicy {\n  name = \"twoStepLoginPolicyTitle\";\n  description = \"twoStepLoginPolicyDesc\";\n  type = PolicyType.TwoFactorAuthentication;\n  component = TwoFactorAuthenticationPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-two-factor-authentication\",\n  templateUrl: \"two-factor-authentication.component.html\",\n})\nexport class TwoFactorAuthenticationPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"twoStepLoginPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"policiesEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"policiesEditTitle\">\n          {{ \"editPolicy\" | i18n }} - {{ policy.name | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n\n      <div class=\"modal-body\">\n        <div class=\"modal-body\" *ngIf=\"loading\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div [hidden]=\"loading\">\n          <p>{{ policy.description | i18n }}</p>\n          <ng-template #policyForm></ng-template>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nimport { BasePolicy, BasePolicyComponent } from \"../policies\";\n\n@Component({\n  selector: \"app-policy-edit\",\n  templateUrl: \"policy-edit.component.html\",\n})\nexport class PolicyEditComponent {\n  @Input() policy: BasePolicy;\n  @Input() organizationId: string;\n  @Input() policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n  @Output() onSavedPolicy = new EventEmitter();\n\n  @ViewChild(\"policyForm\", { read: ViewContainerRef, static: true })\n  policyFormRef: ViewContainerRef;\n\n  policyType = PolicyType;\n  loading = true;\n  enabled = false;\n  formPromise: Promise<any>;\n  defaultTypes: any[];\n  policyComponent: BasePolicyComponent;\n\n  private policyResponse: PolicyResponse;\n\n  constructor(\n    private policyApiService: PolicyApiServiceAbstraction,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private cdr: ChangeDetectorRef,\n    private logService: LogService\n  ) {}\n\n  async ngAfterViewInit() {\n    await this.load();\n    this.loading = false;\n\n    const factory = this.componentFactoryResolver.resolveComponentFactory(this.policy.component);\n    this.policyComponent = this.policyFormRef.createComponent(factory)\n      .instance as BasePolicyComponent;\n    this.policyComponent.policy = this.policy;\n    this.policyComponent.policyResponse = this.policyResponse;\n\n    this.cdr.detectChanges();\n  }\n\n  async load() {\n    try {\n      this.policyResponse = await this.policyApiService.getPolicy(\n        this.organizationId,\n        this.policy.type\n      );\n    } catch (e) {\n      if (e.statusCode === 404) {\n        this.policyResponse = new PolicyResponse({ Enabled: false });\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  async submit() {\n    let request: PolicyRequest;\n    try {\n      request = await this.policyComponent.buildRequest(this.policiesEnabledMap);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, e.message);\n      return;\n    }\n\n    try {\n      this.formPromise = this.policyApiService.putPolicy(\n        this.organizationId,\n        this.policy.type,\n        request\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedPolicyId\", this.i18nService.t(this.policy.name))\n      );\n      this.onSavedPolicy.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"policies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n  <tbody>\n    <tr *ngFor=\"let p of policies\">\n      <td *ngIf=\"p.display(organization)\">\n        <a href=\"#\" appStopClick (click)=\"edit(p)\">{{ p.name | i18n }}</a>\n        <span bitBadge badgeType=\"success\" *ngIf=\"policiesEnabledMap.get(p.type)\">{{\n          \"on\" | i18n\n        }}</span>\n        <small class=\"text-muted d-block\">{{ p.description | i18n }}</small>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<ng-template #editTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nimport { PolicyListService } from \"../../core\";\nimport { BasePolicy } from \"../policies\";\n\nimport { PolicyEditComponent } from \"./policy-edit.component\";\n\n@Component({\n  selector: \"app-org-policies\",\n  templateUrl: \"policies.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PoliciesComponent implements OnInit {\n  @ViewChild(\"editTemplate\", { read: ViewContainerRef, static: true })\n  editModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  policies: BasePolicy[];\n  organization: Organization;\n\n  private orgPolicies: PolicyResponse[];\n  private policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n\n  constructor(\n    private route: ActivatedRoute,\n    private modalService: ModalService,\n    private organizationService: OrganizationService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyListService: PolicyListService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.organization = await this.organizationService.get(this.organizationId);\n      this.policies = this.policyListService.getPolicies();\n\n      await this.load();\n\n      // Handle policies component launch from Event message\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        if (qParams.policyId != null) {\n          const policyIdFromEvents: string = qParams.policyId;\n          for (const orgPolicy of this.orgPolicies) {\n            if (orgPolicy.id === policyIdFromEvents) {\n              for (let i = 0; i < this.policies.length; i++) {\n                if (this.policies[i].type === orgPolicy.type) {\n                  this.edit(this.policies[i]);\n                  break;\n                }\n              }\n              break;\n            }\n          }\n        }\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.policyApiService.getPolicies(this.organizationId);\n    this.orgPolicies = response.data != null && response.data.length > 0 ? response.data : [];\n    this.orgPolicies.forEach((op) => {\n      this.policiesEnabledMap.set(op.type, op.enabled);\n    });\n\n    this.loading = false;\n  }\n\n  async edit(policy: BasePolicy) {\n    const [modal] = await this.modalService.openViewRef(\n      PolicyEditComponent,\n      this.editModalRef,\n      (comp) => {\n        comp.policy = policy;\n        comp.organizationId = this.organizationId;\n        comp.policiesEnabledMap = this.policiesEnabledMap;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedPolicy.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n}\n","import { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationUpdateRequest {\n  name: string;\n  /**\n   * @deprecated 2022-08-03 Moved to OrganizationSsoRequest, left for backwards compatability.\n   * https://bitwarden.atlassian.net/browse/EC-489\n   */\n  identifier: string;\n  businessName: string;\n  billingEmail: string;\n  keys: OrganizationKeysRequest;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteOrganizationTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      *ngIf=\"loaded\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deleteOrganizationTitle\">{{ \"deleteOrganization\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{\n          \"deletingOrganizationIsPermanentWarning\" | i18n: organizationName\n        }}</app-callout>\n        <p id=\"organizationDeleteDescription\">\n          <ng-container\n            *ngIf=\"\n              deleteOrganizationRequestType === 'InvalidFamiliesForEnterprise';\n              else regularDelete\n            \"\n          >\n            {{ \"orgCreatedSponsorshipInvalid\" | i18n }}\n          </ng-container>\n          <ng-template #regularDelete>\n            <ng-container *ngIf=\"organizationContentSummary.totalItemCount > 0\">\n              {{ \"deletingOrganizationContentWarning\" | i18n: organizationName }}\n              <ul>\n                <li *ngFor=\"let type of organizationContentSummary.itemCountByType\">\n                  {{ type.count }} {{ type.localizationKey | i18n }}\n                </li>\n              </ul>\n              {{ \"deletingOrganizationActiveUserAccountsWarning\" | i18n }}\n            </ng-container>\n          </ng-template>\n        </p>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteOrganization\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\nclass CountBasedLocalizationKey {\n  singular: string;\n  plural: string;\n\n  getKey(count: number) {\n    return count == 1 ? this.singular : this.plural;\n  }\n\n  constructor(singular: string, plural: string) {\n    this.singular = singular;\n    this.plural = plural;\n  }\n}\n\nclass OrganizationContentSummaryItem {\n  count: number;\n  get localizationKey(): string {\n    return this.localizationKeyOptions.getKey(this.count);\n  }\n  private localizationKeyOptions: CountBasedLocalizationKey;\n  constructor(count: number, localizationKeyOptions: CountBasedLocalizationKey) {\n    this.count = count;\n    this.localizationKeyOptions = localizationKeyOptions;\n  }\n}\n\nclass OrganizationContentSummary {\n  totalItemCount = 0;\n  itemCountByType: OrganizationContentSummaryItem[] = [];\n}\n\n@Component({\n  selector: \"app-delete-organization\",\n  templateUrl: \"delete-organization.component.html\",\n})\nexport class DeleteOrganizationComponent implements OnInit {\n  organizationId: string;\n  loaded: boolean;\n  deleteOrganizationRequestType: \"InvalidFamiliesForEnterprise\" | \"RegularDelete\" = \"RegularDelete\";\n  organizationName: string;\n  organizationContentSummary: OrganizationContentSummary = new OrganizationContentSummary();\n  @Output() onSuccess: EventEmitter<void> = new EventEmitter();\n\n  masterPassword: Verification;\n  formPromise: Promise<void>;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService,\n    private cipherService: CipherService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    await this.load();\n  }\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.organizationApiService.delete(this.organizationId, request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"organizationDeleted\"),\n        this.i18nService.t(\"organizationDeletedDesc\")\n      );\n      this.onSuccess.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async load() {\n    this.organizationName = (await this.organizationService.get(this.organizationId)).name;\n    this.organizationContentSummary = await this.buildOrganizationContentSummary();\n    this.loaded = true;\n  }\n\n  private async buildOrganizationContentSummary(): Promise<OrganizationContentSummary> {\n    const organizationContentSummary = new OrganizationContentSummary();\n    const organizationItems = (\n      await this.cipherService.getAllFromApiForOrganization(this.organizationId)\n    ).filter((item) => item.deletedDate == null);\n\n    if (organizationItems.length < 1) {\n      return organizationContentSummary;\n    }\n\n    organizationContentSummary.totalItemCount = organizationItems.length;\n    for (const cipherType of Utils.iterateEnum(CipherType)) {\n      const count = this.getOrganizationItemCountByType(organizationItems, cipherType);\n      if (count > 0) {\n        organizationContentSummary.itemCountByType.push(\n          new OrganizationContentSummaryItem(\n            count,\n            this.getOrganizationItemLocalizationKeysByType(CipherType[cipherType])\n          )\n        );\n      }\n    }\n\n    return organizationContentSummary;\n  }\n\n  private getOrganizationItemCountByType(items: CipherView[], type: CipherType) {\n    return items.filter((item) => item.type == type).length;\n  }\n\n  private getOrganizationItemLocalizationKeysByType(type: string): CountBasedLocalizationKey {\n    return new CountBasedLocalizationKey(`type${type}`, `type${type}Plural`);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"organizationInfo\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"organizationName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"org.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"org.billingEmail\"\n          [disabled]=\"selfHosted || !canManageBilling\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"businessName\">{{ \"businessName\" | i18n }}</label>\n        <input\n          id=\"businessName\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BusinessName\"\n          [(ngModel)]=\"org.businessName\"\n          [disabled]=\"selfHosted || !canManageBilling\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <app-avatar data=\"{{ org.name }}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar>\n    </div>\n  </div>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"save\" | i18n }}\n  </bit-submit-button>\n</form>\n<ng-container *ngIf=\"canUseApi\">\n  <div class=\"secondary-header border-0 mb-0\">\n    <h1>{{ \"apiKey\" | i18n }}</h1>\n  </div>\n  <p>\n    {{ \"apiKeyDesc\" | i18n }}\n    <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noopener\">\n      {{ \"learnMore\" | i18n }}\n    </a>\n  </p>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewApiKey()\">\n    {{ \"viewApiKey\" | i18n }}\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateApiKey()\">\n    {{ \"rotateApiKey\" | i18n }}\n  </button>\n</ng-container>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteOrganization()\">\n      {{ \"deleteOrganization\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n<ng-template #purgeOrganizationTemplate></ng-template>\n<ng-template #apiKeyTemplate></ng-template>\n<ng-template #rotateApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organizationKeysRequest\";\nimport { OrganizationUpdateRequest } from \"@bitwarden/common/models/request/organizationUpdateRequest\";\nimport { OrganizationResponse } from \"@bitwarden/common/models/response/organizationResponse\";\n\nimport { ApiKeyComponent } from \"../../settings/api-key.component\";\nimport { PurgeVaultComponent } from \"../../settings/purge-vault.component\";\n\nimport { DeleteOrganizationComponent } from \"./delete-organization.component\";\n\n@Component({\n  selector: \"app-org-account\",\n  templateUrl: \"account.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccountComponent {\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n  @ViewChild(\"purgeOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"apiKeyTemplate\", { read: ViewContainerRef, static: true })\n  apiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateApiKeyModalRef: ViewContainerRef;\n\n  selfHosted = false;\n  canManageBilling = true;\n  loading = true;\n  canUseApi = false;\n  org: OrganizationResponse;\n  formPromise: Promise<boolean>;\n  taxFormPromise: Promise<unknown>;\n\n  private organizationId: string;\n\n  constructor(\n    private modalService: ModalService,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private router: Router,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.canManageBilling = (\n        await this.organizationService.get(this.organizationId)\n      ).canManageBilling;\n      try {\n        this.org = await this.organizationApiService.get(this.organizationId);\n        this.canUseApi = this.org.useApi;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationUpdateRequest();\n      request.name = this.org.name;\n      request.businessName = this.org.businessName;\n      request.billingEmail = this.org.billingEmail;\n      request.identifier = this.org.identifier;\n\n      // Backfill pub/priv key if necessary\n      if (!this.org.hasPublicAndPrivateKeys) {\n        const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n        request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n      }\n\n      this.formPromise = this.organizationApiService.save(this.organizationId, request).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"organizationUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async deleteOrganization() {\n    await this.modalService.openViewRef(\n      DeleteOrganizationComponent,\n      this.deleteModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSuccess.subscribe(() => {\n          this.router.navigate([\"/\"]);\n        });\n      }\n    );\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef, (comp) => {\n      comp.organizationId = this.organizationId;\n    });\n  }\n\n  async viewApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.apiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.getOrCreateApiKey.bind(\n        this.organizationApiService\n      );\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyDesc\";\n    });\n  }\n\n  async rotateApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateApiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.isRotation = true;\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.rotateApiKey.bind(this.organizationApiService);\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div class=\"tabbed-header\">\n  <h1 *ngIf=\"!organizationId\">{{ \"twoStepLogin\" | i18n }}</h1>\n  <h1 *ngIf=\"organizationId\">{{ \"twoStepLoginEnforcement\" | i18n }}</h1>\n</div>\n<p *ngIf=\"!organizationId\">{{ \"twoStepLoginDesc\" | i18n }}</p>\n<ng-container *ngIf=\"organizationId\">\n  <p>\n    {{ \"twoStepLoginOrganizationDescStart\" | i18n }}\n    <a routerLink=\"../policies\">{{ \"twoStepLoginPolicy\" | i18n }}.</a>\n    <br />\n    {{ \"twoStepLoginOrganizationDuoDesc\" | i18n }}\n  </p>\n  <p>{{ \"twoStepLoginOrganizationSsoDesc\" | i18n }}</p>\n</ng-container>\n<bit-callout type=\"warning\" *ngIf=\"!organizationId\">\n  <p>{{ \"twoStepLoginRecoveryWarning\" | i18n }}</p>\n  <button bitButton buttonType=\"secondary\" (click)=\"recoveryCode()\">\n    {{ \"viewRecoveryCode\" | i18n }}\n  </button>\n</bit-callout>\n<h2 [ngClass]=\"{ 'mt-5': !organizationId }\">\n  {{ \"providers\" | i18n }}\n  <small *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-fw text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </small>\n</h2>\n<bit-callout type=\"warning\" *ngIf=\"showPolicyWarning\">\n  {{ \"twoStepLoginPolicyUserWarning\" | i18n }}\n</bit-callout>\n<ul class=\"list-group list-group-2fa\">\n  <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\">\n    <div class=\"logo-2fa d-flex justify-content-center\">\n      <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n    </div>\n    <div class=\"mx-4\">\n      <h3 class=\"mb-0\">\n        {{ p.name }}\n        <ng-container *ngIf=\"p.enabled\">\n          <i\n            class=\"bwi bwi-check text-success bwi-fw\"\n            title=\"{{ 'enabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"enabled\" | i18n }}</span>\n        </ng-container>\n        <app-premium-badge *ngIf=\"p.premium\"></app-premium-badge>\n      </h3>\n      {{ p.description }}\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        bitButton\n        buttonType=\"secondary\"\n        [disabled]=\"!canAccessPremium && p.premium\"\n        (click)=\"manage(p.type)\"\n      >\n        {{ \"manage\" | i18n }}\n      </button>\n    </div>\n  </li>\n</ul>\n<form\n  *ngIf=\"!loading && !organizationId\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <h2 class=\"mt-5 spaced-header\">\n        {{ \"deviceVerification\" | i18n }}\n      </h2>\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"enableDeviceVerification\"\n            name=\"enableDeviceVerification\"\n            disabled=\"{{ !isDeviceVerificationSectionEnabled }}\"\n            [(ngModel)]=\"enableDeviceVerification\"\n          />\n          <label class=\"form-check-label\" for=\"enableDeviceVerification\">\n            {{ \"enableDeviceVerification\" | i18n }}\n          </label>\n        </div>\n        <small class=\"form-text text-muted\">{{ \"deviceVerificationDesc\" | i18n }}</small>\n      </div>\n      <bit-submit-button [loading]=\"form.loading\" *ngIf=\"isDeviceVerificationSectionEnabled\">\n        {{ \"save\" | i18n }}\n      </bit-submit-button>\n    </div>\n  </div>\n</form>\n\n<ng-template #authenticatorTemplate></ng-template>\n<ng-template #recoveryTemplate></ng-template>\n<ng-template #duoTemplate></ng-template>\n<ng-template #emailTemplate></ng-template>\n<ng-template #yubikeyTemplate></ng-template>\n<ng-template #webAuthnTemplate></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { TwoFactorDuoComponent } from \"../../settings/two-factor-duo.component\";\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from \"../../settings/two-factor-setup.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"../../settings/two-factor-setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n  constructor(\n    apiService: ApiService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService\n  ) {\n    super(\n      apiService,\n      modalService,\n      messagingService,\n      policyService,\n      stateService,\n      platformUtilsService,\n      i18nService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await super.ngOnInit();\n    });\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.OrganizationDuo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        duoComp.type = TwoFactorProviderType.OrganizationDuo;\n        duoComp.organizationId = this.organizationId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type !== TwoFactorProviderType.OrganizationDuo;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"../guards/org-permissions.guard\";\nimport { canAccessSettingsTab } from \"../navigation-permissions\";\nimport { PoliciesComponent } from \"../policies\";\n\nimport { AccountComponent } from \"./account.component\";\nimport { SettingsComponent } from \"./settings.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SettingsComponent,\n    canActivate: [OrganizationPermissionsGuard],\n    data: { organizationPermissions: canAccessSettingsTab },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n      { path: \"account\", component: AccountComponent, data: { titleId: \"organizationInfo\" } },\n      {\n        path: \"two-factor\",\n        component: TwoFactorSetupComponent,\n        data: { titleId: \"twoStepLogin\" },\n      },\n      {\n        path: \"policies\",\n        component: PoliciesComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: (org: Organization) => org.canManagePolicies,\n          titleId: \"policies\",\n        },\n      },\n      {\n        path: \"tools\",\n        loadChildren: () =>\n          import(\"../tools/import-export/org-import-export.module\").then(\n            (m) => m.OrganizationImportExportModule\n          ),\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationSettingsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\nimport { PoliciesModule } from \"../policies\";\n\nimport { AccountComponent } from \"./account.component\";\nimport { AdjustSubscription } from \"./adjust-subscription.component\";\nimport { ChangePlanComponent } from \"./change-plan.component\";\nimport { DeleteOrganizationComponent } from \"./delete-organization.component\";\nimport { DownloadLicenseComponent } from \"./download-license.component\";\nimport { OrganizationSettingsRoutingModule } from \"./organization-settings-routing.module\";\nimport { SettingsComponent } from \"./settings.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\n@NgModule({\n  imports: [SharedModule, LooseComponentsModule, PoliciesModule, OrganizationSettingsRoutingModule],\n  declarations: [\n    SettingsComponent,\n    AccountComponent,\n    AdjustSubscription,\n    ChangePlanComponent,\n    DeleteOrganizationComponent,\n    DownloadLicenseComponent,\n    TwoFactorSetupComponent,\n  ],\n})\nexport class OrganizationSettingsModule {}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"organizationInfo\" | i18n }}\n          </a>\n          <a\n            routerLink=\"policies\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canManagePolicies\"\n          >\n            {{ \"policies\" | i18n }}\n          </a>\n          <a\n            routerLink=\"two-factor\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.use2fa\"\n          >\n            {{ \"twoStepLogin\" | i18n }}\n          </a>\n          <a\n            routerLink=\"tools/import\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canAccessImportExport\"\n          >\n            {{ \"importData\" | i18n }}\n          </a>\n          <a\n            routerLink=\"tools/export\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canAccessImportExport\"\n          >\n            {{ \"exportVault\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sso\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canManageSso\"\n          >\n            {{ \"singleSignOn\" | i18n }}\n          </a>\n          <a\n            routerLink=\"scim\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canManageScim\"\n          >\n            {{ \"scim\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  organization: Organization;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    this.route.params\n      .pipe(\n        switchMap(async (params) => await this.organizationService.get(params.organizationId)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((organization) => {\n        this.organization = organization;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"cipherAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"cipherAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"cipher\">\n        <app-callout type=\"info\" *ngIf=\"allowOwnershipAssignment() && !allowPersonal\">\n          {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n        </app-callout>\n        <div class=\"row\" *ngIf=\"!editMode && !viewOnly\">\n          <div class=\"col-6 form-group\">\n            <label for=\"type\">{{ \"whatTypeOfItem\" | i18n }}</label>\n            <select\n              id=\"type\"\n              name=\"Type\"\n              [(ngModel)]=\"cipher.type\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted\"\n              appAutofocus\n            >\n              <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"cipher.name\"\n              required\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n          </div>\n          <div class=\"col-6 form-group\" *ngIf=\"!organization\">\n            <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n            <select\n              id=\"folder\"\n              name=\"FolderId\"\n              [(ngModel)]=\"cipher.folderId\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            >\n              <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n            </select>\n          </div>\n        </div>\n        <!-- Login -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginUsername\"\n                  class=\"form-control\"\n                  type=\"text\"\n                  name=\"Login.Username\"\n                  [(ngModel)]=\"cipher.login.username\"\n                  appInputVerbatim\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\" *ngIf=\"!cipher.isDeleted\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n                    (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-6 form-group\">\n              <div class=\"d-flex\">\n                <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n                <div class=\"ml-auto d-flex\" *ngIf=\"!cipher.isDeleted && !viewOnly\">\n                  <a\n                    href=\"#\"\n                    class=\"d-block mr-2 bwi-icon-above-input\"\n                    appStopClick\n                    appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                    (click)=\"generatePassword()\"\n                    *ngIf=\"cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-fw bwi-generate\" aria-hidden=\"true\"></i>\n                  </a>\n                  <a\n                    href=\"#\"\n                    class=\"d-block bwi-icon-above-input\"\n                    #checkPasswordBtn\n                    appStopClick\n                    appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                    (click)=\"checkPassword()\"\n                    [appApiAction]=\"checkPasswordPromise\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-check-circle\"\n                      [hidden]=\"checkPasswordBtn.loading\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-spinner bwi-spin\"\n                      aria-hidden=\"true\"\n                      [hidden]=\"!checkPasswordBtn.loading\"\n                      title=\"{{ 'loading' | i18n }}\"\n                    ></i>\n                  </a>\n                </div>\n              </div>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginPassword\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Login.Password\"\n                  [(ngModel)]=\"cipher.login.password\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePassword()\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                    (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"tw-flex tw-flex-row\">\n            <div class=\"tw-mb-4 tw-w-1/2\">\n              <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n              <input\n                id=\"loginTotp\"\n                type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n                name=\"Login.Totp\"\n                class=\"form-control text-monospace\"\n                [(ngModel)]=\"cipher.login.totp\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n              />\n            </div>\n            <div class=\"tw-mb-4 tw-ml-4 tw-flex tw-w-1/2 tw-items-end\" [ngClass]=\"{ low: totpLow }\">\n              <div\n                class=\"totp tw-flex tw-flex-row tw-items-center\"\n                *ngIf=\"!cipher.login.totp || (cipher.login.totp && !canAccessPremium)\"\n              >\n                <span class=\"totp-countdown\">\n                  <span class=\"totp-sec tw-text-muted\">15</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle-muted inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        opacity=\"0.25\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': 40 }\"\n                      ></circle>\n                      <circle\n                        class=\"totp-circle-muted outer\"\n                        opacity=\"0.25\"\n                        r=\"14\"\n                        cy=\"16\"\n                        cx=\"16\"\n                      ></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span\n                  class=\"totp-code tw-mr-3 tw-ml-2 tw-text-muted\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  >--- ---</span\n                >\n                <i class=\"bwi bwi-lg bwi-clone tw-text-muted\" aria-hidden=\"true\"></i>\n              </div>\n              <div class=\"tw-pb-2\" *ngIf=\"!cipher.login.totp || !totpCode\">\n                <app-premium-badge\n                  *ngIf=\"!organization && !cipher.organizationId\"\n                  class=\"ml-3\"\n                ></app-premium-badge>\n                <a\n                  href=\"#\"\n                  appStopClick\n                  bitBadge\n                  badgeType=\"primary\"\n                  class=\"tw-ml-4\"\n                  (click)=\"upgradeOrganization()\"\n                  *ngIf=\"\n                    (organization && !organization.useTotp) ||\n                    (!organization &&\n                      !canAccessPremium &&\n                      cipher.organizationId &&\n                      !cipher.organizationUseTotp)\n                  \"\n                >\n                  {{ \"upgrade\" | i18n }}\n                </a>\n              </div>\n              <div\n                *ngIf=\"cipher.login.totp && totpCode && canAccessPremium\"\n                class=\"totp tw-flex tw-flex-row tw-items-center\"\n              >\n                <span class=\"totp-countdown\">\n                  <span class=\"totp-sec\">{{ totpSec }}</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                      ></circle>\n                      <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span\n                  class=\"totp-code tw-mr-2 tw-ml-2 tw-mt-1\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  >{{ totpCodeFormatted }}</span\n                >\n                <button\n                  type=\"button\"\n                  class=\"tw-items-center tw-border-none tw-bg-transparent tw-text-primary-500\"\n                  appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n                  (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n                >\n                  <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <ng-container *ngIf=\"cipher.login.hasUris\">\n            <div\n              role=\"group\"\n              class=\"row\"\n              *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n              attr.aria-label=\"{{ 'uriPosition' | i18n: i + 1 }}\"\n            >\n              <div class=\"col-7 form-group\">\n                <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n                <div class=\"input-group\">\n                  <input\n                    class=\"form-control\"\n                    id=\"loginUri{{ i }}\"\n                    type=\"text\"\n                    name=\"Login.Uris[{{ i }}].Uri\"\n                    [(ngModel)]=\"u.uri\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                    placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                    appInputVerbatim\n                  />\n                  <div class=\"input-group-append\">\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'launch' | i18n }}\"\n                      (click)=\"launch(u)\"\n                      [disabled]=\"!u.canLaunch\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n                    </button>\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n                      (click)=\"copy(u.uri, 'uri', 'URI')\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-5 form-group\">\n                <div class=\"d-flex\">\n                  <label for=\"loginUriMatch{{ i }}\">\n                    {{ \"matchDetection\" | i18n }}\n                  </label>\n                  <a\n                    class=\"ml-auto\"\n                    href=\"https://bitwarden.com/help/uri-match-detection/\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n                  >\n                    <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n                  </a>\n                </div>\n                <div class=\"d-flex\">\n                  <select\n                    class=\"form-control overflow-hidden\"\n                    id=\"loginUriMatch{{ i }}\"\n                    name=\"Login.Uris[{{ i }}].Match\"\n                    [(ngModel)]=\"u.match\"\n                    (change)=\"loginUriMatchChanged(u)\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                  >\n                    <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">\n                      {{ o.name }}\n                    </option>\n                  </select>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-link text-danger ml-2\"\n                    (click)=\"removeUri(u)\"\n                    appA11yTitle=\"{{ 'remove' | i18n }}\"\n                    *ngIf=\"!cipher.isDeleted && !viewOnly\"\n                  >\n                    <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n          <a\n            href=\"#\"\n            appStopClick\n            (click)=\"addUri()\"\n            class=\"d-inline-block mb-3\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n          </a>\n        </ng-container>\n        <!-- Card -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n              <input\n                id=\"cardCardholderName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.CardCardholderName\"\n                [(ngModel)]=\"cipher.card.cardholderName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n              <select\n                id=\"cardBrand\"\n                class=\"form-control\"\n                name=\"Card.Brand\"\n                [(ngModel)]=\"cipher.card.brand\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardNumber\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                  name=\"Card.Number\"\n                  [(ngModel)]=\"cipher.card.number\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardNumber()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{\n                        'bwi-eye': !showCardNumber,\n                        'bwi-eye-slash': showCardNumber\n                      }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n                    (click)=\"copy(cipher.card.number, 'number', 'Number')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n              <select\n                id=\"cardExpMonth\"\n                class=\"form-control\"\n                name=\"Card.ExpMonth\"\n                [(ngModel)]=\"cipher.card.expMonth\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                  {{ o.name }}\n                </option>\n              </select>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n              <input\n                id=\"cardExpYear\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.ExpYear\"\n                [(ngModel)]=\"cipher.card.expYear\"\n                placeholder=\"{{ 'ex' | i18n }} 2019\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardCode\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                  name=\"Card.Code\"\n                  [(ngModel)]=\"cipher.card.code\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardCode()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'securityCode' | i18n }}\"\n                    (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <!-- Identity -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n              <select\n                id=\"idTitle\"\n                class=\"form-control\"\n                name=\"Identity.Title\"\n                [(ngModel)]=\"cipher.identity.title\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                  {{ o.name }}\n                </option>\n              </select>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n              <input\n                id=\"idFirstName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.FirstName\"\n                [(ngModel)]=\"cipher.identity.firstName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n              <input\n                id=\"idMiddleName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.MiddleName\"\n                [(ngModel)]=\"cipher.identity.middleName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n              <input\n                id=\"idLastName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LastName\"\n                [(ngModel)]=\"cipher.identity.lastName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n              <input\n                id=\"idUsername\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Username\"\n                [(ngModel)]=\"cipher.identity.username\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n              <input\n                id=\"idCompany\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Company\"\n                [(ngModel)]=\"cipher.identity.company\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n              <input\n                id=\"idSsn\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.SSN\"\n                [(ngModel)]=\"cipher.identity.ssn\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n              <input\n                id=\"idPassportNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PassportNumber\"\n                [(ngModel)]=\"cipher.identity.passportNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n              <input\n                id=\"idLicenseNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LicenseNumber\"\n                [(ngModel)]=\"cipher.identity.licenseNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n              <input\n                id=\"idEmail\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"email\"\n                name=\"Identity.Email\"\n                [(ngModel)]=\"cipher.identity.email\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n              <input\n                id=\"idPhone\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"tel\"\n                name=\"Identity.Phone\"\n                [(ngModel)]=\"cipher.identity.phone\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n              <input\n                id=\"idAddress1\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address1\"\n                [(ngModel)]=\"cipher.identity.address1\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n              <input\n                id=\"idAddress2\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address2\"\n                [(ngModel)]=\"cipher.identity.address2\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n              <input\n                id=\"idAddress3\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address3\"\n                [(ngModel)]=\"cipher.identity.address3\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n              <input\n                id=\"idCity\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.City\"\n                [(ngModel)]=\"cipher.identity.city\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n              <input\n                id=\"idState\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.State\"\n                [(ngModel)]=\"cipher.identity.state\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n              <input\n                id=\"idPostalCode\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PostalCode\"\n                [(ngModel)]=\"cipher.identity.postalCode\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n              <input\n                id=\"idCountry\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Country\"\n                [(ngModel)]=\"cipher.identity.country\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n        </ng-container>\n        <div class=\"form-group\">\n          <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n          <textarea\n            id=\"notes\"\n            name=\"Notes\"\n            rows=\"6\"\n            [(ngModel)]=\"cipher.notes\"\n            [disabled]=\"cipher.isDeleted || viewOnly\"\n            class=\"form-control\"\n          ></textarea>\n        </div>\n        <app-vault-add-edit-custom-fields\n          [cipher]=\"cipher\"\n          [thisCipherType]=\"cipher.type\"\n          [viewOnly]=\"viewOnly\"\n          [copy]=\"copy.bind(this)\"\n        ></app-vault-add-edit-custom-fields>\n        <ng-container *ngIf=\"allowOwnershipAssignment()\">\n          <h3 class=\"mt-4\">{{ \"ownership\" | i18n }}</h3>\n          <div class=\"row\">\n            <div class=\"col-5\">\n              <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n              <select\n                id=\"organizationId\"\n                class=\"form-control\"\n                name=\"OrganizationId\"\n                [(ngModel)]=\"cipher.organizationId\"\n                (change)=\"organizationChanged()\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n          <h3 class=\"mt-4\">{{ \"collections\" | i18n }}</h3>\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <ng-container *ngIf=\"collections && collections.length\">\n            <div class=\"form-check\" *ngFor=\"let c of collections; let i = index\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"c.checked\"\n                id=\"collection-{{ i }}\"\n                name=\"Collection[{{ i }}].Checked\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n              <label class=\"form-check-label\" for=\"collection-{{ i }}\">{{ c.name }}</label>\n            </div>\n          </ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"editMode\">\n          <div class=\"small text-muted mt-4\">\n            <div>\n              <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n              {{ cipher.revisionDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"showRevisionDate\">\n              <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n              {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"hasPasswordHistory\">\n              <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n              <a href=\"#\" appStopClick (click)=\"viewHistory()\" title=\"{{ 'view' | i18n }}\">\n                {{ cipher.passwordHistory.length }}\n              </a>\n            </div>\n            <div class=\"ml-3\" *ngIf=\"viewingPasswordHistory\">\n              <div *ngFor=\"let ph of cipher.passwordHistory\">\n                {{ ph.lastUsedDate | date: \"short\" }} -\n                <span class=\"generated-wrapper text-monospace ml-2\">{{ ph.password }}</span>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"canUseReprompt\">\n          <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [ngModel]=\"reprompt\"\n              (change)=\"repromptChanged()\"\n              id=\"passwordPrompt\"\n              name=\"passwordPrompt\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n            <label class=\"form-check-label\" for=\"passwordPrompt\">{{\n              \"passwordPrompt\" | i18n\n            }}</label>\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (cipher?.isDeleted ? \"restore\" : \"save\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ (viewOnly ? \"close\" : \"cancel\") | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"cipher && !viewOnly\">\n          <button\n            *ngIf=\"!organization && !cipher.isDeleted\"\n            type=\"button\"\n            (click)=\"toggleFavorite()\"\n            class=\"btn btn-link\"\n            appA11yTitle=\"{{ (cipher.favorite ? 'unfavorite' : 'favorite') | i18n }}\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              [ngClass]=\"{ 'bwi-star-f': cipher.favorite, 'bwi-star': !cipher.favorite }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ (cipher.isDeleted ? 'permanentlyDelete' : 'delete') | i18n }}\"\n            *ngIf=\"editMode && !cloneMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherCreateRequest } from \"@bitwarden/common/models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"@bitwarden/common/models/request/cipherRequest\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../../vault/add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  organization: Organization;\n  originalCipher: Cipher = null;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    private apiService: ApiService,\n    messagingService: MessagingService,\n    eventService: EventService,\n    policyService: PolicyService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  protected allowOwnershipAssignment() {\n    if (\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    ) {\n      if (this.organization != null) {\n        return this.cloneMode && this.organization.canEditAnyCollection;\n      } else {\n        return !this.editMode || this.cloneMode;\n      }\n    }\n    return false;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    const data = new CipherData(response);\n    this.originalCipher = new Cipher(data);\n    return new Cipher(data);\n  }\n\n  protected encryptCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.encryptCipher();\n    }\n    return this.cipherService.encrypt(this.cipher, null, this.originalCipher);\n  }\n\n  protected async saveCipher(cipher: Cipher) {\n    if (!this.organization.canEditAnyCollection || cipher.organizationId == null) {\n      return super.saveCipher(cipher);\n    }\n    if (this.editMode && !this.cloneMode) {\n      const request = new CipherRequest(cipher);\n      return this.apiService.putCipherAdmin(this.cipherId, request);\n    } else {\n      const request = new CipherCreateRequest(cipher);\n      return this.apiService.postCipherAdmin(request);\n    }\n  }\n\n  protected async deleteCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher();\n    }\n    return this.cipher.isDeleted\n      ? this.apiService.deleteCipherAdmin(this.cipherId)\n      : this.apiService.putDeleteCipherAdmin(this.cipherId);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from \"@angular/router\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HasPremiumGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private messagingService: MessagingService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const userHasPremium = await this.stateService.getCanAccessPremium();\n\n    if (!userHasPremium) {\n      this.messagingService.send(\"premiumRequired\");\n    }\n\n    // Prevent trapping the user on the login page, since that's an awful UX flow\n    if (!userHasPremium && this.router.url === \"/login\") {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    return userHasPremium;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"dataBreachReport\" | i18n }}</h1>\n</div>\n<p>{{ \"breachDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"username\">{{ \"username\" | i18n }}</label>\n      <input\n        id=\"username\"\n        type=\"text\"\n        name=\"Username\"\n        class=\"form-control\"\n        [(ngModel)]=\"username\"\n        required\n      />\n      <small class=\"form-text text-muted\">{{ \"breachCheckUsernameEmail\" | i18n }}</small>\n    </div>\n  </div>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"checkBreaches\" | i18n }}\n  </bit-submit-button>\n</form>\n<div class=\"mt-4\" *ngIf=\"!form.loading && checkedUsername\">\n  <p *ngIf=\"error\">{{ \"reportError\" | i18n }}...</p>\n  <ng-container *ngIf=\"!error\">\n    <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!breachedAccounts.length\">\n      {{ \"breachUsernameNotFound\" | i18n: checkedUsername }}\n    </app-callout>\n    <app-callout type=\"danger\" title=\"{{ 'breachFound' | i18n }}\" *ngIf=\"breachedAccounts.length\">\n      {{ \"breachUsernameFound\" | i18n: checkedUsername:breachedAccounts.length }}\n    </app-callout>\n    <ul class=\"list-group list-group-breach\" *ngIf=\"breachedAccounts.length\">\n      <li *ngFor=\"let a of breachedAccounts\" class=\"list-group-item min-height-fix\">\n        <div class=\"row\">\n          <div class=\"col-2 text-center\">\n            <img [src]=\"a.logoPath\" alt=\"\" class=\"img-fluid\" />\n          </div>\n          <div class=\"col-7\">\n            <h3 class=\"text-lg\">{{ a.title }}</h3>\n            <p [innerHTML]=\"a.description\"></p>\n            <p class=\"mb-1\">{{ \"compromisedData\" | i18n }}:</p>\n            <ul>\n              <li *ngFor=\"let d of a.dataClasses\">{{ d }}</li>\n            </ul>\n          </div>\n          <div class=\"col-3\">\n            <dl>\n              <dt>{{ \"website\" | i18n }}</dt>\n              <dd>{{ a.domain }}</dd>\n              <dt>{{ \"affectedUsers\" | i18n }}</dt>\n              <dd>{{ a.pwnCount | number }}</dd>\n              <dt>{{ \"breachOccurred\" | i18n }}</dt>\n              <dd>{{ a.breachDate | date: \"mediumDate\" }}</dd>\n              <dt>{{ \"breachReported\" | i18n }}</dt>\n              <dd>{{ a.addedDate | date: \"mediumDate\" }}</dd>\n            </dl>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </ng-container>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { BreachAccountResponse } from \"@bitwarden/common/models/response/breachAccountResponse\";\n\n@Component({\n  selector: \"app-breach-report\",\n  templateUrl: \"breach-report.component.html\",\n})\nexport class BreachReportComponent implements OnInit {\n  error = false;\n  username: string;\n  checkedUsername: string;\n  breachedAccounts: BreachAccountResponse[] = [];\n  formPromise: Promise<BreachAccountResponse[]>;\n\n  constructor(private auditService: AuditService, private stateService: StateService) {}\n\n  async ngOnInit() {\n    this.username = await this.stateService.getEmail();\n  }\n\n  async submit() {\n    this.error = false;\n    this.username = this.username.toLowerCase();\n    try {\n      this.formPromise = this.auditService.breachedAccounts(this.username);\n      this.breachedAccounts = await this.formPromise;\n    } catch {\n      this.error = true;\n    }\n    this.checkedUsername = this.username;\n  }\n}\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportBreach = svgIcon`\n  <svg width=\"58\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.569 74H13.007a7 7 0 0 1-7-7V31.077a7 7 0 0 1 7-7h19.101a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.912V67a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M44.576 69.055H18.015a7 7 0 0 1-7-7V26.132a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.911v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M50 63.698H23.439a7 7 0 0 1-7-7V20.775a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.575A7 7 0 0 1 57 28.35v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M44.648 13.599v3.95a8 8 0 0 0 8 8h4.518\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M23.533 37.736H49.49M23.533 46.802H49.49M23.533 42.269H49.49M23.533 55.456H49.49M23.533 50.923H49.49\" />\n    <path d=\"M1 16.483C1 7.944 8.013 1 16.69 1c8.678 0 15.691 6.944 15.691 15.483 0 8.54-7.013 15.484-15.69 15.484C8.012 31.967 1 25.023 1 16.484Z\" fill=\"#518FFF\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"m16.562 7.979.1 11.538\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    <ellipse rx=\"1.252\" ry=\"1.236\" transform=\"rotate(-.479 2802.219 -1964.476) skewX(.012)\" fill=\"#fff\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportExposedPasswords = svgIcon`\n  <svg width=\"101\" height=\"77\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.374 50.192a26.42 26.42 0 0 0 9.111 1.608c14.34 0 25.965-11.372 25.965-25.4 0-.337-.007-.673-.02-1.008h25.299v34.85H32.374v-10.05Z\" fill=\"currentColor\" />\n    <path d=\"M15.805 26.4c0 14.028 11.625 25.4 25.965 25.4s25.964-11.372 25.964-25.4C67.734 12.372 56.11 1 41.77 1 27.43 1 15.805 12.372 15.805 26.4Z\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M27.914 47.849a1 1 0 0 0-2 0h2Zm68.288-26.792a2.12 2.12 0 0 1 2.14 2.11h2c0-2.253-1.83-4.11-4.14-4.11v2Zm2.14 2.11v40.552h2V23.167h-2Zm0 40.552c0 1.172-.958 2.11-2.14 2.11v2c2.25 0 4.14-1.798 4.14-4.11h-2Zm-2.14 2.11H30.054v2h66.148v-2Zm-66.148 0a2.12 2.12 0 0 1-2.14-2.11h-2a4.12 4.12 0 0 0 4.14 4.11v-2Zm-2.14-2.11V47.85h-2v15.87h2Zm39.254-42.662h29.034v-2H67.168v2Z\" fill=\"#fff\" />\n    <path d=\"M67.203 25.56h25.64v34.85H32.487V50.011\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"M47.343 76h31.571\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M57.557 66.83V76M67.771 66.83V76\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"m20.995 42.873-3.972 3.972-14.61 14.61a3.413 3.413 0 0 0 0 4.826v0a3.413 3.413 0 0 0 4.827 0l14.61-14.61 3.972-3.972\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M86.037 32.488H71.845M86.037 37.81H76.28M71.845 37.81h-6.652M86.037 43.132h-6.209M74.95 43.132H61.2M86.037 48.454H71.845M66.967 48.454h-7.54M86.037 53.776H66.08M61.201 53.776h-11.53M44.793 53.776h-7.096\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    <rect width=\"40.801\" height=\"9.757\" rx=\"4\" transform=\"matrix(-1 0 0 1 61.201 14.748)\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M16.852 33.375h28.375a4 4 0 0 1 4 4v1.757a4 4 0 0 1-4 4H22.174M66.523 33.375h-3.539a4 4 0 0 0-4 4v3.761c0 1.102.894 1.996 1.996 1.996v0\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportInactiveTwoFactor = svgIcon`\n  <svg width=\"42\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" d=\"M1 13.121h39.595v48.758H1z\" />\n    <rect x=\"1\" y=\"1\" width=\"39.595\" height=\"73\" rx=\"8\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M12.344 8.091h16.907M18.907 67.424h3.025M31.503 32.515c-2.047-4.337-6.717-7.061-11.73-6.414a11.356 11.356 0 0 0-9.125 7.126M10.816 42.016c2.047 4.337 6.718 7.062 11.73 6.414 4.346-.562 7.8-3.51 9.213-7.358\" />\n    <path d=\"m33.584 29.293-1.295 4.625-4.625-1.295M8.523 44.725l1.441-4.581 4.582 1.441\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportReusedPasswords = svgIcon`\n  <svg width=\"102\" height=\"102\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M57.983 15.06a35.664 35.664 0 0 1 14.531 6.27c16.164 11.78 19.585 34.613 7.643 51a37.227 37.227 0 0 1-6.81 7.138m-32.842 6.697a35.708 35.708 0 0 1-11.239-5.495c-16.163-11.78-19.585-34.613-7.642-51a37.55 37.55 0 0 1 3.295-3.929\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M93.909 64.598H7.72c-.708 0-1.275-.662-1.275-1.49V40.273c0-.828.567-1.49 1.275-1.49H93.91c.708 0 1.275.663 1.275 1.49v22.837c.047.827-.567 1.49-1.275 1.49Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M21.532 52.186v-5.965M21.532 52.187l5.748-1.844M21.532 52.186l3.524 4.881M21.531 52.186l-3.47 4.881M21.532 52.187l-5.694-1.844M40.944 52.186v-5.965M40.944 52.187l5.694-1.844M40.944 52.187l3.525 4.88M40.944 52.187l-3.525 4.88M40.944 52.187l-5.694-1.844M54.849 57.337h11.294M74.21 57.337h11.295M41.75 83l.71 4.75-4.75.71M58.664 18.66 56 14.665 59.996 12\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportUnsecuredWebsites = svgIcon`\n  <svg width=\"113\" height=\"76\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1.71 12.983h110.362v55.11a6 6 0 0 1-6 6H7.711a6 6 0 0 1-6-6v-55.11Z\" fill=\"currentColor\" />\n    <rect x=\"1\" y=\"1.073\" width=\"110.5\" height=\"73.454\" rx=\"9\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M89.48 8.048V7.47M96.363 8.048V7.47M103.246 8.048V7.47\" stroke=\"#fff\" stroke-width=\"4\" stroke-linecap=\"round\" />\n    <path d=\"M0 12.983h111.217\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"m93.236 44.384-18.42-11.026 2.93 21.266 5.582-5.237 4.27 6.46 2.98-1.971-4.26-6.446 6.918-3.046Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <rect width=\"96.673\" height=\"6.886\" rx=\"3.443\" transform=\"matrix(-1 0 0 1 104.373 18.721)\" stroke=\"#fff\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportWeakPasswords = svgIcon`\n  <svg width=\"78\" height=\"78\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M66.493 64.415V77H9.979V64.324M9.979 44.065V32.106h56.514v12.148\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"M75.44 64.852H2.085c-.603 0-1.085-.555-1.085-1.25V44.448c0-.694.482-1.25 1.085-1.25H75.44c.603 0 1.085.556 1.085 1.25v19.156c.04.694-.482 1.25-1.085 1.25Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M13.84 54.56v-5.077M13.84 54.56l4.893-1.57M13.84 54.56l3 4.153M13.84 54.56l-2.954 4.153M13.84 54.56l-4.846-1.57M30.363 54.56v-5.077M30.363 54.56l4.846-1.57M30.363 54.56l3 4.153M30.363 54.56l-3 4.153M30.363 54.56l-4.846-1.57M42.197 59.042h9.506M58.57 59.042h9.507\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M20.863 31.364c-.274-5.285 0-15.817 1.093-18.863 1.276-3.554 6.233-10.826 15.856-11.482 4.83-.273 15.2 2.296 18.043 14.763\" stroke=\"#fff\" stroke-width=\"2\" />\n  </svg>\n`;\n","import { ReportBreach } from \"./icons/report-breach.icon\";\nimport { ReportExposedPasswords } from \"./icons/report-exposed-passwords.icon\";\nimport { ReportInactiveTwoFactor } from \"./icons/report-inactive-two-factor.icon\";\nimport { ReportReusedPasswords } from \"./icons/report-reused-passwords.icon\";\nimport { ReportUnsecuredWebsites } from \"./icons/report-unsecured-websites.icon\";\nimport { ReportWeakPasswords } from \"./icons/report-weak-passwords.icon\";\nimport { ReportEntry } from \"./shared\";\n\nexport enum ReportType {\n  ExposedPasswords = \"exposedPasswords\",\n  ReusedPasswords = \"reusedPasswords\",\n  WeakPasswords = \"weakPasswords\",\n  UnsecuredWebsites = \"unsecuredWebsites\",\n  Inactive2fa = \"inactive2fa\",\n  DataBreach = \"dataBreach\",\n}\n\ntype ReportWithoutVariant = Omit<ReportEntry, \"variant\">;\n\nexport const reports: Record<ReportType, ReportWithoutVariant> = {\n  [ReportType.ExposedPasswords]: {\n    title: \"exposedPasswordsReport\",\n    description: \"exposedPasswordsReportDesc\",\n    route: \"exposed-passwords-report\",\n    icon: ReportExposedPasswords,\n  },\n  [ReportType.ReusedPasswords]: {\n    title: \"reusedPasswordsReport\",\n    description: \"reusedPasswordsReportDesc\",\n    route: \"reused-passwords-report\",\n    icon: ReportReusedPasswords,\n  },\n  [ReportType.WeakPasswords]: {\n    title: \"weakPasswordsReport\",\n    description: \"weakPasswordsReportDesc\",\n    route: \"weak-passwords-report\",\n    icon: ReportWeakPasswords,\n  },\n  [ReportType.UnsecuredWebsites]: {\n    title: \"unsecuredWebsitesReport\",\n    description: \"unsecuredWebsitesReportDesc\",\n    route: \"unsecured-websites-report\",\n    icon: ReportUnsecuredWebsites,\n  },\n  [ReportType.Inactive2fa]: {\n    title: \"inactive2faReport\",\n    description: \"inactive2faReportDesc\",\n    route: \"inactive-two-factor-report\",\n    icon: ReportInactiveTwoFactor,\n  },\n  [ReportType.DataBreach]: {\n    title: \"dataBreachReport\",\n    description: \"breachDesc\",\n    route: \"breach-report\",\n    icon: ReportBreach,\n  },\n};\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared/shared.module\";\n\nimport { ReportCardComponent } from \"./report-card/report-card.component\";\nimport { ReportListComponent } from \"./report-list/report-list.component\";\n\n@NgModule({\n  imports: [CommonModule, SharedModule],\n  declarations: [ReportCardComponent, ReportListComponent],\n  exports: [ReportCardComponent, ReportListComponent],\n})\nexport class ReportsSharedModule {}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { reports, ReportType } from \"../reports\";\nimport { ReportEntry, ReportVariant } from \"../shared\";\n\n@Component({\n  selector: \"app-reports-home\",\n  templateUrl: \"reports-home.component.html\",\n})\nexport class ReportsHomeComponent implements OnInit {\n  reports: ReportEntry[];\n\n  constructor(private stateService: StateService) {}\n\n  async ngOnInit(): Promise<void> {\n    const userHasPremium = await this.stateService.getCanAccessPremium();\n\n    const reportRequiresPremium = userHasPremium\n      ? ReportVariant.Enabled\n      : ReportVariant.RequiresPremium;\n\n    this.reports = [\n      {\n        ...reports[ReportType.ExposedPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.ReusedPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.WeakPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.UnsecuredWebsites],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.Inactive2fa],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.DataBreach],\n        variant: ReportVariant.Enabled,\n      },\n    ];\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"reports\" | i18n }}</h1>\n</div>\n\n<p>{{ \"reportsDesc\" | i18n }}</p>\n\n<app-report-list [reports]=\"reports\"></app-report-list>\n","<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n\n  <div class=\"row mt-4\">\n    <div class=\"col\">\n      <a bitButton routerLink=\"./\" *ngIf=\"!homepage\">\n        <i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i>\n        {{ \"backToReports\" | i18n }}\n      </a>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { filter } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-reports-layout\",\n  templateUrl: \"reports-layout.component.html\",\n})\nexport class ReportsLayoutComponent implements OnDestroy {\n  homepage = true;\n  subscription: Subscription;\n\n  constructor(router: Router) {\n    this.subscription = router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n      .subscribe((event) => {\n        this.homepage = (event as NavigationEnd).url == \"/reports\";\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\n\nimport { HasPremiumGuard } from \"../shared/guards/has-premium.guard\";\n\nimport { BreachReportComponent } from \"./pages/breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./pages/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./pages/inactive-two-factor-report.component\";\nimport { ReportsHomeComponent } from \"./pages/reports-home.component\";\nimport { ReusedPasswordsReportComponent } from \"./pages/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./pages/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./pages/weak-passwords-report.component\";\nimport { ReportsLayoutComponent } from \"./reports-layout.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ReportsLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: \"\", pathMatch: \"full\", component: ReportsHomeComponent, data: { homepage: true } },\n      {\n        path: \"breach-report\",\n        component: BreachReportComponent,\n        data: { titleId: \"dataBreachReport\" },\n      },\n      {\n        path: \"reused-passwords-report\",\n        component: ReusedPasswordsReportComponent,\n        data: { titleId: \"reusedPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"unsecured-websites-report\",\n        component: UnsecuredWebsitesReportComponent,\n        data: { titleId: \"unsecuredWebsitesReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"weak-passwords-report\",\n        component: WeakPasswordsReportComponent,\n        data: { titleId: \"weakPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"exposed-passwords-report\",\n        component: ExposedPasswordsReportComponent,\n        data: { titleId: \"exposedPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"inactive-two-factor-report\",\n        component: InactiveTwoFactorReportComponent,\n        data: { titleId: \"inactive2faReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReportsRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared\";\n\nimport { BreachReportComponent } from \"./pages/breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./pages/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./pages/inactive-two-factor-report.component\";\nimport { ReportsHomeComponent } from \"./pages/reports-home.component\";\nimport { ReusedPasswordsReportComponent } from \"./pages/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./pages/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./pages/weak-passwords-report.component\";\nimport { ReportsLayoutComponent } from \"./reports-layout.component\";\nimport { ReportsRoutingModule } from \"./reports-routing.module\";\nimport { ReportsSharedModule } from \"./shared\";\n\n@NgModule({\n  imports: [CommonModule, SharedModule, ReportsSharedModule, ReportsRoutingModule],\n  declarations: [\n    BreachReportComponent,\n    ExposedPasswordsReportComponent,\n    InactiveTwoFactorReportComponent,\n    ReportsLayoutComponent,\n    ReportsHomeComponent,\n    ReusedPasswordsReportComponent,\n    UnsecuredWebsitesReportComponent,\n    WeakPasswordsReportComponent,\n    WeakPasswordsReportComponent,\n  ],\n})\nexport class ReportsModule {}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { AddEditComponent as OrgAddEditComponent } from \"../../organizations/vault/add-edit.component\";\nimport { AddEditComponent } from \"../../vault/add-edit.component\";\n\n@Directive()\nexport class CipherReportComponent {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n\n  loading = false;\n  hasLoaded = false;\n  ciphers: CipherView[] = [];\n  organization: Organization;\n\n  constructor(\n    private modalService: ModalService,\n    protected messagingService: MessagingService,\n    public requiresPaid: boolean,\n    private stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async load() {\n    this.loading = true;\n    await this.setCiphers();\n    this.loading = false;\n    this.hasLoaded = true;\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (!(await this.repromptCipher(cipher))) {\n      return;\n    }\n\n    const type = this.organization != null ? OrgAddEditComponent : AddEditComponent;\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      type,\n      this.cipherAddEditModalRef,\n      (comp: OrgAddEditComponent | AddEditComponent) => {\n        if (this.organization != null) {\n          (comp as OrgAddEditComponent).organization = this.organization;\n          comp.organizationId = this.organization.id;\n        }\n\n        comp.cipherId = cipher == null ? null : cipher.id;\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n\n  protected async checkAccess(): Promise<boolean> {\n    if (this.organization != null) {\n      // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n      // since all paid plans include useTotp\n      if (this.requiresPaid && !this.organization.useTotp) {\n        this.messagingService.send(\"upgradeOrganization\", { organizationId: this.organization.id });\n        return false;\n      }\n    }\n    return true;\n  }\n\n  protected async setCiphers() {\n    this.ciphers = [];\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"exposedPasswordsReport\" | i18n }}</h1>\n</div>\n<p>{{ \"exposedPasswordsReportDesc\" | i18n }}</p>\n<bit-submit-button [loading]=\"loading\" (click)=\"load()\">\n  {{ \"checkExposedPasswords\" | i18n }}\n</bit-submit-button>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noExposedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'exposedPasswordsFound' | i18n }}\" [useAlertRole]=\"true\">\n      {{ \"exposedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"exposedXTimes\" | i18n: (exposedPasswordMap.get(c.id) | number) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-exposed-passwords-report\",\n  templateUrl: \"exposed-passwords-report.component.html\",\n})\nexport class ExposedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  exposedPasswordMap = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  ngOnInit() {\n    this.checkAccess();\n  }\n\n  async load() {\n    if (await this.checkAccess()) {\n      super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const exposedPasswordCiphers: CipherView[] = [];\n    const promises: Promise<void>[] = [];\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const promise = this.auditService.passwordLeaked(c.login.password).then((exposedCount) => {\n        if (exposedCount > 0) {\n          exposedPasswordCiphers.push(c);\n          this.exposedPasswordMap.set(c.id, exposedCount);\n        }\n      });\n      promises.push(promise);\n    });\n    await Promise.all(promises);\n    this.ciphers = exposedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"inactive2faReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"inactive2faReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noInactive2fa\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'inactive2faFound' | i18n }}\">\n      {{ \"inactive2faFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <a\n              bitBadge\n              href=\"{{ cipherDocs.get(c.id) }}\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              *ngIf=\"cipherDocs.has(c.id)\"\n            >\n              {{ \"instructions\" | i18n }}</a\n            >\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"inactive-two-factor-report.component.html\",\n})\nexport class InactiveTwoFactorReportComponent extends CipherReportComponent implements OnInit {\n  services = new Map<string, string>();\n  cipherDocs = new Map<string, string>();\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    try {\n      await this.load2fa();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (this.services.size > 0) {\n      const allCiphers = await this.getAllCiphers();\n      const inactive2faCiphers: CipherView[] = [];\n      const promises: Promise<void>[] = [];\n      const docs = new Map<string, string>();\n      allCiphers.forEach((c) => {\n        if (\n          c.type !== CipherType.Login ||\n          (c.login.totp != null && c.login.totp !== \"\") ||\n          !c.login.hasUris ||\n          c.isDeleted\n        ) {\n          return;\n        }\n        for (let i = 0; i < c.login.uris.length; i++) {\n          const u = c.login.uris[i];\n          if (u.uri != null && u.uri !== \"\") {\n            const uri = u.uri.replace(\"www.\", \"\");\n            const domain = Utils.getDomain(uri);\n            if (domain != null && this.services.has(domain)) {\n              if (this.services.get(domain) != null) {\n                docs.set(c.id, this.services.get(domain));\n              }\n              inactive2faCiphers.push(c);\n            }\n          }\n        }\n      });\n      await Promise.all(promises);\n      this.ciphers = inactive2faCiphers;\n      this.cipherDocs = docs;\n    }\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  private async load2fa() {\n    if (this.services.size > 0) {\n      return;\n    }\n    const response = await fetch(new Request(\"https://2fa.directory/api/v3/totp.json\"));\n    if (response.status !== 200) {\n      throw new Error();\n    }\n    const responseJson = await response.json();\n    for (const service of responseJson) {\n      const serviceData = service[1];\n      if (serviceData.domain == null) {\n        continue;\n      }\n      if (serviceData.documentation == null) {\n        continue;\n      }\n      if (serviceData[\"additional-domains\"] != null) {\n        for (const additionalDomain of serviceData[\"additional-domains\"]) {\n          this.services.set(additionalDomain, serviceData.documentation);\n        }\n      }\n      this.services.set(serviceData.domain, serviceData.documentation);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"reusedPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"reusedPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noReusedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'reusedPasswordsFound' | i18n }}\">\n      {{ \"reusedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"reusedXTimes\" | i18n: passwordUseMap.get(c.login.password) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"reused-passwords-report.component.html\",\n})\nexport class ReusedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordUseMap: Map<string, number>;\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const ciphersWithPasswords: CipherView[] = [];\n    this.passwordUseMap = new Map<string, number>();\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      ciphersWithPasswords.push(c);\n      if (this.passwordUseMap.has(c.login.password)) {\n        this.passwordUseMap.set(c.login.password, this.passwordUseMap.get(c.login.password) + 1);\n      } else {\n        this.passwordUseMap.set(c.login.password, 1);\n      }\n    });\n    const reusedPasswordCiphers = ciphersWithPasswords.filter(\n      (c) =>\n        this.passwordUseMap.has(c.login.password) && this.passwordUseMap.get(c.login.password) > 1\n    );\n    this.ciphers = reusedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from an organization view\n    return true;\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"unsecuredWebsitesReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"unsecuredWebsitesReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noUnsecuredWebsites\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'unsecuredWebsitesFound' | i18n }}\">\n      {{ \"unsecuredWebsitesFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"unsecured-websites-report.component.html\",\n})\nexport class UnsecuredWebsitesReportComponent extends CipherReportComponent implements OnInit {\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const unsecuredCiphers = allCiphers.filter((c) => {\n      if (c.type !== CipherType.Login || !c.login.hasUris || c.isDeleted) {\n        return false;\n      }\n      return c.login.uris.some((u) => u.uri != null && u.uri.indexOf(\"http://\") === 0);\n    });\n    this.ciphers = unsecuredCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"weakPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"weakPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noWeakPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'weakPasswordsFound' | i18n }}\">\n      {{ \"weakPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge [badgeType]=\"passwordStrengthMap.get(c.id)[1]\">\n              {{ passwordStrengthMap.get(c.id)[0] | i18n }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"weak-passwords-report.component.html\",\n})\nexport class WeakPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordStrengthMap = new Map<string, [string, string]>();\n\n  private passwordStrengthCache = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected passwordGenerationService: PasswordGenerationService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const weakPasswordCiphers: CipherView[] = [];\n    const isUserNameNotEmpty = (c: CipherView): boolean => {\n      return c.login.username != null && c.login.username.trim() !== \"\";\n    };\n    const getCacheKey = (c: CipherView): string => {\n      return c.login.password + \"_____\" + (isUserNameNotEmpty(c) ? c.login.username : \"\");\n    };\n\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const hasUserName = isUserNameNotEmpty(c);\n      const cacheKey = getCacheKey(c);\n      if (!this.passwordStrengthCache.has(cacheKey)) {\n        let userInput: string[] = [];\n        if (hasUserName) {\n          const atPosition = c.login.username.indexOf(\"@\");\n          if (atPosition > -1) {\n            userInput = userInput\n              .concat(\n                c.login.username\n                  .substr(0, atPosition)\n                  .trim()\n                  .toLowerCase()\n                  .split(/[^A-Za-z0-9]/)\n              )\n              .filter((i) => i.length >= 3);\n          } else {\n            userInput = c.login.username\n              .trim()\n              .toLowerCase()\n              .split(/[^A-Za-z0-9]/)\n              .filter((i) => i.length >= 3);\n          }\n        }\n        const result = this.passwordGenerationService.passwordStrength(\n          c.login.password,\n          userInput.length > 0 ? userInput : null\n        );\n        this.passwordStrengthCache.set(cacheKey, result.score);\n      }\n      const score = this.passwordStrengthCache.get(cacheKey);\n      if (score != null && score <= 2) {\n        this.passwordStrengthMap.set(c.id, this.scoreKey(score));\n        weakPasswordCiphers.push(c);\n      }\n    });\n    weakPasswordCiphers.sort((a, b) => {\n      return (\n        this.passwordStrengthCache.get(getCacheKey(a)) -\n        this.passwordStrengthCache.get(getCacheKey(b))\n      );\n    });\n    this.ciphers = weakPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n\n  private scoreKey(score: number): [string, string] {\n    switch (score) {\n      case 4:\n        return [\"strong\", \"success\"];\n      case 3:\n        return [\"good\", \"primary\"];\n      case 2:\n        return [\"weak\", \"warning\"];\n      default:\n        return [\"veryWeak\", \"danger\"];\n    }\n  }\n}\n","export enum ReportVariant {\n  Enabled = \"Enabled\",\n  RequiresPremium = \"RequiresPremium\",\n  RequiresUpgrade = \"RequiresUpgrade\",\n}\n","import { Component, HostBinding, Input } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { Icon, isIcon } from \"./icon\";\n\n@Component({\n  selector: \"bit-icon\",\n  template: ``,\n})\nexport class BitIconComponent {\n  @Input() icon: Icon;\n\n  constructor(private domSanitizer: DomSanitizer) {}\n\n  @HostBinding(\"innerHtml\")\n  protected get innerHtml() {\n    if (!isIcon(this.icon)) {\n      return \"\";\n    }\n\n    const svg = this.icon.svg;\n    return this.domSanitizer.bypassSecurityTrustHtml(svg);\n  }\n}\n","<a\n  class=\"tw-block tw-h-full tw-max-w-72 tw-overflow-hidden tw-rounded tw-border tw-border-solid tw-border-secondary-300 !tw-text-main tw-transition-all hover:tw-scale-105 hover:tw-no-underline focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2\"\n  [routerLink]=\"route\"\n>\n  <div class=\"tw-relative\">\n    <div\n      class=\"tw-flex tw-h-28 tw-bg-background-alt2 tw-text-center tw-text-primary-300\"\n      [ngClass]=\"{ 'tw-grayscale': disabled }\"\n    >\n      <div class=\"tw-m-auto\"><bit-icon [icon]=\"icon\"></bit-icon></div>\n    </div>\n    <div class=\"tw-p-5\" [ngClass]=\"{ 'tw-grayscale': disabled }\">\n      <h3 class=\"tw-mb-4 tw-text-xl tw-font-bold\">{{ title }}</h3>\n      <p class=\"tw-mb-0\">{{ description }}</p>\n    </div>\n    <span\n      bitBadge\n      badgeType=\"success\"\n      class=\"tw-absolute tw-left-2 tw-top-2 tw-leading-none\"\n      *ngIf=\"disabled\"\n    >\n      <ng-container *ngIf=\"requiresPremium\">{{ \"premium\" | i18n }}</ng-container>\n      <ng-container *ngIf=\"!requiresPremium\">{{ \"upgrade\" | i18n }}</ng-container>\n    </span>\n  </div>\n</a>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ReportVariant } from \"../models/report-variant\";\n\n@Component({\n  selector: \"app-report-card\",\n  templateUrl: \"report-card.component.html\",\n})\nexport class ReportCardComponent {\n  @Input() title: string;\n  @Input() description: string;\n  @Input() route: string;\n  @Input() icon: string;\n  @Input() variant: ReportVariant;\n\n  protected get disabled() {\n    return this.variant != ReportVariant.Enabled;\n  }\n\n  protected get requiresPremium() {\n    return this.variant == ReportVariant.RequiresPremium;\n  }\n}\n","<div class=\"tw-inline-grid tw-grid-cols-3 tw-gap-4\">\n  <div *ngFor=\"let report of reports\">\n    <app-report-card\n      [title]=\"report.title | i18n\"\n      [description]=\"report.description | i18n\"\n      [route]=\"report.route\"\n      [variant]=\"report.variant\"\n      [icon]=\"report.icon\"\n    ></app-report-card>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ReportEntry } from \"../models/report-entry\";\n\n@Component({\n  selector: \"app-report-list\",\n  templateUrl: \"report-list.component.html\",\n})\nexport class ReportListComponent {\n  @Input() reports: ReportEntry[];\n}\n","export class StorageRequest {\n  storageGbAdjustment: number;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ (add ? \"addStorage\" : \"removeStorage\") | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"storageAdjustment\">{{\n          (add ? \"gbStorageAdd\" : \"gbStorageRemove\") | i18n\n        }}</label>\n        <input\n          id=\"storageAdjustment\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"StroageGbAdjustment\"\n          [(ngModel)]=\"storageAdjustment\"\n          min=\"0\"\n          max=\"99\"\n          step=\"1\"\n          required\n        />\n      </div>\n    </div>\n    <div *ngIf=\"add\" class=\"mb-3\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ storageAdjustment || 0 }} GB &times;\n      {{ storageGbPrice | currency: \"$\" }} = {{ adjustedStorageTotal | currency: \"$\" }} /{{\n        interval | i18n\n      }}\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n    <small class=\"d-block text-muted mt-3\">\n      {{ (add ? \"storageAddNote\" : \"storageRemoveNote\") | i18n }}\n    </small>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StorageRequest } from \"@bitwarden/common/models/request/storageRequest\";\nimport { PaymentResponse } from \"@bitwarden/common/models/response/paymentResponse\";\n\nimport { PaymentComponent } from \"./payment.component\";\n\n@Component({\n  selector: \"app-adjust-storage\",\n  templateUrl: \"adjust-storage.component.html\",\n})\nexport class AdjustStorageComponent {\n  @Input() storageGbPrice = 0;\n  @Input() add = true;\n  @Input() organizationId: string;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter<number>();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n\n  storageAdjustment = 0;\n  formPromise: Promise<PaymentResponse | void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    try {\n      const request = new StorageRequest();\n      request.storageGbAdjustment = this.storageAdjustment;\n      if (!this.add) {\n        request.storageGbAdjustment *= -1;\n      }\n\n      let paymentFailed = false;\n      const action = async () => {\n        let response: Promise<PaymentResponse>;\n        if (this.organizationId == null) {\n          response = this.formPromise = this.apiService.postAccountStorage(request);\n        } else {\n          response = this.formPromise = this.organizationApiService.updateStorage(\n            this.organizationId,\n            request\n          );\n        }\n        const result = await response;\n        if (result != null && result.paymentIntentClientSecret != null) {\n          try {\n            await this.paymentComponent.handleStripeCardPayment(\n              result.paymentIntentClientSecret,\n              null\n            );\n          } catch {\n            paymentFailed = true;\n          }\n        }\n      };\n      this.formPromise = action();\n      await this.formPromise;\n      this.onAdjusted.emit(this.storageAdjustment);\n      if (paymentFailed) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          null,\n          this.i18nService.t(\"couldNotChargeCardPayInvoice\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"../billing\"], { relativeTo: this.activatedRoute });\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"adjustedStorage\", request.storageGbAdjustment.toString())\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  get adjustedStorageTotal(): number {\n    return this.storageGbPrice * this.storageAdjustment;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"apiKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"apiKeyTitle\">{{ apiKeyTitle | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ apiKeyDescription | i18n }}</p>\n        <app-user-verification\n          [(ngModel)]=\"masterPassword\"\n          ngDefaultControl\n          name=\"secret\"\n          *ngIf=\"!clientSecret\"\n        >\n        </app-user-verification>\n\n        <app-callout type=\"warning\" *ngIf=\"clientSecret\">{{ apiKeyWarning | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          title=\"{{ 'oauth2ClientCredentials' | i18n }}\"\n          icon=\"bwi bwi-key\"\n          *ngIf=\"clientSecret\"\n        >\n          <p class=\"mb-1\">\n            <strong>client_id:</strong><br />\n            <code>{{ clientId }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>client_secret:</strong><br />\n            <code>{{ clientSecret }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>scope:</strong><br />\n            <code>{{ scope }}</code>\n          </p>\n          <p class=\"mb-0\">\n            <strong>grant_type:</strong><br />\n            <code>{{ grantType }}</code>\n          </p>\n        </app-callout>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!clientSecret\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (isRotation ? \"rotateApiKey\" : \"viewApiKey\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/apiKeyResponse\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-api-key\",\n  templateUrl: \"api-key.component.html\",\n})\nexport class ApiKeyComponent {\n  keyType: string;\n  isRotation: boolean;\n  postKey: (entityId: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  entityId: string;\n  scope: string;\n  grantType: string;\n  apiKeyTitle: string;\n  apiKeyWarning: string;\n  apiKeyDescription: string;\n\n  masterPassword: Verification;\n  formPromise: Promise<ApiKeyResponse>;\n  clientId: string;\n  clientSecret: string;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.postKey(this.entityId, request));\n      const response = await this.formPromise;\n      this.clientSecret = response.apiKey;\n      this.clientId = `${this.keyType}.${this.entityId}`;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export enum TransactionType {\n  Charge = 0,\n  Credit = 1,\n  PromotionalCredit = 2,\n  ReferralCredit = 3,\n  Refund = 4,\n}\n","<h2 class=\"mt-3\">{{ \"invoices\" | i18n }}</h2>\n<p *ngIf=\"!invoices || !invoices.length\">{{ \"noInvoices\" | i18n }}</p>\n<table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n  <tbody>\n    <tr *ngFor=\"let i of invoices\">\n      <td>{{ i.date | date: \"mediumDate\" }}</td>\n      <td>\n        <a\n          href=\"{{ i.pdfUrl }}\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          class=\"mr-2\"\n          appA11yTitle=\"{{ 'downloadInvoice' | i18n }}\"\n        >\n          <i class=\"bwi bwi-file-pdf\" aria-hidden=\"true\"></i\n        ></a>\n        <a href=\"{{ i.url }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ 'viewInvoice' | i18n }}\">\n          {{ \"invoiceNumber\" | i18n: i.number }}</a\n        >\n      </td>\n      <td>{{ i.amount | currency: \"$\" }}</td>\n      <td>\n        <span *ngIf=\"i.paid\">\n          <i class=\"bwi bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"paid\" | i18n }}\n        </span>\n        <span *ngIf=\"!i.paid\">\n          <i class=\"bwi bwi-exclamation-circle text-muted\" aria-hidden=\"true\"></i>\n          {{ \"unpaid\" | i18n }}\n        </span>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<h2 class=\"spaced-header\">{{ \"transactions\" | i18n }}</h2>\n<p *ngIf=\"!transactions || !transactions.length\">{{ \"noTransactions\" | i18n }}</p>\n<table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n  <tbody>\n    <tr *ngFor=\"let t of transactions\">\n      <td>{{ t.createdDate | date: \"mediumDate\" }}</td>\n      <td>\n        <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n          {{ \"chargeNoun\" | i18n }}\n        </span>\n        <span *ngIf=\"t.type === transactionType.Refund\">{{ \"refundNoun\" | i18n }}</span>\n      </td>\n      <td>\n        <i\n          class=\"bwi bwi-fw\"\n          *ngIf=\"t.paymentMethodType\"\n          aria-hidden=\"true\"\n          [ngClass]=\"paymentMethodClasses(t.paymentMethodType)\"\n        ></i>\n        {{ t.details }}\n      </td>\n      <td\n        [ngClass]=\"{ 'text-strike': t.refunded }\"\n        title=\"{{ (t.refunded ? 'refunded' : '') | i18n }}\"\n      >\n        {{ t.amount | currency: \"$\" }}\n      </td>\n    </tr>\n  </tbody>\n</table>\n<small class=\"text-muted\">* {{ \"chargesStatement\" | i18n: \"BITWARDEN\" }}</small>\n","import { Component, Input } from \"@angular/core\";\n\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { TransactionType } from \"@bitwarden/common/enums/transactionType\";\nimport { BillingHistoryResponse } from \"@bitwarden/common/models/response/billingHistoryResponse\";\n\n@Component({\n  selector: \"app-billing-history\",\n  templateUrl: \"billing-history.component.html\",\n})\nexport class BillingHistoryComponent {\n  @Input()\n  billing: BillingHistoryResponse;\n\n  paymentMethodType = PaymentMethodType;\n  transactionType = TransactionType;\n\n  get invoices() {\n    return this.billing != null ? this.billing.invoices : null;\n  }\n\n  get transactions() {\n    return this.billing != null ? this.billing.transactions : null;\n  }\n\n  paymentMethodClasses(type: PaymentMethodType) {\n    switch (type) {\n      case PaymentMethodType.Card:\n        return [\"bwi-credit-card\"];\n      case PaymentMethodType.BankAccount:\n      case PaymentMethodType.WireTransfer:\n        return [\"bwi-bank\"];\n      case PaymentMethodType.BitPay:\n        return [\"bwi-bitcoin text-warning\"];\n      case PaymentMethodType.PayPal:\n        return [\"bwi-paypal text-primary\"];\n      default:\n        return [];\n    }\n  }\n}\n","export class VerifyBankRequest {\n  amount1: number;\n  amount2: number;\n}\n","export class BitPayInvoiceRequest {\n  userId: string;\n  organizationId: string;\n  credit: boolean;\n  amount: number;\n  returnUrl: string;\n  name: string;\n  email: string;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"addCredit\" | i18n }}</h3>\n    <div class=\"mb-4 text-lg\" *ngIf=\"showOptions\">\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-paypal\"\n          [value]=\"paymentMethodType.PayPal\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-paypal\">\n          <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n        >\n      </div>\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-bitcoin\"\n          [value]=\"paymentMethodType.BitPay\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-bitcoin\">\n          <i class=\"bwi bwi-fw bwi-bitcoin\" aria-hidden=\"true\"></i> Bitcoin</label\n        >\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"row\">\n        <div class=\"col-4\">\n          <label for=\"creditAmount\">{{ \"amount\" | i18n }}</label>\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\"><span class=\"input-group-text\">$USD</span></div>\n            <input\n              id=\"creditAmount\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"CreditAmount\"\n              [(ngModel)]=\"creditAmount\"\n              (blur)=\"formatAmount()\"\n              required\n            />\n          </div>\n        </div>\n      </div>\n      <small class=\"form-text text-muted\">{{ \"creditDelayed\" | i18n }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading || ppLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n<form #ppButtonForm action=\"{{ ppButtonFormAction }}\" method=\"post\" target=\"_top\">\n  <input type=\"hidden\" name=\"cmd\" value=\"_xclick\" />\n  <input type=\"hidden\" name=\"business\" value=\"{{ ppButtonBusinessId }}\" />\n  <input type=\"hidden\" name=\"button_subtype\" value=\"services\" />\n  <input type=\"hidden\" name=\"no_note\" value=\"1\" />\n  <input type=\"hidden\" name=\"no_shipping\" value=\"1\" />\n  <input type=\"hidden\" name=\"rm\" value=\"1\" />\n  <input type=\"hidden\" name=\"return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"cancel_return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\n  <input type=\"hidden\" name=\"image_url\" value=\"https://bitwarden.com/images/paypal-banner.png\" />\n  <input type=\"hidden\" name=\"bn\" value=\"PP-BuyNowBF:btn_buynow_LG.gif:NonHosted\" />\n  <input type=\"hidden\" name=\"amount\" value=\"{{ creditAmount }}\" />\n  <input type=\"hidden\" name=\"custom\" value=\"{{ ppButtonCustomField }}\" />\n  <input type=\"hidden\" name=\"item_name\" value=\"Bitwarden Account Credit\" />\n  <input type=\"hidden\" name=\"item_number\" value=\"{{ subject }}\" />\n</form>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { PayPalConfig } from \"@bitwarden/common/abstractions/environment.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { BitPayInvoiceRequest } from \"@bitwarden/common/models/request/bitPayInvoiceRequest\";\n\n@Component({\n  selector: \"app-add-credit\",\n  templateUrl: \"add-credit.component.html\",\n})\nexport class AddCreditComponent implements OnInit {\n  @Input() creditAmount: string;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.PayPal;\n  @Input() organizationId: string;\n  @Output() onAdded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(\"ppButtonForm\", { read: ElementRef, static: true }) ppButtonFormRef: ElementRef;\n\n  paymentMethodType = PaymentMethodType;\n  ppButtonFormAction: string;\n  ppButtonBusinessId: string;\n  ppButtonCustomField: string;\n  ppLoading = false;\n  subject: string;\n  returnUrl: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private name: string;\n  private email: string;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {\n    const payPalConfig = process.env.PAYPAL_CONFIG as PayPalConfig;\n    this.ppButtonFormAction = payPalConfig.buttonAction;\n    this.ppButtonBusinessId = payPalConfig.businessId;\n  }\n\n  async ngOnInit() {\n    if (this.organizationId != null) {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"20.00\";\n      }\n      this.ppButtonCustomField = \"organization_id:\" + this.organizationId;\n      const org = await this.organizationService.get(this.organizationId);\n      if (org != null) {\n        this.subject = org.name;\n        this.name = org.name;\n      }\n    } else {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"10.00\";\n      }\n      this.userId = await this.stateService.getUserId();\n      this.subject = await this.stateService.getEmail();\n      this.email = this.subject;\n      this.ppButtonCustomField = \"user_id:\" + this.userId;\n    }\n    this.ppButtonCustomField += \",account_credit:1\";\n    this.returnUrl = window.location.href;\n  }\n\n  async submit() {\n    if (this.creditAmount == null || this.creditAmount === \"\") {\n      return;\n    }\n\n    if (this.method === PaymentMethodType.PayPal) {\n      this.ppButtonFormRef.nativeElement.submit();\n      this.ppLoading = true;\n      return;\n    }\n    if (this.method === PaymentMethodType.BitPay) {\n      try {\n        const req = new BitPayInvoiceRequest();\n        req.email = this.email;\n        req.name = this.name;\n        req.credit = true;\n        req.amount = this.creditAmountNumber;\n        req.organizationId = this.organizationId;\n        req.userId = this.userId;\n        req.returnUrl = this.returnUrl;\n        this.formPromise = this.apiService.postBitPayInvoice(req);\n        const bitPayUrl: string = await this.formPromise;\n        this.platformUtilsService.launchUri(bitPayUrl);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      return;\n    }\n    try {\n      this.onAdded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  formatAmount() {\n    try {\n      if (this.creditAmount != null && this.creditAmount !== \"\") {\n        const floatAmount = Math.abs(parseFloat(this.creditAmount));\n        if (floatAmount > 0) {\n          this.creditAmount = parseFloat((Math.round(floatAmount * 100) / 100).toString())\n            .toFixed(2)\n            .toString();\n          return;\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.creditAmount = \"\";\n  }\n\n  get creditAmountNumber(): number {\n    if (this.creditAmount != null && this.creditAmount !== \"\") {\n      try {\n        return parseFloat(this.creditAmount);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return null;\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../request/organizationTaxInfoUpdateRequest\";\n\nexport class PaymentRequest extends OrganizationTaxInfoUpdateRequest {\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n}\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { PaymentRequest } from \"@bitwarden/common/models/request/paymentRequest\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-adjust-payment\",\n  templateUrl: \"adjust-payment.component.html\",\n})\nexport class AdjustPaymentComponent {\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent, { static: true }) taxInfoComponent: TaxInfoComponent;\n\n  @Input() currentType?: PaymentMethodType;\n  @Input() organizationId: string;\n  @Output() onAdjusted = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  paymentMethodType = PaymentMethodType;\n  formPromise: Promise<void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    try {\n      const request = new PaymentRequest();\n      this.formPromise = this.paymentComponent.createPaymentToken().then((result) => {\n        request.paymentToken = result[0];\n        request.paymentMethodType = result[1];\n        request.postalCode = this.taxInfoComponent.taxInfo.postalCode;\n        request.country = this.taxInfoComponent.taxInfo.country;\n        if (this.organizationId == null) {\n          return this.apiService.postAccountPayment(request);\n        } else {\n          request.taxId = this.taxInfoComponent.taxInfo.taxId;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          request.line1 = this.taxInfoComponent.taxInfo.line1;\n          request.line2 = this.taxInfoComponent.taxInfo.line2;\n          request.city = this.taxInfoComponent.taxInfo.city;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          return this.organizationApiService.updatePayment(this.organizationId, request);\n        }\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedPaymentMethod\")\n      );\n      this.onAdjusted.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  changeCountry() {\n    if (this.taxInfoComponent.taxInfo.country === \"US\") {\n      this.paymentComponent.hideBank = !this.organizationId;\n    } else {\n      this.paymentComponent.hideBank = true;\n      if (this.paymentComponent.method === PaymentMethodType.BankAccount) {\n        this.paymentComponent.method = PaymentMethodType.Card;\n        this.paymentComponent.changeMethod();\n      }\n    }\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">\n      {{ (currentType != null ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n    </h3>\n    <app-payment [hideBank]=\"!organizationId\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changeCountry()\"></app-tax-info>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","<div class=\"d-flex\" [ngClass]=\"headerClass\">\n  <h1>\n    {{ \"paymentMethod\" | i18n }}\n  </h1>\n  <button\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ (isCreditBalance ? \"accountCredit\" : \"accountBalance\") | i18n }}</h2>\n  <p class=\"text-lg\">\n    <strong>{{ creditOrBalance | currency: \"$\" }}</strong>\n  </p>\n  <p>{{ \"creditAppliedDesc\" | i18n }}</p>\n  <button bitButton buttonType=\"secondary\" (click)=\"addCredit()\" *ngIf=\"!showAddCredit\">\n    {{ \"addCredit\" | i18n }}\n  </button>\n  <app-add-credit\n    (onAdded)=\"closeAddCredit(true)\"\n    (onCanceled)=\"closeAddCredit(false)\"\n    *ngIf=\"showAddCredit\"\n  >\n  </app-add-credit>\n  <h2 class=\"spaced-header\">{{ \"paymentMethod\" | i18n }}</h2>\n  <p *ngIf=\"!paymentSource\">{{ \"noPaymentMethod\" | i18n }}</p>\n  <ng-container *ngIf=\"paymentSource\">\n    <app-callout\n      type=\"warning\"\n      title=\"{{ 'verifyBankAccount' | i18n }}\"\n      *ngIf=\"\n        forOrganization &&\n        paymentSource.type === paymentMethodType.BankAccount &&\n        paymentSource.needsVerification\n      \"\n    >\n      <p>{{ \"verifyBankAccountDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}</p>\n      <form\n        #verifyForm\n        class=\"form-inline\"\n        (ngSubmit)=\"verifyBank()\"\n        [formGroup]=\"verifyBankForm\"\n        [appApiAction]=\"verifyBankPromise\"\n        ngNativeValidate\n      >\n        <bit-form-field class=\"tw-mr-2 tw-w-40\">\n          <bit-label>{{ \"amountX\" | i18n: \"1\" }}</bit-label>\n          <input bitInput type=\"number\" step=\"1\" placeholder=\"xx\" formControlName=\"amount1\" />\n          <span bitPrefix>$0.</span>\n        </bit-form-field>\n        <bit-form-field class=\"tw-mr-2 tw-w-40\">\n          <bit-label>{{ \"amountX\" | i18n: \"2\" }}</bit-label>\n          <input bitInput type=\"number\" step=\"1\" placeholder=\"xx\" formControlName=\"amount2\" />\n          <span bitPrefix>$0.</span>\n        </bit-form-field>\n        <button\n          bitButton\n          buttonType=\"primary\"\n          type=\"submit\"\n          class=\"btn-submit\"\n          [disabled]=\"verifyForm.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"verifyBankAccount\" | i18n }}</span>\n        </button>\n      </form>\n    </app-callout>\n    <p>\n      <i class=\"bwi bwi-fw\" [ngClass]=\"paymentSourceClasses\"></i>\n      <span *ngIf=\"paymentSourceInApp\">{{ \"inAppPurchase\" | i18n }}</span>\n      {{ paymentSource.description }}\n    </p>\n  </ng-container>\n  <button bitButton buttonType=\"secondary\" (click)=\"changePayment()\" *ngIf=\"!showAdjustPayment\">\n    {{ (paymentSource ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n  </button>\n  <app-adjust-payment\n    [currentType]=\"paymentSource != null ? paymentSource.type : null\"\n    (onAdjusted)=\"closePayment(true)\"\n    (onCanceled)=\"closePayment(false)\"\n    *ngIf=\"showAdjustPayment\"\n  >\n  </app-adjust-payment>\n  <ng-container *ngIf=\"forOrganization\">\n    <h2 class=\"spaced-header\">{{ \"taxInformation\" | i18n }}</h2>\n    <p>{{ \"taxInformationDesc\" | i18n }}</p>\n    <div *ngIf=\"!org || loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </div>\n    <form\n      *ngIf=\"org && !loading\"\n      #formTax\n      (ngSubmit)=\"submitTaxInfo()\"\n      [appApiAction]=\"taxFormPromise\"\n      ngNativeValidate\n    >\n      <app-tax-info></app-tax-info>\n      <button\n        bitButton\n        buttonType=\"primary\"\n        type=\"submit\"\n        class=\"btn-submit\"\n        [disabled]=\"formTax.loading\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"save\" | i18n }}</span>\n      </button>\n    </form>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { VerifyBankRequest } from \"@bitwarden/common/models/request/verifyBankRequest\";\nimport { BillingPaymentResponse } from \"@bitwarden/common/models/response/billingPaymentResponse\";\nimport { OrganizationResponse } from \"@bitwarden/common/models/response/organizationResponse\";\n\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-payment-method\",\n  templateUrl: \"payment-method.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PaymentMethodComponent implements OnInit {\n  @ViewChild(TaxInfoComponent) taxInfo: TaxInfoComponent;\n\n  loading = false;\n  firstLoaded = false;\n  showAdjustPayment = false;\n  showAddCredit = false;\n  billing: BillingPaymentResponse;\n  org: OrganizationResponse;\n  paymentMethodType = PaymentMethodType;\n  organizationId: string;\n\n  verifyBankPromise: Promise<any>;\n  taxFormPromise: Promise<any>;\n\n  verifyBankForm = this.formBuilder.group({\n    amount1: new FormControl<number>(null, [\n      Validators.required,\n      Validators.max(99),\n      Validators.min(0),\n    ]),\n    amount2: new FormControl<number>(null, [\n      Validators.required,\n      Validators.max(99),\n      Validators.min(0),\n    ]),\n  });\n\n  constructor(\n    protected apiService: ApiService,\n    protected organizationApiService: OrganizationApiServiceAbstraction,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private logService: LogService,\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.params.subscribe(async (params) => {\n      if (params.organizationId) {\n        this.organizationId = params.organizationId;\n      } else if (this.platformUtilsService.isSelfHost()) {\n        this.router.navigate([\"/settings/subscription\"]);\n        return;\n      }\n\n      await this.load();\n      this.firstLoaded = true;\n    });\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n\n    if (this.forOrganization) {\n      const billingPromise = this.organizationApiService.getBilling(this.organizationId);\n      const orgPromise = this.organizationApiService.get(this.organizationId);\n\n      [this.billing, this.org] = await Promise.all([billingPromise, orgPromise]);\n    } else {\n      this.billing = await this.apiService.getUserBillingPayment();\n    }\n\n    this.loading = false;\n  }\n\n  addCredit() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"addCredit\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAddCredit = true;\n  }\n\n  closeAddCredit(load: boolean) {\n    this.showAddCredit = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  changePayment() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"changePaymentMethod\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAdjustPayment = true;\n  }\n\n  closePayment(load: boolean) {\n    this.showAdjustPayment = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  async verifyBank() {\n    if (this.loading || !this.forOrganization) {\n      return;\n    }\n\n    try {\n      const request = new VerifyBankRequest();\n      request.amount1 = this.verifyBankForm.value.amount1;\n      request.amount2 = this.verifyBankForm.value.amount2;\n      this.verifyBankPromise = this.organizationApiService.verifyBank(this.organizationId, request);\n      await this.verifyBankPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"verifiedBankAccount\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async submitTaxInfo() {\n    this.taxFormPromise = this.taxInfo.submitTaxInfo();\n    await this.taxFormPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"taxInfoUpdated\"));\n  }\n\n  get isCreditBalance() {\n    return this.billing == null || this.billing.balance <= 0;\n  }\n\n  get creditOrBalance() {\n    return Math.abs(this.billing != null ? this.billing.balance : 0);\n  }\n\n  get paymentSource() {\n    return this.billing != null ? this.billing.paymentSource : null;\n  }\n\n  get forOrganization() {\n    return this.organizationId != null;\n  }\n\n  get headerClass() {\n    return this.forOrganization ? [\"page-header\"] : [\"tabbed-header\"];\n  }\n\n  get paymentSourceClasses() {\n    if (this.paymentSource == null) {\n      return [];\n    }\n    switch (this.paymentSource.type) {\n      case PaymentMethodType.Card:\n        return [\"bwi-credit-card\"];\n      case PaymentMethodType.BankAccount:\n        return [\"bwi-bank\"];\n      case PaymentMethodType.Check:\n        return [\"bwi-money\"];\n      case PaymentMethodType.AppleInApp:\n        return [\"bwi-apple text-muted\"];\n      case PaymentMethodType.GoogleInApp:\n        return [\"bwi-google text-muted\"];\n      case PaymentMethodType.PayPal:\n        return [\"bwi-paypal text-primary\"];\n      default:\n        return [];\n    }\n  }\n\n  get paymentSourceInApp() {\n    return (\n      this.paymentSource != null &&\n      (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n        this.paymentSource.type === PaymentMethodType.GoogleInApp)\n    );\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"darkInputColor\":\"#fff\",\"darkInputPlaceholderColor\":\"#bac0ce\",\"lightInputColor\":\"#465057\",\"lightInputPlaceholderColor\":\"#b6b8b8\"};","<div class=\"mb-4 text-lg\" *ngIf=\"showOptions && showMethods\">\n  <div class=\"form-check form-check-inline mr-4\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-card\"\n      [value]=\"paymentMethodType.Card\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-card\">\n      <i class=\"bwi bwi-fw bwi-credit-card\" aria-hidden=\"true\"></i> {{ \"creditCard\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline mr-4\" *ngIf=\"!hideBank\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-bank\"\n      [value]=\"paymentMethodType.BankAccount\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-bank\">\n      <i class=\"bwi bwi-fw bwi-bank\" aria-hidden=\"true\"></i> {{ \"bankAccount\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hidePaypal\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-paypal\"\n      [value]=\"paymentMethodType.PayPal\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-paypal\">\n      <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hideCredit\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-credit\"\n      [value]=\"paymentMethodType.Credit\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-credit\">\n      <i class=\"bwi bwi-fw bwi-dollar\" aria-hidden=\"true\"></i> {{ \"accountCredit\" | i18n }}</label\n    >\n  </div>\n</div>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Card\">\n  <div class=\"row\">\n    <div [ngClass]=\"trialFlow ? 'col-5' : 'col-4'\" class=\"form-group\">\n      <label for=\"stripe-card-number-element\">{{ \"number\" | i18n }}</label>\n      <div id=\"stripe-card-number-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div *ngIf=\"!trialFlow\" class=\"form-group col-8 d-flex align-items-end\">\n      <img\n        src=\"../../images/cards.png\"\n        alt=\"Visa, MasterCard, Discover, AmEx, JCB, Diners Club, UnionPay\"\n        width=\"323\"\n        height=\"32\"\n      />\n    </div>\n    <div [ngClass]=\"trialFlow ? 'col-3' : 'col-4'\" class=\"form-group\">\n      <label for=\"stripe-card-expiry-element\">{{ \"expiration\" | i18n }}</label>\n      <div id=\"stripe-card-expiry-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div class=\"form-group col-4\">\n      <div class=\"d-flex\">\n        <label for=\"stripe-card-cvc-element\">\n          {{ \"securityCode\" | i18n }}\n        </label>\n        <a\n          href=\"https://www.cvvnumber.com/cvv.html\"\n          tabindex=\"-1\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          class=\"ml-auto\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n      <div id=\"stripe-card-cvc-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.BankAccount\">\n  <app-callout type=\"warning\" title=\"{{ 'verifyBankAccount' | i18n }}\">\n    {{ \"verifyBankAccountInitialDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"routing_number\">{{ \"routingNumber\" | i18n }}</label>\n      <input\n        id=\"routing_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"routing_number\"\n        [(ngModel)]=\"bank.routing_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_number\">{{ \"accountNumber\" | i18n }}</label>\n      <input\n        id=\"account_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_number\"\n        [(ngModel)]=\"bank.account_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_name\">{{ \"accountHolderName\" | i18n }}</label>\n      <input\n        id=\"account_holder_name\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_holder_name\"\n        [(ngModel)]=\"bank.account_holder_name\"\n        required\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_type\">{{ \"bankAccountType\" | i18n }}</label>\n      <select\n        id=\"account_holder_type\"\n        class=\"form-control\"\n        name=\"account_holder_type\"\n        [(ngModel)]=\"bank.account_holder_type\"\n        required\n      >\n        <option value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option value=\"company\">{{ \"bankAccountTypeCompany\" | i18n }}</option>\n        <option value=\"individual\">{{ \"bankAccountTypeIndividual\" | i18n }}</option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.PayPal\">\n  <div class=\"mb-3\">\n    <div id=\"bt-dropin-container\" class=\"mb-1\"></div>\n    <small class=\"text-muted\">{{ \"paypalClickSubmit\" | i18n }}</small>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Credit\">\n  <app-callout type=\"note\">\n    {{ \"makeSureEnoughCredit\" | i18n }}\n  </app-callout>\n</ng-container>\n","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport ThemeVariables from \"../../scss/export.module.scss\";\n\nconst lightInputColor = ThemeVariables.lightInputColor;\nconst lightInputPlaceholderColor = ThemeVariables.lightInputPlaceholderColor;\nconst darkInputColor = ThemeVariables.darkInputColor;\nconst darkInputPlaceholderColor = ThemeVariables.darkInputPlaceholderColor;\n\n@Component({\n  selector: \"app-payment\",\n  templateUrl: \"payment.component.html\",\n})\nexport class PaymentComponent implements OnInit, OnDestroy {\n  @Input() showMethods = true;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.Card;\n  @Input() hideBank = false;\n  @Input() hidePaypal = false;\n  @Input() hideCredit = false;\n  @Input() trialFlow = false;\n\n  private destroy$ = new Subject<void>();\n\n  bank: any = {\n    routing_number: null,\n    account_number: null,\n    account_holder_name: null,\n    account_holder_type: \"\",\n    currency: \"USD\",\n    country: \"US\",\n  };\n\n  paymentMethodType = PaymentMethodType;\n\n  private btScript: HTMLScriptElement;\n  private btInstance: any = null;\n  private stripeScript: HTMLScriptElement;\n  private stripe: any = null;\n  private stripeElements: any = null;\n  private stripeCardNumberElement: any = null;\n  private stripeCardExpiryElement: any = null;\n  private stripeCardCvcElement: any = null;\n  private StripeElementStyle: any;\n  private StripeElementClasses: any;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private themingService: AbstractThemingService\n  ) {\n    this.stripeScript = window.document.createElement(\"script\");\n    this.stripeScript.src = \"https://js.stripe.com/v3/\";\n    this.stripeScript.async = true;\n    this.stripeScript.onload = () => {\n      this.stripe = (window as any).Stripe(process.env.STRIPE_KEY);\n      this.stripeElements = this.stripe.elements();\n      this.setStripeElement();\n    };\n    this.btScript = window.document.createElement(\"script\");\n    this.btScript.src = `scripts/dropin.js?cache=${process.env.CACHE_TAG}`;\n    this.btScript.async = true;\n    this.StripeElementStyle = {\n      base: {\n        color: null,\n        fontFamily:\n          '\"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, ' +\n          '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n        fontSize: \"14px\",\n        fontSmoothing: \"antialiased\",\n        \"::placeholder\": {\n          color: null,\n        },\n      },\n      invalid: {\n        color: null,\n      },\n    };\n    this.StripeElementClasses = {\n      focus: \"is-focused\",\n      empty: \"is-empty\",\n      invalid: \"is-invalid\",\n    };\n  }\n\n  async ngOnInit() {\n    if (!this.showOptions) {\n      this.hidePaypal = this.method !== PaymentMethodType.PayPal;\n      this.hideBank = this.method !== PaymentMethodType.BankAccount;\n      this.hideCredit = this.method !== PaymentMethodType.Credit;\n    }\n    await this.setTheme();\n    window.document.head.appendChild(this.stripeScript);\n    if (!this.hidePaypal) {\n      window.document.head.appendChild(this.btScript);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    window.document.head.removeChild(this.stripeScript);\n    window.setTimeout(() => {\n      Array.from(window.document.querySelectorAll(\"iframe\")).forEach((el) => {\n        if (el.src != null && el.src.indexOf(\"stripe\") > -1) {\n          try {\n            window.document.body.removeChild(el);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      });\n    }, 500);\n    if (!this.hidePaypal) {\n      window.document.head.removeChild(this.btScript);\n      window.setTimeout(() => {\n        Array.from(window.document.head.querySelectorAll(\"script\")).forEach((el) => {\n          if (el.src != null && el.src.indexOf(\"paypal\") > -1) {\n            try {\n              window.document.head.removeChild(el);\n            } catch (e) {\n              this.logService.error(e);\n            }\n          }\n        });\n        const btStylesheet = window.document.head.querySelector(\"#braintree-dropin-stylesheet\");\n        if (btStylesheet != null) {\n          try {\n            window.document.head.removeChild(btStylesheet);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      }, 500);\n    }\n  }\n\n  changeMethod() {\n    this.btInstance = null;\n\n    if (this.method === PaymentMethodType.PayPal) {\n      window.setTimeout(() => {\n        (window as any).braintree.dropin.create(\n          {\n            authorization: process.env.BRAINTREE_KEY,\n            container: \"#bt-dropin-container\",\n            paymentOptionPriority: [\"paypal\"],\n            paypal: {\n              flow: \"vault\",\n              buttonStyle: {\n                label: \"pay\",\n                size: \"medium\",\n                shape: \"pill\",\n                color: \"blue\",\n                tagline: \"false\",\n              },\n            },\n          },\n          (createErr: any, instance: any) => {\n            if (createErr != null) {\n              // eslint-disable-next-line\n              console.error(createErr);\n              return;\n            }\n            this.btInstance = instance;\n          }\n        );\n      }, 250);\n    } else {\n      this.setStripeElement();\n    }\n  }\n\n  createPaymentToken(): Promise<[string, PaymentMethodType]> {\n    return new Promise((resolve, reject) => {\n      if (this.method === PaymentMethodType.Credit) {\n        resolve([null, this.method]);\n      } else if (this.method === PaymentMethodType.PayPal) {\n        this.btInstance\n          .requestPaymentMethod()\n          .then((payload: any) => {\n            resolve([payload.nonce, this.method]);\n          })\n          .catch((err: any) => {\n            reject(err.message);\n          });\n      } else if (\n        this.method === PaymentMethodType.Card ||\n        this.method === PaymentMethodType.BankAccount\n      ) {\n        if (this.method === PaymentMethodType.Card) {\n          this.apiService\n            .postSetupPayment()\n            .then((clientSecret) =>\n              this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n            )\n            .then((result: any) => {\n              if (result.error) {\n                reject(result.error.message);\n              } else if (result.setupIntent && result.setupIntent.status === \"succeeded\") {\n                resolve([result.setupIntent.payment_method, this.method]);\n              } else {\n                reject();\n              }\n            });\n        } else {\n          this.stripe.createToken(\"bank_account\", this.bank).then((result: any) => {\n            if (result.error) {\n              reject(result.error.message);\n            } else if (result.token && result.token.id != null) {\n              resolve([result.token.id, this.method]);\n            } else {\n              reject();\n            }\n          });\n        }\n      }\n    });\n  }\n\n  handleStripeCardPayment(clientSecret: string, successCallback: () => Promise<any>): Promise<any> {\n    return new Promise<void>((resolve, reject) => {\n      if (this.showMethods && this.stripeCardNumberElement == null) {\n        reject();\n        return;\n      }\n      const handleCardPayment = () =>\n        this.showMethods\n          ? this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n          : this.stripe.handleCardSetup(clientSecret);\n      return handleCardPayment().then(async (result: any) => {\n        if (result.error) {\n          reject(result.error.message);\n        } else if (result.paymentIntent && result.paymentIntent.status === \"succeeded\") {\n          if (successCallback != null) {\n            await successCallback();\n          }\n          resolve();\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n\n  private setStripeElement() {\n    window.setTimeout(() => {\n      if (this.showMethods && this.method === PaymentMethodType.Card) {\n        if (this.stripeCardNumberElement == null) {\n          this.stripeCardNumberElement = this.stripeElements.create(\"cardNumber\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        if (this.stripeCardExpiryElement == null) {\n          this.stripeCardExpiryElement = this.stripeElements.create(\"cardExpiry\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n          });\n        }\n        if (this.stripeCardCvcElement == null) {\n          this.stripeCardCvcElement = this.stripeElements.create(\"cardCvc\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        this.stripeCardNumberElement.mount(\"#stripe-card-number-element\");\n        this.stripeCardExpiryElement.mount(\"#stripe-card-expiry-element\");\n        this.stripeCardCvcElement.mount(\"#stripe-card-cvc-element\");\n      }\n    }, 50);\n  }\n\n  private async setTheme() {\n    this.themingService.theme$.pipe(takeUntil(this.destroy$)).subscribe((theme) => {\n      if (theme.effectiveTheme === ThemeType.Dark) {\n        this.StripeElementStyle.base.color = darkInputColor;\n        this.StripeElementStyle.base[\"::placeholder\"].color = darkInputPlaceholderColor;\n        this.StripeElementStyle.invalid.color = darkInputColor;\n      } else {\n        this.StripeElementStyle.base.color = lightInputColor;\n        this.StripeElementStyle.base[\"::placeholder\"].color = lightInputPlaceholderColor;\n        this.StripeElementStyle.invalid.color = lightInputColor;\n      }\n    });\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-purge-vault\",\n  templateUrl: \"purge-vault.component.html\",\n})\nexport class PurgeVaultComponent {\n  @Input() organizationId?: string = null;\n\n  masterPassword: Verification;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private router: Router,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postPurgeCiphers(request, this.organizationId));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"vaultPurged\"));\n      if (this.organizationId != null) {\n        this.router.navigate([\"organizations\", this.organizationId, \"vault\"]);\n      } else {\n        this.router.navigate([\"vault\"]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"purgeVaultTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"purgeVaultTitle\">{{ \"purgeVault\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ (organizationId ? \"purgeOrgVaultDesc\" : \"purgeVaultDesc\") | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"purgeVaultWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"purgeVault\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"row\">\n  <div [ngClass]=\"trialFlow ? 'col-7' : 'col-6'\">\n    <div class=\"form-group\">\n      <label for=\"addressCountry\">{{ \"country\" | i18n }}</label>\n      <select\n        id=\"addressCountry\"\n        class=\"form-control\"\n        [(ngModel)]=\"taxInfo.country\"\n        required\n        name=\"addressCountry\"\n        autocomplete=\"country\"\n        (change)=\"changeCountry()\"\n      >\n        <option value=\"\">-- Select --</option>\n        <option value=\"US\">United States</option>\n        <option value=\"CN\">China</option>\n        <option value=\"FR\">France</option>\n        <option value=\"DE\">Germany</option>\n        <option value=\"CA\">Canada</option>\n        <option value=\"GB\">United Kingdom</option>\n        <option value=\"AU\">Australia</option>\n        <option value=\"IN\">India</option>\n        <option value=\"-\" disabled></option>\n        <option value=\"AF\">Afghanistan</option>\n        <option value=\"AX\">Åland Islands</option>\n        <option value=\"AL\">Albania</option>\n        <option value=\"DZ\">Algeria</option>\n        <option value=\"AS\">American Samoa</option>\n        <option value=\"AD\">Andorra</option>\n        <option value=\"AO\">Angola</option>\n        <option value=\"AI\">Anguilla</option>\n        <option value=\"AQ\">Antarctica</option>\n        <option value=\"AG\">Antigua and Barbuda</option>\n        <option value=\"AR\">Argentina</option>\n        <option value=\"AM\">Armenia</option>\n        <option value=\"AW\">Aruba</option>\n        <option value=\"AT\">Austria</option>\n        <option value=\"AZ\">Azerbaijan</option>\n        <option value=\"BS\">Bahamas</option>\n        <option value=\"BH\">Bahrain</option>\n        <option value=\"BD\">Bangladesh</option>\n        <option value=\"BB\">Barbados</option>\n        <option value=\"BY\">Belarus</option>\n        <option value=\"BE\">Belgium</option>\n        <option value=\"BZ\">Belize</option>\n        <option value=\"BJ\">Benin</option>\n        <option value=\"BM\">Bermuda</option>\n        <option value=\"BT\">Bhutan</option>\n        <option value=\"BO\">Bolivia, Plurinational State of</option>\n        <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\n        <option value=\"BA\">Bosnia and Herzegovina</option>\n        <option value=\"BW\">Botswana</option>\n        <option value=\"BV\">Bouvet Island</option>\n        <option value=\"BR\">Brazil</option>\n        <option value=\"IO\">British Indian Ocean Territory</option>\n        <option value=\"BN\">Brunei Darussalam</option>\n        <option value=\"BG\">Bulgaria</option>\n        <option value=\"BF\">Burkina Faso</option>\n        <option value=\"BI\">Burundi</option>\n        <option value=\"KH\">Cambodia</option>\n        <option value=\"CM\">Cameroon</option>\n        <option value=\"CV\">Cape Verde</option>\n        <option value=\"KY\">Cayman Islands</option>\n        <option value=\"CF\">Central African Republic</option>\n        <option value=\"TD\">Chad</option>\n        <option value=\"CL\">Chile</option>\n        <option value=\"CX\">Christmas Island</option>\n        <option value=\"CC\">Cocos (Keeling) Islands</option>\n        <option value=\"CO\">Colombia</option>\n        <option value=\"KM\">Comoros</option>\n        <option value=\"CG\">Congo</option>\n        <option value=\"CD\">Congo, the Democratic Republic of the</option>\n        <option value=\"CK\">Cook Islands</option>\n        <option value=\"CR\">Costa Rica</option>\n        <option value=\"CI\">Côte d'Ivoire</option>\n        <option value=\"HR\">Croatia</option>\n        <option value=\"CU\">Cuba</option>\n        <option value=\"CW\">Curaçao</option>\n        <option value=\"CY\">Cyprus</option>\n        <option value=\"CZ\">Czech Republic</option>\n        <option value=\"DK\">Denmark</option>\n        <option value=\"DJ\">Djibouti</option>\n        <option value=\"DM\">Dominica</option>\n        <option value=\"DO\">Dominican Republic</option>\n        <option value=\"EC\">Ecuador</option>\n        <option value=\"EG\">Egypt</option>\n        <option value=\"SV\">El Salvador</option>\n        <option value=\"GQ\">Equatorial Guinea</option>\n        <option value=\"ER\">Eritrea</option>\n        <option value=\"EE\">Estonia</option>\n        <option value=\"ET\">Ethiopia</option>\n        <option value=\"FK\">Falkland Islands (Malvinas)</option>\n        <option value=\"FO\">Faroe Islands</option>\n        <option value=\"FJ\">Fiji</option>\n        <option value=\"FI\">Finland</option>\n        <option value=\"GF\">French Guiana</option>\n        <option value=\"PF\">French Polynesia</option>\n        <option value=\"TF\">French Southern Territories</option>\n        <option value=\"GA\">Gabon</option>\n        <option value=\"GM\">Gambia</option>\n        <option value=\"GE\">Georgia</option>\n        <option value=\"GH\">Ghana</option>\n        <option value=\"GI\">Gibraltar</option>\n        <option value=\"GR\">Greece</option>\n        <option value=\"GL\">Greenland</option>\n        <option value=\"GD\">Grenada</option>\n        <option value=\"GP\">Guadeloupe</option>\n        <option value=\"GU\">Guam</option>\n        <option value=\"GT\">Guatemala</option>\n        <option value=\"GG\">Guernsey</option>\n        <option value=\"GN\">Guinea</option>\n        <option value=\"GW\">Guinea-Bissau</option>\n        <option value=\"GY\">Guyana</option>\n        <option value=\"HT\">Haiti</option>\n        <option value=\"HM\">Heard Island and McDonald Islands</option>\n        <option value=\"VA\">Holy See (Vatican City State)</option>\n        <option value=\"HN\">Honduras</option>\n        <option value=\"HK\">Hong Kong</option>\n        <option value=\"HU\">Hungary</option>\n        <option value=\"IS\">Iceland</option>\n        <option value=\"ID\">Indonesia</option>\n        <option value=\"IR\">Iran, Islamic Republic of</option>\n        <option value=\"IQ\">Iraq</option>\n        <option value=\"IE\">Ireland</option>\n        <option value=\"IM\">Isle of Man</option>\n        <option value=\"IL\">Israel</option>\n        <option value=\"IT\">Italy</option>\n        <option value=\"JM\">Jamaica</option>\n        <option value=\"JP\">Japan</option>\n        <option value=\"JE\">Jersey</option>\n        <option value=\"JO\">Jordan</option>\n        <option value=\"KZ\">Kazakhstan</option>\n        <option value=\"KE\">Kenya</option>\n        <option value=\"KI\">Kiribati</option>\n        <option value=\"KP\">Korea, Democratic People's Republic of</option>\n        <option value=\"KR\">Korea, Republic of</option>\n        <option value=\"KW\">Kuwait</option>\n        <option value=\"KG\">Kyrgyzstan</option>\n        <option value=\"LA\">Lao People's Democratic Republic</option>\n        <option value=\"LV\">Latvia</option>\n        <option value=\"LB\">Lebanon</option>\n        <option value=\"LS\">Lesotho</option>\n        <option value=\"LR\">Liberia</option>\n        <option value=\"LY\">Libya</option>\n        <option value=\"LI\">Liechtenstein</option>\n        <option value=\"LT\">Lithuania</option>\n        <option value=\"LU\">Luxembourg</option>\n        <option value=\"MO\">Macao</option>\n        <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option>\n        <option value=\"MG\">Madagascar</option>\n        <option value=\"MW\">Malawi</option>\n        <option value=\"MY\">Malaysia</option>\n        <option value=\"MV\">Maldives</option>\n        <option value=\"ML\">Mali</option>\n        <option value=\"MT\">Malta</option>\n        <option value=\"MH\">Marshall Islands</option>\n        <option value=\"MQ\">Martinique</option>\n        <option value=\"MR\">Mauritania</option>\n        <option value=\"MU\">Mauritius</option>\n        <option value=\"YT\">Mayotte</option>\n        <option value=\"MX\">Mexico</option>\n        <option value=\"FM\">Micronesia, Federated States of</option>\n        <option value=\"MD\">Moldova, Republic of</option>\n        <option value=\"MC\">Monaco</option>\n        <option value=\"MN\">Mongolia</option>\n        <option value=\"ME\">Montenegro</option>\n        <option value=\"MS\">Montserrat</option>\n        <option value=\"MA\">Morocco</option>\n        <option value=\"MZ\">Mozambique</option>\n        <option value=\"MM\">Myanmar</option>\n        <option value=\"NA\">Namibia</option>\n        <option value=\"NR\">Nauru</option>\n        <option value=\"NP\">Nepal</option>\n        <option value=\"NL\">Netherlands</option>\n        <option value=\"NC\">New Caledonia</option>\n        <option value=\"NZ\">New Zealand</option>\n        <option value=\"NI\">Nicaragua</option>\n        <option value=\"NE\">Niger</option>\n        <option value=\"NG\">Nigeria</option>\n        <option value=\"NU\">Niue</option>\n        <option value=\"NF\">Norfolk Island</option>\n        <option value=\"MP\">Northern Mariana Islands</option>\n        <option value=\"NO\">Norway</option>\n        <option value=\"OM\">Oman</option>\n        <option value=\"PK\">Pakistan</option>\n        <option value=\"PW\">Palau</option>\n        <option value=\"PS\">Palestinian Territory, Occupied</option>\n        <option value=\"PA\">Panama</option>\n        <option value=\"PG\">Papua New Guinea</option>\n        <option value=\"PY\">Paraguay</option>\n        <option value=\"PE\">Peru</option>\n        <option value=\"PH\">Philippines</option>\n        <option value=\"PN\">Pitcairn</option>\n        <option value=\"PL\">Poland</option>\n        <option value=\"PT\">Portugal</option>\n        <option value=\"PR\">Puerto Rico</option>\n        <option value=\"QA\">Qatar</option>\n        <option value=\"RE\">Réunion</option>\n        <option value=\"RO\">Romania</option>\n        <option value=\"RU\">Russian Federation</option>\n        <option value=\"RW\">Rwanda</option>\n        <option value=\"BL\">Saint Barthélemy</option>\n        <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option>\n        <option value=\"KN\">Saint Kitts and Nevis</option>\n        <option value=\"LC\">Saint Lucia</option>\n        <option value=\"MF\">Saint Martin (French part)</option>\n        <option value=\"PM\">Saint Pierre and Miquelon</option>\n        <option value=\"VC\">Saint Vincent and the Grenadines</option>\n        <option value=\"WS\">Samoa</option>\n        <option value=\"SM\">San Marino</option>\n        <option value=\"ST\">Sao Tome and Principe</option>\n        <option value=\"SA\">Saudi Arabia</option>\n        <option value=\"SN\">Senegal</option>\n        <option value=\"RS\">Serbia</option>\n        <option value=\"SC\">Seychelles</option>\n        <option value=\"SL\">Sierra Leone</option>\n        <option value=\"SG\">Singapore</option>\n        <option value=\"SX\">Sint Maarten (Dutch part)</option>\n        <option value=\"SK\">Slovakia</option>\n        <option value=\"SI\">Slovenia</option>\n        <option value=\"SB\">Solomon Islands</option>\n        <option value=\"SO\">Somalia</option>\n        <option value=\"ZA\">South Africa</option>\n        <option value=\"GS\">South Georgia and the South Sandwich Islands</option>\n        <option value=\"SS\">South Sudan</option>\n        <option value=\"ES\">Spain</option>\n        <option value=\"LK\">Sri Lanka</option>\n        <option value=\"SD\">Sudan</option>\n        <option value=\"SR\">Suriname</option>\n        <option value=\"SJ\">Svalbard and Jan Mayen</option>\n        <option value=\"SZ\">Swaziland</option>\n        <option value=\"SE\">Sweden</option>\n        <option value=\"CH\">Switzerland</option>\n        <option value=\"SY\">Syrian Arab Republic</option>\n        <option value=\"TW\">Taiwan</option>\n        <option value=\"TJ\">Tajikistan</option>\n        <option value=\"TZ\">Tanzania, United Republic of</option>\n        <option value=\"TH\">Thailand</option>\n        <option value=\"TL\">Timor-Leste</option>\n        <option value=\"TG\">Togo</option>\n        <option value=\"TK\">Tokelau</option>\n        <option value=\"TO\">Tonga</option>\n        <option value=\"TT\">Trinidad and Tobago</option>\n        <option value=\"TN\">Tunisia</option>\n        <option value=\"TR\">Turkey</option>\n        <option value=\"TM\">Turkmenistan</option>\n        <option value=\"TC\">Turks and Caicos Islands</option>\n        <option value=\"TV\">Tuvalu</option>\n        <option value=\"UG\">Uganda</option>\n        <option value=\"UA\">Ukraine</option>\n        <option value=\"AE\">United Arab Emirates</option>\n        <option value=\"UM\">United States Minor Outlying Islands</option>\n        <option value=\"UY\">Uruguay</option>\n        <option value=\"UZ\">Uzbekistan</option>\n        <option value=\"VU\">Vanuatu</option>\n        <option value=\"VE\">Venezuela, Bolivarian Republic of</option>\n        <option value=\"VN\">Viet Nam</option>\n        <option value=\"VG\">Virgin Islands, British</option>\n        <option value=\"VI\">Virgin Islands, U.S.</option>\n        <option value=\"WF\">Wallis and Futuna</option>\n        <option value=\"EH\">Western Sahara</option>\n        <option value=\"YE\">Yemen</option>\n        <option value=\"ZM\">Zambia</option>\n        <option value=\"ZW\">Zimbabwe</option>\n      </select>\n    </div>\n  </div>\n  <div [ngClass]=\"trialFlow ? 'col-5' : 'col-3'\">\n    <div class=\"form-group\">\n      <label for=\"addressPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n      <input\n        id=\"addressPostalCode\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressPostalCode\"\n        [(ngModel)]=\"taxInfo.postalCode\"\n        [required]=\"taxInfo.country === 'US'\"\n        autocomplete=\"postal-code\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\" *ngIf=\"organizationId && taxInfo.country !== 'US'\">\n    <div class=\"form-group form-check\">\n      <input\n        class=\"form-check-input\"\n        id=\"addressIncludeTaxId\"\n        name=\"addressIncludeTaxId\"\n        type=\"checkbox\"\n        [(ngModel)]=\"taxInfo.includeTaxId\"\n      />\n      <label class=\"form-check-label\" for=\"addressIncludeTaxId\">{{ \"includeVAT\" | i18n }}</label>\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"taxId\">{{ \"taxIdNumber\" | i18n }}</label>\n      <input id=\"taxId\" class=\"form-control\" type=\"text\" name=\"taxId\" [(ngModel)]=\"taxInfo.taxId\" />\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine1\">{{ \"address1\" | i18n }}</label>\n      <input\n        id=\"addressLine1\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine1\"\n        [(ngModel)]=\"taxInfo.line1\"\n        autocomplete=\"address-line1\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine2\">{{ \"address2\" | i18n }}</label>\n      <input\n        id=\"addressLine2\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine2\"\n        [(ngModel)]=\"taxInfo.line2\"\n        autocomplete=\"address-line2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressCity\">{{ \"cityTown\" | i18n }}</label>\n      <input\n        id=\"addressCity\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressCity\"\n        [(ngModel)]=\"taxInfo.city\"\n        autocomplete=\"address-level2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressState\">{{ \"stateProvince\" | i18n }}</label>\n      <input\n        id=\"addressState\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressState\"\n        [(ngModel)]=\"taxInfo.state\"\n        autocomplete=\"address-level1\"\n      />\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationTaxInfoUpdateRequest } from \"@bitwarden/common/models/request/organizationTaxInfoUpdateRequest\";\nimport { TaxInfoUpdateRequest } from \"@bitwarden/common/models/request/taxInfoUpdateRequest\";\nimport { TaxInfoResponse } from \"@bitwarden/common/models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"@bitwarden/common/models/response/taxRateResponse\";\n\ntype TaxInfoView = Omit<TaxInfoResponse, \"taxIdType\"> & {\n  includeTaxId: boolean;\n  [key: string]: unknown;\n};\n\n@Component({\n  selector: \"app-tax-info\",\n  templateUrl: \"tax-info.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TaxInfoComponent {\n  @Input() trialFlow = false;\n  @Output() onCountryChanged = new EventEmitter();\n\n  loading = true;\n  organizationId: string;\n  taxInfo: TaxInfoView = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  taxRates: TaxRateResponse[];\n\n  private pristine: TaxInfoView = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      if (this.organizationId) {\n        try {\n          const taxInfo = await this.organizationApiService.getTaxInfo(this.organizationId);\n          if (taxInfo) {\n            this.taxInfo.taxId = taxInfo.taxId;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.line1 = taxInfo.line1;\n            this.taxInfo.line2 = taxInfo.line2;\n            this.taxInfo.city = taxInfo.city;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n            this.taxInfo.includeTaxId =\n              this.taxInfo.country !== \"US\" &&\n              (!!taxInfo.taxId ||\n                !!taxInfo.line1 ||\n                !!taxInfo.line2 ||\n                !!taxInfo.city ||\n                !!taxInfo.state);\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      } else {\n        try {\n          const taxInfo = await this.apiService.getTaxInfo();\n          if (taxInfo) {\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.pristine = Object.assign({}, this.taxInfo);\n      // If not the default (US) then trigger onCountryChanged\n      if (this.taxInfo.country !== \"US\") {\n        this.onCountryChanged.emit();\n      }\n    });\n\n    try {\n      const taxRates = await this.apiService.getTaxRates();\n      if (taxRates) {\n        this.taxRates = taxRates.data;\n      }\n    } catch (e) {\n      this.logService.error(e);\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  get taxRate() {\n    if (this.taxRates != null) {\n      const localTaxRate = this.taxRates.find(\n        (x) => x.country === this.taxInfo.country && x.postalCode === this.taxInfo.postalCode\n      );\n      return localTaxRate?.rate ?? null;\n    }\n  }\n\n  getTaxInfoRequest(): TaxInfoUpdateRequest {\n    if (this.organizationId) {\n      const request = new OrganizationTaxInfoUpdateRequest();\n      request.taxId = this.taxInfo.taxId;\n      request.state = this.taxInfo.state;\n      request.line1 = this.taxInfo.line1;\n      request.line2 = this.taxInfo.line2;\n      request.city = this.taxInfo.city;\n      request.state = this.taxInfo.state;\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    } else {\n      const request = new TaxInfoUpdateRequest();\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    }\n  }\n\n  submitTaxInfo(): Promise<any> {\n    if (!this.hasChanged()) {\n      return new Promise<void>((resolve) => {\n        resolve();\n      });\n    }\n    const request = this.getTaxInfoRequest();\n    return this.organizationId\n      ? this.organizationApiService.updateTaxInfo(\n          this.organizationId,\n          request as OrganizationTaxInfoUpdateRequest\n        )\n      : this.apiService.putTaxInfo(request);\n  }\n\n  changeCountry() {\n    if (this.taxInfo.country === \"US\") {\n      this.taxInfo.includeTaxId = false;\n      this.taxInfo.taxId = null;\n      this.taxInfo.line1 = null;\n      this.taxInfo.line2 = null;\n      this.taxInfo.city = null;\n      this.taxInfo.state = null;\n    }\n    this.onCountryChanged.emit();\n  }\n\n  private hasChanged(): boolean {\n    for (const key in this.taxInfo) {\n      // eslint-disable-next-line\n      if (this.pristine.hasOwnProperty(key) && this.pristine[key] !== this.taxInfo[key]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorProviderRequest extends SecretVerificationRequest {\n  type: TwoFactorProviderType;\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\nimport { TwoFactorProviderRequest } from \"@bitwarden/common/models/request/twoFactorProviderRequest\";\nimport { AuthResponseBase } from \"@bitwarden/common/types/authResponse\";\n\n@Directive()\nexport abstract class TwoFactorBaseComponent {\n  @Output() onUpdated = new EventEmitter<boolean>();\n\n  type: TwoFactorProviderType;\n  organizationId: string;\n  twoFactorProviderType = TwoFactorProviderType;\n  enabled = false;\n  authed = false;\n\n  protected hashedSecret: string;\n  protected verificationType: VerificationType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected userVerificationService: UserVerificationService\n  ) {}\n\n  protected auth(authResponse: AuthResponseBase) {\n    this.hashedSecret = authResponse.secret;\n    this.verificationType = authResponse.verificationType;\n    this.authed = true;\n  }\n\n  protected async enable(enableFunction: () => Promise<void>) {\n    try {\n      await enableFunction();\n      this.onUpdated.emit(true);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async disable(promise: Promise<unknown>) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepDisableDesc\"),\n      this.i18nService.t(\"disable\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      const request = await this.buildRequestModel(TwoFactorProviderRequest);\n      request.type = this.type;\n      if (this.organizationId != null) {\n        promise = this.apiService.putTwoFactorOrganizationDisable(this.organizationId, request);\n      } else {\n        promise = this.apiService.putTwoFactorDisable(request);\n      }\n      await promise;\n      this.enabled = false;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"twoStepDisabled\"));\n      this.onUpdated.emit(false);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async buildRequestModel<T extends SecretVerificationRequest>(\n    requestClass: new () => T\n  ) {\n    return this.userVerificationService.buildRequest(\n      {\n        secret: this.hashedSecret,\n        type: this.verificationType,\n      },\n      requestClass,\n      true\n    );\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorDuoRequest extends SecretVerificationRequest {\n  integrationKey: string;\n  secretKey: string;\n  host: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faDuoTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faDuoTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>Duo</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <strong>{{ \"twoFactorDuoIntegrationKey\" | i18n }}:</strong> {{ ikey }}\n            <br />\n            <strong>{{ \"twoFactorDuoSecretKey\" | i18n }}:</strong> {{ skey }}\n            <br />\n            <strong>{{ \"twoFactorDuoApiHostname\" | i18n }}:</strong> {{ host }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <p>{{ \"twoFactorDuoDesc\" | i18n }}</p>\n            <div class=\"form-group\">\n              <label for=\"ikey\">{{ \"twoFactorDuoIntegrationKey\" | i18n }}</label>\n              <input\n                id=\"ikey\"\n                type=\"text\"\n                name=\"IntegrationKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"ikey\"\n                required\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"skey\">{{ \"twoFactorDuoSecretKey\" | i18n }}</label>\n              <input\n                id=\"skey\"\n                type=\"password\"\n                name=\"SecretKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"skey\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"host\">{{ \"twoFactorDuoApiHostname\" | i18n }}</label>\n              <input\n                id=\"host\"\n                type=\"text\"\n                name=\"Host\"\n                class=\"form-control\"\n                [(ngModel)]=\"host\"\n                placeholder=\"{{ 'ex' | i18n }} api-xxxxxxxx.duosecurity.com\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorDuoRequest } from \"@bitwarden/common/models/request/updateTwoFactorDuoRequest\";\nimport { TwoFactorDuoResponse } from \"@bitwarden/common/models/response/twoFactorDuoResponse\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-duo\",\n  templateUrl: \"two-factor-duo.component.html\",\n})\nexport class TwoFactorDuoComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Duo;\n  ikey: string;\n  skey: string;\n  host: string;\n  formPromise: Promise<TwoFactorDuoResponse>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorDuoResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorDuoRequest);\n    request.integrationKey = this.ikey;\n    request.secretKey = this.skey;\n    request.host = this.host;\n\n    return super.enable(async () => {\n      if (this.organizationId != null) {\n        this.formPromise = this.apiService.putTwoFactorOrganizationDuo(\n          this.organizationId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.putTwoFactorDuo(request);\n      }\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private processResponse(response: TwoFactorDuoResponse) {\n    this.ikey = response.integrationKey;\n    this.skey = response.secretKey;\n    this.host = response.host;\n    this.enabled = response.enabled;\n  }\n}\n","export class DeviceVerificationRequest {\n  unknownDeviceVerificationEnabled: boolean;\n\n  constructor(unknownDeviceVerificationEnabled: boolean) {\n    this.unknownDeviceVerificationEnabled = unknownDeviceVerificationEnabled;\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorAuthenticatorRequest extends SecretVerificationRequest {\n  token: string;\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faAuthenticatorTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faAuthenticatorTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"authenticatorAppTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorDesc\" | i18n }}</p>\n            <p>\n              <strong>1. {{ \"twoStepAuthenticatorDownloadApp\" | i18n }}</strong>\n            </p>\n          </ng-container>\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              <p>{{ \"twoStepLoginProviderEnabled\" | i18n }}</p>\n              {{ \"twoStepAuthenticatorReaddDesc\" | i18n }}\n            </app-callout>\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorNeedApp\" | i18n }}</p>\n          </ng-container>\n          <ul class=\"bwi-ul\">\n            <li>\n              <i class=\"bwi bwi-li bwi-apple\"></i>{{ \"iosDevices\" | i18n }}:\n              <a\n                href=\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-android\"></i>{{ \"androidDevices\" | i18n }}:\n              <a\n                href=\"https://play.google.com/store/apps/details?id=com.authy.authy\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-windows\"></i>{{ \"windowsDevices\" | i18n }}:\n              <a\n                href=\"https://www.microsoft.com/p/authenticator/9wzdncrfj3rj\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Microsoft Authenticator</a\n              >\n            </li>\n          </ul>\n          <p>{{ \"twoStepAuthenticatorAppsRecommended\" | i18n }}</p>\n          <p *ngIf=\"!enabled\">\n            <strong>2. {{ \"twoStepAuthenticatorScanCode\" | i18n }}</strong>\n          </p>\n          <hr *ngIf=\"enabled\" />\n          <p class=\"text-center\" [ngClass]=\"{ 'mb-0': enabled }\">\n            <canvas id=\"qr\"></canvas><br />\n            <code appA11yTitle=\"{{ 'key' | i18n }}\">{{ key }}</code>\n          </p>\n          <ng-container *ngIf=\"!enabled\">\n            <label for=\"token\">3. {{ \"twoStepAuthenticatorEnterCode\" | i18n }}</label>\n            <input\n              id=\"token\"\n              type=\"text\"\n              name=\"Token\"\n              class=\"form-control\"\n              [(ngModel)]=\"token\"\n              required\n              appInputVerbatim\n            />\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"@bitwarden/common/models/request/updateTwoFactorAuthenticatorRequest\";\nimport { TwoFactorAuthenticatorResponse } from \"@bitwarden/common/models/response/twoFactorAuthenticatorResponse\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n// NOTE: There are additional options available but these are just the ones we are current using.\n// See: https://github.com/neocotic/qrious#examples\ninterface QRiousOptions {\n  element: HTMLElement;\n  value: string;\n  size: number;\n}\n\ndeclare global {\n  interface Window {\n    QRious: new (options: QRiousOptions) => unknown;\n  }\n}\n\n@Component({\n  selector: \"app-two-factor-authenticator\",\n  templateUrl: \"two-factor-authenticator.component.html\",\n})\nexport class TwoFactorAuthenticatorComponent\n  extends TwoFactorBaseComponent\n  implements OnInit, OnDestroy\n{\n  type = TwoFactorProviderType.Authenticator;\n  key: string;\n  token: string;\n  formPromise: Promise<TwoFactorAuthenticatorResponse>;\n\n  private qrScript: HTMLScriptElement;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    userVerificationService: UserVerificationService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n    this.qrScript = window.document.createElement(\"script\");\n    this.qrScript.src = \"scripts/qrious.min.js\";\n    this.qrScript.async = true;\n  }\n\n  ngOnInit() {\n    window.document.body.appendChild(this.qrScript);\n  }\n\n  ngOnDestroy() {\n    window.document.body.removeChild(this.qrScript);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorAuthenticatorResponse>) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorAuthenticatorRequest);\n    request.token = this.token;\n    request.key = this.key;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorAuthenticator(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorAuthenticatorResponse) {\n    this.token = null;\n    this.enabled = response.enabled;\n    this.key = response.key;\n    const email = await this.stateService.getEmail();\n    window.setTimeout(() => {\n      new window.QRious({\n        element: document.getElementById(\"qr\"),\n        value:\n          \"otpauth://totp/Bitwarden:\" +\n          encodeURIComponent(email) +\n          \"?secret=\" +\n          encodeURIComponent(this.key) +\n          \"&issuer=Bitwarden\",\n        size: 160,\n      });\n    }, 100);\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorEmailRequest extends SecretVerificationRequest {\n  token: string;\n  email: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faEmailTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faEmailTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"emailTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <strong>{{ \"email\" | i18n }}:</strong> {{ email }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <p class=\"d-flex\">\n              <span class=\"mr-3\">{{ \"twoFactorEmailDesc\" | i18n }}</span>\n              <img class=\"float-right ml-auto mfaType1\" alt=\"Email logo\" />\n            </p>\n            <div class=\"form-group\">\n              <label for=\"email\">1. {{ \"twoFactorEmailEnterEmail\" | i18n }}</label>\n              <input\n                id=\"email\"\n                type=\"text\"\n                name=\"Email\"\n                class=\"form-control\"\n                [(ngModel)]=\"email\"\n                required\n                inputmode=\"email\"\n                appInputVerbatim=\"false\"\n              />\n            </div>\n            <div class=\"mb-3 d-flex\">\n              <button\n                #sendBtn\n                type=\"button\"\n                class=\"btn btn-outline-primary btn-sm btn-submit align-self-start\"\n                (click)=\"sendEmail()\"\n                [appApiAction]=\"emailPromise\"\n                [disabled]=\"sendBtn.loading\"\n              >\n                <i\n                  class=\"bwi bwi-spinner bwi-spin\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span>{{ \"sendEmail\" | i18n }}</span>\n              </button>\n              <span class=\"text-success ml-3\" *ngIf=\"sentEmail\">\n                {{ \"verificationCodeEmailSent\" | i18n: sentEmail }}\n              </span>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"token\">2. {{ \"twoFactorEmailEnterCode\" | i18n }}</label>\n              <input\n                id=\"token\"\n                type=\"text\"\n                name=\"Token\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/twoFactorEmailRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"@bitwarden/common/models/request/updateTwoFactorEmailRequest\";\nimport { TwoFactorEmailResponse } from \"@bitwarden/common/models/response/twoFactorEmailResponse\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-email\",\n  templateUrl: \"two-factor-email.component.html\",\n})\nexport class TwoFactorEmailComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Email;\n  email: string;\n  token: string;\n  sentEmail: string;\n  formPromise: Promise<TwoFactorEmailResponse>;\n  emailPromise: Promise<unknown>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorEmailResponse>) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  async sendEmail() {\n    try {\n      const request = await this.buildRequestModel(TwoFactorEmailRequest);\n      request.email = this.email;\n      this.emailPromise = this.apiService.postTwoFactorEmailSetup(request);\n      await this.emailPromise;\n      this.sentEmail = this.email;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorEmailRequest);\n    request.email = this.email;\n    request.token = this.token;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorEmail(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorEmailResponse) {\n    this.token = null;\n    this.email = response.email;\n    this.enabled = response.enabled;\n    if (!this.enabled && (this.email == null || this.email === \"\")) {\n      this.email = await this.stateService.getEmail();\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faRecoveryTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faRecoveryTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"recoveryCodeTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <ng-container *ngIf=\"authed\">\n        <div class=\"modal-body text-center\">\n          <ng-container *ngIf=\"code\">\n            <p>{{ \"twoFactorRecoveryYourCode\" | i18n }}:</p>\n            <code class=\"text-lg\">{{ code }}</code>\n          </ng-container>\n          <ng-container *ngIf=\"!code\">\n            {{ \"twoFactorRecoveryNoCode\" | i18n }}\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"print()\" *ngIf=\"code\">\n            {{ \"printCode\" | i18n }}\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorRecoverResponse } from \"@bitwarden/common/models/response/twoFactorRescoverResponse\";\n\n@Component({\n  selector: \"app-two-factor-recovery\",\n  templateUrl: \"two-factor-recovery.component.html\",\n})\nexport class TwoFactorRecoveryComponent {\n  type = -1;\n  code: string;\n  authed: boolean;\n  twoFactorProviderType = TwoFactorProviderType;\n\n  constructor(private i18nService: I18nService) {}\n\n  auth(authResponse: any) {\n    this.authed = true;\n    this.processResponse(authResponse.response);\n  }\n\n  print() {\n    const w = window.open();\n    w.document.write(\n      '<div style=\"font-size: 18px; text-align: center;\">' +\n        \"<p>\" +\n        this.i18nService.t(\"twoFactorRecoveryYourCode\") +\n        \":</p>\" +\n        \"<code style=\\\"font-family: Menlo, Monaco, Consolas, 'Courier New', monospace;\\\">\" +\n        this.code +\n        \"</code></div>\" +\n        '<p style=\"text-align: center;\">' +\n        new Date() +\n        \"</p>\"\n    );\n    w.onafterprint = () => w.close();\n    w.print();\n  }\n\n  private formatString(s: string) {\n    if (s == null) {\n      return null;\n    }\n    return s\n      .replace(/(.{4})/g, \"$1 \")\n      .trim()\n      .toUpperCase();\n  }\n\n  private processResponse(response: TwoFactorRecoverResponse) {\n    this.code = this.formatString(response.code);\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorWebAuthnDeleteRequest extends SecretVerificationRequest {\n  id: number;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorWebAuthnRequest extends SecretVerificationRequest {\n  deviceResponse: PublicKeyCredential;\n  name: string;\n  id: number;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faU2fTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faU2fTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"webAuthnTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorWebAuthnWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorWebAuthnSupportWeb\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right ml-5 mfaType7\" alt=\"FIDO2 WebAuthn logo'\" />\n          <ul class=\"bwi-ul\">\n            <li\n              *ngFor=\"let k of keys; let i = index\"\n              #removeKeyBtn\n              [appApiAction]=\"k.removePromise\"\n            >\n              <i class=\"bwi bwi-li bwi-key\"></i>\n              <strong *ngIf=\"!k.configured || !k.name\">{{ \"webAuthnkeyX\" | i18n: i + 1 }}</strong>\n              <strong *ngIf=\"k.configured && k.name\">{{ k.name }}</strong>\n              <ng-container *ngIf=\"k.configured && !removeKeyBtn.loading\">\n                <ng-container *ngIf=\"k.migrated\">\n                  <span>{{ \"webAuthnMigrated\" | i18n }}</span>\n                </ng-container>\n              </ng-container>\n              <ng-container *ngIf=\"keysConfiguredCount > 1 && k.configured\">\n                <i\n                  class=\"bwi bwi-spin bwi-spinner text-muted bwi-fw\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  *ngIf=\"removeKeyBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                -\n                <a href=\"#\" appStopClick (click)=\"remove(k)\">{{ \"remove\" | i18n }}</a>\n              </ng-container>\n            </li>\n          </ul>\n          <hr />\n          <p>{{ \"twoFactorWebAuthnAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorU2fGiveName\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fPlugInReadKey\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fSaveForm\" | i18n }}</li>\n          </ol>\n          <div class=\"row\">\n            <div class=\"form-group col-6\">\n              <label for=\"name\">{{ \"name\" | i18n }}</label>\n              <input\n                id=\"name\"\n                type=\"text\"\n                name=\"Name\"\n                class=\"form-control\"\n                [(ngModel)]=\"name\"\n                [disabled]=\"!keyIdAvailable\"\n              />\n            </div>\n          </div>\n          <button\n            type=\"button\"\n            (click)=\"readKey()\"\n            class=\"btn btn-outline-secondary mr-2\"\n            [disabled]=\"readKeyBtn.loading || webAuthnListening || !keyIdAvailable\"\n            #readKeyBtn\n            [appApiAction]=\"challengePromise\"\n          >\n            {{ \"readKey\" | i18n }}\n          </button>\n          <ng-container *ngIf=\"readKeyBtn.loading\">\n            <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n          </ng-container>\n          <ng-container *ngIf=\"!readKeyBtn.loading\">\n            <ng-container *ngIf=\"webAuthnListening\">\n              <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fWaiting\" | i18n }}...\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnResponse\">\n              <i class=\"bwi bwi-check-circle text-success\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fClickSave\" | i18n }}\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnError\">\n              <i class=\"bwi bwi-exclamation-triangle text-danger\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fProblemReadingTryAgain\" | i18n }}\n            </ng-container>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            [disabled]=\"form.loading || !webAuthnResponse\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              *ngIf=\"form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!form.loading\">{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"disableBtn.loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, NgZone } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"@bitwarden/common/models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"@bitwarden/common/models/request/updateTwoFactorWebAuthnRequest\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"@bitwarden/common/models/response/twoFactorWebAuthnResponse\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\ninterface Key {\n  id: number;\n  name: string;\n  configured: boolean;\n  migrated?: boolean;\n  removePromise: Promise<TwoFactorWebAuthnResponse> | null;\n}\n\n@Component({\n  selector: \"app-two-factor-webauthn\",\n  templateUrl: \"two-factor-webauthn.component.html\",\n})\nexport class TwoFactorWebAuthnComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.WebAuthn;\n  name: string;\n  keys: Key[];\n  keyIdAvailable: number = null;\n  keysConfiguredCount = 0;\n  webAuthnError: boolean;\n  webAuthnListening: boolean;\n  webAuthnResponse: PublicKeyCredential;\n  challengePromise: Promise<ChallengeResponse>;\n  formPromise: Promise<TwoFactorWebAuthnResponse>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorWebAuthnResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    if (this.webAuthnResponse == null || this.keyIdAvailable == null) {\n      // Should never happen.\n      return Promise.reject();\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnRequest);\n    request.deviceResponse = this.webAuthnResponse;\n    request.id = this.keyIdAvailable;\n    request.name = this.name;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorWebAuthn(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  disable() {\n    return super.disable(this.formPromise);\n  }\n\n  async remove(key: Key) {\n    if (this.keysConfiguredCount <= 1 || key.removePromise != null) {\n      return;\n    }\n    const name = key.name != null ? key.name : this.i18nService.t(\"webAuthnkeyX\", key.id as any);\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeU2fConfirmation\"),\n      name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnDeleteRequest);\n    request.id = key.id;\n    try {\n      key.removePromise = this.apiService.deleteTwoFactorWebAuthn(request);\n      const response = await key.removePromise;\n      key.removePromise = null;\n      await this.processResponse(response);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async readKey() {\n    if (this.keyIdAvailable == null) {\n      return;\n    }\n    const request = await this.buildRequestModel(SecretVerificationRequest);\n    try {\n      this.challengePromise = this.apiService.getTwoFactorWebAuthnChallenge(request);\n      const challenge = await this.challengePromise;\n      this.readDevice(challenge);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private readDevice(webAuthnChallenge: ChallengeResponse) {\n    // eslint-disable-next-line\n    console.log(\"listening for key...\");\n    this.resetWebAuthn(true);\n\n    navigator.credentials\n      .create({\n        publicKey: webAuthnChallenge,\n      })\n      .then((data: PublicKeyCredential) => {\n        this.ngZone.run(() => {\n          this.webAuthnListening = false;\n          this.webAuthnResponse = data;\n        });\n      })\n      .catch((err) => {\n        // eslint-disable-next-line\n        console.error(err);\n        this.resetWebAuthn(false);\n        // TODO: Should we display the actual error?\n        this.webAuthnError = true;\n      });\n  }\n\n  private resetWebAuthn(listening = false) {\n    this.webAuthnResponse = null;\n    this.webAuthnError = false;\n    this.webAuthnListening = listening;\n  }\n\n  private processResponse(response: TwoFactorWebAuthnResponse) {\n    this.resetWebAuthn();\n    this.keys = [];\n    this.keyIdAvailable = null;\n    this.name = null;\n    this.keysConfiguredCount = 0;\n    for (let i = 1; i <= 5; i++) {\n      if (response.keys != null) {\n        const key = response.keys.filter((k) => k.id === i);\n        if (key.length > 0) {\n          this.keysConfiguredCount++;\n          this.keys.push({\n            id: i,\n            name: key[0].name,\n            configured: true,\n            migrated: key[0].migrated,\n            removePromise: null,\n          });\n          continue;\n        }\n      }\n      this.keys.push({ id: i, name: null, configured: false, removePromise: null });\n      if (this.keyIdAvailable == null) {\n        this.keyIdAvailable = i;\n      }\n    }\n    this.enabled = response.enabled;\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorYubioOtpRequest extends SecretVerificationRequest {\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faYubiKeyTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faYubiKeyTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>YubiKey</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorYubikeyWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorYubikeySupportUsb\" | i18n }}</li>\n              <li>{{ \"twoFactorYubikeySupportMobile\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right mfaType3\" alt=\"YubiKey OTP security key logo\" />\n          <p>{{ \"twoFactorYubikeyAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorYubikeyPlugIn\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySelectKey\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeyTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySaveForm\" | i18n }}</li>\n          </ol>\n          <hr />\n          <div class=\"row\">\n            <div class=\"form-group col-6\" *ngFor=\"let k of keys; let i = index\">\n              <label for=\"key{{ i + 1 }}\">{{ \"yubikeyX\" | i18n: i + 1 }}</label>\n              <input\n                id=\"key{{ i + 1 }}\"\n                type=\"password\"\n                name=\"Key{{ i + 1 }}\"\n                class=\"form-control\"\n                [(ngModel)]=\"k.key\"\n                *ngIf=\"!k.existingKey\"\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <div class=\"d-flex\" *ngIf=\"k.existingKey\">\n                <span class=\"mr-2\">{{ k.existingKey }}</span>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-link text-danger ml-auto\"\n                  (click)=\"remove(k)\"\n                  appA11yTitle=\"{{ 'remove' | i18n }}\"\n                >\n                  <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <strong class=\"d-block mb-2\">{{ \"nfcSupport\" | i18n }}</strong>\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"nfc\" name=\"Nfc\" [(ngModel)]=\"nfc\" />\n            <label class=\"form-check-label\" for=\"nfc\">{{\n              \"twoFactorYubikeySupportsNfc\" | i18n\n            }}</label>\n          </div>\n          <small class=\"form-text text-muted\">{{ \"twoFactorYubikeySupportsNfcDesc\" | i18n }}</small>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"disableBtn.loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"@bitwarden/common/models/request/updateTwoFactorYubioOtpRequest\";\nimport { TwoFactorYubiKeyResponse } from \"@bitwarden/common/models/response/twoFactorYubiKeyResponse\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\ninterface Key {\n  key: string;\n  existingKey: string;\n}\n\n@Component({\n  selector: \"app-two-factor-yubikey\",\n  templateUrl: \"two-factor-yubikey.component.html\",\n})\nexport class TwoFactorYubiKeyComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Yubikey;\n  keys: Key[];\n  nfc = false;\n\n  formPromise: Promise<TwoFactorYubiKeyResponse>;\n  disablePromise: Promise<unknown>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorYubiKeyResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    const request = await this.buildRequestModel(UpdateTwoFactorYubioOtpRequest);\n    request.key1 = this.keys != null && this.keys.length > 0 ? this.keys[0].key : null;\n    request.key2 = this.keys != null && this.keys.length > 1 ? this.keys[1].key : null;\n    request.key3 = this.keys != null && this.keys.length > 2 ? this.keys[2].key : null;\n    request.key4 = this.keys != null && this.keys.length > 3 ? this.keys[3].key : null;\n    request.key5 = this.keys != null && this.keys.length > 4 ? this.keys[4].key : null;\n    request.nfc = this.nfc;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorYubiKey(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"yubikeysUpdated\"));\n    });\n  }\n\n  disable() {\n    return super.disable(this.disablePromise);\n  }\n\n  remove(key: Key) {\n    key.existingKey = null;\n    key.key = null;\n  }\n\n  private processResponse(response: TwoFactorYubiKeyResponse) {\n    this.enabled = response.enabled;\n    this.keys = [\n      { key: response.key1, existingKey: this.padRight(response.key1) },\n      { key: response.key2, existingKey: this.padRight(response.key2) },\n      { key: response.key3, existingKey: this.padRight(response.key3) },\n      { key: response.key4, existingKey: this.padRight(response.key4) },\n      { key: response.key5, existingKey: this.padRight(response.key5) },\n    ];\n    this.nfc = response.nfc || !response.enabled;\n  }\n\n  private padRight(str: string, character = \"•\", size = 44) {\n    if (str == null || character == null || str.length >= size) {\n      return str;\n    }\n    const max = (size - str.length) / character.length;\n    for (let i = 0; i < max; i++) {\n      str += character;\n    }\n    return str;\n  }\n}\n","import { Component, OnInit, Type, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { DeviceVerificationRequest } from \"@bitwarden/common/models/request/deviceVerificationRequest\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { TwoFactorAuthenticatorComponent } from \"./two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"./two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"./two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"./two-factor-recovery.component\";\nimport { TwoFactorWebAuthnComponent } from \"./two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"./two-factor-yubikey.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"two-factor-setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TwoFactorSetupComponent implements OnInit {\n  @ViewChild(\"recoveryTemplate\", { read: ViewContainerRef, static: true })\n  recoveryModalRef: ViewContainerRef;\n  @ViewChild(\"authenticatorTemplate\", { read: ViewContainerRef, static: true })\n  authenticatorModalRef: ViewContainerRef;\n  @ViewChild(\"yubikeyTemplate\", { read: ViewContainerRef, static: true })\n  yubikeyModalRef: ViewContainerRef;\n  @ViewChild(\"duoTemplate\", { read: ViewContainerRef, static: true }) duoModalRef: ViewContainerRef;\n  @ViewChild(\"emailTemplate\", { read: ViewContainerRef, static: true })\n  emailModalRef: ViewContainerRef;\n  @ViewChild(\"webAuthnTemplate\", { read: ViewContainerRef, static: true })\n  webAuthnModalRef: ViewContainerRef;\n\n  organizationId: string;\n  providers: any[] = [];\n  canAccessPremium: boolean;\n  showPolicyWarning = false;\n  loading = true;\n  enableDeviceVerification: boolean;\n  isDeviceVerificationSectionEnabled: boolean;\n  modal: ModalRef;\n  formPromise: Promise<any>;\n\n  constructor(\n    protected apiService: ApiService,\n    protected modalService: ModalService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private stateService: StateService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    try {\n      const deviceVerificationSettings = await this.apiService.getDeviceVerificationSettings();\n      this.isDeviceVerificationSectionEnabled =\n        deviceVerificationSettings.isDeviceVerificationSectionEnabled;\n      this.enableDeviceVerification = deviceVerificationSettings.unknownDeviceVerificationEnabled;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    for (const key in TwoFactorProviders) {\n      // eslint-disable-next-line\n      if (!TwoFactorProviders.hasOwnProperty(key)) {\n        continue;\n      }\n\n      const p = (TwoFactorProviders as any)[key];\n      if (this.filterProvider(p.type)) {\n        continue;\n      }\n\n      this.providers.push({\n        type: p.type,\n        name: p.name,\n        description: p.description,\n        enabled: false,\n        premium: p.premium,\n        sort: p.sort,\n      });\n    }\n\n    this.providers.sort((a: any, b: any) => a.sort - b.sort);\n    await this.load();\n  }\n\n  async load() {\n    this.loading = true;\n    const providerList = await this.getTwoFactorProviders();\n    providerList.data.forEach((p) => {\n      this.providers.forEach((p2) => {\n        if (p.type === p2.type) {\n          p2.enabled = p.enabled;\n        }\n      });\n    });\n    this.evaluatePolicies();\n    this.loading = false;\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.Authenticator: {\n        const authComp = await this.openModal(\n          this.authenticatorModalRef,\n          TwoFactorAuthenticatorComponent\n        );\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        authComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Authenticator);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Yubikey: {\n        const yubiComp = await this.openModal(this.yubikeyModalRef, TwoFactorYubiKeyComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        yubiComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Yubikey);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Duo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Duo);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Email: {\n        const emailComp = await this.openModal(this.emailModalRef, TwoFactorEmailComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        emailComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Email);\n        });\n        break;\n      }\n      case TwoFactorProviderType.WebAuthn: {\n        const webAuthnComp = await this.openModal(\n          this.webAuthnModalRef,\n          TwoFactorWebAuthnComponent\n        );\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        webAuthnComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.WebAuthn);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  recoveryCode() {\n    this.openModal(this.recoveryModalRef, TwoFactorRecoveryComponent);\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorProviders();\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type === TwoFactorProviderType.OrganizationDuo;\n  }\n\n  protected async openModal<T>(ref: ViewContainerRef, type: Type<T>): Promise<T> {\n    const [modal, childComponent] = await this.modalService.openViewRef(type, ref);\n    this.modal = modal;\n\n    return childComponent;\n  }\n\n  protected updateStatus(enabled: boolean, type: TwoFactorProviderType) {\n    if (!enabled && this.modal != null) {\n      this.modal.close();\n    }\n    this.providers.forEach((p) => {\n      if (p.type === type) {\n        p.enabled = enabled;\n      }\n    });\n    this.evaluatePolicies();\n  }\n\n  private async evaluatePolicies() {\n    if (this.organizationId == null && this.providers.filter((p) => p.enabled).length === 1) {\n      this.showPolicyWarning = await this.policyService.policyAppliesToUser(\n        PolicyType.TwoFactorAuthentication\n      );\n    } else {\n      this.showPolicyWarning = false;\n    }\n  }\n\n  async submit() {\n    try {\n      if (this.enableDeviceVerification) {\n        const email = await this.stateService.getEmail();\n        const confirmed = await this.platformUtilsService.showDialog(\n          this.i18nService.t(\n            \"areYouSureYouWantToEnableDeviceVerificationTheVerificationCodeEmailsWillArriveAtX\",\n            email\n          ),\n          this.i18nService.t(\"deviceVerification\"),\n          this.i18nService.t(\"yes\"),\n          this.i18nService.t(\"no\"),\n          \"warning\"\n        );\n        if (!confirmed) {\n          return;\n        }\n      }\n\n      this.formPromise = this.apiService.putDeviceVerificationSettings(\n        new DeviceVerificationRequest(this.enableDeviceVerification)\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedDeviceVerification\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\nimport { TwoFactorResponse } from \"@bitwarden/common/types/twoFactorResponse\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-two-factor-verify\",\n  templateUrl: \"two-factor-verify.component.html\",\n})\nexport class TwoFactorVerifyComponent {\n  @Input() type: TwoFactorProviderType;\n  @Input() organizationId: string;\n  @Output() onAuthed = new EventEmitter<AuthResponse<TwoFactorResponse>>();\n\n  secret: Verification;\n  formPromise: Promise<TwoFactorResponse>;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async submit() {\n    let hashedSecret: string;\n\n    try {\n      this.formPromise = this.userVerificationService.buildRequest(this.secret).then((request) => {\n        hashedSecret =\n          this.secret.type === VerificationType.MasterPassword\n            ? request.masterPasswordHash\n            : request.otp;\n        return this.apiCall(request);\n      });\n\n      const response = await this.formPromise;\n      this.onAuthed.emit({\n        response: response,\n        secret: hashedSecret,\n        verificationType: this.secret.type,\n      });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private apiCall(request: SecretVerificationRequest): Promise<TwoFactorResponse> {\n    switch (this.type) {\n      case -1 as TwoFactorProviderType:\n        return this.apiService.getTwoFactorRecover(request);\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        if (this.organizationId != null) {\n          return this.apiService.getTwoFactorOrganizationDuo(this.organizationId, request);\n        } else {\n          return this.apiService.getTwoFactorDuo(request);\n        }\n      case TwoFactorProviderType.Email:\n        return this.apiService.getTwoFactorEmail(request);\n      case TwoFactorProviderType.WebAuthn:\n        return this.apiService.getTwoFactorWebAuthn(request);\n      case TwoFactorProviderType.Authenticator:\n        return this.apiService.getTwoFactorAuthenticator(request);\n      case TwoFactorProviderType.Yubikey:\n        return this.apiService.getTwoFactorYubiKey(request);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"modal-body\">\n    <p>{{ \"twoStepLoginAuthDesc\" | i18n }}</p>\n    <app-user-verification [(ngModel)]=\"secret\" ngDefaultControl name=\"secret\">\n    </app-user-verification>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"continue\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n      {{ \"close\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-update-license\",\n  templateUrl: \"update-license.component.html\",\n})\nexport class UpdateLicenseComponent {\n  @Input() organizationId: string;\n  @Output() onUpdated = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    try {\n      const fd = new FormData();\n      fd.append(\"license\", files[0]);\n\n      let updatePromise: Promise<void | unknown> = null;\n      if (this.organizationId == null) {\n        updatePromise = this.apiService.postAccountLicense(fd);\n      } else {\n        updatePromise = this.organizationApiService.updateLicense(this.organizationId, fd);\n      }\n\n      this.formPromise = updatePromise.then(() => {\n        return this.apiService.refreshIdentityToken();\n      });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedLicense\"));\n      this.onUpdated.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"form-group\">\n    <label for=\"file\" class=\"sr-only\">{{ \"licenseFile\" | i18n }}</label>\n    <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n    <small class=\"form-text text-muted\">{{\n      \"licenseFileDesc\"\n        | i18n\n          : (!organizationId\n              ? \"bitwarden_premium_license.json\"\n              : \"bitwarden_organization_license.json\")\n    }}</small>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"submit\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { NgModule } from \"@angular/core\";\n\nimport { UserVerificationComponent } from \"@bitwarden/angular/components/user-verification.component\";\n\nimport { AcceptEmergencyComponent } from \"../accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"../accounts/accept-organization.component\";\nimport { HintComponent } from \"../accounts/hint.component\";\nimport { LockComponent } from \"../accounts/lock.component\";\nimport { LoginComponent } from \"../accounts/login.component\";\nimport { RecoverDeleteComponent } from \"../accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"../accounts/recover-two-factor.component\";\nimport { RegisterFormModule } from \"../accounts/register-form/register-form.module\";\nimport { RegisterComponent } from \"../accounts/register.component\";\nimport { RemovePasswordComponent } from \"../accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"../accounts/set-password.component\";\nimport { SsoComponent } from \"../accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"../accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"../accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"../accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"../accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"../accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"../accounts/verify-recover-delete.component\";\nimport { NestedCheckboxComponent } from \"../components/nested-checkbox.component\";\nimport { OrganizationSwitcherComponent } from \"../components/organization-switcher.component\";\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\nimport { PremiumBadgeComponent } from \"../components/premium-badge.component\";\nimport { UserVerificationPromptComponent } from \"../components/user-verification-prompt.component\";\nimport { FooterComponent } from \"../layouts/footer.component\";\nimport { FrontendLayoutComponent } from \"../layouts/frontend-layout.component\";\nimport { NavbarComponent } from \"../layouts/navbar.component\";\nimport { UserLayoutComponent } from \"../layouts/user-layout.component\";\nimport { OrganizationCreateModule } from \"../organizations/create/organization-create.module\";\nimport { OrganizationLayoutComponent } from \"../organizations/layouts/organization-layout.component\";\nimport { BulkConfirmComponent as OrgBulkConfirmComponent } from \"../organizations/manage/bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent as OrgBulkRemoveComponent } from \"../organizations/manage/bulk/bulk-remove.component\";\nimport { BulkRestoreRevokeComponent as OrgBulkRestoreRevokeComponent } from \"../organizations/manage/bulk/bulk-restore-revoke.component\";\nimport { BulkStatusComponent as OrgBulkStatusComponent } from \"../organizations/manage/bulk/bulk-status.component\";\nimport { CollectionAddEditComponent as OrgCollectionAddEditComponent } from \"../organizations/manage/collection-add-edit.component\";\nimport { CollectionsComponent as OrgManageCollectionsComponent } from \"../organizations/manage/collections.component\";\nimport { EntityEventsComponent as OrgEntityEventsComponent } from \"../organizations/manage/entity-events.component\";\nimport { EventsComponent as OrgEventsComponent } from \"../organizations/manage/events.component\";\nimport { GroupAddEditComponent as OrgGroupAddEditComponent } from \"../organizations/manage/group-add-edit.component\";\nimport { GroupsComponent as OrgGroupsComponent } from \"../organizations/manage/groups.component\";\nimport { ManageComponent as OrgManageComponent } from \"../organizations/manage/manage.component\";\nimport { PeopleComponent as OrgPeopleComponent } from \"../organizations/manage/people.component\";\nimport { ResetPasswordComponent as OrgResetPasswordComponent } from \"../organizations/manage/reset-password.component\";\nimport { UserAddEditComponent as OrgUserAddEditComponent } from \"../organizations/manage/user-add-edit.component\";\nimport { UserConfirmComponent as OrgUserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\nimport { UserGroupsComponent as OrgUserGroupsComponent } from \"../organizations/manage/user-groups.component\";\nimport { AcceptFamilySponsorshipComponent } from \"../organizations/sponsorships/accept-family-sponsorship.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"../organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent } from \"../organizations/tools/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent } from \"../organizations/tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent } from \"../organizations/tools/reused-passwords-report.component\";\nimport { ToolsComponent as OrgToolsComponent } from \"../organizations/tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent } from \"../organizations/tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent } from \"../organizations/tools/weak-passwords-report.component\";\nimport { AddEditComponent as OrgAddEditComponent } from \"../organizations/vault/add-edit.component\";\nimport { AttachmentsComponent as OrgAttachmentsComponent } from \"../organizations/vault/attachments.component\";\nimport { CollectionsComponent as OrgCollectionsComponent } from \"../organizations/vault/collections.component\";\nimport { ProvidersComponent } from \"../providers/providers.component\";\nimport { AccessComponent } from \"../send/access.component\";\nimport { AddEditComponent as SendAddEditComponent } from \"../send/add-edit.component\";\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"../send/efflux-dates.component\";\nimport { SendComponent } from \"../send/send.component\";\nimport { AccountComponent } from \"../settings/account.component\";\nimport { AddCreditComponent } from \"../settings/add-credit.component\";\nimport { AdjustPaymentComponent } from \"../settings/adjust-payment.component\";\nimport { AdjustStorageComponent } from \"../settings/adjust-storage.component\";\nimport { ApiKeyComponent } from \"../settings/api-key.component\";\nimport { BillingHistoryViewComponent } from \"../settings/billing-history-view.component\";\nimport { BillingHistoryComponent } from \"../settings/billing-history.component\";\nimport { BillingSyncKeyComponent } from \"../settings/billing-sync-key.component\";\nimport { ChangeEmailComponent } from \"../settings/change-email.component\";\nimport { ChangeKdfComponent } from \"../settings/change-kdf.component\";\nimport { ChangePasswordComponent } from \"../settings/change-password.component\";\nimport { CreateOrganizationComponent } from \"../settings/create-organization.component\";\nimport { DeauthorizeSessionsComponent } from \"../settings/deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"../settings/delete-account.component\";\nimport { DomainRulesComponent } from \"../settings/domain-rules.component\";\nimport { EmergencyAccessAddEditComponent } from \"../settings/emergency-access-add-edit.component\";\nimport { EmergencyAccessAttachmentsComponent } from \"../settings/emergency-access-attachments.component\";\nimport { EmergencyAccessConfirmComponent } from \"../settings/emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"../settings/emergency-access-takeover.component\";\nimport { EmergencyAccessViewComponent } from \"../settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"../settings/emergency-access.component\";\nimport { EmergencyAddEditComponent } from \"../settings/emergency-add-edit.component\";\nimport { OrganizationPlansComponent } from \"../settings/organization-plans.component\";\nimport { PaymentMethodComponent } from \"../settings/payment-method.component\";\nimport { PaymentComponent } from \"../settings/payment.component\";\nimport { PreferencesComponent } from \"../settings/preferences.component\";\nimport { PremiumComponent } from \"../settings/premium.component\";\nimport { ProfileComponent } from \"../settings/profile.component\";\nimport { PurgeVaultComponent } from \"../settings/purge-vault.component\";\nimport { SecurityKeysComponent } from \"../settings/security-keys.component\";\nimport { SecurityComponent } from \"../settings/security.component\";\nimport { SettingsComponent } from \"../settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"../settings/sponsored-families.component\";\nimport { SponsoringOrgRowComponent } from \"../settings/sponsoring-org-row.component\";\nimport { SubscriptionComponent } from \"../settings/subscription.component\";\nimport { TaxInfoComponent } from \"../settings/tax-info.component\";\nimport { TwoFactorAuthenticatorComponent } from \"../settings/two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"../settings/two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"../settings/two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"../settings/two-factor-recovery.component\";\nimport { TwoFactorSetupComponent } from \"../settings/two-factor-setup.component\";\nimport { TwoFactorVerifyComponent } from \"../settings/two-factor-verify.component\";\nimport { TwoFactorWebAuthnComponent } from \"../settings/two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"../settings/two-factor-yubikey.component\";\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\nimport { UpdateLicenseComponent } from \"../settings/update-license.component\";\nimport { UserSubscriptionComponent } from \"../settings/user-subscription.component\";\nimport { VaultTimeoutInputComponent } from \"../settings/vault-timeout-input.component\";\nimport { VerifyEmailComponent } from \"../settings/verify-email.component\";\nimport { GeneratorComponent } from \"../tools/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"../tools/password-generator-history.component\";\nimport { ToolsComponent } from \"../tools/tools.component\";\nimport { AddEditCustomFieldsComponent } from \"../vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"../vault/add-edit.component\";\nimport { AttachmentsComponent } from \"../vault/attachments.component\";\nimport { BulkActionsComponent } from \"../vault/bulk-actions.component\";\nimport { BulkDeleteComponent } from \"../vault/bulk-delete.component\";\nimport { BulkMoveComponent } from \"../vault/bulk-move.component\";\nimport { BulkRestoreComponent } from \"../vault/bulk-restore.component\";\nimport { BulkShareComponent } from \"../vault/bulk-share.component\";\nimport { CollectionsComponent } from \"../vault/collections.component\";\nimport { FolderAddEditComponent } from \"../vault/folder-add-edit.component\";\nimport { OrganizationBadgeModule } from \"../vault/organization-badge/organization-badge.module\";\nimport { ShareComponent } from \"../vault/share.component\";\nimport { VaultFilterModule } from \"../vault/vault-filter/vault-filter.module\";\n\nimport { SharedModule } from \".\";\n\n// Please do not add to this list of declarations - we should refactor these into modules when doing so makes sense until there are none left.\n// If you are building new functionality, please create or extend a feature module instead.\n@NgModule({\n  imports: [\n    SharedModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    OrganizationCreateModule,\n    RegisterFormModule,\n  ],\n  declarations: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptFamilySponsorshipComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    BillingSyncKeyComponent,\n    BulkActionsComponent,\n    BulkDeleteComponent,\n    BulkMoveComponent,\n    BulkRestoreComponent,\n    BulkShareComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DomainRulesComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    HintComponent,\n    LockComponent,\n    LoginComponent,\n    NavbarComponent,\n    NestedCheckboxComponent,\n    OrganizationSwitcherComponent,\n    OrgAddEditComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrgAttachmentsComponent,\n    OrgBulkConfirmComponent,\n    OrgBulkRestoreRevokeComponent,\n    OrgBulkRemoveComponent,\n    OrgBulkStatusComponent,\n    OrgCollectionAddEditComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEventsComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgGroupAddEditComponent,\n    OrgGroupsComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgPeopleComponent,\n    OrgResetPasswordComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgToolsComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserAddEditComponent,\n    OrgUserConfirmComponent,\n    OrgUserGroupsComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordRepromptComponent,\n    UserVerificationPromptComponent,\n    PaymentComponent,\n    PaymentMethodComponent,\n    PreferencesComponent,\n    PremiumBadgeComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RegisterComponent,\n    RemovePasswordComponent,\n    SecurityComponent,\n    SecurityKeysComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    SubscriptionComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    BillingHistoryComponent,\n    BillingHistoryViewComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n  ],\n  exports: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    BulkActionsComponent,\n    BulkDeleteComponent,\n    BulkMoveComponent,\n    BulkRestoreComponent,\n    BulkShareComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DomainRulesComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    HintComponent,\n    LockComponent,\n    LoginComponent,\n    NavbarComponent,\n    NestedCheckboxComponent,\n    OrganizationSwitcherComponent,\n    OrgAddEditComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrgAttachmentsComponent,\n    OrgBulkConfirmComponent,\n    OrgBulkRestoreRevokeComponent,\n    OrgBulkRemoveComponent,\n    OrgBulkStatusComponent,\n    OrgCollectionAddEditComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEventsComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgGroupAddEditComponent,\n    OrgGroupsComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgPeopleComponent,\n    OrgResetPasswordComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgToolsComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserAddEditComponent,\n    OrgUserConfirmComponent,\n    OrgUserGroupsComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordRepromptComponent,\n    PaymentComponent,\n    PaymentMethodComponent,\n    PreferencesComponent,\n    PremiumBadgeComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RegisterComponent,\n    RemovePasswordComponent,\n    SecurityComponent,\n    SecurityKeysComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    SubscriptionComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    BillingHistoryComponent,\n    BillingHistoryViewComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n  ],\n})\nexport class LooseComponentsModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BadgeDirective } from \"./badge.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [BadgeDirective],\n  declarations: [BadgeDirective],\n})\nexport class BadgeModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ButtonDirective } from \"./button.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [ButtonDirective],\n  declarations: [ButtonDirective],\n})\nexport class ButtonModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { CalloutComponent } from \"./callout.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [CalloutComponent],\n  declarations: [CalloutComponent],\n})\nexport class CalloutModule {}\n","import { OverlayModule } from \"@angular/cdk/overlay\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { MenuDividerComponent } from \"./menu-divider.component\";\nimport { MenuItemDirective } from \"./menu-item.directive\";\nimport { MenuTriggerForDirective } from \"./menu-trigger-for.directive\";\nimport { MenuComponent } from \"./menu.component\";\n\n@NgModule({\n  imports: [CommonModule, OverlayModule],\n  declarations: [MenuComponent, MenuTriggerForDirective, MenuItemDirective, MenuDividerComponent],\n  exports: [MenuComponent, MenuTriggerForDirective, MenuItemDirective, MenuDividerComponent],\n})\nexport class MenuModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ButtonModule } from \"../button\";\n\nimport { SubmitButtonComponent } from \"./submit-button.component\";\n\n@NgModule({\n  imports: [CommonModule, ButtonModule],\n  exports: [SubmitButtonComponent],\n  declarations: [SubmitButtonComponent],\n})\nexport class SubmitButtonModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitIconComponent } from \"./icon.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitIconComponent],\n  exports: [BitIconComponent],\n})\nexport class IconModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { TabGroupComponent } from \"./tab-group.component\";\nimport { TabItemComponent } from \"./tab-item.component\";\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  exports: [TabGroupComponent, TabItemComponent],\n  declarations: [TabGroupComponent, TabItemComponent],\n})\nexport class TabsModule {}\n","import { registerLocaleData } from \"@angular/common\";\nimport localeAf from \"@angular/common/locales/af\";\nimport localeAr from \"@angular/common/locales/ar\";\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBe from \"@angular/common/locales/be\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeBn from \"@angular/common/locales/bn\";\nimport localeBs from \"@angular/common/locales/bs\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEo from \"@angular/common/locales/eo\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeEu from \"@angular/common/locales/eu\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFil from \"@angular/common/locales/fil\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHi from \"@angular/common/locales/hi\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKa from \"@angular/common/locales/ka\";\nimport localeKm from \"@angular/common/locales/km\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localeNn from \"@angular/common/locales/nn\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSi from \"@angular/common/locales/si\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSl from \"@angular/common/locales/sl\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeVi from \"@angular/common/locales/vi\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\n\nregisterLocaleData(localeAf, \"af\");\nregisterLocaleData(localeAr, \"ar\");\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBe, \"be\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeBn, \"bn\");\nregisterLocaleData(localeBs, \"bs\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEo, \"eo\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeEu, \"eu\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFil, \"fil\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHi, \"hi\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKa, \"ka\");\nregisterLocaleData(localeKm, \"km\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localeNn, \"nn\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSi, \"si\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSl, \"sl\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeVi, \"vi\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { DatePipe, CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\nimport { ToastrModule } from \"ngx-toastr\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport {\n  BadgeModule,\n  ButtonModule,\n  CalloutModule,\n  FormFieldModule,\n  SubmitButtonModule,\n  MenuModule,\n  TabsModule,\n  IconModule,\n} from \"@bitwarden/components\";\n\n// Register the locales for the application\nimport \"./locales\";\n\n/**\n * This NgModule should contain the most basic shared directives, pipes, and components. They\n * should be widely used by other modules to be considered for adding to this module. If in doubt\n * do not add to this module.\n *\n * See: https://angular.io/guide/module-types#shared-ngmodules\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    InfiniteScrollModule,\n    JslibModule,\n    ReactiveFormsModule,\n    RouterModule,\n    BadgeModule,\n    ButtonModule,\n    CalloutModule,\n    ToastrModule,\n    BadgeModule,\n    ButtonModule,\n    MenuModule,\n    FormFieldModule,\n    SubmitButtonModule,\n    IconModule,\n    TabsModule,\n  ],\n  exports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    InfiniteScrollModule,\n    JslibModule,\n    ReactiveFormsModule,\n    RouterModule,\n    BadgeModule,\n    ButtonModule,\n    CalloutModule,\n    ToastrModule,\n    BadgeModule,\n    ButtonModule,\n    MenuModule,\n    FormFieldModule,\n    SubmitButtonModule,\n    IconModule,\n    TabsModule,\n  ],\n  providers: [DatePipe],\n  bootstrap: [],\n})\nexport class SharedModule {}\n","import { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { FieldView } from \"@bitwarden/common/models/view/fieldView\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(private i18nService: I18nService, private eventService: EventService) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue = true;\n  @Input() falseValue = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","<ng-container>\n  <h3 class=\"mt-4\">{{ \"customFields\" | i18n }}</h3>\n  <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n    <div\n      role=\"group\"\n      class=\"row\"\n      cdkDrag\n      *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n      attr.aria-label=\"{{ f.name }}\"\n    >\n      <div class=\"col-5 form-group\">\n        <div class=\"d-flex\">\n          <label for=\"fieldName{{ i }}\">{{ \"name\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/custom-fields/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"fieldName{{ i }}\"\n          type=\"text\"\n          name=\"Field.Name{{ i }}\"\n          [(ngModel)]=\"f.name\"\n          class=\"form-control\"\n          appInputVerbatim\n          [disabled]=\"cipher.isDeleted || viewOnly\"\n        />\n      </div>\n      <div class=\"col-7 form-group\">\n        <label for=\"fieldValue{{ i }}\">{{ \"value\" | i18n }}</label>\n        <div class=\"d-flex align-items-center\">\n          <!-- Text -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Text\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              appInputVerbatim\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', 'Field')\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Hidden -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Hidden\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              type=\"{{ f.showValue ? 'text' : 'password' }}\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              class=\"form-control text-monospace\"\n              appInputVerbatim\n              autocomplete=\"new-password\"\n              [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.viewPassword && !f.newField)\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleFieldValue(f)\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n                >\n                </i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', f.type === fieldType.Hidden ? 'H_Field' : 'Field')\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Linked -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Linked\">\n            <select\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              class=\"form-control\"\n              [(ngModel)]=\"f.linkedId\"\n              *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            >\n              <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"flex-fill\">\n            <!-- Boolean -->\n            <input\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              type=\"checkbox\"\n              [(ngModel)]=\"f.value\"\n              *ngIf=\"f.type === fieldType.Boolean\"\n              appTrueFalseValue\n              trueValue=\"true\"\n              falseValue=\"false\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n          </div>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-danger ml-2\"\n            (click)=\"removeField(f)\"\n            appA11yTitle=\"{{ 'remove' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-muted cursor-move\"\n            appA11yTitle=\"{{ 'dragToSort' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-hamburger bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Add new custom field -->\n  <a\n    href=\"#\"\n    appStopClick\n    (click)=\"addField()\"\n    class=\"d-inline-block mb-2\"\n    *ngIf=\"!cipher.isDeleted && !viewOnly\"\n  >\n    <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomField\" | i18n }}\n  </a>\n  <div class=\"row\" *ngIf=\"!cipher.isDeleted && !viewOnly\">\n    <div class=\"col-5\">\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" class=\"form-control\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n","import { Component, Input } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"@bitwarden/angular/components/add-edit-custom-fields.component\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  @Input() viewOnly: boolean;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  constructor(i18nService: I18nService, eventService: EventService) {\n    super(i18nService, eventService);\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SecureNoteType } from \"@bitwarden/common/enums/secureNoteType\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CardView } from \"@bitwarden/common/models/view/cardView\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\nimport { IdentityView } from \"@bitwarden/common/models/view/identityView\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\nimport { LoginView } from \"@bitwarden/common/models/view/loginView\";\nimport { SecureNoteView } from \"@bitwarden/common/models/view/secureNoteView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() cloneMode = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n  @Output() onGenerateUsername = new EventEmitter();\n\n  editMode = false;\n  cipher: CipherView;\n  folders$: Observable<FolderView[]>;\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword = false;\n  showCardNumber = false;\n  showCardCode = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt = false;\n  canUseReprompt = true;\n\n  protected writeableCollections: CollectionView[];\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventService: EventService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: \"RuPay\", value: \"RuPay\" },\n      { name: i18nService.t(\"cardBrandMir\"), value: \"Mir\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership)) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")).forEach((o) => {\n      if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n        this.ownershipOptions.push({ name: o.name, value: o.id });\n      }\n    });\n    if (!this.allowPersonal) {\n      this.organizationId = this.ownershipOptions[0].value;\n    }\n\n    this.writeableCollections = await this.loadCollections();\n\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n    }\n    await this.stateService.setAddEditCipherInfo(null);\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders$ = this.folderService.folderViews$;\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generateUsername(): Promise<boolean> {\n    if (this.cipher.login?.username?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwriteUsernameConfirmation\"),\n        this.i18nService.t(\"overwriteUsername\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGenerateUsername.emit();\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (this.cipher.login?.password?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardNumberVisible, this.cipherId);\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipherService.saveWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/add-edit.component\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  canAccessPremium: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  showRevisionDate = false;\n  hasPasswordHistory = false;\n  viewingPasswordHistory = false;\n  viewOnly = false;\n\n  protected totpInterval: number;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    protected totpService: TotpService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected messagingService: MessagingService,\n    eventService: EventService,\n    protected policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n    this.showRevisionDate = this.cipher.passwordRevisionDisplayDate != null;\n    this.hasPasswordHistory = this.cipher.hasPasswordHistory;\n    this.cleanUp();\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      (this.cipher.organizationUseTotp || this.canAccessPremium)\n    ) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = window.setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n  }\n\n  toggleFavorite() {\n    this.cipher.favorite = !this.cipher.favorite;\n  }\n\n  launch(uri: LoginUriView) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (this.editMode) {\n      if (typeI18nKey === \"password\") {\n        this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n      } else if (typeI18nKey === \"securityCode\") {\n        this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n      } else if (aType === \"H_Field\") {\n        this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n      }\n    }\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      const options = (await this.passwordGenerationService.getOptions())[0];\n      this.cipher.login.password = await this.passwordGenerationService.generatePassword(options);\n    }\n    return confirmed;\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  upgradeOrganization() {\n    this.messagingService.send(\"upgradeOrganization\", {\n      organizationId: this.cipher.organizationId,\n    });\n  }\n\n  showGetPremium() {\n    if (this.canAccessPremium) {\n      return;\n    }\n    if (this.cipher.organizationUseTotp) {\n      this.upgradeOrganization();\n    } else {\n      this.premiumRequired();\n    }\n  }\n\n  viewHistory() {\n    this.viewingPasswordHistory = !this.viewingPasswordHistory;\n  }\n\n  protected cleanUp() {\n    if (this.totpInterval) {\n      window.clearInterval(this.totpInterval);\n    }\n  }\n\n  protected async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  protected allowOwnershipAssignment() {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { OrganizationNameBadgeComponent } from \"./organization-name-badge.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [OrganizationNameBadgeComponent],\n  exports: [OrganizationNameBadgeComponent],\n})\nexport class OrganizationBadgeModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\n\nimport { CollectionFilterComponent } from \"./collection-filter/collection-filter.component\";\nimport { FolderFilterComponent } from \"./folder-filter/folder-filter.component\";\nimport { StatusFilterComponent } from \"./status-filter/status-filter.component\";\nimport { TypeFilterComponent } from \"./type-filter/type-filter.component\";\nimport { VaultFilterService } from \"./vault-filter.service\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [\n    CollectionFilterComponent,\n    FolderFilterComponent,\n    StatusFilterComponent,\n    TypeFilterComponent,\n  ],\n  exports: [\n    SharedModule,\n    CollectionFilterComponent,\n    FolderFilterComponent,\n    StatusFilterComponent,\n    TypeFilterComponent,\n  ],\n  providers: [VaultFilterService],\n})\nexport class VaultFilterSharedModule {}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { DynamicTreeNode } from \"@bitwarden/angular/vault/vault-filter/models/dynamic-tree-node.model\";\nimport { VaultFilterService as BaseVaultFilterService } from \"@bitwarden/angular/vault/vault-filter/services/vault-filter.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collectionResponse\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Injectable()\nexport class VaultFilterService extends BaseVaultFilterService {\n  private _collapsedFilterNodes = new BehaviorSubject<Set<string>>(null);\n  collapsedFilterNodes$: Observable<Set<string>> = this._collapsedFilterNodes.asObservable();\n\n  constructor(\n    stateService: StateService,\n    organizationService: OrganizationService,\n    folderService: FolderService,\n    cipherService: CipherService,\n    collectionService: CollectionService,\n    policyService: PolicyService,\n    private i18nService: I18nService,\n    protected apiService: ApiService\n  ) {\n    super(\n      stateService,\n      organizationService,\n      folderService,\n      cipherService,\n      collectionService,\n      policyService\n    );\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    const nodes = await super.buildCollapsedFilterNodes();\n    this._collapsedFilterNodes.next(nodes);\n    return nodes;\n  }\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await super.storeCollapsedFilterNodes(collapsedFilterNodes);\n    this._collapsedFilterNodes.next(collapsedFilterNodes);\n  }\n\n  async ensureVaultFiltersAreExpanded() {\n    const collapsedFilterNodes = await super.buildCollapsedFilterNodes();\n    if (!collapsedFilterNodes.has(\"vaults\")) {\n      return;\n    }\n    collapsedFilterNodes.delete(\"vaults\");\n    await this.storeCollapsedFilterNodes(collapsedFilterNodes);\n  }\n\n  async buildAdminCollections(organizationId: string) {\n    let result: CollectionView[] = [];\n    const collectionResponse = await this.apiService.getCollections(organizationId);\n    if (collectionResponse?.data != null && collectionResponse.data.length) {\n      const collectionDomains = collectionResponse.data.map(\n        (r: CollectionDetailsResponse) => new Collection(new CollectionData(r))\n      );\n      result = await this.collectionService.decryptMany(collectionDomains);\n    }\n\n    const noneCollection = new CollectionView();\n    noneCollection.name = this.i18nService.t(\"unassigned\");\n    noneCollection.organizationId = organizationId;\n    result.push(noneCollection);\n\n    const nestedCollections = await this.collectionService.getAllNested(result);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: result,\n      nestedList: nestedCollections,\n    });\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { LinkSsoComponent } from \"./organization-filter/link-sso.component\";\nimport { OrganizationFilterComponent } from \"./organization-filter/organization-filter.component\";\nimport { OrganizationOptionsComponent } from \"./organization-filter/organization-options.component\";\nimport { VaultFilterSharedModule } from \"./shared/vault-filter-shared.module\";\nimport { VaultFilterComponent } from \"./vault-filter.component\";\n\n@NgModule({\n  imports: [VaultFilterSharedModule],\n  declarations: [\n    VaultFilterComponent,\n    OrganizationFilterComponent,\n    OrganizationOptionsComponent,\n    LinkSsoComponent,\n  ],\n  exports: [VaultFilterComponent],\n})\nexport class VaultFilterModule {}\n","// required to avoid linting errors when there are no flags\n/* eslint-disable @typescript-eslint/ban-types */\nexport type SharedFlags = {};\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable @typescript-eslint/ban-types */\nexport type SharedDevFlags = {};\n\nfunction getFlags<T>(envFlags: string | T): T {\n  if (typeof envFlags === \"string\") {\n    return JSON.parse(envFlags) as T;\n  } else {\n    return envFlags as T;\n  }\n}\n\n/**\n * Gets the value of a feature flag from environment.\n * All flags default to \"on\" (true).\n * Only use for shared code in `libs`, otherwise use the client-specific function.\n * @param flag The name of the feature flag to check\n * @returns The value of the flag\n */\nexport function flagEnabled<Flags extends SharedFlags>(flag: keyof Flags): boolean {\n  const flags = getFlags<Flags>(process.env.FLAGS);\n  return flags[flag] == null || !!flags[flag];\n}\n\n/**\n * Gets the value of a dev flag from environment.\n * Will always return false unless in development.\n * Only use for shared code in `libs`, otherwise use the client-specific function.\n * @param flag The name of the dev flag to check\n * @returns The value of the flag\n */\nexport function devFlagEnabled<DevFlags extends SharedDevFlags>(flag: keyof DevFlags): boolean {\n  if (process.env.ENV !== \"development\") {\n    return false;\n  }\n\n  const devFlags = getFlags<DevFlags>(process.env.DEV_FLAGS);\n  return devFlags[flag] == null || !!devFlags[flag];\n}\n\n/**\n * Gets the value of a dev flag from environment.\n * Will always return false unless in development.\n * @param flag The name of the dev flag to check\n * @returns The value of the flag\n * @throws Error if the flag is not enabled\n */\nexport function devFlagValue<DevFlags extends SharedDevFlags>(\n  flag: keyof DevFlags\n): DevFlags[keyof DevFlags] {\n  if (!devFlagEnabled(flag)) {\n    throw new Error(`This method should not be called, it is protected by a disabled dev flag.`);\n  }\n\n  const devFlags = getFlags<DevFlags>(process.env.DEV_FLAGS);\n  return devFlags[flag];\n}\n","import {\n  flagEnabled as baseFlagEnabled,\n  devFlagEnabled as baseDevFlagEnabled,\n  devFlagValue as baseDevFlagValue,\n  SharedFlags,\n  SharedDevFlags,\n} from \"@bitwarden/common/misc/flags\";\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nexport type Flags = {\n  showTrial?: boolean;\n} & SharedFlags;\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nexport type DevFlags = {} & SharedDevFlags;\n\nexport function flagEnabled(flag: keyof Flags): boolean {\n  return baseFlagEnabled<Flags>(flag);\n}\n\nexport function devFlagEnabled(flag: keyof DevFlags) {\n  return baseDevFlagEnabled<DevFlags>(flag);\n}\n\nexport function devFlagValue(flag: keyof DevFlags) {\n  return baseDevFlagValue(flag);\n}\n","export class EmergencyAccessAcceptRequest {\n  token: string;\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Directive()\nexport abstract class BaseAcceptComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  actionPromise: Promise<any>;\n\n  protected requiredParameters: string[] = [];\n  protected failedShortMessage = \"inviteAcceptFailedShort\";\n  protected failedMessage = \"inviteAcceptFailed\";\n\n  constructor(\n    protected router: Router,\n    protected platformUtilService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService\n  ) {}\n\n  abstract authedHandler(qParams: Params): Promise<void>;\n  abstract unauthedHandler(qParams: Params): Promise<void>;\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      let error = this.requiredParameters.some((e) => qParams?.[e] == null || qParams[e] === \"\");\n      let errorMessage: string = null;\n      if (!error) {\n        this.authed = await this.stateService.getIsAuthenticated();\n\n        if (this.authed) {\n          try {\n            await this.authedHandler(qParams);\n          } catch (e) {\n            error = true;\n            errorMessage = e.message;\n          }\n        } else {\n          this.email = qParams.email;\n          await this.unauthedHandler(qParams);\n        }\n      }\n\n      if (error) {\n        const message =\n          errorMessage != null\n            ? this.i18nService.t(this.failedShortMessage, errorMessage)\n            : this.i18nService.t(this.failedMessage);\n        this.platformUtilService.showToast(\"error\", null, message, { timeout: 10000 });\n        this.router.navigate([\"/\"]);\n      }\n\n      this.loading = false;\n    });\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"emergencyAccess\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ name }}\n          </p>\n          <p>{{ \"acceptEmergencyAccess\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmergencyAccessAcceptRequest } from \"@bitwarden/common/models/request/emergencyAccessAcceptRequest\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-emergency\",\n  templateUrl: \"accept-emergency.component.html\",\n})\nexport class AcceptEmergencyComponent extends BaseAcceptComponent {\n  name: string;\n\n  protected requiredParameters: string[] = [\"id\", \"name\", \"email\", \"token\"];\n  protected failedShortMessage = \"emergencyInviteAcceptFailedShort\";\n  protected failedMessage = \"emergencyInviteAcceptFailed\";\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    const request = new EmergencyAccessAcceptRequest();\n    request.token = qParams.token;\n    this.actionPromise = this.apiService.postEmergencyAccessAccept(qParams.id, request);\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"emergencyInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    this.name = qParams.name;\n    if (this.name != null) {\n      // Fix URL encoding of space issue with Angular\n      this.name = this.name.replace(/\\+/g, \" \");\n    }\n  }\n}\n","export class OrganizationUserAcceptRequest {\n  token: string;\n  // Used to auto-enroll in master password reset\n  resetPasswordKey: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img src=\"../../images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinOrganization\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ orgName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinOrganizationDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { OrganizationUserAcceptRequest } from \"@bitwarden/common/models/request/organizationUserAcceptRequest\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-organization\",\n  templateUrl: \"accept-organization.component.html\",\n})\nexport class AcceptOrganizationComponent extends BaseAcceptComponent {\n  orgName: string;\n\n  protected requiredParameters: string[] = [\"organizationId\", \"organizationUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService,\n    private cryptoService: CryptoService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    this.actionPromise = this.prepareAcceptRequest(qParams).then(async (request) => {\n      await this.apiService.postOrganizationUserAccept(\n        qParams.organizationId,\n        qParams.organizationUserId,\n        request\n      );\n    });\n\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"inviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n\n    await this.stateService.setOrganizationInvitation(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    this.orgName = qParams.organizationName;\n    if (this.orgName != null) {\n      // Fix URL encoding of space issue with Angular\n      this.orgName = this.orgName.replace(/\\+/g, \" \");\n    }\n    await this.stateService.setOrganizationInvitation(qParams);\n  }\n\n  private async prepareAcceptRequest(qParams: Params): Promise<OrganizationUserAcceptRequest> {\n    const request = new OrganizationUserAcceptRequest();\n    request.token = qParams.token;\n\n    if (await this.performResetPasswordAutoEnroll(qParams)) {\n      const response = await this.organizationApiService.getKeys(qParams.organizationId);\n\n      if (response == null) {\n        throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n      }\n\n      const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n      // RSA Encrypt user's encKey.key with organization public key\n      const encKey = await this.cryptoService.getEncKey();\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Add reset password key to accept request\n      request.resetPasswordKey = encryptedKey.encryptedString;\n    }\n    return request;\n  }\n\n  private async performResetPasswordAutoEnroll(qParams: Params): Promise<boolean> {\n    let policyList: Policy[] = null;\n    try {\n      const policies = await this.policyApiService.getPoliciesByToken(\n        qParams.organizationId,\n        qParams.token,\n        qParams.email,\n        qParams.organizationUserId\n      );\n      policyList = this.policyService.mapPoliciesFromToken(policies);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (policyList != null) {\n      const result = this.policyService.getResetPasswordPolicyOptions(\n        policyList,\n        qParams.organizationId\n      );\n      // Return true if policy enabled and auto-enroll enabled\n      return result[1] && result[0].autoEnrollEnabled;\n    }\n\n    return false;\n  }\n}\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { HintComponent as BaseHintComponent } from \"@bitwarden/angular/components/hint.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService);\n  }\n}\n","import { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PasswordHintRequest } from \"@bitwarden/common/models/request/passwordHintRequest\";\n\nexport class HintComponent {\n  email = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"passwordHint\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n            <small class=\"form-text text-muted\">{{ \"enterEmailToGetHint\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Directive, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { take } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"@bitwarden/common/enums/keySuffixOptions\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\n\n@Directive()\nexport class LockComponent implements OnInit, OnDestroy {\n  masterPassword = \"\";\n  pin = \"\";\n  showPassword = false;\n  email: string;\n  pinLock = false;\n  webVaultHostname = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  private activeAccountSubscription: Subscription;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    protected logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.activeAccountSubscription = this.stateService.activeAccount$.subscribe(async () => {\n      await this.load();\n    });\n  }\n\n  ngOnDestroy() {\n    this.activeAccountSubscription.unsubscribe();\n  }\n\n  async submit() {\n    if (this.pinLock) {\n      return await this.handlePinRequiredUnlock();\n    }\n\n    await this.handleMasterPasswordRequiredUnlock();\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async handlePinRequiredUnlock() {\n    if (this.pin == null || this.pin === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n\n    return await this.doUnlockWithPin();\n  }\n\n  private async doUnlockWithPin() {\n    let failed = true;\n    try {\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      if (this.pinSet[0]) {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfIterations,\n          await this.stateService.getDecryptedPinProtected()\n        );\n        const encKey = await this.cryptoService.getEncKey(key);\n        const protectedPin = await this.stateService.getProtectedPin();\n        const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n        failed = decPin !== this.pin;\n        if (!failed) {\n          await this.setKeyAndContinue(key);\n        }\n      } else {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfIterations\n        );\n        failed = false;\n        await this.setKeyAndContinue(key);\n      }\n    } catch {\n      failed = true;\n    }\n\n    if (failed) {\n      this.invalidPinAttempts++;\n      if (this.invalidPinAttempts >= 5) {\n        this.messagingService.send(\"logout\");\n        return;\n      }\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidPin\")\n      );\n    }\n  }\n\n  private async handleMasterPasswordRequiredUnlock() {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n    await this.doUnlockWithMasterPassword();\n  }\n\n  private async doUnlockWithMasterPassword() {\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      kdf,\n      kdfIterations\n    );\n    const storedKeyHash = await this.cryptoService.getKeyHash();\n\n    let passwordValid = false;\n\n    if (storedKeyHash != null) {\n      passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n    } else {\n      const request = new SecretVerificationRequest();\n      const serverKeyHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      request.masterPasswordHash = serverKeyHash;\n      try {\n        this.formPromise = this.apiService.postAccountVerifyPassword(request);\n        await this.formPromise;\n        passwordValid = true;\n        const localKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.LocalAuthorization\n        );\n        await this.cryptoService.setKeyHash(localKeyHash);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (!passwordValid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    if (this.pinSet[0]) {\n      const protectedPin = await this.stateService.getProtectedPin();\n      const encKey = await this.cryptoService.getEncKey(key);\n      const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n      const pinKey = await this.cryptoService.makePinKey(decPin, this.email, kdf, kdfIterations);\n      await this.stateService.setDecryptedPinProtected(\n        await this.cryptoService.encrypt(key.key, pinKey)\n      );\n    }\n    await this.setKeyAndContinue(key);\n  }\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutSettingsService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LockComponent as BaseLockComponent } from \"@bitwarden/angular/components/lock.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\n\nimport { RouterService } from \"../core\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    environmentService: EnvironmentService,\n    private routerService: RouterService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      vaultTimeoutSettingsService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.onSuccessfulSubmit = async () => {\n      const previousUrl = this.routerService.getPreviousUrl();\n      if (previousUrl && previousUrl !== \"/\" && previousUrl.indexOf(\"lock\") === -1) {\n        this.successRoute = previousUrl;\n      }\n      this.router.navigateByUrl(this.successRoute);\n    };\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"text-center mb-4\">\n        <i class=\"bwi bwi-lock bwi-4x text-muted\" aria-hidden=\"true\"></i>\n      </p>\n      <p class=\"lead text-center mx-4 mb-4\">{{ \"yourVaultIsLocked\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appAutofocus\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n            <small class=\"text-muted form-text\">\n              {{ \"loggedInAsEmailOn\" | i18n: email:webVaultHostname }}\n            </small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-unlock\" aria-hidden=\"true\"></i> {{ \"unlock\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { AuthenticationType } from \"../../enums/authenticationType\";\nimport { TokenRequestTwoFactor } from \"../request/identityToken/tokenRequestTwoFactor\";\n\nexport class PasswordLogInCredentials {\n  readonly type = AuthenticationType.Password;\n\n  constructor(\n    public email: string,\n    public masterPassword: string,\n    public captchaToken?: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class SsoLogInCredentials {\n  readonly type = AuthenticationType.Sso;\n\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUrl: string,\n    public orgId: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class ApiLogInCredentials {\n  readonly type = AuthenticationType.Api;\n\n  constructor(public clientId: string, public clientSecret: string) {}\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\n\nimport { IFrameComponent } from \"./iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","export abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CaptchaIFrame } from \"@bitwarden/common/misc/captcha_iframe\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","import { Directive, Input, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() email = \"\";\n  @Input() rememberEmail = true;\n\n  masterPassword = \"\";\n  showPassword = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected alwaysRememberEmail = false;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n  }\n\n  get selfHostedDomain() {\n    return this.environmentService.hasBaseUrl() ? this.environmentService.getWebVaultUrl() : null;\n  }\n\n  async ngOnInit() {\n    if (this.email == null || this.email === \"\") {\n      this.email = await this.stateService.getRememberedEmail();\n      if (this.email == null) {\n        this.email = \"\";\n      }\n    }\n    if (!this.alwaysRememberEmail) {\n      this.rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n    }\n    if (Utils.isBrowser && !Utils.isNode) {\n      this.focusInput();\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    try {\n      const credentials = new PasswordLogInCredentials(\n        this.email,\n        this.masterPassword,\n        this.captchaToken,\n        null\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (this.rememberEmail || this.alwaysRememberEmail) {\n        await this.stateService.setRememberedEmail(this.email);\n      } else {\n        await this.stateService.setRememberedEmail(null);\n      }\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n\n  protected focusInput() {\n    document\n      .getElementById(this.email == null || this.email === \"\" ? \"email\" : \"masterPassword\")\n      .focus();\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <img class=\"mb-2 logo logo-themed\" alt=\"Bitwarden\" />\n      <p class=\"lead text-center mx-4 mb-4\">{{ \"loginOrCreateNewAccount\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout\n            type=\"warning\"\n            title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n            *ngIf=\"showResetPasswordAutoEnrollWarning\"\n          >\n            {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n          </app-callout>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n            <small class=\"form-text\">\n              <a routerLink=\"/hint\">{{ \"getMasterPasswordHint\" | i18n }}</a>\n            </small>\n          </div>\n          <div class=\"form-check mb-3\">\n            <input\n              type=\"checkbox\"\n              class=\"form-check-input\"\n              id=\"rememberEmail\"\n              name=\"RememberEmail\"\n              [(ngModel)]=\"rememberEmail\"\n            />\n            <label class=\"form-check-label\" for=\"rememberEmail\">{{ \"rememberEmail\" | i18n }}</label>\n          </div>\n          <div class=\"mb-n3\" [hidden]=\"!showCaptcha()\">\n            <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"logIn\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n            >\n              <i class=\"bwi bwi-pencil-square\" aria-hidden=\"true\"></i>\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n          <div class=\"d-flex\">\n            <a routerLink=\"/sso\" class=\"btn btn-outline-secondary btn-block mt-2\">\n              <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i> {{ \"enterpriseSingleSignOn\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { LoginComponent as BaseLoginComponent } from \"@bitwarden/angular/components/login.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nimport { RouterService, StateService } from \"../core\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class LoginComponent extends BaseLoginComponent {\n  showResetPasswordAutoEnrollWarning = false;\n  enforcedPasswordPolicyOptions: MasterPasswordPolicyOptions;\n  policies: ListResponse<PolicyResponse>;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    private route: ActivatedRoute,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: InternalPolicyService,\n    logService: LogService,\n    ngZone: NgZone,\n    protected stateService: StateService,\n    private messagingService: MessagingService,\n    private routerService: RouterService\n  ) {\n    super(\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone\n    );\n    this.onSuccessfulLogin = async () => {\n      this.messagingService.send(\"setFullWidth\");\n    };\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n      if (qParams.premium != null) {\n        this.routerService.setPreviousUrl(\"/settings/premium\");\n      } else if (qParams.org != null) {\n        const route = this.router.createUrlTree([\"create-organization\"], {\n          queryParams: { plan: qParams.org },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n          queryParams: { token: qParams.sponsorshipToken },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      await super.ngOnInit();\n      this.rememberEmail = await this.stateService.getRememberEmail();\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      let policyList: Policy[] = null;\n      try {\n        this.policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        policyList = this.policyService.mapPoliciesFromToken(this.policies);\n      } catch (e) {\n        this.logService.error(e);\n      }\n\n      if (policyList != null) {\n        const resetPasswordPolicy = this.policyService.getResetPasswordPolicyOptions(\n          policyList,\n          invite.organizationId\n        );\n        // Set to true if policy enabled and auto-enroll enabled\n        this.showResetPasswordAutoEnrollWarning =\n          resetPasswordPolicy[1] && resetPasswordPolicy[0].autoEnrollEnabled;\n\n        this.enforcedPasswordPolicyOptions =\n          await this.policyService.getMasterPasswordPolicyOptions(policyList);\n      }\n    }\n  }\n\n  async goAfterLogIn() {\n    // Check master password against policy\n    if (this.enforcedPasswordPolicyOptions != null) {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      const masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n\n      // If invalid, save policies and require update\n      if (\n        !this.policyService.evaluateMasterPassword(\n          masterPasswordScore,\n          this.masterPassword,\n          this.enforcedPasswordPolicyOptions\n        )\n      ) {\n        const policiesData: { [id: string]: PolicyData } = {};\n        this.policies.data.map((p) => (policiesData[p.id] = new PolicyData(p)));\n        await this.policyService.replace(policiesData);\n        this.router.navigate([\"update-password\"]);\n        return;\n      }\n    }\n\n    const previousUrl = this.routerService.getPreviousUrl();\n    if (previousUrl) {\n      this.router.navigateByUrl(previousUrl);\n    } else {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  async submit() {\n    await this.stateService.setRememberEmail(this.rememberEmail);\n    if (!this.rememberEmail) {\n      await this.stateService.setRememberedEmail(null);\n    }\n    await super.submit();\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","export class DeleteRecoverRequest {\n  email: string;\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { DeleteRecoverRequest } from \"@bitwarden/common/models/request/deleteRecoverRequest\";\n\n@Component({\n  selector: \"app-recover-delete\",\n  templateUrl: \"recover-delete.component.html\",\n})\nexport class RecoverDeleteComponent {\n  email: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new DeleteRecoverRequest();\n      request.email = this.email.trim().toLowerCase();\n      this.formPromise = this.apiService.postAccountRecoverDelete(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deleteRecoverEmailSent\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>{{ \"deleteRecoverDesc\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorRecoveryRequest extends SecretVerificationRequest {\n  recoveryCode: string;\n  email: string;\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorRecoveryRequest } from \"@bitwarden/common/models/request/twoFactorRecoveryRequest\";\n\n@Component({\n  selector: \"app-recover-two-factor\",\n  templateUrl: \"recover-two-factor.component.html\",\n})\nexport class RecoverTwoFactorComponent {\n  email: string;\n  masterPassword: string;\n  recoveryCode: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new TwoFactorRecoveryRequest();\n      request.recoveryCode = this.recoveryCode.replace(/\\s/g, \"\").toLowerCase();\n      request.email = this.email.trim().toLowerCase();\n      const key = await this.authService.makePreloginKey(this.masterPassword, request.email);\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n      this.formPromise = this.apiService.postTwoFactorRecover(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"twoStepRecoverDisabled\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"recoverAccountTwoStep\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>\n            {{ \"recoverAccountTwoStepDesc\" | i18n }}\n            <a\n              href=\"https://bitwarden.com/help/lost-two-step-device/\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              >{{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"password\"\n              name=\"MasterPassword\"\n              class=\"form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"recoveryCode\">{{ \"recoveryCodeTitle\" | i18n }}</label>\n            <input\n              id=\"recoveryCode\"\n              class=\"text-monospace form-control\"\n              type=\"text\"\n              name=\"RecoveryCode\"\n              [(ngModel)]=\"recoveryCode\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { AbstractControl, UntypedFormGroup, ValidatorFn } from \"@angular/forms\";\n\nimport { FormGroupControls } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\n\nexport class InputsFieldMatch {\n  //check to ensure two fields do not have the same value\n  static validateInputsDoesntMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? {\n              inputsMatchError: {\n                message: errorMessage,\n              },\n            }\n          : null;\n      }\n\n      return null;\n    };\n  }\n\n  //check to ensure two fields have the same value\n  static validateInputsMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? null\n          : {\n              inputsDoesntMatchError: {\n                message: errorMessage,\n              },\n            };\n      }\n\n      return null;\n    };\n  }\n\n  //checks the formGroup if two fields have the same value and validation is controlled from either field\n  static validateFormInputsMatch(field: string, fieldMatchTo: string, errorMessage: string) {\n    return (formGroup: UntypedFormGroup) => {\n      const fieldCtrl = formGroup.controls[field];\n      const fieldMatchToCtrl = formGroup.controls[fieldMatchTo];\n\n      if (fieldCtrl.value !== fieldMatchToCtrl.value) {\n        fieldMatchToCtrl.setErrors({\n          inputsDoesntMatchError: {\n            message: errorMessage,\n          },\n        });\n      } else {\n        fieldMatchToCtrl.setErrors(null);\n      }\n    };\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { CaptchaProtectedRequest } from \"./captchaProtectedRequest\";\nimport { KeysRequest } from \"./keysRequest\";\nimport { ReferenceEventRequest } from \"./referenceEventRequest\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { AbstractControl, UntypedFormBuilder, ValidatorFn, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { InputsFieldMatch } from \"@bitwarden/angular/validators/inputsFieldMatch.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keysRequest\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/referenceEventRequest\";\nimport { RegisterRequest } from \"@bitwarden/common/models/request/registerRequest\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() isInTrialFlow = false;\n  @Output() createdAccount = new EventEmitter<string>();\n\n  showPassword = false;\n  formPromise: Promise<any>;\n  referenceData: ReferenceEventRequest;\n  showTerms = true;\n  showErrorSummary = false;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  formGroup = this.formBuilder.group(\n    {\n      email: [\"\", [Validators.required, Validators.email]],\n      name: [\"\"],\n      masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      confirmMasterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      hint: [\n        null,\n        [\n          InputsFieldMatch.validateInputsDoesntMatch(\n            \"masterPassword\",\n            this.i18nService.t(\"hintEqualsPassword\")\n          ),\n        ],\n      ],\n      acceptPolicies: [false, [this.acceptPoliciesValidation()]],\n    },\n    {\n      validator: InputsFieldMatch.validateFormInputsMatch(\n        \"masterPassword\",\n        \"confirmMasterPassword\",\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      ),\n    }\n  );\n\n  protected successRoute = \"login\";\n\n  protected accountCreated = false;\n\n  constructor(\n    protected formValidationErrorService: FormValidationErrorsService,\n    protected formBuilder: UntypedFormBuilder,\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    protected logService: LogService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = !platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  async submit(showToast = true) {\n    let email = this.formGroup.get(\"email\")?.value;\n    email = email.trim().toLowerCase();\n    let name = this.formGroup.get(\"name\")?.value;\n    name = name === \"\" ? null : name; // Why do we do this?\n    const masterPassword = this.formGroup.get(\"masterPassword\")?.value;\n    try {\n      if (!this.accountCreated) {\n        const registerResponse = await this.registerAccount(\n          await this.buildRegisterRequest(email, masterPassword, name),\n          showToast\n        );\n        if (!registerResponse.successful) {\n          return;\n        }\n        this.accountCreated = true;\n      }\n      if (this.isInTrialFlow) {\n        if (!this.accountCreated) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"trialAccountCreated\")\n          );\n        }\n        const loginResponse = await this.logIn(email, masterPassword, this.captchaToken);\n        if (loginResponse.captchaRequired) {\n          return;\n        }\n        this.createdAccount.emit(this.formGroup.get(\"email\")?.value);\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"newAccountCreated\")\n        );\n        this.router.navigate([this.successRoute], { queryParams: { email: email } });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        case \"inputsDoesntMatchError\":\n          return this.i18nService.t(\"masterPassDoesntMatch\");\n        case \"inputsMatchError\":\n          return this.i18nService.t(\"hintEqualsPassword\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  //validation would be ignored on selfhosted\n  private acceptPoliciesValidation(): ValidatorFn {\n    return (control: AbstractControl) => {\n      const ctrlValue = control.value;\n\n      return !ctrlValue && this.showTerms ? { required: true } : null;\n    };\n  }\n\n  private async validateRegistration(showToast: boolean): Promise<{ isValid: boolean }> {\n    this.formGroup.markAllAsTouched();\n    this.showErrorSummary = true;\n\n    if (this.formGroup.get(\"acceptPolicies\").hasError(\"required\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesRequired\")\n      );\n      return { isValid: false };\n    }\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return { isValid: false };\n    }\n\n    //desktop, browser\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return { isValid: false };\n    }\n\n    if (this.passwordStrengthResult != null && this.passwordStrengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return { isValid: false };\n      }\n    }\n    return { isValid: true };\n  }\n\n  private async buildRegisterRequest(\n    email: string,\n    masterPassword: string,\n    name: string\n  ): Promise<RegisterRequest> {\n    const hint = this.formGroup.get(\"hint\")?.value;\n    const kdf = DEFAULT_KDF_TYPE;\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      email,\n      name,\n      hashedPassword,\n      hint,\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      this.referenceData,\n      this.captchaToken\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n    return request;\n  }\n\n  private async registerAccount(\n    request: RegisterRequest,\n    showToast: boolean\n  ): Promise<{ successful: boolean }> {\n    if (!(await this.validateRegistration(showToast)).isValid) {\n      return { successful: false };\n    }\n    this.formPromise = this.apiService.postRegister(request);\n    try {\n      await this.formPromise;\n      return { successful: true };\n    } catch (e) {\n      if (this.handleCaptchaRequired(e)) {\n        return { successful: false };\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  private async logIn(\n    email: string,\n    masterPassword: string,\n    captchaBypassToken: string\n  ): Promise<{ captchaRequired: boolean }> {\n    const credentials = new PasswordLogInCredentials(\n      email,\n      masterPassword,\n      captchaBypassToken,\n      null\n    );\n    const loginResponse = await this.authService.logIn(credentials);\n    if (this.handleCaptchaRequired(loginResponse)) {\n      return { captchaRequired: true };\n    }\n    return { captchaRequired: false };\n  }\n}\n","export class ReferenceEventRequest {\n  id: string;\n  layout: string;\n  flow: string;\n}\n","<div class=\"progress\">\n  <div\n    class=\"progress-bar {{ color }}\"\n    role=\"progressbar\"\n    [ngStyle]=\"{ width: scoreWidth + '%' }\"\n    attr.aria-valuenow=\"{{ scoreWidth }}\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n  >\n    <ng-container *ngIf=\"showText && text\">\n      {{ text }}\n    </ng-container>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\n\nexport interface PasswordColorText {\n  color: string;\n  text: string;\n}\n\n@Component({\n  selector: \"app-password-strength\",\n  templateUrl: \"password-strength.component.html\",\n})\nexport class PasswordStrengthComponent implements OnChanges {\n  @Input() showText = false;\n  @Input() email: string;\n  @Input() name: string;\n  @Input() set password(value: string) {\n    this.updatePasswordStrength(value);\n  }\n  @Output() passwordStrengthResult = new EventEmitter<any>();\n  @Output() passwordScoreColor = new EventEmitter<PasswordColorText>();\n\n  masterPasswordScore: number;\n  scoreWidth = 0;\n  color = \"bg-danger\";\n  text: string;\n\n  private masterPasswordStrengthTimeout: any;\n\n  //used by desktop and browser to display strength text color\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  //used by desktop and browser to display strength text\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  constructor(\n    private i18nService: I18nService,\n    private passwordGenerationService: PasswordGenerationService\n  ) {}\n\n  ngOnChanges(): void {\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      this.scoreWidth = this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n\n      switch (this.masterPasswordScore) {\n        case 4:\n          this.color = \"bg-success\";\n          this.text = this.i18nService.t(\"strong\");\n          break;\n        case 3:\n          this.color = \"bg-primary\";\n          this.text = this.i18nService.t(\"good\");\n          break;\n        case 2:\n          this.color = \"bg-warning\";\n          this.text = this.i18nService.t(\"weak\");\n          break;\n        default:\n          this.color = \"bg-danger\";\n          this.text = this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n          break;\n      }\n\n      this.setPasswordScoreText(this.color, this.text);\n    }, 300);\n  }\n\n  updatePasswordStrength(password: string) {\n    const masterPassword = password;\n\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    this.passwordStrengthResult.emit(strengthResult);\n    this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n  }\n\n  getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const email = this.email;\n    const name = this.name;\n    const atPosition = email?.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (name != null && name !== \"\") {\n      userInput = userInput.concat(name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n\n  setPasswordScoreText(color: string, text: string) {\n    color = color.slice(3);\n    this.passwordScoreColor.emit({ color: color, text: text });\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { AbstractControl, UntypedFormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"bit-error-summary\",\n  template: ` <ng-container *ngIf=\"errorCount > 0\">\n    <i class=\"bwi bwi-error\"></i> {{ \"fieldsNeedAttention\" | i18n: errorString }}\n  </ng-container>`,\n  host: {\n    class: \"tw-block tw-text-danger tw-mt-2\",\n    \"aria-live\": \"assertive\",\n  },\n})\nexport class BitErrorSummary {\n  @Input()\n  formGroup: UntypedFormGroup;\n\n  get errorCount(): number {\n    return this.getErrorCount(this.formGroup);\n  }\n\n  get errorString() {\n    return this.errorCount.toString();\n  }\n\n  private getErrorCount(form: UntypedFormGroup): number {\n    return Object.values(form.controls).reduce((acc: number, control: AbstractControl) => {\n      if (control instanceof UntypedFormGroup) {\n        return acc + this.getErrorCount(control);\n      }\n\n      if (control.errors == null) {\n        return acc;\n      }\n\n      if (!control.dirty && control.untouched) {\n        return acc;\n      }\n\n      return acc + Object.keys(control.errors).length;\n    }, 0);\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"tw-container tw-mx-auto\"\n  [formGroup]=\"formGroup\"\n>\n  <div>\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"emailAddress\" | i18n }}</bit-label>\n        <input id=\"register-form_input_email\" bitInput type=\"email\" formControlName=\"email\" />\n        <bit-hint>{{ \"emailAddressDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"name\" | i18n }}</bit-label>\n        <input id=\"register-form_input_name\" bitInput type=\"text\" formControlName=\"name\" />\n        <bit-hint>{{ \"yourNameDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <app-callout\n        type=\"info\"\n        [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n        *ngIf=\"enforcedPolicyOptions\"\n      >\n      </app-callout>\n      <bit-form-field>\n        <bit-label>{{ \"masterPass\" | i18n }}</bit-label>\n        <input\n          id=\"register-form_input_master-password\"\n          bitInput\n          type=\"{{ showPassword ? 'text' : 'password' }}\"\n          formControlName=\"masterPassword\"\n        />\n        <button type=\"button\" bitSuffix bitButton (click)=\"togglePassword()\">\n          <i\n            aria-hidden=\"true\"\n            class=\"bwi bwi-lg bwi-eye\"\n            [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n          ></i>\n        </button>\n        <bit-hint>\n          <span class=\"tw-font-semibold\">Important:</span>\n          {{ \"masterPassImportant\" | i18n }}\n        </bit-hint>\n      </bit-form-field>\n      <app-password-strength\n        [password]=\"formGroup.get('masterPassword')?.value\"\n        [email]=\"formGroup.get('email')?.value\"\n        [name]=\"formGroup.get('name')?.value\"\n        [showText]=\"true\"\n        (passwordStrengthResult)=\"getStrengthResult($event)\"\n      >\n      </app-password-strength>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"reTypeMasterPass\" | i18n }}</bit-label>\n        <input\n          id=\"register-form_input_confirm-master-password\"\n          bitInput\n          type=\"{{ showPassword ? 'text' : 'password' }}\"\n          formControlName=\"confirmMasterPassword\"\n        />\n        <button type=\"button\" bitSuffix bitButton (click)=\"togglePassword()\">\n          <i\n            aria-hidden=\"true\"\n            class=\"bwi bwi-lg bwi-eye\"\n            [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n          ></i>\n        </button>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"masterPassHint\" | i18n }}</bit-label>\n        <input id=\"register-form_input_hint\" bitInput type=\"text\" formControlName=\"hint\" />\n        <bit-hint>{{ \"masterPassHintDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div [hidden]=\"!showCaptcha()\">\n      <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n    </div>\n\n    <div class=\"tw-mb-3 tw-flex tw-items-start\" *ngIf=\"showTerms\">\n      <div class=\"tw-flex tw-h-6 tw-items-center\">\n        <input\n          id=\"register-form_input_accept-policies\"\n          class=\"tw-border-gray-300 tw-w-4 tw-rounded tw-border\"\n          bitInput\n          type=\"checkbox\"\n          formControlName=\"acceptPolicies\"\n        />\n      </div>\n      <bit-label class=\"ml-2\">\n        {{ \"acceptPolicies\" | i18n }}<br />\n        <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n          \"termsOfService\" | i18n\n        }}</a\n        >,\n        <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n          \"privacyPolicy\" | i18n\n        }}</a>\n      </bit-label>\n    </div>\n\n    <div class=\"tw-mb-3 tw-flex\">\n      <ng-container *ngIf=\"!accountCreated\">\n        <bit-submit-button [loading]=\"form.loading\">{{ \"createAccount\" | i18n }}</bit-submit-button>\n        <a\n          bitButton\n          buttonType=\"secondary\"\n          routerLink=\"/login\"\n          class=\"tw-ml-3 tw-inline-flex tw-items-center tw-px-3\"\n        >\n          <i class=\"bwi bwi-sign-in tw-mr-2\"></i>\n          {{ \"logIn\" | i18n }}\n        </a>\n      </ng-container>\n      <ng-container *ngIf=\"accountCreated\">\n        <bit-submit-button [loading]=\"form.loading\">{{ \"logIn\" | i18n }}</bit-submit-button>\n      </ng-container>\n    </div>\n    <bit-error-summary *ngIf=\"showErrorSummary\" [formGroup]=\"formGroup\"></bit-error-summary>\n  </div>\n</form>\n","import { Component, Input } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"@bitwarden/angular/components/register.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/referenceEventRequest\";\n\n@Component({\n  selector: \"app-register-form\",\n  templateUrl: \"./register-form.component.html\",\n})\nexport class RegisterFormComponent extends BaseRegisterComponent {\n  @Input() queryParamEmail: string;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() referenceDataValue: ReferenceEventRequest;\n\n  showErrorSummary = false;\n\n  constructor(\n    formValidationErrorService: FormValidationErrorsService,\n    formBuilder: UntypedFormBuilder,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      formValidationErrorService,\n      formBuilder,\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.referenceData = this.referenceDataValue;\n\n    if (this.queryParamEmail) {\n      this.formGroup.get(\"email\")?.setValue(this.queryParamEmail);\n    }\n  }\n\n  async submit() {\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.passwordStrengthResult.score,\n        this.formGroup.get(\"masterPassword\")?.value,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    await super.submit(false);\n  }\n}\n","<div class=\"layout\" [ngClass]=\"['layout', layout]\">\n  <!-- TEAMS 1 Header -->\n  <header\n    class=\"header\"\n    *ngIf=\"\n      layout === 'default' ||\n      layout === 'teams' ||\n      layout === 'teams1' ||\n      layout === 'teams2' ||\n      layout === 'enterprise' ||\n      layout === 'enterprise1' ||\n      layout === 'enterprise2' ||\n      layout === 'cnetcmpgnent' ||\n      layout === 'cnetcmpgnteams' ||\n      layout === 'cnetcmpgnind'\n    \"\n  >\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-7\">\n          <img\n            alt=\"Bitwarden\"\n            class=\"logo mb-2\"\n            src=\"../../images/register-layout/logo-horizontal-white.svg\"\n          />\n        </div>\n      </div>\n    </div>\n  </header>\n\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-7\" *ngIf=\"layout\">\n        <div class=\"mt-5\">\n          <!-- Default Body -->\n          <div\n            *ngIf=\"\n              layout === 'teams' ||\n              layout === 'enterprise' ||\n              layout === 'enterprise1' ||\n              layout === 'default'\n            \"\n          >\n            <h1>The Bitwarden Password Manager</h1>\n            <h2>\n              Trusted by millions of individuals, teams, and organizations worldwide for secure\n              password storage and sharing.\n            </h2>\n            <p>Store logins, secure notes, and more</p>\n            <p>Collaborate and share securely</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- Teams & Enterprise Body -->\n          <div *ngIf=\"layout === 'teams1' || layout === 'teams2' || layout === 'enterprise2'\">\n            <h1>\n              Start Your <span *ngIf=\"layout === 'teams1' || layout === 'teams1'\">Teams<br /></span\n              ><span *ngIf=\"layout === 'enterprise2'\">Enterprise</span> Free Trial Now\n            </h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Collaborate and share securely</p>\n            <p>Deploy and manage quickly and easily</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- CNET Campaign Teams & Enterprise Body -->\n          <div *ngIf=\"layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnent'\">\n            <h1>\n              Start Your <span *ngIf=\"layout === 'cnetcmpgnteams'\">Teams<br /></span\n              ><span *ngIf=\"layout === 'cnetcmpgnent'\">Enterprise</span> Free Trial Now\n            </h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Collaborate and share securely</p>\n            <p>Deploy and manage quickly and easily</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- CNET Campaign Premium Body -->\n          <div *ngIf=\"layout === 'cnetcmpgnind'\">\n            <h1>Start Your Premium Account Now</h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Store logins, secure notes, and more</p>\n            <p>Secure your account with advanced two-step login</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n        </div>\n      </div>\n      <div [ngClass]=\"{ 'col-5': layout, 'col-12': !layout }\">\n        <div class=\"row justify-content-md-center mt-5\">\n          <div [ngClass]=\"{ 'col-5': !layout, 'col-12': layout }\">\n            <h1 class=\"lead text-center mb-4\" *ngIf=\"!layout\">{{ \"createAccount\" | i18n }}</h1>\n            <div class=\"card d-block\">\n              <div class=\"card-body\">\n                <app-callout\n                  title=\"{{ 'createOrganizationStep1' | i18n }}\"\n                  type=\"info\"\n                  icon=\"bwi bwi-thumb-tack\"\n                  *ngIf=\"showCreateOrgMessage\"\n                >\n                  {{ \"createOrganizationCreatePersonalAccount\" | i18n }}\n                </app-callout>\n                <app-register-form\n                  [queryParamEmail]=\"email\"\n                  [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n                  [referenceDataValue]=\"referenceData\"\n                ></app-register-form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-7 d-flex align-items-center\">\n        <div\n          *ngIf=\"\n            layout === 'cnetcmpgnent' || layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnind'\n          \"\n        >\n          <figure>\n            <figcaption>\n              <cite>\n                <img\n                  src=\"../../images/register-layout/cnet-logo.svg\"\n                  class=\"w-25 d-block mx-auto\"\n                  alt=\"cnet logo\"\n                />\n              </cite>\n            </figcaption>\n            <blockquote class=\"mx-auto text-center px-4\">\n              \"No more excuses; start using Bitwarden today. The identity you save could be your\n              own. The money definitely will be.\"\n            </blockquote>\n          </figure>\n        </div>\n\n        <div\n          *ngIf=\"\n            layout === 'teams' ||\n            layout === 'teams1' ||\n            layout === 'teams2' ||\n            layout === 'enterprise' ||\n            layout === 'enterprise1' ||\n            layout === 'enterprise2' ||\n            layout === 'default'\n          \"\n        >\n          <figure>\n            <figcaption>\n              <cite>\n                <img\n                  src=\"../../images/register-layout/forbes-logo.svg\"\n                  class=\"w-25 d-block mx-auto\"\n                  alt=\"Forbes Logo\"\n                />\n              </cite>\n            </figcaption>\n            <blockquote class=\"mx-auto text-center px-4\">\n              “Bitwarden boasts the backing of some of the world's best security experts and an\n              attractive, easy-to-use interface”\n            </blockquote>\n          </figure>\n        </div>\n      </div>\n      <div\n        *ngIf=\"\n          layout === 'cnetcmpgnent' || layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnind'\n        \"\n        class=\"col-5 d-flex align-items-center justify-content-center\"\n      >\n        <img\n          src=\"../../images/register-layout/usnews-360-badge.svg\"\n          class=\"w-50 d-block\"\n          alt=\"US News 360 Reviews Best Password Manager\"\n        />\n      </div>\n      <div\n        *ngIf=\"\n          layout === 'teams' ||\n          layout === 'teams1' ||\n          layout === 'teams2' ||\n          layout === 'enterprise' ||\n          layout === 'enterprise1' ||\n          layout === 'enterprise2' ||\n          layout === 'default'\n        \"\n        class=\"col-5 d-flex align-items-center justify-content-center\"\n      >\n        <img\n          src=\"../../images/register-layout/usnews-360-badge.svg\"\n          class=\"w-50 d-block\"\n          alt=\"US News 360 Reviews Best Password Manager\"\n        />\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"@bitwarden/angular/components/register.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/referenceEventRequest\";\n\nimport { RouterService } from \"../core\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"register.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class RegisterComponent extends BaseRegisterComponent {\n  email = \"\";\n  showCreateOrgMessage = false;\n  layout = \"\";\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n  private policies: Policy[];\n\n  constructor(\n    formValidationErrorService: FormValidationErrorsService,\n    formBuilder: UntypedFormBuilder,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    environmentService: EnvironmentService,\n    logService: LogService,\n    private routerService: RouterService\n  ) {\n    super(\n      formValidationErrorService,\n      formBuilder,\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      this.referenceData = new ReferenceEventRequest();\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n      if (qParams.premium != null) {\n        this.routerService.setPreviousUrl(\"/settings/premium\");\n      } else if (qParams.org != null) {\n        this.showCreateOrgMessage = true;\n        this.referenceData.flow = qParams.org;\n        const route = this.router.createUrlTree([\"create-organization\"], {\n          queryParams: { plan: qParams.org },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      if (qParams.layout != null) {\n        this.layout = this.referenceData.layout = qParams.layout;\n      }\n      if (qParams.reference != null) {\n        this.referenceData.id = qParams.reference;\n      } else {\n        this.referenceData.id = (\"; \" + document.cookie)\n          .split(\"; reference=\")\n          .pop()\n          .split(\";\")\n          .shift();\n      }\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        // After logging in redirect them to setup the families sponsorship\n        const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n          queryParams: { plan: qParams.sponsorshipToken },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      if (this.referenceData.id === \"\") {\n        this.referenceData.id = null;\n      }\n    });\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      try {\n        const policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        if (policies.data != null) {\n          const policiesData = policies.data.map((p) => new PolicyData(p));\n          this.policies = policiesData.map((p) => new Policy(p));\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (this.policies != null) {\n      this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(\n        this.policies\n      );\n    }\n\n    await super.ngOnInit();\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<void | boolean>;\n  continuing = false;\n  leaving = false;\n\n  loading = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.organizationApiService.leave(this.organization.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"removeMasterPassword\" | i18n }}</p>\n      <hr />\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-block\"\n            (click)=\"convert()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"continuing\"\n            ></i>\n            {{ \"removeMasterPassword\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-block\"\n            (click)=\"leave()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"leaving\"\n            ></i>\n            {{ \"leaveOrganization\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"@bitwarden/angular/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class OrganizationUserResetPasswordEnrollmentRequest extends SecretVerificationRequest {\n  resetPasswordKey: string;\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { KeysRequest } from \"./keysRequest\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfIterations: number;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.enforcedPolicyOptions ??= await this.policyService.getMasterPasswordPolicyOptions();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfIterations == null) {\n      this.kdfIterations = await this.stateService.getKdfIterations();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordStrengthResult;\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keysRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { SetPasswordRequest } from \"@bitwarden/common/models/request/setPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading = true;\n  showPassword = false;\n  hint = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<void>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.organizationApiService.getAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyApiService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = DEFAULT_KDF_TYPE;\n    this.kdfIterations = DEFAULT_KDF_ITERATIONS;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.kdf,\n      this.kdfIterations,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString)\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.organizationApiService.getKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.masterPasswordHash = masterPasswordHash;\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.apiService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfIterations(this.kdfIterations);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body text-center\" *ngIf=\"syncLoading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!syncLoading\">\n          <app-callout type=\"info\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n          <app-callout\n            type=\"warning\"\n            title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n            *ngIf=\"resetPasswordAutoEnroll\"\n          >\n            {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n          </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength\n                  [password]=\"masterPassword\"\n                  [email]=\"email\"\n                  [showText]=\"true\"\n                  (passwordStrengthResult)=\"getStrengthResult($event)\"\n                >\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n            <small class=\"form-text text-muted\">{{ \"masterPassDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"@bitwarden/angular/components/set-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyApiService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService,\n      organizationApiService\n    );\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { SsoLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\nimport { SsoPreValidateResponse } from \"@bitwarden/common/models/response/ssoPreValidateResponse\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<SsoPreValidateResponse>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return;\n    }\n\n    this.initiateSsoFormPromise = this.apiService.preValidateSso(this.identifier);\n    const response = await this.initiateSsoFormPromise;\n\n    const authorizeUrl = await this.buildAuthorizeUrl(\n      returnUri,\n      includeUserIdentifier,\n      response.token\n    );\n    this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean,\n    token?: string\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier) +\n      \"&ssoToken=\" +\n      encodeURIComponent(token);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      const credentials = new SsoLogInCredentials(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n\n      // TODO: Key Connector Service should pass this error message to the logout callback instead of displaying here\n      if (e.message === \"Key Connector error\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorError\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  class=\"container\"\n  [appApiAction]=\"initiateSsoFormPromise\"\n  ngNativeValidate\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <img class=\"logo mb-2 logo-themed\" alt=\"Bitwarden\" />\n      <div class=\"card d-block mt-4\">\n        <div class=\"card-body\" *ngIf=\"loggingIn\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loggingIn\">\n          <p>{{ \"ssoLogInWithOrgIdentifier\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"identifier\">{{ \"organizationIdentifier\" | i18n }}</label>\n            <input\n              id=\"identifier\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Identifier\"\n              [(ngModel)]=\"identifier\"\n              required\n              appAutofocus\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"logIn\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SsoComponent as BaseSsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      } else {\n        const storedIdentifier = await this.stateService.getSsoOrgIdentifier();\n        if (storedIdentifier != null) {\n          this.identifier = storedIdentifier;\n        }\n      }\n    });\n  }\n\n  async submit() {\n    await this.stateService.setSsoOrganizationIdentifier(this.identifier);\n    if (this.clientId === \"browser\") {\n      document.cookie = `ssoHandOffMessage=${this.i18nService.t(\"ssoHandOff\")};SameSite=strict`;\n    }\n    super.submit();\n  }\n}\n","export enum ProductType {\n  Free = 0,\n  Families = 1,\n  Teams = 2,\n  Enterprise = 3,\n}\n","<ng-template>\n  <div\n    class=\"tw-inline-block tw-w-11/12 tw-pl-7\"\n    [ngClass]=\"{ 'tw-border-0 tw-border-l tw-border-solid tw-border-secondary-300': applyBorder }\"\n  >\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { CdkStep } from \"@angular/cdk/stepper\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-vertical-step\",\n  templateUrl: \"vertical-step.component.html\",\n  providers: [{ provide: CdkStep, useExisting: VerticalStep }],\n})\nexport class VerticalStep extends CdkStep {\n  @Input() subLabel = \"\";\n  @Input() applyBorder = true;\n}\n","<div class=\"tw-m-2.5 tw-h-16 tw-text-center\">\n  <button\n    (click)=\"selectStep()\"\n    [disabled]=\"disabled\"\n    class=\"tw-flex tw-w-full tw-items-center tw-border-none tw-bg-transparent\"\n    [ngClass]=\"{\n      'hover:tw-bg-secondary-100': !disabled && step.editable\n    }\"\n    [attr.aria-expanded]=\"selected\"\n  >\n    <span\n      class=\"tw-mr-3.5 tw-w-9 tw-rounded-full tw-font-bold tw-leading-9\"\n      *ngIf=\"!step.completed\"\n      [ngClass]=\"{\n        'tw-bg-primary-500 tw-text-contrast': selected,\n        'tw-bg-secondary-300 tw-text-main': !selected && !disabled && step.editable,\n        'tw-bg-transparent tw-text-muted': disabled\n      }\"\n    >\n      {{ stepNumber }}\n    </span>\n    <span\n      class=\"tw-mr-3.5 tw-w-9 tw-rounded-full tw-bg-primary-500 tw-font-bold tw-leading-9 tw-text-contrast\"\n      *ngIf=\"step.completed\"\n    >\n      <i class=\"bwi bwi-fw bwi-check tw-p-1\" aria-hidden=\"true\"></i>\n    </span>\n    <div\n      class=\"tw-txt-main tw-mt-3.5 tw-h-12 tw-text-left tw-leading-snug\"\n      [ngClass]=\"{\n        'tw-font-bold': selected\n      }\"\n    >\n      <p\n        class=\"main-label text tw-mb-1 tw-text-main\"\n        [ngClass]=\"{\n          'tw-mt-1': !step.subLabel\n        }\"\n      >\n        {{ step.label }}\n      </p>\n      <p class=\"sub-label small tw-text-muted\">{{ step.subLabel }}</p>\n    </div>\n  </button>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { VerticalStep } from \"./vertical-step.component\";\n\n@Component({\n  selector: \"app-vertical-step-content\",\n  templateUrl: \"vertical-step-content.component.html\",\n})\nexport class VerticalStepContentComponent {\n  @Output() onSelectStep = new EventEmitter<void>();\n\n  @Input() disabled = false;\n  @Input() selected = false;\n  @Input() step: VerticalStep;\n  @Input() stepNumber: number;\n\n  selectStep() {\n    this.onSelectStep.emit();\n  }\n}\n","<div>\n  <ul class=\"tw-flex tw-list-none tw-flex-col tw-flex-wrap tw-p-5\">\n    <li *ngFor=\"let step of steps; let i = index; let isLast = last\">\n      <app-vertical-step-content\n        [disabled]=\"isStepDisabled(i)\"\n        [selected]=\"selectedIndex === i\"\n        [step]=\"step\"\n        [stepNumber]=\"i + 1\"\n        (onSelectStep)=\"selectStepByIndex(i)\"\n      ></app-vertical-step-content>\n      <div\n        class=\"tw-inline-block tw-pl-7\"\n        *ngIf=\"selectedIndex === i\"\n        [ngTemplateOutlet]=\"selected ? selected.content : null\"\n      ></div>\n      <div\n        class=\"tw-ml-8 tw-h-6 tw-border-0 tw-border-l tw-border-solid tw-border-secondary-300\"\n        *ngIf=\"!isLast && !(selectedIndex === i)\"\n      ></div>\n    </li>\n  </ul>\n</div>\n","import { CdkStepper } from \"@angular/cdk/stepper\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-vertical-stepper\",\n  templateUrl: \"vertical-stepper.component.html\",\n  providers: [{ provide: CdkStepper, useExisting: VerticalStepperComponent }],\n})\nexport class VerticalStepperComponent extends CdkStepper {\n  @Input()\n  activeClass = \"active\";\n\n  isNextButtonHidden() {\n    return !(this.steps.length === this.selectedIndex + 1);\n  }\n\n  isStepDisabled(index: number) {\n    if (this.selectedIndex !== index) {\n      return this.selectedIndex === index - 1\n        ? !this.steps.find((_, i) => i == index - 1)?.completed\n        : true;\n    }\n    return false;\n  }\n\n  selectStepByIndex(index: number): void {\n    this.selectedIndex = index;\n  }\n}\n","<form #form [formGroup]=\"formGroup\" *ngIf=\"nameOnly\">\n  <bit-form-field>\n    <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"name\" />\n  </bit-form-field>\n</form>\n<form #form [formGroup]=\"formGroup\" *ngIf=\"!nameOnly\">\n  <h2>{{ \"generalInformation\" | i18n }}</h2>\n  <div class=\"tw-flex tw-w-full tw-space-x-4\" *ngIf=\"createOrganization\">\n    <bit-form-field class=\"tw-w-1/2\">\n      <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n      <input bitInput type=\"text\" formControlName=\"name\" />\n    </bit-form-field>\n    <bit-form-field class=\"tw-w-1/2\">\n      <bit-label>{{ \"billingEmail\" | i18n }}</bit-label>\n      <input bitInput type=\"email\" formControlName=\"billingEmail\" />\n    </bit-form-field>\n    <bit-form-field class=\"tw-w-1/2\" *ngIf=\"isProvider\">\n      <bit-label>{{ \"clientOwnerEmail\" | i18n }}</bit-label>\n      <input bitInput type=\"email\" formControlName=\"clientOwnerEmail\" />\n    </bit-form-field>\n  </div>\n  <div *ngIf=\"!isProvider && !acceptingSponsorship\">\n    <input\n      type=\"checkbox\"\n      name=\"businessOwned\"\n      formControlName=\"businessOwned\"\n      (change)=\"changedBusinessOwned.emit()\"\n    />\n    <bit-label for=\"businessOwned\" class=\"tw-mb-3\">{{ \"accountOwnedBusiness\" | i18n }}</bit-label>\n    <div class=\"tw-mt-4\" *ngIf=\"formGroup.controls['businessOwned'].value\">\n      <bit-form-field class=\"tw-w-1/2\">\n        <bit-label>{{ \"businessName\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"businessName\" />\n      </bit-form-field>\n    </div>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { UntypedFormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-org-info\",\n  templateUrl: \"organization-information.component.html\",\n})\nexport class OrganizationInformationComponent {\n  @Input() nameOnly = false;\n  @Input() createOrganization = true;\n  @Input() isProvider = false;\n  @Input() acceptingSponsorship = false;\n  @Input() formGroup: UntypedFormGroup;\n  @Output() changedBusinessOwned = new EventEmitter<void>();\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-forbes\",\n  templateUrl: \"logo-forbes.component.html\",\n})\nexport class LogoForbesComponent {}\n","<figure>\n  <figcaption>\n    <cite>\n      <img\n        src=\"../../images/register-layout/forbes-logo.svg\"\n        class=\"tw-mx-auto tw-block tw-w-40\"\n        alt=\"Forbes Logo\"\n      />\n    </cite>\n  </figcaption>\n  <blockquote class=\"tw-mx-auto tw-mt-2 tw-max-w-xl tw-px-4 tw-text-center\">\n    “Bitwarden boasts the backing of some of the world's best security experts and an attractive,\n    easy-to-use interface”\n  </blockquote>\n</figure>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-us-news\",\n  templateUrl: \"logo-us-news.component.html\",\n})\nexport class LogoUSNewsComponent {}\n","<img\n  src=\"../../images/register-layout/usnews-360-badge.svg\"\n  class=\"tw-mx-auto tw-block tw-w-48\"\n  alt=\"US News 360 Reviews Best Password Manager\"\n/>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise-content\",\n  templateUrl: \"enterprise-content.component.html\",\n})\nexport class EnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams-content\",\n  templateUrl: \"teams-content.component.html\",\n})\nexport class TeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-trial-confirmation-details\",\n  templateUrl: \"confirmation-details.component.html\",\n})\nexport class ConfirmationDetailsComponent {\n  @Input() email: string;\n  @Input() orgLabel: string;\n}\n","<div class=\"tw-pl-6 tw-pb-6\">\n  <p class=\"tw-text-xl\">{{ \"trialThankYou\" | i18n: orgLabel }}</p>\n  <ul class=\"tw-list-disc\">\n    <li>\n      <p>\n        {{ \"trialConfirmationEmail\" | i18n }}\n        <span class=\"tw-font-bold\">{{ email }}</span\n        >.\n      </p>\n    </li>\n    <li>\n      <p>\n        {{ \"trialPaidInfoMessage\" | i18n: orgLabel }}\n      </p>\n    </li>\n  </ul>\n</div>\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationCreateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  planType: PlanType;\n  key: string;\n  keys: OrganizationKeysRequest;\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n  additionalSeats: number;\n  maxAutoscaleSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  collectionName: string;\n  taxIdNumber: string;\n  billingAddressLine1: string;\n  billingAddressLine2: string;\n  billingAddressCity: string;\n  billingAddressState: string;\n  billingAddressPostalCode: string;\n  billingAddressCountry: string;\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationUpgradeRequest {\n  businessName: string;\n  planType: PlanType;\n  additionalSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  billingAddressCountry: string;\n  billingAddressPostalCode: string;\n  keys: OrganizationKeysRequest;\n}\n","import { OrganizationCreateRequest } from \"../organizationCreateRequest\";\n\nexport class ProviderOrganizationCreateRequest {\n  constructor(\n    public clientOwnerEmail: string,\n    public organizationCreateRequest: OrganizationCreateRequest\n  ) {}\n}\n","<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"createOrganization && selfHosted\">\n  <p>{{ \"uploadLicenseFileOrg\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_organization_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n  </form>\n</ng-container>\n<form\n  #form\n  [formGroup]=\"formGroup\"\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n  *ngIf=\"!loading && !selfHosted && this.plans\"\n  class=\"tw-pt-6\"\n>\n  <app-org-info\n    (changedBusinessOwned)=\"changedOwnedBusiness()\"\n    [formGroup]=\"formGroup\"\n    [createOrganization]=\"createOrganization\"\n    [isProvider]=\"!!providerId\"\n    [acceptingSponsorship]=\"acceptingSponsorship\"\n  ></app-org-info>\n  <h2 class=\"mt-5\">{{ \"chooseYourPlan\" | i18n }}</h2>\n  <div *ngFor=\"let selectableProduct of selectableProducts\" class=\"form-check form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"product\"\n      id=\"product{{ selectableProduct.product }}\"\n      [value]=\"selectableProduct.product\"\n      formControlName=\"product\"\n      (change)=\"changedProduct()\"\n    />\n    <label class=\"form-check-label\" for=\"product{{ selectableProduct.product }}\">\n      {{ selectableProduct.nameLocalizationKey | i18n }}\n      <small class=\"mb-1\">{{ selectableProduct.descriptionLocalizationKey | i18n: \"1\" }}</small>\n      <ng-container\n        *ngIf=\"selectableProduct.product === productTypes.Enterprise; else fullFeatureList\"\n      >\n        <small>• {{ \"includeAllTeamsFeatures\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSso\">• {{ \"includeSsoAuthentication\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasPolicies\"\n          >• {{ \"includeEnterprisePolicies\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-container>\n      <ng-template #fullFeatureList>\n        <small *ngIf=\"selectableProduct.product == productTypes.Free\"\n          >• {{ \"limitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"selectableProduct.product != productTypes.Free && selectableProduct.maxUsers\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxUsers\">• {{ \"addShareUnlimitedUsers\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.maxCollections\"\n          >• {{ \"limitedCollections\" | i18n: selectableProduct.maxCollections }}</small\n        >\n        <small *ngIf=\"selectableProduct.maxAdditionalSeats\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxAdditionalSeats }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxCollections\"\n          >• {{ \"createUnlimitedCollections\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.baseStorageGb\"\n          >• {{ \"gbEncryptedFileStorage\" | i18n: selectableProduct.baseStorageGb + \"GB\" }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasGroups\">• {{ \"controlAccessWithGroups\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasApi\">• {{ \"trackAuditLogs\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasDirectory\"\n          >• {{ \"syncUsersFromDirectory\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.usersGetPremium\">• {{ \"usersGetPremium\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.product != productTypes.Free\"\n          >• {{ \"priorityCustomerSupport\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-template>\n      <span *ngIf=\"selectableProduct.product != productTypes.Free\">\n        <ng-container *ngIf=\"selectableProduct.basePrice && !acceptingSponsorship\">\n          {{ selectableProduct.basePrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }},\n          {{ \"includesXUsers\" | i18n: selectableProduct.baseSeats }}\n          <ng-container *ngIf=\"selectableProduct.hasAdditionalSeatsOption\">\n            {{ (\"additionalUsers\" | i18n).toLowerCase() }}\n            {{ selectableProduct.seatPrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </ng-container>\n        </ng-container>\n      </span>\n      <span *ngIf=\"!selectableProduct.basePrice && selectableProduct.hasAdditionalSeatsOption\">\n        {{ \"costPerUser\" | i18n: (selectableProduct.seatPrice / 12 | currency: \"$\") }} /{{\n          \"month\" | i18n\n        }}\n      </span>\n      <span *ngIf=\"selectableProduct.product == productTypes.Free\">{{ \"freeForever\" | i18n }}</span>\n    </label>\n  </div>\n  <div *ngIf=\"formGroup.controls['product'].value !== productTypes.Free\">\n    <ng-container *ngIf=\"selectedPlan.hasAdditionalSeatsOption && !selectedPlan.baseSeats\">\n      <h2 class=\"mt-5\">{{ \"users\" | i18n }}</h2>\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <label for=\"additionalSeats\">{{ \"userSeats\" | i18n }}</label>\n          <input\n            id=\"additionalSeats\"\n            class=\"form-control\"\n            type=\"number\"\n            name=\"additionalSeats\"\n            formControlName=\"additionalSeats\"\n            placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n            required\n          />\n          <small class=\"text-muted form-text\">{{ \"userSeatsHowManyDesc\" | i18n }}</small>\n        </div>\n      </div>\n    </ng-container>\n    <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n    <div class=\"row\" *ngIf=\"selectedPlan.hasAdditionalSeatsOption && selectedPlan.baseSeats\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalSeats\">{{ \"additionalUserSeats\" | i18n }}</label>\n        <input\n          id=\"additionalSeats\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"additionalSeats\"\n          formControlName=\"additionalSeats\"\n          placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"userSeatsAdditionalDesc\"\n            | i18n: selectedPlan.baseSeats:(seatPriceMonthly(selectedPlan) | currency: \"$\")\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n        <input\n          id=\"additionalStorage\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"additionalStorageGb\"\n          formControlName=\"additionalStorage\"\n          step=\"1\"\n          placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"additionalStorageIntervalDesc\"\n            | i18n\n              : \"1 GB\"\n              : (additionalStoragePriceMonthly(selectedPlan) | currency: \"$\")\n              : (\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\" *ngIf=\"selectedPlan.hasPremiumAccessOption\">\n        <div class=\"form-check\">\n          <input\n            id=\"premiumAccess\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"premiumAccessAddon\"\n            formControlName=\"premiumAccessAddon\"\n          />\n          <label for=\"premiumAccess\" class=\"form-check-label bold\">{{\n            \"premiumAccess\" | i18n\n          }}</label>\n        </div>\n        <small class=\"text-muted form-text\">{{\n          \"premiumAccessDesc\" | i18n: (3.33 | currency: \"$\"):(\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n    <div class=\"form-check form-check-block\" *ngFor=\"let selectablePlan of selectablePlans\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"plan\"\n        id=\"interval{{ selectablePlan.type }}\"\n        [value]=\"selectablePlan.type\"\n        formControlName=\"plan\"\n      />\n      <label class=\"form-check-label\" for=\"interval{{ selectablePlan.type }}\">\n        <ng-container *ngIf=\"selectablePlan.isAnnual\">\n          {{ \"annually\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            <ng-container *ngIf=\"acceptingSponsorship; else notAcceptingSponsorship\">\n              <span style=\"text-decoration: line-through\">{{\n                selectablePlan.basePrice | currency: \"$\"\n              }}</span>\n              {{ \"freeWithSponsorship\" | i18n }}\n            </ng-container>\n            <ng-template #notAcceptingSponsorship>\n              {{ selectablePlan.basePrice | currency: \"$\" }}\n              /{{ \"year\" | i18n }}\n            </ng-template>\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ formGroup.controls[\"additionalSeats\"].value || 0 }} &times;\n            {{ selectablePlan.seatPrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} = {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{\n              \"year\" | i18n\n            }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}:\n            {{ formGroup.controls[\"additionalStorage\"].value || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"year\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\">\n            {{ \"premiumAccess\" | i18n }}:\n            {{ selectablePlan.premiumAccessOptionCost / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ 40 | currency: \"$\" }}\n            /{{ \"year\" | i18n }}\n          </small>\n        </ng-container>\n        <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n          {{ \"monthly\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ selectablePlan.basePrice | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ formGroup.controls[\"additionalSeats\"].value || 0 }} &times;\n            {{ selectablePlan.seatPrice | currency: \"$\" }} {{ \"monthAbbr\" | i18n }} =\n            {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}:\n            {{ formGroup.controls[\"additionalStorage\"].value || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n          <small\n            *ngIf=\"\n              selectablePlan.hasPremiumAccessOption &&\n              formGroup.controls['premiumAccessAddon'].value\n            \"\n          >\n            {{ \"premiumAccess\" | i18n }}:\n            {{ selectablePlan.premiumAccessOptionCost | currency: \"$\" }} {{ \"monthAbbr\" | i18n }} =\n            {{ 40 | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n        </ng-container>\n      </label>\n    </div>\n    <hr class=\"my-3\" />\n    <h2 class=\"spaced-header mb-4\">\n      {{ (createOrganization ? \"paymentInformation\" : \"billingInformation\") | i18n }}\n    </h2>\n    <small class=\"text-muted font-italic mb-3 d-block\">\n      {{ paymentDesc }}\n    </small>\n    <app-payment *ngIf=\"createOrganization\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    <div id=\"price\" class=\"my-4\">\n      <div class=\"text-muted text-sm\">\n        {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n        <br />\n        <ng-container>\n          {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n        </ng-container>\n      </div>\n      <hr class=\"my-1 col-3 ml-0\" />\n      <p class=\"text-lg\">\n        <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{\n          selectedPlanInterval | i18n\n        }}\n      </p>\n    </div>\n    <ng-container *ngIf=\"!createOrganization\">\n      <app-payment [showMethods]=\"false\"></app-payment>\n    </ng-container>\n  </div>\n  <div *ngIf=\"singleOrgPolicyBlock\" class=\"mt-4\">\n    <app-callout [type]=\"'error'\">{{ \"singleOrgBlockCreateMessage\" | i18n }}</app-callout>\n  </div>\n  <div class=\"mt-4\">\n    <bit-submit-button [loading]=\"form.loading\" [disabled]=\"!formGroup.valid\">{{\n      \"submit\" | i18n\n    }}</bit-submit-button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { OrganizationCreateRequest } from \"@bitwarden/common/models/request/organizationCreateRequest\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organizationKeysRequest\";\nimport { OrganizationUpgradeRequest } from \"@bitwarden/common/models/request/organizationUpgradeRequest\";\nimport { ProviderOrganizationCreateRequest } from \"@bitwarden/common/models/request/provider/providerOrganizationCreateRequest\";\nimport { PlanResponse } from \"@bitwarden/common/models/response/planResponse\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\ninterface OnSuccessArgs {\n  organizationId: string;\n}\n\n@Component({\n  selector: \"app-organization-plans\",\n  templateUrl: \"organization-plans.component.html\",\n})\nexport class OrganizationPlansComponent implements OnInit {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxComponent: TaxInfoComponent;\n\n  @Input() organizationId: string;\n  @Input() showFree = true;\n  @Input() showCancel = false;\n  @Input() acceptingSponsorship = false;\n  @Input() product: ProductType = ProductType.Free;\n  @Input() plan: PlanType = PlanType.Free;\n  @Input() providerId: string;\n  @Output() onSuccess = new EventEmitter<OnSuccessArgs>();\n  @Output() onCanceled = new EventEmitter<void>();\n  @Output() onTrialBillingSuccess = new EventEmitter();\n\n  loading = true;\n  selfHosted = false;\n  productTypes = ProductType;\n  formPromise: Promise<string>;\n  singleOrgPolicyBlock = false;\n  isInTrialFlow = false;\n  discount = 0;\n\n  formGroup = this.formBuilder.group({\n    name: [\"\"],\n    billingEmail: [\"\", [Validators.email]],\n    businessOwned: [false],\n    premiumAccessAddon: [false],\n    additionalStorage: [0, [Validators.min(0), Validators.max(99)]],\n    additionalSeats: [0, [Validators.min(0), Validators.max(100000)]],\n    clientOwnerEmail: [\"\", [Validators.email]],\n    businessName: [\"\"],\n    plan: [this.plan],\n    product: [this.product],\n  });\n\n  plans: PlanResponse[];\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private router: Router,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private organizationService: OrganizationService,\n    private logService: LogService,\n    private messagingService: MessagingService,\n    private formBuilder: UntypedFormBuilder,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    if (!this.selfHosted) {\n      const plans = await this.apiService.getPlans();\n      this.plans = plans.data;\n      if (this.product === ProductType.Enterprise || this.product === ProductType.Teams) {\n        this.formGroup.controls.businessOwned.setValue(true);\n      }\n    }\n\n    if (this.providerId) {\n      this.formGroup.controls.businessOwned.setValue(true);\n      this.changedOwnedBusiness();\n    }\n\n    if (!this.createOrganization || this.acceptingSponsorship) {\n      this.formGroup.controls.product.setValue(ProductType.Families);\n      this.changedProduct();\n    }\n\n    if (this.createOrganization) {\n      this.formGroup.controls.name.addValidators(Validators.required);\n      this.formGroup.controls.billingEmail.addValidators(Validators.required);\n    }\n\n    this.loading = false;\n  }\n\n  get createOrganization() {\n    return this.organizationId == null;\n  }\n\n  get selectedPlan() {\n    return this.plans.find((plan) => plan.type === this.formGroup.controls.plan.value);\n  }\n\n  get selectedPlanInterval() {\n    return this.selectedPlan.isAnnual ? \"year\" : \"month\";\n  }\n\n  get selectableProducts() {\n    let validPlans = this.plans.filter((plan) => plan.type !== PlanType.Custom);\n\n    if (this.formGroup.controls.businessOwned.value) {\n      validPlans = validPlans.filter((plan) => plan.canBeUsedByBusiness);\n    }\n\n    if (!this.showFree) {\n      validPlans = validPlans.filter((plan) => plan.product !== ProductType.Free);\n    }\n\n    validPlans = validPlans.filter(\n      (plan) =>\n        !plan.legacyYear &&\n        !plan.disabled &&\n        (plan.isAnnual || plan.product === this.productTypes.Free)\n    );\n\n    if (this.acceptingSponsorship) {\n      const familyPlan = this.plans.find((plan) => plan.type === PlanType.FamiliesAnnually);\n      this.discount = familyPlan.basePrice;\n      validPlans = [familyPlan];\n    }\n\n    return validPlans;\n  }\n\n  get selectablePlans() {\n    return this.plans?.filter(\n      (plan) =>\n        !plan.legacyYear && !plan.disabled && plan.product === this.formGroup.controls.product.value\n    );\n  }\n\n  additionalStoragePriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.additionalStoragePricePerGb;\n    }\n    return selectedPlan.additionalStoragePricePerGb / 12;\n  }\n\n  seatPriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.seatPrice;\n    }\n    return selectedPlan.seatPrice / 12;\n  }\n\n  additionalStorageTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalStorageOption) {\n      return 0;\n    }\n\n    return (\n      plan.additionalStoragePricePerGb *\n      Math.abs(this.formGroup.controls.additionalStorage.value || 0)\n    );\n  }\n\n  seatTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalSeatsOption) {\n      return 0;\n    }\n\n    return plan.seatPrice * Math.abs(this.formGroup.controls.additionalSeats.value || 0);\n  }\n\n  get subtotal() {\n    let subTotal = this.selectedPlan.basePrice;\n    if (\n      this.selectedPlan.hasAdditionalSeatsOption &&\n      this.formGroup.controls.additionalSeats.value\n    ) {\n      subTotal += this.seatTotal(this.selectedPlan);\n    }\n    if (\n      this.selectedPlan.hasAdditionalStorageOption &&\n      this.formGroup.controls.additionalStorage.value\n    ) {\n      subTotal += this.additionalStorageTotal(this.selectedPlan);\n    }\n    if (\n      this.selectedPlan.hasPremiumAccessOption &&\n      this.formGroup.controls.premiumAccessAddon.value\n    ) {\n      subTotal += this.selectedPlan.premiumAccessOptionPrice;\n    }\n    return subTotal - this.discount;\n  }\n\n  get freeTrial() {\n    return this.selectedPlan.trialPeriodDays != null;\n  }\n\n  get taxCharges() {\n    return this.taxComponent != null && this.taxComponent.taxRate != null\n      ? (this.taxComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total() {\n    return this.subtotal + this.taxCharges || 0;\n  }\n\n  get paymentDesc() {\n    if (this.acceptingSponsorship) {\n      return this.i18nService.t(\"paymentSponsored\");\n    } else if (this.freeTrial && this.createOrganization) {\n      return this.i18nService.t(\"paymentChargedWithTrial\");\n    } else {\n      return this.i18nService.t(\"paymentCharged\", this.i18nService.t(this.selectedPlanInterval));\n    }\n  }\n\n  changedProduct() {\n    this.formGroup.controls.plan.setValue(this.selectablePlans[0].type);\n    if (!this.selectedPlan.hasPremiumAccessOption) {\n      this.formGroup.controls.premiumAccessAddon.setValue(false);\n    }\n    if (!this.selectedPlan.hasAdditionalStorageOption) {\n      this.formGroup.controls.additionalStorage.setValue(0);\n    }\n    if (!this.selectedPlan.hasAdditionalSeatsOption) {\n      this.formGroup.controls.additionalSeats.setValue(0);\n    } else if (\n      !this.formGroup.controls.additionalSeats.value &&\n      !this.selectedPlan.baseSeats &&\n      this.selectedPlan.hasAdditionalSeatsOption\n    ) {\n      this.formGroup.controls.additionalSeats.setValue(1);\n    }\n  }\n\n  changedOwnedBusiness() {\n    if (!this.formGroup.controls.businessOwned.value || this.selectedPlan.canBeUsedByBusiness) {\n      return;\n    }\n    this.formGroup.controls.product.setValue(ProductType.Teams);\n    this.formGroup.controls.plan.setValue(PlanType.TeamsAnnually);\n    this.changedProduct();\n  }\n\n  changedCountry() {\n    this.paymentComponent.hideBank = this.taxComponent.taxInfo.country !== \"US\";\n    // Bank Account payments are only available for US customers\n    if (\n      this.paymentComponent.hideBank &&\n      this.paymentComponent.method === PaymentMethodType.BankAccount\n    ) {\n      this.paymentComponent.method = PaymentMethodType.Card;\n      this.paymentComponent.changeMethod();\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  async submit() {\n    this.singleOrgPolicyBlock = await this.userHasBlockingSingleOrgPolicy();\n\n    if (this.singleOrgPolicyBlock) {\n      return;\n    }\n\n    try {\n      const doSubmit = async (): Promise<string> => {\n        let orgId: string = null;\n        if (this.createOrganization) {\n          const shareKey = await this.cryptoService.makeShareKey();\n          const key = shareKey[0].encryptedString;\n          const collection = await this.cryptoService.encrypt(\n            this.i18nService.t(\"defaultCollection\"),\n            shareKey[1]\n          );\n          const collectionCt = collection.encryptedString;\n          const orgKeys = await this.cryptoService.makeKeyPair(shareKey[1]);\n\n          if (this.selfHosted) {\n            orgId = await this.createSelfHosted(key, collectionCt, orgKeys);\n          } else {\n            orgId = await this.createCloudHosted(key, collectionCt, orgKeys, shareKey[1]);\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            this.i18nService.t(\"organizationCreated\"),\n            this.i18nService.t(\"organizationReadyToGo\")\n          );\n        } else {\n          orgId = await this.updateOrganization(orgId);\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"organizationUpgraded\")\n          );\n        }\n\n        await this.apiService.refreshIdentityToken();\n        await this.syncService.fullSync(true);\n\n        if (!this.acceptingSponsorship && !this.isInTrialFlow) {\n          this.router.navigate([\"/organizations/\" + orgId]);\n        }\n\n        if (this.isInTrialFlow) {\n          this.onTrialBillingSuccess.emit({\n            orgId: orgId,\n            subLabelText: this.billingSubLabelText(),\n          });\n        }\n\n        return orgId;\n      };\n\n      this.formPromise = doSubmit();\n      const organizationId = await this.formPromise;\n      this.onSuccess.emit({ organizationId: organizationId });\n      this.messagingService.send(\"organizationCreated\", organizationId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async userHasBlockingSingleOrgPolicy() {\n    return this.policyService.policyAppliesToUser(PolicyType.SingleOrg);\n  }\n\n  private async updateOrganization(orgId: string) {\n    const request = new OrganizationUpgradeRequest();\n    request.businessName = this.formGroup.controls.businessOwned.value\n      ? this.formGroup.controls.businessName.value\n      : null;\n    request.additionalSeats = this.formGroup.controls.additionalSeats.value;\n    request.additionalStorageGb = this.formGroup.controls.additionalStorage.value;\n    request.premiumAccessAddon =\n      this.selectedPlan.hasPremiumAccessOption && this.formGroup.controls.premiumAccessAddon.value;\n    request.planType = this.selectedPlan.type;\n    request.billingAddressCountry = this.taxComponent.taxInfo.country;\n    request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n\n    // Retrieve org info to backfill pub/priv key if necessary\n    const org = await this.organizationService.get(this.organizationId);\n    if (!org.hasPublicAndPrivateKeys) {\n      const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n      const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n      request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    }\n\n    const result = await this.organizationApiService.upgrade(this.organizationId, request);\n    if (!result.success && result.paymentIntentClientSecret != null) {\n      await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n    }\n    return this.organizationId;\n  }\n\n  private async createCloudHosted(\n    key: string,\n    collectionCt: string,\n    orgKeys: [string, EncString],\n    orgKey: SymmetricCryptoKey\n  ) {\n    const request = new OrganizationCreateRequest();\n    request.key = key;\n    request.collectionName = collectionCt;\n    request.name = this.formGroup.controls.name.value;\n    request.billingEmail = this.formGroup.controls.billingEmail.value;\n    request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n\n    if (this.selectedPlan.type === PlanType.Free) {\n      request.planType = PlanType.Free;\n    } else {\n      const tokenResult = await this.paymentComponent.createPaymentToken();\n\n      request.paymentToken = tokenResult[0];\n      request.paymentMethodType = tokenResult[1];\n      request.businessName = this.formGroup.controls.businessOwned.value\n        ? this.formGroup.controls.businessName.value\n        : null;\n      request.additionalSeats = this.formGroup.controls.additionalSeats.value;\n      request.additionalStorageGb = this.formGroup.controls.additionalStorage.value;\n      request.premiumAccessAddon =\n        this.selectedPlan.hasPremiumAccessOption &&\n        this.formGroup.controls.premiumAccessAddon.value;\n      request.planType = this.selectedPlan.type;\n      request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n      request.billingAddressCountry = this.taxComponent.taxInfo.country;\n      if (this.taxComponent.taxInfo.includeTaxId) {\n        request.taxIdNumber = this.taxComponent.taxInfo.taxId;\n        request.billingAddressLine1 = this.taxComponent.taxInfo.line1;\n        request.billingAddressLine2 = this.taxComponent.taxInfo.line2;\n        request.billingAddressCity = this.taxComponent.taxInfo.city;\n        request.billingAddressState = this.taxComponent.taxInfo.state;\n      }\n    }\n\n    if (this.providerId) {\n      const providerRequest = new ProviderOrganizationCreateRequest(\n        this.formGroup.controls.clientOwnerEmail.value,\n        request\n      );\n      const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n      providerRequest.organizationCreateRequest.key = (\n        await this.cryptoService.encrypt(orgKey.key, providerKey)\n      ).encryptedString;\n      const orgId = (\n        await this.apiService.postProviderCreateOrganization(this.providerId, providerRequest)\n      ).organizationId;\n\n      return orgId;\n    } else {\n      return (await this.organizationApiService.create(request)).id;\n    }\n  }\n\n  private async createSelfHosted(key: string, collectionCt: string, orgKeys: [string, EncString]) {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      throw new Error(this.i18nService.t(\"selectFile\"));\n    }\n\n    const fd = new FormData();\n    fd.append(\"license\", files[0]);\n    fd.append(\"key\", key);\n    fd.append(\"collectionName\", collectionCt);\n    const response = await this.organizationApiService.createLicense(fd);\n    const orgId = response.id;\n\n    await this.apiService.refreshIdentityToken();\n\n    // Org Keys live outside of the OrganizationLicense - add the keys to the org here\n    const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    await this.organizationApiService.updateKeys(orgId, request);\n\n    return orgId;\n  }\n\n  private billingSubLabelText(): string {\n    const selectedPlan = this.selectedPlan;\n    const price = selectedPlan.basePrice === 0 ? selectedPlan.seatPrice : selectedPlan.basePrice;\n    let text = \"\";\n\n    if (selectedPlan.isAnnual) {\n      text += `${this.i18nService.t(\"annual\")} ($${price}/${this.i18nService.t(\"yr\")})`;\n    } else {\n      text += `${this.i18nService.t(\"monthly\")} ($${price}/${this.i18nService.t(\"monthAbbr\")})`;\n    }\n\n    return text;\n  }\n}\n","<form #form [formGroup]=\"formGroup\" [appApiAction]=\"formPromise\" (ngSubmit)=\"submit()\">\n  <div class=\"tw-container tw-mb-3\">\n    <div class=\"tw-mb-6\">\n      <h2 class=\"tw-mb-3 tw-text-base tw-font-semibold\">{{ \"billingPlanLabel\" | i18n }}</h2>\n      <div class=\"tw-mb-1 tw-items-center\" *ngFor=\"let selectablePlan of selectablePlans\">\n        <label class=\"tw- tw-block tw-text-main\" for=\"interval{{ selectablePlan.type }}\">\n          <input\n            checked\n            class=\"tw-h-4 tw-w-4 tw-align-middle\"\n            id=\"interval{{ selectablePlan.type }}\"\n            name=\"plan\"\n            type=\"radio\"\n            [value]=\"selectablePlan.type\"\n            formControlName=\"plan\"\n          />\n          <ng-container *ngIf=\"selectablePlan.isAnnual\">\n            {{ \"annual\" | i18n }} -\n            {{\n              (selectablePlan.basePrice === 0 ? selectablePlan.seatPrice : selectablePlan.basePrice)\n                | currency: \"$\"\n            }}\n            /{{ \"yr\" | i18n }}\n          </ng-container>\n          <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n            {{ \"monthly\" | i18n }} -\n            {{\n              (selectablePlan.basePrice === 0 ? selectablePlan.seatPrice : selectablePlan.basePrice)\n                | currency: \"$\"\n            }}\n            /{{ \"monthAbbr\" | i18n }}\n          </ng-container>\n        </label>\n      </div>\n    </div>\n\n    <div class=\"tw-mb-4\">\n      <h2 class=\"tw-mb-3 tw-text-base tw-font-semibold\">{{ \"paymentType\" | i18n }}</h2>\n      <app-payment [hideCredit]=\"true\" [trialFlow]=\"true\"></app-payment>\n      <app-tax-info [trialFlow]=\"true\" (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    </div>\n\n    <div class=\"tw-flex tw-space-x-2\">\n      <bit-submit-button [loading]=\"form.loading\">{{ \"startTrial\" | i18n }}</bit-submit-button>\n\n      <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"stepBack()\">Back</button>\n    </div>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { UntypedFormBuilder, FormGroup } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"../../settings/organization-plans.component\";\n\n@Component({\n  selector: \"app-billing\",\n  templateUrl: \"./billing.component.html\",\n})\nexport class BillingComponent extends OrganizationPlansComponent {\n  @Input() orgInfoForm: FormGroup;\n  @Output() previousStep = new EventEmitter();\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    router: Router,\n    syncService: SyncService,\n    policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    messagingService: MessagingService,\n    formBuilder: UntypedFormBuilder,\n    organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      apiService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      router,\n      syncService,\n      policyService,\n      organizationService,\n      logService,\n      messagingService,\n      formBuilder,\n      organizationApiService\n    );\n  }\n\n  async ngOnInit() {\n    const additionalSeats = this.product == ProductType.Families ? 0 : 1;\n    this.formGroup.patchValue({\n      name: this.orgInfoForm.get(\"name\")?.value,\n      billingEmail: this.orgInfoForm.get(\"email\")?.value,\n      additionalSeats: additionalSeats,\n      plan: this.plan,\n      product: this.product,\n    });\n    this.isInTrialFlow = true;\n    await super.ngOnInit();\n  }\n\n  stepBack() {\n    this.previousStep.emit();\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-default-content\",\n  templateUrl: \"default-content.component.html\",\n})\nexport class DefaultContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise1-content\",\n  templateUrl: \"enterprise1-content.component.html\",\n})\nexport class Enterprise1ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise2-content\",\n  templateUrl: \"enterprise2-content.component.html\",\n})\nexport class Enterprise2ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Enterprise Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams1-content\",\n  templateUrl: \"teams1-content.component.html\",\n})\nexport class Teams1ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Teams Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams2-content\",\n  templateUrl: \"teams2-content.component.html\",\n})\nexport class Teams2ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-cnet\",\n  templateUrl: \"logo-cnet.component.html\",\n})\nexport class LogoCnetComponent {}\n","<figure>\n  <figcaption>\n    <cite>\n      <img\n        src=\"../../images/register-layout/cnet-logo.svg\"\n        class=\"tw-mx-auto tw-block tw-w-40\"\n        alt=\"CNET Logo\"\n      />\n    </cite>\n  </figcaption>\n  <blockquote class=\"tw-mx-auto tw-mt-2 tw-max-w-xl tw-px-4 tw-text-center\">\n    \"No more excuses; start using Bitwarden today. The identity you save could be your own. The\n    money definitely will be.\"\n  </blockquote>\n</figure>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-enterprise-content\",\n  templateUrl: \"cnet-enterprise-content.component.html\",\n})\nexport class CnetEnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Enterprise Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-individual-content\",\n  templateUrl: \"cnet-individual-content.component.html\",\n})\nexport class CnetIndividualContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Premium Account Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Secure your account with advanced two-step login</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-teams-content\",\n  templateUrl: \"cnet-teams-content.component.html\",\n})\nexport class CnetTeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Teams Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-abm-enterprise-content\",\n  templateUrl: \"abm-enterprise-content.component.html\",\n})\nexport class AbmEnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-abm-teams-content\",\n  templateUrl: \"abm-teams-content.component.html\",\n})\nexport class AbmTeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","<div *ngIf=\"accountCreateOnly\" class=\"\">\n  <h1 class=\"tw-mt-12 tw-text-center tw-text-xl\">{{ \"createAccount\" | i18n }}</h1>\n  <div\n    class=\"tw-min-w-xl tw-m-auto tw-max-w-xl tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-8\"\n  >\n    <app-register-form\n      [queryParamEmail]=\"email\"\n      [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n      [referenceDataValue]=\"referenceData\"\n    ></app-register-form>\n  </div>\n</div>\n<div *ngIf=\"!accountCreateOnly\">\n  <div class=\"tw-absolute tw--z-10 tw--mt-48 tw-h-[28rem] tw-w-full tw-bg-background-alt2\"></div>\n  <div class=\"tw-min-w-4xl tw-mx-auto tw-flex tw-max-w-screen-xl tw-gap-12 tw-px-4\">\n    <div class=\"tw-w-1/2\">\n      <img\n        alt=\"Bitwarden\"\n        style=\"height: 50px; width: 335px\"\n        class=\"tw-mt-6\"\n        src=\"../../images/register-layout/logo-horizontal-white.svg\"\n      />\n\n      <div class=\"tw-pt-12\">\n        <!-- Layout params are used by marketing to determine left-hand content -->\n        <app-default-content *ngIf=\"layout === 'default'\"></app-default-content>\n        <app-teams-content *ngIf=\"layout === 'teams'\"></app-teams-content>\n        <app-teams1-content *ngIf=\"layout === 'teams1'\"></app-teams1-content>\n        <app-teams2-content *ngIf=\"layout === 'teams2'\"></app-teams2-content>\n        <app-enterprise-content *ngIf=\"layout === 'enterprise'\"></app-enterprise-content>\n        <app-enterprise1-content *ngIf=\"layout === 'enterprise1'\"></app-enterprise1-content>\n        <app-enterprise2-content *ngIf=\"layout === 'enterprise2'\"></app-enterprise2-content>\n        <app-cnet-enterprise-content\n          *ngIf=\"layout === 'cnetcmpgnent'\"\n        ></app-cnet-enterprise-content>\n        <app-cnet-individual-content\n          *ngIf=\"layout === 'cnetcmpgnind'\"\n        ></app-cnet-individual-content>\n        <app-cnet-teams-content *ngIf=\"layout === 'cnetcmpgnteams'\"></app-cnet-teams-content>\n        <app-abm-enterprise-content *ngIf=\"layout === 'abmenterprise'\"></app-abm-enterprise-content>\n        <app-abm-teams-content *ngIf=\"layout === 'abmteams'\"></app-abm-teams-content>\n      </div>\n    </div>\n    <div class=\"tw-w-1/2\">\n      <div class=\"tw-pt-56\">\n        <div class=\"tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background\">\n          <div class=\"tw-flex tw-h-12 tw-w-full tw-items-center tw-rounded-t tw-bg-secondary-100\">\n            <h2 class=\"tw-mb-0 tw-pl-4 tw-text-base tw-font-bold tw-uppercase\">\n              Start your 7-Day free trial of Bitwarden for {{ org }}\n            </h2>\n          </div>\n          <app-vertical-stepper #stepper linear (selectionChange)=\"stepSelectionChange($event)\">\n            <app-vertical-step label=\"Create Account\" [editable]=\"false\" [subLabel]=\"email\">\n              <app-register-form\n                [isInTrialFlow]=\"true\"\n                (createdAccount)=\"createdAccount($event)\"\n                [referenceDataValue]=\"referenceData\"\n              ></app-register-form>\n            </app-vertical-step>\n            <app-vertical-step label=\"Organization Information\" [subLabel]=\"orgInfoSubLabel\">\n              <app-org-info [nameOnly]=\"true\" [formGroup]=\"orgInfoFormGroup\"></app-org-info>\n              <button\n                bitButton\n                buttonType=\"primary\"\n                [disabled]=\"orgInfoFormGroup.get('name').hasError('required')\"\n                cdkStepperNext\n              >\n                Next\n              </button>\n            </app-vertical-step>\n            <app-vertical-step label=\"Billing\" [subLabel]=\"billingSubLabel\">\n              <app-billing\n                *ngIf=\"stepper.selectedIndex === 2\"\n                [plan]=\"plan\"\n                [product]=\"product\"\n                [orgInfoForm]=\"orgInfoFormGroup\"\n                (previousStep)=\"previousStep()\"\n                (onTrialBillingSuccess)=\"billingSuccess($event)\"\n              ></app-billing>\n            </app-vertical-step>\n            <app-vertical-step label=\"Confirmation Details\" [applyBorder]=\"false\">\n              <app-trial-confirmation-details\n                [email]=\"email\"\n                [orgLabel]=\"orgLabel\"\n              ></app-trial-confirmation-details>\n              <div class=\"tw-mb-3 tw-flex\">\n                <button bitButton buttonType=\"primary\" (click)=\"navigateToOrgVault()\">\n                  Get Started\n                </button>\n                <button\n                  bitButton\n                  buttonType=\"secondary\"\n                  (click)=\"navigateToOrgInvite()\"\n                  class=\"tw-ml-3 tw-inline-flex tw-items-center tw-px-3\"\n                >\n                  Invite Users\n                </button>\n              </div>\n            </app-vertical-step>\n          </app-vertical-stepper>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { StepperSelectionEvent } from \"@angular/cdk/stepper\";\nimport { TitleCasePipe } from \"@angular/common\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/referenceEventRequest\";\n\nimport { RouterService } from \"./../../core/router.service\";\nimport { VerticalStepperComponent } from \"./vertical-stepper/vertical-stepper.component\";\n\n@Component({\n  selector: \"app-trial\",\n  templateUrl: \"trial-initiation.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TrialInitiationComponent implements OnInit {\n  email = \"\";\n  org = \"\";\n  orgInfoSubLabel = \"\";\n  orgId = \"\";\n  orgLabel = \"\";\n  billingSubLabel = \"\";\n  layout = \"default\";\n  plan: PlanType;\n  product: ProductType;\n  accountCreateOnly = true;\n  policies: Policy[];\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  validOrgs: string[] = [\"teams\", \"enterprise\", \"families\"];\n  referenceData: ReferenceEventRequest;\n  @ViewChild(\"stepper\", { static: false }) verticalStepper: VerticalStepperComponent;\n\n  orgInfoFormGroup = this.formBuilder.group({\n    name: [\"\", [Validators.required]],\n    email: [\"\"],\n  });\n\n  private set referenceDataId(referenceId: string) {\n    if (referenceId != null) {\n      this.referenceData.id = referenceId;\n    } else {\n      this.referenceData.id = (\"; \" + document.cookie)\n        .split(\"; reference=\")\n        .pop()\n        .split(\";\")\n        .shift();\n    }\n\n    if (this.referenceData.id === \"\") {\n      this.referenceData.id = null;\n    }\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    protected router: Router,\n    private formBuilder: UntypedFormBuilder,\n    private titleCasePipe: TitleCasePipe,\n    private stateService: StateService,\n    private logService: LogService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    private i18nService: I18nService,\n    private routerService: RouterService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      this.referenceData = new ReferenceEventRequest();\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n\n      this.referenceDataId = qParams.reference;\n\n      if (!qParams.org) {\n        return;\n      }\n\n      if (qParams.layout) {\n        this.layout = qParams.layout;\n      }\n\n      if (this.validOrgs.includes(qParams.org)) {\n        this.org = qParams.org;\n      } else {\n        this.org = \"families\";\n      }\n\n      this.referenceData.flow = qParams.org;\n\n      // Are they coming from an email for sponsoring a families organization\n      // After logging in redirect them to setup the families sponsorship\n      this.setupFamilySponsorship(qParams.sponsorshipToken);\n\n      this.orgLabel = this.titleCasePipe.transform(this.org);\n      this.accountCreateOnly = false;\n\n      if (this.org === \"families\") {\n        this.plan = PlanType.FamiliesAnnually;\n        this.product = ProductType.Families;\n      } else if (this.org === \"teams\") {\n        this.plan = PlanType.TeamsAnnually;\n        this.product = ProductType.Teams;\n      } else if (this.org === \"enterprise\") {\n        this.plan = PlanType.EnterpriseAnnually;\n        this.product = ProductType.Enterprise;\n      }\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      try {\n        const policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        if (policies.data != null) {\n          const policiesData = policies.data.map((p) => new PolicyData(p));\n          this.policies = policiesData.map((p) => new Policy(p));\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (this.policies != null) {\n      this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(\n        this.policies\n      );\n    }\n  }\n\n  stepSelectionChange(event: StepperSelectionEvent) {\n    // Set org info sub label\n    if (event.selectedIndex === 1 && this.orgInfoFormGroup.controls.name.value === \"\") {\n      this.orgInfoSubLabel =\n        \"Enter your \" + this.titleCasePipe.transform(this.org) + \" organization information\";\n    } else if (event.previouslySelectedIndex === 1) {\n      this.orgInfoSubLabel = this.orgInfoFormGroup.controls.name.value;\n    }\n\n    //set billing sub label\n    if (event.selectedIndex === 2) {\n      this.billingSubLabel = this.i18nService.t(\"billingTrialSubLabel\");\n    }\n  }\n\n  createdAccount(email: string) {\n    this.email = email;\n    this.orgInfoFormGroup.get(\"email\")?.setValue(email);\n    this.verticalStepper.next();\n  }\n\n  billingSuccess(event: any) {\n    this.orgId = event?.orgId;\n    this.billingSubLabel = event?.subLabelText;\n    this.verticalStepper.next();\n  }\n\n  navigateToOrgVault() {\n    this.router.navigate([\"organizations\", this.orgId, \"vault\"]);\n  }\n\n  navigateToOrgInvite() {\n    this.router.navigate([\"organizations\", this.orgId, \"manage\", \"people\"]);\n  }\n\n  previousStep() {\n    this.verticalStepper.previous();\n  }\n\n  private setupFamilySponsorship(sponsorshipToken: string) {\n    if (sponsorshipToken != null) {\n      const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n        queryParams: { plan: sponsorshipToken },\n      });\n      this.routerService.setPreviousUrl(route.toString());\n    }\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function, // eslint-disable-line\n    private errorCallback: Function, // eslint-disable-line\n    private infoCallback: Function // eslint-disable-line\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { WebAuthnIFrame } from \"@bitwarden/common/misc/webauthn_iframe\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { TokenRequestTwoFactor } from \"@bitwarden/common/models/request/identityToken/tokenRequestTwoFactor\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class TwoFactorComponent extends CaptchaProtectedComponent implements OnInit, OnDestroy {\n  token = \"\";\n  remember = false;\n  webAuthnReady = false;\n  webAuthnNewTab = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported = false;\n  webAuthn: WebAuthnIFrame = null;\n  title = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService,\n    protected twoFactorService: TwoFactorService,\n    protected appIdService: AppIdService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.twoFactorService.getProviders() == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.twoFactorService.getDefaultProvider(this.webAuthnSupported);\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.twoFactorService.getProviders().size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      new TokenRequestTwoFactor(this.selectedProviderType, this.token, this.remember),\n      this.captchaToken\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.handleCaptchaRequired(response)) {\n      return;\n    }\n    if (this.onSuccessfulLogin != null) {\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      request.deviceIdentifier = await this.appIdService.getAppId();\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithApiKey()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithApiKey();\n  }\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected twoFactorService: TwoFactorService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.twoFactorService.getSupportedProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://bitwarden.com/help/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"twoStepOptionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"twoStepOptionsTitle\">{{ \"twoStepOptions\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"list-group list-group-flush-2fa\">\n          <div *ngFor=\"let p of providers\" class=\"list-group-item list-group-item-action\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ p.name }}</h3>\n                {{ p.description }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-describedby]=\"p.name\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"choose(p)\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"list-group-item list-group-item-action\" (click)=\"recover()\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img class=\"recovery-code-img\" alt=\"rc logo\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ \"recoveryCodeTitle\" | i18n }}</h3>\n                {{ \"recoveryCodeDesc\" | i18n }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-descibedby]=\"'recoveryCodeTitle' | i18n\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"recover()\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"@bitwarden/angular/components/two-factor-options.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    twoFactorService: TwoFactorService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(twoFactorService, router, i18nService, platformUtilsService, window);\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"container\"\n  ngNativeValidate\n  autocomplete=\"off\"\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div\n      class=\"col-5\"\n      [ngClass]=\"{\n        'col-9':\n          selectedProviderType === providerType.Duo ||\n          selectedProviderType === providerType.OrganizationDuo\n      }\"\n    >\n      <p class=\"lead text-center mb-4\">{{ title }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Email ||\n              selectedProviderType === providerType.Authenticator\n            \"\n          >\n            <p *ngIf=\"selectedProviderType === providerType.Authenticator\">\n              {{ \"enterVerificationCodeApp\" | i18n }}\n            </p>\n            <p *ngIf=\"selectedProviderType === providerType.Email\">\n              {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n            </p>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"text\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                inputmode=\"tel\"\n                appInputVerbatim\n              />\n              <small class=\"form-text\" *ngIf=\"selectedProviderType === providerType.Email\">\n                <a\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"sendEmail(true)\"\n                  [appApiAction]=\"emailPromise\"\n                  *ngIf=\"selectedProviderType === providerType.Email\"\n                >\n                  {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n                </a>\n              </small>\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n            <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n            <picture>\n              <source srcset=\"../../images/yubikey.avif\" type=\"image/avif\" />\n              <source srcset=\"../../images/yubikey.webp\" type=\"image/webp\" />\n              <img src=\"../../images/yubikey.jpg\" class=\"rounded img-fluid mb-3\" alt=\"\" />\n            </picture>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"password\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn\">\n            <div id=\"web-authn-frame\" class=\"mb-3\">\n              <iframe id=\"webauthn_iframe\" [allow]=\"webAuthnAllow\"></iframe>\n            </div>\n          </ng-container>\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Duo ||\n              selectedProviderType === providerType.OrganizationDuo\n            \"\n          >\n            <div id=\"duo-frame\" class=\"mb-3\">\n              <iframe id=\"duo_iframe\"></iframe>\n            </div>\n          </ng-container>\n          <i\n            class=\"bwi bwi-spinner text-muted bwi-spin pull-right\"\n            title=\"{{ 'loading' | i18n }}\"\n            *ngIf=\"form.loading && selectedProviderType === providerType.WebAuthn\"\n            aria-hidden=\"true\"\n          ></i>\n          <div class=\"form-check\" *ngIf=\"selectedProviderType != null\">\n            <input\n              id=\"remember\"\n              type=\"checkbox\"\n              name=\"Remember\"\n              class=\"form-check-input\"\n              [(ngModel)]=\"remember\"\n            />\n            <label for=\"remember\" class=\"form-check-label\">{{ \"rememberMe\" | i18n }}</label>\n          </div>\n          <ng-container *ngIf=\"selectedProviderType == null\">\n            <p>{{ \"noTwoStepProviders\" | i18n }}</p>\n            <p>{{ \"noTwoStepProviders2\" | i18n }}</p>\n          </ng-container>\n          <hr />\n          <div [hidden]=\"!showCaptcha()\">\n            <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n          </div>\n          <div class=\"d-flex mb-3\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n              *ngIf=\"\n                selectedProviderType != null &&\n                selectedProviderType !== providerType.Duo &&\n                selectedProviderType !== providerType.OrganizationDuo &&\n                selectedProviderType !== providerType.WebAuthn\n              \"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n          <div class=\"text-center\">\n            <a href=\"#\" appStopClick (click)=\"anotherMethod()\">{{\n              \"useAnotherTwoStepMethod\" | i18n\n            }}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<ng-template #twoFactorOptions></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"@bitwarden/angular/components/two-factor.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { RouterService } from \"../core\";\n\nimport { TwoFactorOptionsComponent } from \"./two-factor-options.component\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  @ViewChild(\"twoFactorOptions\", { read: ViewContainerRef, static: true })\n  twoFactorOptionsModal: ViewContainerRef;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    private modalService: ModalService,\n    route: ActivatedRoute,\n    logService: LogService,\n    twoFactorService: TwoFactorService,\n    appIdService: AppIdService,\n    private routerService: RouterService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService,\n      twoFactorService,\n      appIdService\n    );\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n  }\n\n  async anotherMethod() {\n    const [modal] = await this.modalService.openViewRef(\n      TwoFactorOptionsComponent,\n      this.twoFactorOptionsModal,\n      (comp) => {\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onProviderSelected.subscribe(async (provider: TwoFactorProviderType) => {\n          modal.close();\n          this.selectedProviderType = provider;\n          await this.init();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onRecoverSelected.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async goAfterLogIn() {\n    const previousUrl = this.routerService.getPreviousUrl();\n    if (previousUrl) {\n      this.router.navigateByUrl(previousUrl);\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class PasswordRequest extends SecretVerificationRequest {\n  newMasterPasswordHash: string;\n  masterPasswordHint: string;\n  key: string;\n}\n","import { Directive } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { PasswordRequest } from \"@bitwarden/common/models/request/passwordRequest\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdatePasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n  currentMasterPassword: string;\n\n  onSuccessfulChangePassword: () => Promise<void>;\n\n  constructor(\n    protected router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async cancel() {\n    await this.stateService.setOrganizationInvitation(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n\n    const secret: Verification = {\n      type: VerificationType.MasterPassword,\n      secret: this.currentMasterPassword,\n    };\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return false;\n    }\n\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create Request\n      const request = new PasswordRequest();\n      request.masterPasswordHash = await this.cryptoService.hashPassword(\n        this.currentMasterPassword,\n        null\n      );\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.key = encKey[1].encryptedString;\n\n      // Update user's password\n      this.apiService.postPassword(request);\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"masterPasswordInvalidWarning\" | i18n }} </app-callout>\n          <app-callout\n            type=\"info\"\n            [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n            *ngIf=\"enforcedPolicyOptions\"\n          ></app-callout>\n\n          <form\n            #form\n            (ngSubmit)=\"submit()\"\n            [appApiAction]=\"formPromise\"\n            ngNativeValidate\n            autocomplete=\"off\"\n          >\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"currentMasterPassword\"\n                    type=\"password\"\n                    name=\"MasterPasswordHash\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"currentMasterPassword\"\n                    required\n                    appInputVerbatim\n                  />\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"newMasterPassword\"\n                    type=\"password\"\n                    name=\"NewMasterPasswordHash\"\n                    class=\"form-control mb-1\"\n                    [(ngModel)]=\"masterPassword\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                  <app-password-strength\n                    [password]=\"masterPassword\"\n                    [email]=\"email\"\n                    [showText]=\"true\"\n                  ></app-password-strength>\n                </div>\n              </div>\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"masterPasswordRetype\"\n                    type=\"password\"\n                    name=\"MasterPasswordRetype\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"masterPasswordRetype\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n              <i\n                class=\"fa fa-spinner fa-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"changeMasterPassword\" | i18n }}</span>\n            </button>\n            <button (click)=\"cancel()\" type=\"button\" class=\"btn btn-outline-secondary\">\n              <span>{{ \"cancel\" | i18n }}</span>\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { UpdatePasswordComponent as BaseUpdatePasswordComponent } from \"@bitwarden/angular/components/update-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\n\n@Component({\n  selector: \"app-update-password\",\n  templateUrl: \"update-password.component.html\",\n})\nexport class UpdatePasswordComponent extends BaseUpdatePasswordComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      userVerificationService,\n      logService\n    );\n  }\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { OrganizationUserResetPasswordRequest } from \"./organizationUserResetPasswordRequest\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { UpdateTempPasswordRequest } from \"@bitwarden/common/models/request/updateTempPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfIterations\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"updateMasterPasswordWarning\" | i18n }} </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength\n                  [password]=\"masterPassword\"\n                  [email]=\"email\"\n                  [showText]=\"true\"\n                  (passwordStrengthResult)=\"getStrengthResult($event)\"\n                >\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"@bitwarden/angular/components/update-temp-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    syncService: SyncService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","export class VerifyEmailRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VerifyEmailRequest } from \"@bitwarden/common/models/request/verifyEmailRequest\";\n\n@Component({\n  selector: \"app-verify-email-token\",\n  templateUrl: \"verify-email-token.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VerifyEmailTokenComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null) {\n        try {\n          await this.apiService.postAccountVerifyEmailToken(\n            new VerifyEmailRequest(qParams.userId, qParams.token)\n          );\n          if (await this.stateService.getIsAuthenticated()) {\n            await this.apiService.refreshIdentityToken();\n          }\n          this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailVerified\"));\n          this.router.navigate([\"/\"]);\n          return;\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"emailVerifiedFailed\"));\n      this.router.navigate([\"/\"]);\n    });\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","export class VerifyDeleteRecoverRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { VerifyDeleteRecoverRequest } from \"@bitwarden/common/models/request/verifyDeleteRecoverRequest\";\n\n@Component({\n  selector: \"app-verify-recover-delete\",\n  templateUrl: \"verify-recover-delete.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VerifyRecoverDeleteComponent implements OnInit {\n  email: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private token: string;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null && qParams.email != null) {\n        this.userId = qParams.userId;\n        this.token = qParams.token;\n        this.email = qParams.email;\n      } else {\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    try {\n      const request = new VerifyDeleteRecoverRequest(this.userId, this.token);\n      this.formPromise = this.apiService.postAccountRecoverDeleteToken(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n          <p class=\"text-center\">\n            <strong>{{ email }}</strong>\n          </p>\n          <p>{{ \"deleteRecoverConfirmDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-danger btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"deleteAccount\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HomeGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return this.router.createUrlTree([\"/login\"], { queryParams: route.queryParams });\n    }\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"/lock\"], { queryParams: route.queryParams });\n    }\n    return this.router.createUrlTree([\"/vault\"], { queryParams: route.queryParams });\n  }\n}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-frontend-layout\",\n  templateUrl: \"frontend-layout.component.html\",\n})\nexport class FrontendLayoutComponent implements OnInit, OnDestroy {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n    document.body.classList.add(\"layout_frontend\");\n  }\n\n  ngOnDestroy() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<router-outlet></router-outlet>\n<div class=\"container my-5 text-muted text-center\">\n  &copy; {{ year }} Bitwarden Inc. <br />\n  {{ \"versionNumber\" | i18n: version }}\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-footer\",\n  templateUrl: \"footer.component.html\",\n})\nexport class FooterComponent implements OnInit {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n  }\n}\n","<div class=\"container footer text-muted\">\n  <div class=\"row\">\n    <div class=\"col\">&copy; {{ year }} Bitwarden Inc.</div>\n    <div class=\"col text-center\"></div>\n    <div class=\"col text-right\">\n      {{ \"versionNumber\" | i18n: version }}\n    </div>\n  </div>\n</div>\n","import { FocusableOption } from \"@angular/cdk/a11y\";\nimport { Directive, ElementRef, HostBinding } from \"@angular/core\";\n\n@Directive({\n  selector: \"[bitMenuItem]\",\n})\nexport class MenuItemDirective implements FocusableOption {\n  @HostBinding(\"class\") classList = [\n    \"tw-block\",\n    \"tw-py-1\",\n    \"tw-px-4\",\n    \"!tw-text-main\",\n    \"!tw-no-underline\",\n    \"tw-cursor-pointer\",\n    \"tw-border-none\",\n    \"tw-bg-background\",\n    \"tw-text-left\",\n    \"hover:tw-bg-secondary-100\",\n    \"focus:tw-bg-secondary-100\",\n    \"focus:tw-z-50\",\n    \"focus:tw-outline-none\",\n    \"focus:tw-ring\",\n    \"focus:tw-ring-offset-2\",\n    \"focus:tw-ring-primary-700\",\n    \"active:!tw-ring-0\",\n    \"active:!tw-ring-offset-0\",\n  ];\n  @HostBinding(\"attr.role\") role = \"menuitem\";\n  @HostBinding(\"tabIndex\") tabIndex = \"-1\";\n\n  constructor(private elementRef: ElementRef) {}\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n}\n","<ng-template>\n  <div\n    (click)=\"closed.emit()\"\n    class=\"tw-flex tw-shrink-0 tw-flex-col tw-rounded tw-border tw-border-solid tw-border-secondary-500 tw-bg-background tw-bg-clip-padding tw-py-2\"\n    role=\"menu\"\n  >\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { FocusKeyManager } from \"@angular/cdk/a11y\";\nimport {\n  Component,\n  Output,\n  TemplateRef,\n  ViewChild,\n  EventEmitter,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n} from \"@angular/core\";\n\nimport { MenuItemDirective } from \"./menu-item.directive\";\n\n@Component({\n  selector: \"bit-menu\",\n  templateUrl: \"./menu.component.html\",\n  exportAs: \"menuComponent\",\n})\nexport class MenuComponent implements AfterContentInit {\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n  @Output() closed = new EventEmitter<void>();\n  @ContentChildren(MenuItemDirective, { descendants: true })\n  menuItems: QueryList<MenuItemDirective>;\n  keyManager: FocusKeyManager<MenuItemDirective>;\n\n  ngAfterContentInit() {\n    this.keyManager = new FocusKeyManager(this.menuItems).withWrap();\n  }\n}\n","import { Overlay, OverlayConfig, OverlayRef } from \"@angular/cdk/overlay\";\nimport { TemplatePortal } from \"@angular/cdk/portal\";\nimport {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { filter, mergeWith } from \"rxjs/operators\";\n\nimport { MenuComponent } from \"./menu.component\";\n\n@Directive({\n  selector: \"[bitMenuTriggerFor]\",\n})\nexport class MenuTriggerForDirective implements OnDestroy {\n  @HostBinding(\"attr.aria-expanded\") isOpen = false;\n  @HostBinding(\"attr.aria-haspopup\") hasPopup = \"menu\";\n  @HostBinding(\"attr.role\") role = \"button\";\n\n  @Input(\"bitMenuTriggerFor\") menu: MenuComponent;\n\n  private overlayRef: OverlayRef;\n  private defaultMenuConfig: OverlayConfig = {\n    panelClass: \"bit-menu-panel\",\n    hasBackdrop: true,\n    backdropClass: \"cdk-overlay-transparent-backdrop\",\n    scrollStrategy: this.overlay.scrollStrategies.reposition(),\n    positionStrategy: this.overlay\n      .position()\n      .flexibleConnectedTo(this.elementRef)\n      .withPositions([\n        {\n          originX: \"start\",\n          originY: \"bottom\",\n          overlayX: \"start\",\n          overlayY: \"top\",\n        },\n        {\n          originX: \"end\",\n          originY: \"bottom\",\n          overlayX: \"end\",\n          overlayY: \"top\",\n        },\n      ])\n      .withLockedPosition(true)\n      .withFlexibleDimensions(false)\n      .withPush(false),\n  };\n  private closedEventsSub: Subscription;\n  private keyDownEventsSub: Subscription;\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    private viewContainerRef: ViewContainerRef,\n    private overlay: Overlay\n  ) {}\n\n  @HostListener(\"click\") toggleMenu() {\n    this.isOpen ? this.destroyMenu() : this.openMenu();\n  }\n\n  ngOnDestroy() {\n    this.disposeAll();\n  }\n\n  private openMenu() {\n    if (this.menu == null) {\n      throw new Error(\"Cannot find bit-menu element\");\n    }\n\n    this.isOpen = true;\n    this.overlayRef = this.overlay.create(this.defaultMenuConfig);\n\n    const templatePortal = new TemplatePortal(this.menu.templateRef, this.viewContainerRef);\n    this.overlayRef.attach(templatePortal);\n\n    this.closedEventsSub = this.getClosedEvents().subscribe((event: KeyboardEvent | undefined) => {\n      if (event?.key === \"Tab\") {\n        // Required to ensure tab order resumes correctly\n        this.elementRef.nativeElement.focus();\n      }\n      this.destroyMenu();\n    });\n    this.keyDownEventsSub = this.overlayRef\n      .keydownEvents()\n      .subscribe((event: KeyboardEvent) => this.menu.keyManager.onKeydown(event));\n  }\n\n  private destroyMenu() {\n    if (this.overlayRef == null || !this.isOpen) {\n      return;\n    }\n\n    this.isOpen = false;\n    this.disposeAll();\n  }\n\n  private getClosedEvents(): Observable<any> {\n    const detachments = this.overlayRef.detachments();\n    const escKey = this.overlayRef\n      .keydownEvents()\n      .pipe(filter((event: KeyboardEvent) => event.key === \"Escape\" || event.key === \"Tab\"));\n    const backdrop = this.overlayRef.backdropClick();\n    const menuClosed = this.menu.closed;\n\n    return detachments.pipe(mergeWith(escKey, backdrop, menuClosed));\n  }\n\n  private disposeAll() {\n    this.closedEventsSub?.unsubscribe();\n    this.overlayRef?.dispose();\n    this.keyDownEventsSub?.unsubscribe();\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-menu-divider\",\n  templateUrl: \"./menu-divider.component.html\",\n})\nexport class MenuDividerComponent {}\n","<div\n  class=\"tw-my-2 tw-border-0 tw-border-t tw-border-solid tw-border-t-secondary-500\"\n  role=\"separator\"\n></div>\n","<nav class=\"navbar navbar-expand navbar-dark\" [ngClass]=\"{ 'nav-background-alt': selfHosted }\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\" appA11yTitle=\"{{ 'pageTitle' | i18n: 'Bitwarden' }}\">\n      <i class=\"bwi bwi-shield\" aria-hidden=\"true\"></i>\n    </a>\n    <div class=\"collapse navbar-collapse\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/vault\">{{ \"vaults\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/sends\">{{ \"send\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/tools\">{{ \"tools\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/reports\">{{ \"reports\" | i18n }}</a>\n        </li>\n        <li *ngIf=\"organizations.length >= 1\" class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" [routerLink]=\"['/organizations', organizations[0].id]\">{{\n            \"organizations\" | i18n\n          }}</a>\n        </li>\n        <ng-container *ngIf=\"providers.length >= 1\">\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length == 1\">\n            <a class=\"nav-link\" [routerLink]=\"['/providers', providers[0].id]\">{{\n              \"provider\" | i18n\n            }}</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length > 1\">\n            <a class=\"nav-link\" routerLink=\"/providers\">{{ \"provider\" | i18n }}</a>\n          </li>\n        </ng-container>\n      </ul>\n    </div>\n    <ul class=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\">\n      <li>\n        <button\n          [bitMenuTriggerFor]=\"accountMenu\"\n          class=\"tw-border-0 tw-bg-transparent tw-text-alt2 tw-opacity-70 hover:tw-opacity-90\"\n        >\n          <i class=\"bwi bwi-user-circle bwi-lg\" aria-hidden=\"true\"></i>\n          <i class=\"bwi bwi-caret-down bwi-sm\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu class=\"dropdown-menu\" #accountMenu>\n          <div class=\"tw-flex tw-min-w-[200px] tw-max-w-[300px] tw-flex-col\">\n            <div\n              class=\"tw-flex tw-items-center tw-py-1 tw-px-4 tw-leading-tight tw-text-info\"\n              *ngIf=\"name\"\n              appStopProp\n            >\n              <app-avatar\n                [data]=\"name\"\n                [email]=\"email\"\n                size=\"25\"\n                fontSize=\"14\"\n                [circle]=\"true\"\n              ></app-avatar>\n              <div class=\"tw-ml-2 tw-block tw-overflow-hidden tw-whitespace-nowrap\">\n                <span>{{ \"loggedInAs\" | i18n }}</span>\n                <small class=\"tw-block tw-overflow-hidden tw-whitespace-nowrap tw-text-muted\">{{\n                  name\n                }}</small>\n              </div>\n            </div>\n            <bit-menu-divider></bit-menu-divider>\n            <a bitMenuItem routerLink=\"/settings/account\">\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"accountSettings\" | i18n }}\n            </a>\n            <a bitMenuItem href=\"https://bitwarden.com/help/\" target=\"_blank\" rel=\"noopener\">\n              <i class=\"bwi bwi-fw bwi-question-circle\" aria-hidden=\"true\"></i>\n              {{ \"getHelp\" | i18n }}\n            </a>\n            <a bitMenuItem href=\"https://bitwarden.com/download/\" target=\"_blank\" rel=\"noopener\">\n              <i class=\"bwi bwi-fw bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"getApps\" | i18n }}\n            </a>\n            <bit-menu-divider></bit-menu-divider>\n            <button bitMenuItem type=\"button\" (click)=\"lock()\">\n              <i class=\"bwi bwi-fw bwi-lock\" aria-hidden=\"true\"></i>\n              {{ \"lockNow\" | i18n }}\n            </button>\n            <button bitMenuItem type=\"button\" (click)=\"logOut()\">\n              <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </bit-menu>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, NgZone, OnInit } from \"@angular/core\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\nimport { canAccessOrgAdmin } from \"../organizations/navigation-permissions\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"navbar.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class NavbarComponent implements OnInit {\n  selfHosted = false;\n  name: string;\n  email: string;\n  providers: Provider[] = [];\n  organizations: Organization[] = [];\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private providerService: ProviderService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService,\n    private i18nService: I18nService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone\n  ) {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.name = await this.tokenService.getName();\n    this.email = await this.tokenService.getEmail();\n    if (this.name == null || this.name.trim() === \"\") {\n      this.name = this.email;\n    }\n\n    // Ensure providers and organizations are loaded\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n    this.providers = await this.providerService.getAll();\n\n    this.organizations = await this.buildOrganizations();\n\n    this.broadcasterService.subscribe(this.constructor.name, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"organizationCreated\":\n            if (this.organizations.length < 1) {\n              this.organizations = await this.buildOrganizations();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  async buildOrganizations() {\n    const allOrgs = await this.organizationService.getAll();\n    return allOrgs.filter(canAccessOrgAdmin).sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  lock() {\n    this.messagingService.send(\"lockVault\");\n  }\n\n  logOut() {\n    this.messagingService.send(\"logout\");\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-user-layout\",\n  templateUrl: \"user-layout.component.html\",\n})\nexport class UserLayoutComponent implements OnInit {\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-tab-group\",\n  templateUrl: \"./tab-group.component.html\",\n})\nexport class TabGroupComponent {}\n","<ng-container [ngSwitch]=\"disabled\">\n  <a\n    *ngSwitchCase=\"false\"\n    role=\"tab\"\n    [class]=\"baseClassList\"\n    [routerLink]=\"route\"\n    [routerLinkActive]=\"activeClassList\"\n    #rla=\"routerLinkActive\"\n    [attr.aria-selected]=\"rla.isActive\"\n  >\n    <ng-container [ngTemplateOutlet]=\"content\"></ng-container>\n  </a>\n  <button\n    *ngSwitchCase=\"true\"\n    type=\"button\"\n    role=\"tab\"\n    [class]=\"baseClassList\"\n    disabled\n    aria-disabled=\"true\"\n  >\n    <ng-container [ngTemplateOutlet]=\"content\"></ng-container>\n  </button>\n</ng-container>\n<ng-template #content>\n  <ng-content></ng-content>\n</ng-template>\n","<div\n  role=\"tablist\"\n  class=\"tw-inline-flex tw-flex-wrap tw-border-0 tw-border-b tw-border-solid tw-border-secondary-300 tw-leading-5\"\n>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-tab-item\",\n  templateUrl: \"./tab-item.component.html\",\n})\nexport class TabItemComponent {\n  @Input() route: string; // ['/route']\n  @Input() disabled = false;\n\n  get baseClassList(): string[] {\n    return [\n      \"tw-block\",\n      \"tw-relative\",\n      \"tw-py-2\",\n      \"tw-px-4\",\n      \"tw-font-semibold\",\n      \"tw-transition\",\n      \"tw-rounded-t\",\n      \"tw-border-0\",\n      \"tw-border-x\",\n      \"tw-border-t-4\",\n      \"tw-border-transparent\",\n      \"tw-border-solid\",\n      \"!tw-text-main\",\n      \"hover:tw-underline\",\n      \"hover:!tw-text-main\",\n      \"focus-visible:tw-z-10\",\n      \"focus-visible:tw-outline-none\",\n      \"focus-visible:tw-ring-2\",\n      \"focus-visible:tw-ring-primary-700\",\n      \"disabled:tw-bg-transparent\",\n      \"disabled:!tw-text-muted/60\",\n      \"disabled:tw-no-underline\",\n      \"disabled:tw-cursor-not-allowed\",\n    ];\n  }\n\n  get activeClassList(): string {\n    return [\n      \"tw--mb-px\",\n      \"tw-border-x-secondary-300\",\n      \"tw-border-t-primary-500\",\n      \"tw-border-b\",\n      \"tw-border-b-background\",\n      \"tw-bg-background\",\n      \"!tw-text-primary-500\",\n      \"hover:tw-border-t-primary-700\",\n      \"hover:!tw-text-primary-700\",\n      \"focus-visible:tw-border-t-primary-700\",\n      \"focus-visible:!tw-text-primary-700\",\n    ].join(\" \");\n  }\n}\n","<div *ngIf=\"loaded && activeOrganization != null\" class=\"tw-flex\">\n  <button\n    class=\"tw-flex tw-items-center tw-border-none tw-bg-background-alt\"\n    type=\"button\"\n    id=\"pickerButton\"\n    [appA11yTitle]=\"'organizationPicker' | i18n\"\n    [bitMenuTriggerFor]=\"orgPickerMenu\"\n  >\n    <app-avatar\n      [data]=\"activeOrganization.name\"\n      size=\"45\"\n      [circle]=\"true\"\n      [dynamic]=\"true\"\n    ></app-avatar>\n    <div class=\"tw-flex\">\n      <div class=\"org-name tw-ml-3\">\n        <span>{{ activeOrganization.name }}</span>\n        <small class=\"tw-text-muted\">{{ \"organization\" | i18n }}</small>\n      </div>\n      <div class=\"tw-ml-3\">\n        <i class=\"bwi bwi-angle-down tw-text-main\" aria-hidden=\"true\"></i>\n      </div>\n    </div>\n  </button>\n  <div>\n    <div\n      class=\"tw-ml-3 tw-rounded tw-border tw-border-solid tw-border-danger-500 tw-text-danger\"\n      *ngIf=\"!activeOrganization.enabled\"\n    >\n      <div class=\"tw-py-2 tw-px-5\">\n        <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n        {{ \"organizationIsDisabled\" | i18n }}\n      </div>\n    </div>\n    <div\n      class=\"tw-ml-3 tw-rounded tw-border tw-border-solid tw-border-info-500 tw-text-info\"\n      *ngIf=\"activeOrganization.isProviderUser\"\n    >\n      <div class=\"tw-py-2 tw-px-5\">\n        <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n        {{ \"accessingUsingProvider\" | i18n: activeOrganization.providerName }}\n      </div>\n    </div>\n  </div>\n\n  <bit-menu #orgPickerMenu>\n    <ul aria-labelledby=\"pickerButton\" class=\"tw-m-0 tw-p-0\">\n      <li *ngFor=\"let org of organizations\" class=\"tw-flex tw-list-none tw-flex-col\" role=\"none\">\n        <a bitMenuItem [routerLink]=\"['/organizations', org.id]\">\n          <i\n            class=\"bwi bwi-check mr-2\"\n            [ngClass]=\"org.id === activeOrganization.id ? 'visible' : 'invisible'\"\n          >\n            <span class=\"tw-sr-only\">{{ \"currentOrganization\" | i18n }}</span>\n          </i>\n          {{ org.name }}\n        </a>\n      </li>\n      <bit-menu-divider></bit-menu-divider>\n      <li class=\"tw-list-none\" role=\"none\">\n        <a bitMenuItem routerLink=\"/create-organization\">\n          <i class=\"bwi bwi-plus mr-2\"></i>\n          {{ \"newOrganization\" | i18n }}</a\n        >\n      </li>\n    </ul>\n  </bit-menu>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { canAccessOrgAdmin } from \"../organizations/navigation-permissions\";\n\n@Component({\n  selector: \"app-organization-switcher\",\n  templateUrl: \"organization-switcher.component.html\",\n})\nexport class OrganizationSwitcherComponent implements OnInit {\n  constructor(private organizationService: OrganizationService, private i18nService: I18nService) {}\n\n  @Input() activeOrganization: Organization = null;\n  organizations: Organization[] = [];\n\n  loaded = false;\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    const orgs = await this.organizationService.getAll();\n    this.organizations = orgs\n      .filter(canAccessOrgAdmin)\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    this.loaded = true;\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav\" *ngIf=\"organization\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <app-organization-switcher\n        class=\"my-auto pl-1\"\n        [activeOrganization]=\"organization\"\n      ></app-organization-switcher>\n      <bit-tab-group class=\"-tw-mb-px\">\n        <bit-tab-item [route]=\"['vault']\">{{ \"vault\" | i18n }}</bit-tab-item>\n        <bit-tab-item *ngIf=\"showMembersTab\" [route]=\"['members']\">{{\n          \"members\" | i18n\n        }}</bit-tab-item>\n        <bit-tab-item *ngIf=\"showGroupsTab\" [route]=\"['groups']\">{{\n          \"groups\" | i18n\n        }}</bit-tab-item>\n        <bit-tab-item *ngIf=\"showReportsTab\" [route]=\"[reportRoute]\">{{\n          reportTabLabel | i18n\n        }}</bit-tab-item>\n        <bit-tab-item *ngIf=\"showBillingTab\" [route]=\"['billing']\">{{\n          \"billing\" | i18n\n        }}</bit-tab-item>\n        <bit-tab-item *ngIf=\"showSettingsTab\" [route]=\"['settings']\">{{\n          \"settings\" | i18n\n        }}</bit-tab-item>\n      </bit-tab-group>\n    </div>\n  </div>\n</div>\n\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { concatMap, Subject, takeUntil } from \"rxjs\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport {\n  canAccessBillingTab,\n  canAccessGroupsTab,\n  canAccessMembersTab,\n  canAccessReportingTab,\n  canAccessSettingsTab,\n} from \"../navigation-permissions\";\n\nconst BroadcasterSubscriptionId = \"OrganizationLayoutComponent\";\n\n@Component({\n  selector: \"app-organization-layout\",\n  templateUrl: \"organization-layout.component.html\",\n})\nexport class OrganizationLayoutComponent implements OnInit, OnDestroy {\n  private organizationId: string;\n  private destroy$ = new Subject<void>();\n\n  organization: Organization;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone\n  ) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    this.route.params\n      .pipe(\n        concatMap(async (params: any) => {\n          this.organizationId = params.organizationId;\n          await this.load();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"updatedOrgLicense\":\n            await this.load();\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n  }\n\n  get showSettingsTab(): boolean {\n    return canAccessSettingsTab(this.organization);\n  }\n\n  get showMembersTab(): boolean {\n    return canAccessMembersTab(this.organization);\n  }\n\n  get showGroupsTab(): boolean {\n    return canAccessGroupsTab(this.organization);\n  }\n\n  get showReportsTab(): boolean {\n    return canAccessReportingTab(this.organization);\n  }\n\n  get showBillingTab(): boolean {\n    return canAccessBillingTab(this.organization);\n  }\n\n  get reportTabLabel(): string {\n    return this.organization.useEvents ? \"reporting\" : \"reports\";\n  }\n\n  get reportRoute(): string {\n    return this.organization.useEvents ? \"reporting/events\" : \"reporting/reports\";\n  }\n}\n","export class SelectionReadOnlyRequest {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(id: string, readOnly: boolean, hidePasswords: boolean) {\n    this.id = id;\n    this.readOnly = readOnly;\n    this.hidePasswords = hidePasswords;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAccessTitle\">\n          {{ \"userAccess\" | i18n }}\n          <small>{{ entityName }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading || !users\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <cdk-virtual-scroll-viewport\n        itemSize=\"46\"\n        minBufferPx=\"600\"\n        maxBufferPx=\"1200\"\n        [style]=\"scrollViewportStyle\"\n      >\n        <div class=\"modal-body\" *ngIf=\"!loading && users && searchedUsers\">\n          <div class=\"d-flex\">\n            <div class=\"mr-3\">\n              <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n              <input\n                type=\"search\"\n                class=\"form-control form-control-sm\"\n                id=\"search\"\n                placeholder=\"{{ 'search' | i18n }}\"\n                name=\"SearchText\"\n                [(ngModel)]=\"searchText\"\n              />\n            </div>\n            <div class=\"btn-group btn-group-sm\" role=\"group\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{ active: !showSelected }\"\n                (click)=\"filterSelected(false)\"\n              >\n                {{ \"all\" | i18n }}\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{ active: showSelected }\"\n                (click)=\"filterSelected(true)\"\n              >\n                {{ \"selected\" | i18n }}\n                <span bitBadge badgeType=\"info\" *ngIf=\"selectedCount\">{{ selectedCount }}</span>\n              </button>\n            </div>\n          </div>\n          <ng-container *ngIf=\"!searchedUsers.length\">\n            <hr />\n            {{ \"noUsersInList\" | i18n }}\n          </ng-container>\n          <table class=\"table table-hover table-list mb-0\" [hidden]=\"!searchedUsers.length\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th *ngIf=\"entity === 'collection'\">&nbsp;</th>\n                <th>{{ \"userType\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"hidePasswords\" | i18n }}\n                </th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"readOnly\" | i18n }}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *cdkVirtualFor=\"let u of searchedUsers\" class=\"\">\n                <td class=\"table-list-checkbox\" (click)=\"check(u)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.checked\"\n                    name=\"{{ u.id.substr(0, 8) }}_Checked\"\n                    [disabled]=\"entity === 'collection' && u.accessAll\"\n                    (change)=\"selectedChanged(u)\"\n                    appStopProp\n                  />\n                </td>\n                <td width=\"30\" (click)=\"check(u)\">\n                  <app-avatar\n                    [data]=\"u | userName\"\n                    [email]=\"u.email\"\n                    size=\"25\"\n                    [circle]=\"true\"\n                    [fontSize]=\"14\"\n                  >\n                  </app-avatar>\n                </td>\n                <td>\n                  {{ u.email }}\n                  <span\n                    bitBadge\n                    badgeType=\"secondary\"\n                    *ngIf=\"u.status === organizationUserStatusType.Invited\"\n                    >{{ \"invited\" | i18n }}</span\n                  >\n                  <span\n                    bitBadge\n                    badgeType=\"warning\"\n                    *ngIf=\"u.status === organizationUserStatusType.Accepted\"\n                    >{{ \"accepted\" | i18n }}</span\n                  >\n                  <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n                </td>\n                <td *ngIf=\"entity === 'collection'\">\n                  <ng-container *ngIf=\"u.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter\"\n                      title=\"{{ 'userAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"userAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td>\n                  <span *ngIf=\"u.type === organizationUserType.Owner\">{{ \"owner\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Admin\">{{ \"admin\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Manager\">{{\n                    \"manager\" | i18n\n                  }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.User\">{{ \"user\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Custom\">{{ \"custom\" | i18n }}</span>\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.hidePasswords\"\n                    name=\"{{ u.id.substr(0, 8) }}_HidePasswords\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.readOnly\"\n                    name=\"{{ u.id.substr(0, 8) }}_ReadOnly\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </cdk-virtual-scroll-viewport>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selectionReadOnlyRequest\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/models/response/organizationUserResponse\";\n\n@Component({\n  selector: \"app-entity-users\",\n  templateUrl: \"entity-users.component.html\",\n  providers: [SearchPipe],\n})\nexport class EntityUsersComponent implements OnInit {\n  @Input() entity: \"group\" | \"collection\";\n  @Input() entityId: string;\n  @Input() entityName: string;\n  @Input() organizationId: string;\n  @Output() onEditedUsers = new EventEmitter();\n\n  organizationUserType = OrganizationUserType;\n  organizationUserStatusType = OrganizationUserStatusType;\n\n  showSelected = false;\n  loading = true;\n  formPromise: Promise<any>;\n  selectedCount = 0;\n  searchText: string;\n\n  private allUsers: OrganizationUserUserDetailsResponse[] = [];\n\n  constructor(\n    private search: SearchPipe,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.loadUsers();\n    this.loading = false;\n  }\n\n  get users() {\n    if (this.showSelected) {\n      return this.allUsers.filter((u) => (u as any).checked);\n    } else {\n      return this.allUsers;\n    }\n  }\n\n  get searchedUsers() {\n    return this.search.transform(this.users, this.searchText, \"name\", \"email\", \"id\");\n  }\n\n  get scrollViewportStyle() {\n    return `min-height: 120px; height: ${120 + this.searchedUsers.length * 46}px`;\n  }\n\n  async loadUsers() {\n    const users = await this.apiService.getOrganizationUsers(this.organizationId);\n    this.allUsers = users.data.map((r) => r).sort(Utils.getSortFunction(this.i18nService, \"email\"));\n    if (this.entity === \"group\") {\n      const response = await this.apiService.getGroupUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => u.id === s);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n          }\n        });\n      }\n    } else if (this.entity === \"collection\") {\n      const response = await this.apiService.getCollectionUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => !u.accessAll && u.id === s.id);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n            (user[0] as any).readOnly = s.readOnly;\n            (user[0] as any).hidePasswords = s.hidePasswords;\n          }\n        });\n      }\n    }\n\n    this.allUsers.forEach((u) => {\n      if (this.entity === \"collection\" && u.accessAll) {\n        (u as any).checked = true;\n      }\n      if ((u as any).checked) {\n        this.selectedCount++;\n      }\n    });\n  }\n\n  check(u: OrganizationUserUserDetailsResponse) {\n    if (this.entity === \"collection\" && u.accessAll) {\n      return;\n    }\n    (u as any).checked = !(u as any).checked;\n    this.selectedChanged(u);\n  }\n\n  selectedChanged(u: OrganizationUserUserDetailsResponse) {\n    if ((u as any).checked) {\n      this.selectedCount++;\n    } else {\n      if (this.entity === \"collection\") {\n        (u as any).readOnly = false;\n        (u as any).hidePasswords = false;\n      }\n      this.selectedCount--;\n    }\n  }\n\n  filterSelected(showSelected: boolean) {\n    this.showSelected = showSelected;\n  }\n\n  async submit() {\n    try {\n      if (this.entity === \"group\") {\n        const selections = this.users.filter((u) => (u as any).checked).map((u) => u.id);\n        this.formPromise = this.apiService.putGroupUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      } else {\n        const selections = this.users\n          .filter((u) => (u as any).checked && !u.accessAll)\n          .map(\n            (u) =>\n              new SelectionReadOnlyRequest(u.id, !!(u as any).readOnly, !!(u as any).hidePasswords)\n          );\n        this.formPromise = this.apiService.putCollectionUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedUsers\"));\n      this.onEditedUsers.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class GroupRequest {\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n  collections: SelectionReadOnlyRequest[] = [];\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"groupAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <div class=\"form-group\">\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"name\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"externalId\">{{ \"externalId\" | i18n }}</label>\n          <input\n            id=\"externalId\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"ExternalId\"\n            [(ngModel)]=\"externalId\"\n          />\n          <small class=\"form-text text-muted\">{{ \"externalIdDesc\" | i18n }}</small>\n        </div>\n        <h3 class=\"mt-4 d-flex\">\n          <div class=\"mb-2\">\n            {{ \"accessControl\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/user-types-access-control/#access-control\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </h3>\n        <div class=\"form-group\" [ngClass]=\"{ 'mb-0': access !== 'selected' }\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessAll\"\n              value=\"all\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessAll\">\n              {{ \"groupAccessAllItems\" | i18n }}\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessSelected\"\n              value=\"selected\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessSelected\">\n              {{ \"groupAccessSelectedCollections\" | i18n }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"access === 'selected'\">\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(c)\">\n                  {{ c.name }}\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.hidePasswords\"\n                    name=\"Collection[{{ i }}].HidePasswords\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.readOnly\"\n                    name=\"Collection[{{ i }}].ReadOnly\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              aria-hidden=\"true\"\n              title=\"{{ 'loading' | i18n }}\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { GroupRequest } from \"@bitwarden/common/models/request/groupRequest\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selectionReadOnlyRequest\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collectionResponse\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-group-add-edit\",\n  templateUrl: \"group-add-edit.component.html\",\n})\nexport class GroupAddEditComponent implements OnInit {\n  @Input() groupId: string;\n  @Input() organizationId: string;\n  @Output() onSavedGroup = new EventEmitter();\n  @Output() onDeletedGroup = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  name: string;\n  externalId: string;\n  access: \"all\" | \"selected\" = \"selected\";\n  collections: CollectionView[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.groupId != null;\n    await this.loadCollections();\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editGroup\");\n      try {\n        const group = await this.apiService.getGroupDetails(this.organizationId, this.groupId);\n        this.access = group.accessAll ? \"all\" : \"selected\";\n        this.name = group.name;\n        this.externalId = group.externalId;\n        if (group.collections != null && this.collections != null) {\n          group.collections.forEach((s) => {\n            const collection = this.collections.filter((c) => c.id === s.id);\n            if (collection != null && collection.length > 0) {\n              (collection[0] as any).checked = true;\n              collection[0].readOnly = s.readOnly;\n              collection[0].hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"addGroup\");\n    }\n\n    this.loading = false;\n  }\n\n  async loadCollections() {\n    const response = await this.apiService.getCollections(this.organizationId);\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    this.collections = await this.collectionService.decryptMany(collections);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n    if (!(c as any).checked) {\n      c.readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n\n  async submit() {\n    const request = new GroupRequest();\n    request.name = this.name;\n    request.externalId = this.externalId;\n    request.accessAll = this.access === \"all\";\n    if (!request.accessAll) {\n      request.collections = this.collections\n        .filter((c) => (c as any).checked)\n        .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n    }\n\n    try {\n      if (this.editMode) {\n        this.formPromise = this.apiService.putGroup(this.organizationId, this.groupId, request);\n      } else {\n        this.formPromise = this.apiService.postGroup(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedGroupId\" : \"createdGroupId\", this.name)\n      );\n      this.onSavedGroup.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteGroup(this.organizationId, this.groupId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", this.name)\n      );\n      this.onDeletedGroup.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"page-header d-flex\">\n    <h1>{{ \"groups\" | i18n }}</h1>\n    <div class=\"ml-auto d-flex\">\n      <div>\n        <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n        <input\n          type=\"search\"\n          class=\"form-control form-control-sm\"\n          id=\"search\"\n          placeholder=\"{{ 'search' | i18n }}\"\n          [(ngModel)]=\"searchText\"\n        />\n      </div>\n      <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\">\n        <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n        {{ \"newGroup\" | i18n }}\n      </button>\n    </div>\n  </div>\n  <ng-container *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n  <ng-container\n    *ngIf=\"\n      !loading &&\n      (isPaging() ? pagedGroups : (groups | search: searchText:'name':'id')) as searchedGroups\n    \"\n  >\n    <p *ngIf=\"!searchedGroups.length\">{{ \"noGroupsInList\" | i18n }}</p>\n    <table\n      class=\"table table-hover table-list\"\n      *ngIf=\"searchedGroups.length\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let g of searchedGroups\">\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(g)\">{{ g.name }}</a>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"users(g)\">\n                  <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                  {{ \"users\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(g)\">\n                  <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                  {{ \"delete\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n  <ng-template #addEdit></ng-template>\n  <ng-template #usersTemplate></ng-template>\n</div>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/groupResponse\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\nimport { GroupAddEditComponent } from \"./group-add-edit.component\";\n\n@Component({\n  selector: \"app-org-groups\",\n  templateUrl: \"groups.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class GroupsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  groups: GroupResponse[];\n  pagedGroups: GroupResponse[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedGroupsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getGroups(this.organizationId);\n    const groups = response.data != null && response.data.length > 0 ? response.data : [];\n    groups.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.groups = groups;\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.groups || this.groups.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedGroups.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedGroupsCount > this.pageSize) {\n      pagedSize = this.pagedGroupsCount;\n    }\n    if (this.groups.length > pagedLength) {\n      this.pagedGroups = this.pagedGroups.concat(\n        this.groups.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedGroupsCount = this.pagedGroups.length;\n    this.didScroll = this.pagedGroups.length > this.pageSize;\n  }\n\n  async edit(group: GroupResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      GroupAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.groupId = group != null ? group.id : null;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedGroup.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedGroup.subscribe(() => {\n          modal.close();\n          this.removeGroup(group);\n        });\n      }\n    );\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(group: GroupResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      group.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteGroup(this.organizationId, group.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", group.name)\n      );\n      this.removeGroup(group);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async users(group: GroupResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"group\";\n        comp.entityId = group.id;\n        comp.entityName = group.name;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onEditedUsers.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedGroups = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.groups && this.groups.length > this.pageSize;\n  }\n\n  private removeGroup(group: GroupResponse) {\n    const index = this.groups.indexOf(group);\n    if (index > -1) {\n      this.groups.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","export class OrganizationUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class OrganizationUserConfirmRequest {\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-user-confirm\",\n  templateUrl: \"user-confirm.component.html\",\n})\nexport class UserConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() publicKey: Uint8Array;\n  @Output() onConfirmedUser = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      if (this.publicKey != null) {\n        const fingerprint = await this.cryptoService.getFingerprint(\n          this.userId,\n          this.publicKey.buffer\n        );\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    this.onConfirmedUser.emit();\n  }\n}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/models/response/organizationUserResponse\";\nimport { ProviderUserUserDetailsResponse } from \"@bitwarden/common/models/response/provider/providerUserResponse\";\n\nimport { UserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\n\ntype StatusType = OrganizationUserStatusType | ProviderUserStatusType;\n\nconst MaxCheckedCount = 500;\n\n@Directive()\nexport abstract class BasePeopleComponent<\n  UserType extends ProviderUserUserDetailsResponse | OrganizationUserUserDetailsResponse\n> {\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  get allCount() {\n    return this.activeUsers != null ? this.activeUsers.length : 0;\n  }\n\n  get invitedCount() {\n    return this.statusMap.has(this.userStatusType.Invited)\n      ? this.statusMap.get(this.userStatusType.Invited).length\n      : 0;\n  }\n\n  get acceptedCount() {\n    return this.statusMap.has(this.userStatusType.Accepted)\n      ? this.statusMap.get(this.userStatusType.Accepted).length\n      : 0;\n  }\n\n  get confirmedCount() {\n    return this.statusMap.has(this.userStatusType.Confirmed)\n      ? this.statusMap.get(this.userStatusType.Confirmed).length\n      : 0;\n  }\n\n  get revokedCount() {\n    return this.statusMap.has(this.userStatusType.Revoked)\n      ? this.statusMap.get(this.userStatusType.Revoked).length\n      : 0;\n  }\n\n  get showConfirmUsers(): boolean {\n    return (\n      this.activeUsers != null &&\n      this.statusMap != null &&\n      this.activeUsers.length > 1 &&\n      this.confirmedCount > 0 &&\n      this.confirmedCount < 3 &&\n      this.acceptedCount > 0\n    );\n  }\n\n  get showBulkConfirmUsers(): boolean {\n    return this.acceptedCount > 0;\n  }\n\n  abstract userType: typeof OrganizationUserType | typeof ProviderUserType;\n  abstract userStatusType: typeof OrganizationUserStatusType | typeof ProviderUserStatusType;\n\n  loading = true;\n  statusMap = new Map<StatusType, UserType[]>();\n  status: StatusType;\n  users: UserType[] = [];\n  pagedUsers: UserType[] = [];\n  searchText: string;\n  actionPromise: Promise<void>;\n\n  protected allUsers: UserType[] = [];\n  protected activeUsers: UserType[] = [];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedUsersCount = 0;\n\n  constructor(\n    protected apiService: ApiService,\n    private searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cryptoService: CryptoService,\n    protected validationService: ValidationService,\n    protected modalService: ModalService,\n    private logService: LogService,\n    private searchPipe: SearchPipe,\n    protected userNamePipe: UserNamePipe,\n    protected stateService: StateService\n  ) {}\n\n  abstract edit(user: UserType): void;\n  abstract getUsers(): Promise<ListResponse<UserType>>;\n  abstract deleteUser(id: string): Promise<void>;\n  abstract revokeUser(id: string): Promise<void>;\n  abstract restoreUser(id: string): Promise<void>;\n  abstract reinviteUser(id: string): Promise<void>;\n  abstract confirmUser(user: UserType, publicKey: Uint8Array): Promise<void>;\n\n  async load() {\n    const response = await this.getUsers();\n    this.statusMap.clear();\n    this.activeUsers = [];\n    for (const status of Utils.iterateEnum(this.userStatusType)) {\n      this.statusMap.set(status, []);\n    }\n\n    this.allUsers = response.data != null && response.data.length > 0 ? response.data : [];\n    this.allUsers.sort(Utils.getSortFunction(this.i18nService, \"email\"));\n    this.allUsers.forEach((u) => {\n      if (!this.statusMap.has(u.status)) {\n        this.statusMap.set(u.status, [u]);\n      } else {\n        this.statusMap.get(u.status).push(u);\n      }\n      if (u.status !== this.userStatusType.Revoked) {\n        this.activeUsers.push(u);\n      }\n    });\n    this.filter(this.status);\n    this.loading = false;\n  }\n\n  filter(status: StatusType) {\n    this.status = status;\n    if (this.status != null) {\n      this.users = this.statusMap.get(this.status);\n    } else {\n      this.users = this.activeUsers;\n    }\n    // Reset checkbox selecton\n    this.selectAll(false);\n    this.resetPaging();\n  }\n\n  loadMore() {\n    if (!this.users || this.users.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedUsers.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedUsersCount > this.pageSize) {\n      pagedSize = this.pagedUsersCount;\n    }\n    if (this.users.length > pagedLength) {\n      this.pagedUsers = this.pagedUsers.concat(\n        this.users.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedUsersCount = this.pagedUsers.length;\n    this.didScroll = this.pagedUsers.length > this.pageSize;\n  }\n\n  checkUser(user: OrganizationUserUserDetailsResponse, select?: boolean) {\n    (user as any).checked = select == null ? !(user as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n\n    const filteredUsers = this.searchPipe.transform(\n      this.users,\n      this.searchText,\n      \"name\",\n      \"email\",\n      \"id\"\n    );\n\n    const selectCount =\n      select && filteredUsers.length > MaxCheckedCount ? MaxCheckedCount : filteredUsers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkUser(filteredUsers[i], select);\n    }\n  }\n\n  async resetPaging() {\n    this.pagedUsers = [];\n    this.loadMore();\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  protected async removeUserConfirmationDialog(user: UserType) {\n    return this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(user),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n  }\n\n  async remove(user: UserType) {\n    const confirmed = await this.removeUserConfirmationDialog(user);\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.deleteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(user))\n      );\n      this.removeUser(user);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async revoke(user: UserType) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.revokeWarningMessage(),\n      this.i18nService.t(\"revokeUserId\", this.userNamePipe.transform(user)),\n      this.i18nService.t(\"revokeAccess\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.revokeUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"revokedUserId\", this.userNamePipe.transform(user))\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async restore(user: UserType) {\n    this.actionPromise = this.restoreUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"restoredUserId\", this.userNamePipe.transform(user))\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async reinvite(user: UserType) {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    this.actionPromise = this.reinviteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"hasBeenReinvited\", this.userNamePipe.transform(user))\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async confirm(user: UserType) {\n    function updateUser(self: BasePeopleComponent<UserType>) {\n      user.status = self.userStatusType.Confirmed;\n      const mapIndex = self.statusMap.get(self.userStatusType.Accepted).indexOf(user);\n      if (mapIndex > -1) {\n        self.statusMap.get(self.userStatusType.Accepted).splice(mapIndex, 1);\n        self.statusMap.get(self.userStatusType.Confirmed).push(user);\n      }\n    }\n\n    const confirmUser = async (publicKey: Uint8Array) => {\n      try {\n        this.actionPromise = this.confirmUser(user, publicKey);\n        await this.actionPromise;\n        updateUser(this);\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(user))\n        );\n      } catch (e) {\n        this.validationService.showError(e);\n        throw e;\n      } finally {\n        this.actionPromise = null;\n      }\n    };\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(user.userId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n      if (autoConfirm == null || !autoConfirm) {\n        const [modal] = await this.modalService.openViewRef(\n          UserConfirmComponent,\n          this.confirmModalRef,\n          (comp) => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.userId = user != null ? user.userId : null;\n            comp.publicKey = publicKey;\n            // eslint-disable-next-line rxjs/no-async-subscribe\n            comp.onConfirmedUser.subscribe(async () => {\n              try {\n                comp.formPromise = confirmUser(publicKey);\n                await comp.formPromise;\n                modal.close();\n              } catch (e) {\n                this.logService.error(e);\n              }\n            });\n          }\n        );\n        return;\n      }\n\n      try {\n        const fingerprint = await this.cryptoService.getFingerprint(user.userId, publicKey.buffer);\n        this.logService.info(`User's fingerprint: ${fingerprint.join(\"-\")}`);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      await confirmUser(publicKey);\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.users && this.users.length > this.pageSize;\n  }\n\n  protected revokeWarningMessage(): string {\n    return this.i18nService.t(\"revokeUserConfirmation\");\n  }\n\n  protected getCheckedUsers() {\n    return this.users.filter((u) => (u as any).checked);\n  }\n\n  protected removeUser(user: UserType) {\n    let index = this.users.indexOf(user);\n    if (index > -1) {\n      this.users.splice(index, 1);\n      this.resetPaging();\n    }\n    if (this.statusMap.has(user.status)) {\n      index = this.statusMap.get(user.status).indexOf(user);\n      if (index > -1) {\n        this.statusMap.get(user.status).splice(index, 1);\n      }\n    }\n  }\n}\n","type OrganizationUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class OrganizationUserBulkConfirmRequest {\n  keys: OrganizationUserBulkRequestEntry[];\n\n  constructor(keys: OrganizationUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"confirmUsers\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <app-callout type=\"danger\" *ngIf=\"filteredUsers.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!loading && !done\">\n          <p>\n            {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n            <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n              {{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"fingerprint\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ fingerprints.get(user.id) }}\n              </td>\n            </tr>\n            <tr *ngFor=\"let user of excludedUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"!loading && done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { OrganizationUserBulkConfirmRequest } from \"@bitwarden/common/models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organizationUserBulkRequest\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-confirm\",\n  templateUrl: \"bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent implements OnInit {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  excludedUsers: BulkUserDetails[];\n  filteredUsers: BulkUserDetails[];\n  publicKeys: Map<string, Uint8Array> = new Map();\n  fingerprints: Map<string, string> = new Map();\n  statuses: Map<string, string> = new Map();\n\n  loading = true;\n  done = false;\n  error: string;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    this.excludedUsers = this.users.filter((u) => !this.isAccepted(u));\n    this.filteredUsers = this.users.filter((u) => this.isAccepted(u));\n\n    if (this.filteredUsers.length <= 0) {\n      this.done = true;\n    }\n\n    const response = await this.getPublicKeys();\n\n    for (const entry of response.data) {\n      const publicKey = Utils.fromB64ToArray(entry.key);\n      const fingerprint = await this.cryptoService.getFingerprint(entry.userId, publicKey.buffer);\n      if (fingerprint != null) {\n        this.publicKeys.set(entry.id, publicKey);\n        this.fingerprints.set(entry.id, fingerprint.join(\"-\"));\n      }\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.loading = true;\n    try {\n      const key = await this.getCryptoKey();\n      const userIdsWithKeys: any[] = [];\n      for (const user of this.filteredUsers) {\n        const publicKey = this.publicKeys.get(user.id);\n        if (publicKey == null) {\n          continue;\n        }\n        const encryptedKey = await this.cryptoService.rsaEncrypt(key.key, publicKey.buffer);\n        userIdsWithKeys.push({\n          id: user.id,\n          key: encryptedKey.encryptedString,\n        });\n      }\n      const response = await this.postConfirmRequest(userIdsWithKeys);\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkConfirmMessage\");\n        this.statuses.set(entry.id, error);\n      });\n\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n    this.loading = false;\n  }\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === OrganizationUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    const request = new OrganizationUserBulkRequest(this.filteredUsers.map((user) => user.id));\n    return await this.apiService.postOrganizationUsersPublicKey(this.organizationId, request);\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getOrgKey(this.organizationId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new OrganizationUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.apiService.postOrganizationUserBulkConfirm(this.organizationId, request);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"removeUsers\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"danger\" *ngIf=\"users.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!done\">\n          <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error\">\n            {{ removeUsersWarning }}\n          </app-callout>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done && users.length > 0\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"removeUsers\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organizationUserBulkRequest\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-remove\",\n  templateUrl: \"bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  statuses: Map<string, string> = new Map();\n\n  loading = false;\n  done = false;\n  error: string;\n\n  constructor(protected apiService: ApiService, protected i18nService: I18nService) {}\n\n  async submit() {\n    this.loading = true;\n    try {\n      const response = await this.deleteUsers();\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkRemovedMessage\");\n        this.statuses.set(entry.id, error);\n      });\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n\n    this.loading = false;\n  }\n\n  protected async deleteUsers() {\n    const request = new OrganizationUserBulkRequest(this.users.map((user) => user.id));\n    return await this.apiService.deleteManyOrganizationUsers(this.organizationId, request);\n  }\n\n  protected get removeUsersWarning() {\n    return this.i18nService.t(\"removeOrgUsersConfirmation\");\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ bulkTitle }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"danger\" *ngIf=\"users.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!done\">\n          <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error && isRevoking\">\n            {{ \"revokeUsersWarning\" | i18n }}\n          </app-callout>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done && users.length > 0\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ bulkTitle }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ModalConfig } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organizationUserBulkRequest\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-restore-revoke\",\n  templateUrl: \"bulk-restore-revoke.component.html\",\n})\nexport class BulkRestoreRevokeComponent {\n  isRevoking: boolean;\n  organizationId: string;\n  users: BulkUserDetails[];\n\n  statuses: Map<string, string> = new Map();\n\n  loading = false;\n  done = false;\n  error: string;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    config: ModalConfig\n  ) {\n    this.isRevoking = config.data.isRevoking;\n    this.organizationId = config.data.organizationId;\n    this.users = config.data.users;\n  }\n\n  get bulkTitle() {\n    const titleKey = this.isRevoking ? \"revokeUsers\" : \"restoreUsers\";\n    return this.i18nService.t(titleKey);\n  }\n\n  async submit() {\n    this.loading = true;\n    try {\n      const response = await this.performBulkUserAction();\n\n      const bulkMessage = this.isRevoking ? \"bulkRevokedMessage\" : \"bulkRestoredMessage\";\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(bulkMessage);\n        this.statuses.set(entry.id, error);\n      });\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n\n    this.loading = false;\n  }\n\n  protected async performBulkUserAction() {\n    const request = new OrganizationUserBulkRequest(this.users.map((user) => user.id));\n    if (this.isRevoking) {\n      return await this.apiService.revokeManyOrganizationUsers(this.organizationId, request);\n    } else {\n      return await this.apiService.restoreManyOrganizationUsers(this.organizationId, request);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"bulkConfirmStatus\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              <th>{{ \"status\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tr *ngFor=\"let item of users\">\n            <td width=\"30\">\n              <app-avatar\n                [data]=\"item.user | userName\"\n                [email]=\"item.user.email\"\n                size=\"25\"\n                [circle]=\"true\"\n                [fontSize]=\"14\"\n              ></app-avatar>\n            </td>\n            <td>\n              {{ item.user.email }}\n              <small class=\"text-muted d-block\" *ngIf=\"item.user.name\">{{ item.user.name }}</small>\n            </td>\n            <td class=\"text-danger\" *ngIf=\"item.error\">\n              {{ item.message }}\n            </td>\n            <td *ngIf=\"!item.error\">\n              {{ item.message }}\n            </td>\n          </tr>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\n\nexport interface BulkUserDetails {\n  id: string;\n  name: string;\n  email: string;\n  status: OrganizationUserStatusType | ProviderUserStatusType;\n}\n\ntype BulkStatusEntry = {\n  user: BulkUserDetails;\n  error: boolean;\n  message: string;\n};\n\n@Component({\n  selector: \"app-bulk-status\",\n  templateUrl: \"bulk-status.component.html\",\n})\nexport class BulkStatusComponent {\n  users: BulkStatusEntry[];\n  loading = false;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"eventLogsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"eventLogsTitle\">\n          {{ \"eventLogs\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loaded\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loaded\">\n        <div class=\"d-flex\">\n          <div class=\"form-inline\">\n            <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"start\"\n              placeholder=\"{{ 'startDate' | i18n }}\"\n              [(ngModel)]=\"start\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n            <span class=\"mx-2\">-</span>\n            <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"end\"\n              placeholder=\"{{ 'endDate' | i18n }}\"\n              [(ngModel)]=\"end\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n          </div>\n          <button\n            #refreshBtn\n            [appApiAction]=\"refreshPromise\"\n            type=\"button\"\n            class=\"btn btn-sm btn-outline-primary ml-3\"\n            (click)=\"loadEvents(true)\"\n            [disabled]=\"loaded && refreshBtn.loading\"\n          >\n            <i\n              class=\"bwi bwi-refresh bwi-fw\"\n              [ngClass]=\"{ 'bwi-spin': loaded && refreshBtn.loading }\"\n              aria-hidden=\"true\"\n            ></i>\n            {{ \"refresh\" | i18n }}\n          </button>\n        </div>\n        <hr />\n        <div *ngIf=\"!events || !events.length\">\n          {{ \"noEventsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover mb-0\" *ngIf=\"events && events.length\">\n          <thead>\n            <tr>\n              <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n              <th class=\"border-top-0\" width=\"40\">\n                <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n              </th>\n              <th class=\"border-top-0\" width=\"150\" *ngIf=\"showUser\">{{ \"user\" | i18n }}</th>\n              <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let e of events\">\n              <td>{{ e.date | date: \"medium\" }}</td>\n              <td>\n                <i\n                  class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n                  title=\"{{ e.appName }}, {{ e.ip }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n              </td>\n              <td *ngIf=\"showUser\">\n                <span appA11yTitle=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n              </td>\n              <td [innerHTML]=\"e.message\"></td>\n            </tr>\n          </tbody>\n        </table>\n        <button\n          #moreBtn\n          [appApiAction]=\"morePromise\"\n          type=\"button\"\n          class=\"btn btn-block btn-link btn-submit\"\n          (click)=\"loadEvents(false)\"\n          [disabled]=\"loaded && moreBtn.loading\"\n          *ngIf=\"continuationToken\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"loadMore\" | i18n }}</span>\n        </button>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\n\nimport { EventService } from \"../../core\";\n\n@Component({\n  selector: \"app-entity-events\",\n  templateUrl: \"entity-events.component.html\",\n})\nexport class EntityEventsComponent implements OnInit {\n  @Input() name: string;\n  @Input() entity: \"user\" | \"cipher\";\n  @Input() entityId: string;\n  @Input() organizationId: string;\n  @Input() providerId: string;\n  @Input() showUser = false;\n\n  loading = true;\n  loaded = false;\n  events: any[];\n  start: string;\n  end: string;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n  private orgUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private eventService: EventService,\n    private platformUtilsService: PlatformUtilsService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n    await this.load();\n  }\n\n  async load() {\n    if (this.showUser) {\n      const response = await this.apiService.getOrganizationUsers(this.organizationId);\n      response.data.forEach((u) => {\n        const name = this.userNamePipe.transform(u);\n        this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n        this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n      });\n    }\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.refreshPromise != null || this.morePromise != null) {\n      return;\n    }\n\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return;\n    }\n\n    this.loading = true;\n    let response: ListResponse<EventResponse>;\n    try {\n      let promise: Promise<any>;\n      if (this.entity === \"user\" && this.providerId) {\n        promise = this.apiService.getEventsProviderUser(\n          this.providerId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else if (this.entity === \"user\") {\n        promise = this.apiService.getEventsOrganizationUser(\n          this.organizationId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else {\n        promise = this.apiService.getEventsCipher(\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      }\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      response = await promise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.continuationToken = response.continuationToken;\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user =\n          this.showUser && userId != null && this.orgUsersUserIdMap.has(userId)\n            ? this.orgUsersUserIdMap.get(userId)\n            : null;\n        return {\n          message: eventInfo.message,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: user != null ? user.name : this.showUser ? this.i18nService.t(\"unknown\") : null,\n          userEmail: user != null ? user.email : this.showUser ? \"\" : null,\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n        };\n      })\n    );\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"resetPasswordTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"resetPasswordTitle\">\n          {{ \"resetPassword\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\"\n          >{{ \"resetPasswordLoggedOutWarning\" | i18n: loggedOutWarningName }}\n        </app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          enforcedPolicyMessage=\"{{ 'resetPasswordMasterPasswordPolicyInEffect' | i18n }}\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col form-group\">\n            <div class=\"d-flex\">\n              <label for=\"newPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"ml-auto d-flex\">\n                <a\n                  href=\"#\"\n                  class=\"d-block mr-2 bwi-icon-above-input\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                  (click)=\"generatePassword()\"\n                >\n                  <i class=\"bwi bwi-lg bwi-fw bwi-refresh\" aria-hidden=\"true\"></i>\n                </a>\n              </div>\n            </div>\n            <div class=\"input-group mb-1\">\n              <input\n                id=\"newPassword\"\n                class=\"form-control text-monospace\"\n                appAutofocus\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"NewPassword\"\n                [(ngModel)]=\"newPassword\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <div class=\"input-group-append\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword()\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                  (click)=\"copy(newPassword)\"\n                >\n                  <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n            <app-password-strength\n              [password]=\"newPassword\"\n              [email]=\"email\"\n              [showText]=\"true\"\n              (passwordStrengthResult)=\"getStrengthResult($event)\"\n            >\n            </app-password-strength>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from \"@angular/core\";\nimport zxcvbn from \"zxcvbn\";\n\nimport { PasswordStrengthComponent } from \"@bitwarden/angular/shared/components/password-strength/password-strength.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { OrganizationUserResetPasswordRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordRequest\";\n\n@Component({\n  selector: \"app-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordComponent implements OnInit {\n  @Input() name: string;\n  @Input() email: string;\n  @Input() id: string;\n  @Input() organizationId: string;\n  @Output() onPasswordReset = new EventEmitter();\n  @ViewChild(PasswordStrengthComponent) passwordStrengthComponent: PasswordStrengthComponent;\n\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  newPassword: string = null;\n  showPassword = false;\n  passwordStrengthResult: zxcvbn.ZXCVBNResult;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    private cryptoService: CryptoService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // Get Enforced Policy Options\n    this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n  }\n\n  get loggedOutWarningName() {\n    return this.name != null ? this.name : this.i18nService.t(\"thisUser\");\n  }\n\n  async generatePassword() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    this.newPassword = await this.passwordGenerationService.generatePassword(options);\n    this.passwordStrengthComponent.updatePasswordStrength(this.newPassword);\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"newPassword\").focus();\n  }\n\n  copy(value: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  async submit() {\n    // Validation\n    if (this.newPassword == null || this.newPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n\n    if (this.newPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return false;\n    }\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.passwordStrengthResult.score,\n        this.newPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    if (this.passwordStrengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    // Get user Information (kdf type, kdf iterations, resetPasswordKey, private key) and change password\n    try {\n      this.formPromise = this.apiService\n        .getOrganizationUserResetPasswordDetails(this.organizationId, this.id)\n        .then(async (response) => {\n          if (response == null) {\n            throw new Error(this.i18nService.t(\"resetPasswordDetailsError\"));\n          }\n\n          const kdfType = response.kdf;\n          const kdfIterations = response.kdfIterations;\n          const resetPasswordKey = response.resetPasswordKey;\n          const encryptedPrivateKey = response.encryptedPrivateKey;\n\n          // Decrypt Organization's encrypted Private Key with org key\n          const orgSymKey = await this.cryptoService.getOrgKey(this.organizationId);\n          const decPrivateKey = await this.cryptoService.decryptToBytes(\n            new EncString(encryptedPrivateKey),\n            orgSymKey\n          );\n\n          // Decrypt User's Reset Password Key to get EncKey\n          const decValue = await this.cryptoService.rsaDecrypt(resetPasswordKey, decPrivateKey);\n          const userEncKey = new SymmetricCryptoKey(decValue);\n\n          // Create new key and hash new password\n          const newKey = await this.cryptoService.makeKey(\n            this.newPassword,\n            this.email.trim().toLowerCase(),\n            kdfType,\n            kdfIterations\n          );\n          const newPasswordHash = await this.cryptoService.hashPassword(this.newPassword, newKey);\n\n          // Create new encKey for the User\n          const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n          // Create request\n          const request = new OrganizationUserResetPasswordRequest();\n          request.key = newEncKey[1].encryptedString;\n          request.newMasterPasswordHash = newPasswordHash;\n\n          // Change user's password\n          return this.apiService.putOrganizationUserResetPassword(\n            this.organizationId,\n            this.id,\n            request\n          );\n        });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"resetPasswordSuccess\")\n      );\n      this.onPasswordReset.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  getStrengthResult(result: zxcvbn.ZXCVBNResult) {\n    this.passwordStrengthResult = result;\n  }\n}\n","import { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class OrganizationUserInviteRequest {\n  emails: string[] = [];\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  permissions: PermissionsApi;\n}\n","import { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class OrganizationUserUpdateRequest {\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  permissions: PermissionsApi;\n}\n","<div class=\"form-group mb-0\">\n  <div class=\"form-check mt-1 form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      [name]=\"pascalize(parentId)\"\n      [id]=\"parentId\"\n      [(ngModel)]=\"parentChecked\"\n      [indeterminate]=\"parentIndeterminate\"\n    />\n    <label class=\"form-check-label font-weight-normal\" [for]=\"parentId\">\n      {{ parentId | i18n }}\n    </label>\n  </div>\n  <div class=\"form-group form-group-child-check mb-0\">\n    <div class=\"form-check mt-1\" *ngFor=\"let c of checkboxes\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        [name]=\"pascalize(c.id)\"\n        [id]=\"c.id\"\n        [ngModel]=\"c.get()\"\n        (ngModelChange)=\"c.set($event)\"\n      />\n      <label class=\"form-check-label font-weight-normal\" [for]=\"c.id\">\n        {{ c.id | i18n }}\n      </label>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-nested-checkbox\",\n  templateUrl: \"nested-checkbox.component.html\",\n})\nexport class NestedCheckboxComponent {\n  @Input() parentId: string;\n  @Input() checkboxes: { id: string; get: () => boolean; set: (v: boolean) => void }[];\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  get parentIndeterminate() {\n    return !this.parentChecked && this.checkboxes.some((c) => c.get());\n  }\n\n  get parentChecked() {\n    return this.checkboxes.every((c) => c.get());\n  }\n\n  set parentChecked(value: boolean) {\n    this.checkboxes.forEach((c) => {\n      c.set(value);\n    });\n  }\n\n  pascalize(s: string) {\n    return Utils.camelToPascalCase(s);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n          <span bitBadge badgeType=\"secondary\" *ngIf=\"isRevoked\">{{ \"revoked\" | i18n }}</span>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/user-types-access-control/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeUser\"\n            [value]=\"organizationUserType.User\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeUser\">\n            {{ \"user\" | i18n }}\n            <small>{{ \"userDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeManager\"\n            [value]=\"organizationUserType.Manager\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeManager\">\n            {{ \"manager\" | i18n }}\n            <small>{{ \"managerDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeAdmin\"\n            [value]=\"organizationUserType.Admin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeAdmin\">\n            {{ \"admin\" | i18n }}\n            <small>{{ \"adminDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeOwner\"\n            [value]=\"organizationUserType.Owner\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeOwner\">\n            {{ \"owner\" | i18n }}\n            <small>{{ \"ownerDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeCustom\"\n            [value]=\"organizationUserType.Custom\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeCustom\">\n            {{ \"custom\" | i18n }}\n            <small>{{ \"customDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <ng-container *ngIf=\"customUserTypeSelected\">\n          <h3 class=\"mt-4 d-flex\">\n            {{ \"permissions\" | i18n }}\n          </h3>\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <div class=\"mb-3\">\n                <label class=\"font-weight-bold mb-0\">Manager Permissions</label>\n                <hr class=\"my-0 mr-2\" />\n                <app-nested-checkbox\n                  parentId=\"manageAssignedCollections\"\n                  [checkboxes]=\"manageAssignedCollectionsCheckboxes\"\n                >\n                </app-nested-checkbox>\n              </div>\n            </div>\n            <div class=\"col-6\">\n              <div class=\"mb-3\">\n                <label class=\"font-weight-bold mb-0\">Admin Permissions</label>\n                <hr class=\"my-0 mr-2\" />\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessEventLogs\"\n                      id=\"accessEventLogs\"\n                      [(ngModel)]=\"permissions.accessEventLogs\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessEventLogs\">\n                      {{ \"accessEventLogs\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessImportExport\"\n                      id=\"accessImportExport\"\n                      [(ngModel)]=\"permissions.accessImportExport\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessImportExport\">\n                      {{ \"accessImportExport\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessReports\"\n                      id=\"accessReports\"\n                      [(ngModel)]=\"permissions.accessReports\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessReports\">\n                      {{ \"accessReports\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <app-nested-checkbox\n                  parentId=\"manageAllCollections\"\n                  [checkboxes]=\"manageAllCollectionsCheckboxes\"\n                >\n                </app-nested-checkbox>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageGroups\"\n                      id=\"manageGroups\"\n                      [(ngModel)]=\"permissions.manageGroups\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageGroups\">\n                      {{ \"manageGroups\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageSso\"\n                      id=\"managePolicies\"\n                      [(ngModel)]=\"permissions.manageSso\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageSso\">\n                      {{ \"manageSso\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"managePolicies\"\n                      id=\"managePolicies\"\n                      [(ngModel)]=\"permissions.managePolicies\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"managePolicies\">\n                      {{ \"managePolicies\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageUsers\"\n                      id=\"manageUsers\"\n                      [(ngModel)]=\"permissions.manageUsers\"\n                      (change)=\"handleDependentPermissions()\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageUsers\">\n                      {{ \"manageUsers\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageResetPassword\"\n                      id=\"manageResetPassword\"\n                      [(ngModel)]=\"permissions.manageResetPassword\"\n                      (change)=\"handleDependentPermissions()\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageResetPassword\">\n                      {{ \"manageResetPassword\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-4 d-flex\">\n          <div class=\"mb-3\">\n            {{ \"accessControl\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/user-types-access-control/#access-control\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </h3>\n        <div class=\"form-group\" [ngClass]=\"{ 'mb-0': access !== 'selected' }\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessAll\"\n              value=\"all\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessAll\">\n              {{ \"userAccessAllItems\" | i18n }}\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessSelected\"\n              value=\"selected\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessSelected\">\n              {{ \"userAccessSelectedCollections\" | i18n }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"access === 'selected'\">\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(c)\">\n                  {{ c.name }}\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.hidePasswords\"\n                    name=\"Collection[{{ i }}].HidePasswords\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.readOnly\"\n                    name=\"Collection[{{ i }}].ReadOnly\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            type=\"button\"\n            (click)=\"restore()\"\n            class=\"btn btn-outline-secondary\"\n            *ngIf=\"editMode && isRevoked\"\n            [disabled]=\"form.loading\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"restoreAccess\" | i18n }}</span>\n          </button>\n          <button\n            type=\"button\"\n            (click)=\"revoke()\"\n            class=\"btn btn-outline-secondary\"\n            *ngIf=\"editMode && !isRevoked\"\n            [disabled]=\"form.loading\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"revokeAccess\" | i18n }}</span>\n          </button>\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { PermissionsApi } from \"@bitwarden/common/models/api/permissionsApi\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { OrganizationUserInviteRequest } from \"@bitwarden/common/models/request/organizationUserInviteRequest\";\nimport { OrganizationUserUpdateRequest } from \"@bitwarden/common/models/request/organizationUserUpdateRequest\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selectionReadOnlyRequest\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collectionResponse\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() organizationUserId: string;\n  @Input() organizationId: string;\n  @Input() usesKeyConnector = false;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n  @Output() onRevokedUser = new EventEmitter();\n  @Output() onRestoredUser = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  isRevoked = false;\n  title: string;\n  emails: string;\n  type: OrganizationUserType = OrganizationUserType.User;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  collections: CollectionView[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  organizationUserType = OrganizationUserType;\n\n  manageAllCollectionsCheckboxes = [\n    {\n      id: \"createNewCollections\",\n      get: () => this.permissions.createNewCollections,\n      set: (v: boolean) => (this.permissions.createNewCollections = v),\n    },\n    {\n      id: \"editAnyCollection\",\n      get: () => this.permissions.editAnyCollection,\n      set: (v: boolean) => (this.permissions.editAnyCollection = v),\n    },\n    {\n      id: \"deleteAnyCollection\",\n      get: () => this.permissions.deleteAnyCollection,\n      set: (v: boolean) => (this.permissions.deleteAnyCollection = v),\n    },\n  ];\n\n  manageAssignedCollectionsCheckboxes = [\n    {\n      id: \"editAssignedCollections\",\n      get: () => this.permissions.editAssignedCollections,\n      set: (v: boolean) => (this.permissions.editAssignedCollections = v),\n    },\n    {\n      id: \"deleteAssignedCollections\",\n      get: () => this.permissions.deleteAssignedCollections,\n      set: (v: boolean) => (this.permissions.deleteAssignedCollections = v),\n    },\n  ];\n\n  get customUserTypeSelected(): boolean {\n    return this.type === OrganizationUserType.Custom;\n  }\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.organizationUserId != null;\n    await this.loadCollections();\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.apiService.getOrganizationUser(\n          this.organizationId,\n          this.organizationUserId\n        );\n        this.access = user.accessAll ? \"all\" : \"selected\";\n        this.type = user.type;\n        this.isRevoked = user.status === OrganizationUserStatusType.Revoked;\n        if (user.type === OrganizationUserType.Custom) {\n          this.permissions = user.permissions;\n        }\n        if (user.collections != null && this.collections != null) {\n          user.collections.forEach((s) => {\n            const collection = this.collections.filter((c) => c.id === s.id);\n            if (collection != null && collection.length > 0) {\n              (collection[0] as any).checked = true;\n              collection[0].readOnly = s.readOnly;\n              collection[0].hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async loadCollections() {\n    const response = await this.apiService.getCollections(this.organizationId);\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    this.collections = await this.collectionService.decryptMany(collections);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n    if (!(c as any).checked) {\n      c.readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n\n  setRequestPermissions(p: PermissionsApi, clearPermissions: boolean) {\n    Object.assign(p, clearPermissions ? new PermissionsApi() : this.permissions);\n    return p;\n  }\n\n  handleDependentPermissions() {\n    // Manage Password Reset must have Manage Users enabled\n    if (this.permissions.manageResetPassword && !this.permissions.manageUsers) {\n      this.permissions.manageUsers = true;\n      (document.getElementById(\"manageUsers\") as HTMLInputElement).checked = true;\n      this.platformUtilsService.showToast(\n        \"info\",\n        null,\n        this.i18nService.t(\"resetPasswordManageUsers\")\n      );\n    }\n  }\n\n  async submit() {\n    let collections: SelectionReadOnlyRequest[] = null;\n    if (this.access !== \"all\") {\n      collections = this.collections\n        .filter((c) => (c as any).checked)\n        .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n    }\n\n    try {\n      if (this.editMode) {\n        const request = new OrganizationUserUpdateRequest();\n        request.accessAll = this.access === \"all\";\n        request.type = this.type;\n        request.collections = collections;\n        request.permissions = this.setRequestPermissions(\n          request.permissions ?? new PermissionsApi(),\n          request.type !== OrganizationUserType.Custom\n        );\n        this.formPromise = this.apiService.putOrganizationUser(\n          this.organizationId,\n          this.organizationUserId,\n          request\n        );\n      } else {\n        const request = new OrganizationUserInviteRequest();\n        request.emails = [...new Set(this.emails.trim().split(/\\s*,\\s*/))];\n        request.accessAll = this.access === \"all\";\n        request.type = this.type;\n        request.permissions = this.setRequestPermissions(\n          request.permissions ?? new PermissionsApi(),\n          request.type !== OrganizationUserType.Custom\n        );\n        request.collections = collections;\n        this.formPromise = this.apiService.postOrganizationUserInvite(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const message = this.usesKeyConnector\n      ? \"removeUserConfirmationKeyConnector\"\n      : \"removeOrgUserConfirmation\";\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(message),\n      this.i18nService.t(\"removeUserIdAccess\", this.name),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async revoke() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"revokeUserConfirmation\"),\n      this.i18nService.t(\"revokeUserId\", this.name),\n      this.i18nService.t(\"revokeAccess\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.formPromise = this.apiService.revokeOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"revokedUserId\", this.name)\n      );\n      this.isRevoked = true;\n      this.onRevokedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async restore() {\n    if (!this.editMode) {\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.restoreOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"restoredUserId\", this.name)\n      );\n      this.isRevoked = false;\n      this.onRestoredUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export class OrganizationUserUpdateGroupsRequest {\n  groupIds: string[] = [];\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"groupAccessTitle\">\n          {{ \"groupAccess\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <p>{{ \"groupAccessUserDesc\" | i18n }}</p>\n        <div *ngIf=\"!groups || !groups.length\">\n          {{ \"noGroupsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n          <tbody>\n            <tr *ngFor=\"let g of groups; let i = index\">\n              <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"g.checked\"\n                  name=\"Groups[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td (click)=\"check(g)\">\n                {{ g.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { OrganizationUserUpdateGroupsRequest } from \"@bitwarden/common/models/request/organizationUserUpdateGroupsRequest\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/groupResponse\";\n\n@Component({\n  selector: \"app-user-groups\",\n  templateUrl: \"user-groups.component.html\",\n})\nexport class UserGroupsComponent implements OnInit {\n  @Input() name: string;\n  @Input() organizationUserId: string;\n  @Input() organizationId: string;\n  @Output() onSavedUser = new EventEmitter();\n\n  loading = true;\n  groups: GroupResponse[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const groupsResponse = await this.apiService.getGroups(this.organizationId);\n    const groups = groupsResponse.data.map((r) => r);\n    groups.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.groups = groups;\n\n    try {\n      const userGroups = await this.apiService.getOrganizationUserGroups(\n        this.organizationId,\n        this.organizationUserId\n      );\n      if (userGroups != null && this.groups != null) {\n        userGroups.forEach((ug) => {\n          const group = this.groups.filter((g) => g.id === ug);\n          if (group != null && group.length > 0) {\n            (group[0] as any).checked = true;\n          }\n        });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.loading = false;\n  }\n\n  check(g: GroupResponse, select?: boolean) {\n    (g as any).checked = select == null ? !(g as any).checked : select;\n    if (!(g as any).checked) {\n      (g as any).readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.groups.forEach((g) => this.check(g, select));\n  }\n\n  async submit() {\n    const request = new OrganizationUserUpdateGroupsRequest();\n    request.groupIds = this.groups.filter((g) => (g as any).checked).map((g) => g.id);\n\n    try {\n      this.formPromise = this.apiService.putOrganizationUserGroups(\n        this.organizationId,\n        this.organizationUserId,\n        request\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedGroupsForUser\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"page-header d-flex\">\n    <h1>{{ \"members\" | i18n }}</h1>\n    <div class=\"ml-auto d-flex\">\n      <div class=\"btn-group btn-group-sm\" role=\"group\">\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary\"\n          [ngClass]=\"{ active: status == null }\"\n          (click)=\"filter(null)\"\n        >\n          {{ \"all\" | i18n }}\n          <span bitBadge badgeType=\"info\" *ngIf=\"allCount\">{{ allCount }}</span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary\"\n          [ngClass]=\"{ active: status == userStatusType.Invited }\"\n          (click)=\"filter(userStatusType.Invited)\"\n        >\n          {{ \"invited\" | i18n }}\n          <span bitBadge badgeType=\"info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary\"\n          [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n          (click)=\"filter(userStatusType.Accepted)\"\n        >\n          {{ \"accepted\" | i18n }}\n          <span bitBadge badgeType=\"warning\" *ngIf=\"acceptedCount\">{{ acceptedCount }}</span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary\"\n          [ngClass]=\"{ active: status == userStatusType.Revoked }\"\n          (click)=\"filter(userStatusType.Revoked)\"\n        >\n          {{ \"revoked\" | i18n }}\n          <span bitBadge badgeType=\"info\" *ngIf=\"revokedCount\">{{ revokedCount }}</span>\n        </button>\n      </div>\n      <div class=\"ml-3\">\n        <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n        <input\n          type=\"search\"\n          class=\"form-control form-control-sm\"\n          id=\"search\"\n          placeholder=\"{{ 'search' | i18n }}\"\n          [(ngModel)]=\"searchText\"\n        />\n      </div>\n      <div class=\"dropdown ml-3\" appListDropdown>\n        <button\n          class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n          type=\"button\"\n          id=\"bulkActionsButton\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n        </button>\n        <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n          <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"reinviteSelected\" | i18n }}\n          </button>\n          <button\n            class=\"dropdown-item text-success\"\n            appStopClick\n            (click)=\"bulkConfirm()\"\n            *ngIf=\"showBulkConfirmUsers\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"confirmSelected\" | i18n }}\n          </button>\n          <button class=\"dropdown-item\" appStopClick (click)=\"bulkRestore()\">\n            <i class=\"bwi bwi-fw bwi-plus-circle\" aria-hidden=\"true\"></i>\n            {{ \"restoreAccess\" | i18n }}\n          </button>\n          <button class=\"dropdown-item\" appStopClick (click)=\"bulkRevoke()\">\n            <i class=\"bwi bwi-fw bwi-minus-circle\" aria-hidden=\"true\"></i>\n            {{ \"revokeAccess\" | i18n }}\n          </button>\n          <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n          <div class=\"dropdown-divider\"></div>\n          <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n            <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n            {{ \"selectAll\" | i18n }}\n          </button>\n          <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n            <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n            {{ \"unselectAll\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n        <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n        {{ \"inviteUser\" | i18n }}\n      </button>\n    </div>\n  </div>\n  <ng-container *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n  <ng-container\n    *ngIf=\"\n      !loading &&\n      (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n    \"\n  >\n    <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n    <ng-container *ngIf=\"searchedUsers.length\">\n      <app-callout\n        type=\"info\"\n        title=\"{{ 'confirmUsers' | i18n }}\"\n        icon=\"bwi bwi-check-circle\"\n        *ngIf=\"showConfirmUsers\"\n      >\n        {{ \"usersNeedConfirmed\" | i18n }}\n      </app-callout>\n      <table\n        class=\"table table-hover table-list\"\n        infiniteScroll\n        [infiniteScrollDistance]=\"1\"\n        [infiniteScrollDisabled]=\"!isPaging()\"\n        (scrolled)=\"loadMore()\"\n      >\n        <tbody>\n          <tr *ngFor=\"let u of searchedUsers\">\n            <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n              <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp />\n            </td>\n            <td width=\"30\">\n              <app-avatar\n                [data]=\"u | userName\"\n                [email]=\"u.email\"\n                size=\"25\"\n                [circle]=\"true\"\n                [fontSize]=\"14\"\n              >\n              </app-avatar>\n            </td>\n            <td>\n              <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n              <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n                \"invited\" | i18n\n              }}</span>\n              <span bitBadge badgeType=\"warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n                \"accepted\" | i18n\n              }}</span>\n              <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Revoked\">{{\n                \"revoked\" | i18n\n              }}</span>\n              <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n            </td>\n            <td>\n              <ng-container *ngIf=\"u.twoFactorEnabled\">\n                <i\n                  class=\"bwi bwi-lock\"\n                  title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"showEnrolledStatus(u)\">\n                <i\n                  class=\"bwi bwi-key\"\n                  title=\"{{ 'enrolledPasswordReset' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"enrolledPasswordReset\" | i18n }}</span>\n              </ng-container>\n            </td>\n            <td>\n              <span *ngIf=\"u.type === userType.Owner\">{{ \"owner\" | i18n }}</span>\n              <span *ngIf=\"u.type === userType.Admin\">{{ \"admin\" | i18n }}</span>\n              <span *ngIf=\"u.type === userType.Manager\">{{ \"manager\" | i18n }}</span>\n              <span *ngIf=\"u.type === userType.User\">{{ \"user\" | i18n }}</span>\n              <span *ngIf=\"u.type === userType.Custom\">{{ \"custom\" | i18n }}</span>\n            </td>\n            <td class=\"table-list-options\">\n              <div class=\"dropdown\" appListDropdown>\n                <button\n                  class=\"btn btn-outline-secondary dropdown-toggle\"\n                  type=\"button\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                  appA11yTitle=\"{{ 'options' | i18n }}\"\n                >\n                  <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n                </button>\n                <div class=\"dropdown-menu dropdown-menu-right\">\n                  <a\n                    class=\"dropdown-item\"\n                    href=\"#\"\n                    appStopClick\n                    (click)=\"reinvite(u)\"\n                    *ngIf=\"u.status === userStatusType.Invited\"\n                  >\n                    <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                    {{ \"resendInvitation\" | i18n }}\n                  </a>\n                  <a\n                    class=\"dropdown-item text-success\"\n                    href=\"#\"\n                    appStopClick\n                    (click)=\"confirm(u)\"\n                    *ngIf=\"u.status === userStatusType.Accepted\"\n                  >\n                    <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                    {{ \"confirm\" | i18n }}\n                  </a>\n                  <a\n                    class=\"dropdown-item\"\n                    href=\"#\"\n                    appStopClick\n                    (click)=\"groups(u)\"\n                    *ngIf=\"accessGroups\"\n                  >\n                    <i class=\"bwi bwi-fw bwi-sitemap\" aria-hidden=\"true\"></i>\n                    {{ \"groups\" | i18n }}\n                  </a>\n                  <a\n                    class=\"dropdown-item\"\n                    href=\"#\"\n                    appStopClick\n                    (click)=\"events(u)\"\n                    *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"\n                  >\n                    <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                    {{ \"eventLogs\" | i18n }}\n                  </a>\n                  <a\n                    class=\"dropdown-item\"\n                    href=\"#\"\n                    appStopClick\n                    (click)=\"resetPassword(u)\"\n                    *ngIf=\"allowResetPassword(u)\"\n                  >\n                    <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n                    {{ \"resetPassword\" | i18n }}\n                  </a>\n                  <a\n                    class=\"dropdown-item\"\n                    href=\"#\"\n                    appStopClick\n                    (click)=\"restore(u)\"\n                    *ngIf=\"u.status === userStatusType.Revoked\"\n                  >\n                    <i class=\"bwi bwi-fw bwi-plus-circle\" aria-hidden=\"true\"></i>\n                    {{ \"restoreAccess\" | i18n }}\n                  </a>\n                  <a\n                    class=\"dropdown-item\"\n                    href=\"#\"\n                    appStopClick\n                    (click)=\"revoke(u)\"\n                    *ngIf=\"u.status !== userStatusType.Revoked\"\n                  >\n                    <i class=\"bwi bwi-fw bwi-minus-circle\" aria-hidden=\"true\"></i>\n                    {{ \"revokeAccess\" | i18n }}\n                  </a>\n                  <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                    <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                    {{ \"remove\" | i18n }}\n                  </a>\n                </div>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </ng-container>\n  </ng-container>\n  <ng-template #addEdit></ng-template>\n  <ng-template #groupsTemplate></ng-template>\n  <ng-template #eventsTemplate></ng-template>\n  <ng-template #confirmTemplate></ng-template>\n  <ng-template #resetPasswordTemplate></ng-template>\n  <ng-template #bulkStatusTemplate></ng-template>\n  <ng-template #bulkConfirmTemplate></ng-template>\n  <ng-template #bulkRemoveTemplate></ng-template>\n</div>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organizationKeysRequest\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"@bitwarden/common/models/request/organizationUserConfirmRequest\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { OrganizationUserBulkResponse } from \"@bitwarden/common/models/response/organizationUserBulkResponse\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/models/response/organizationUserResponse\";\n\nimport { BasePeopleComponent } from \"../../common/base.people.component\";\n\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { BulkRestoreRevokeComponent } from \"./bulk/bulk-restore-revoke.component\";\nimport { BulkStatusComponent } from \"./bulk/bulk-status.component\";\nimport { EntityEventsComponent } from \"./entity-events.component\";\nimport { ResetPasswordComponent } from \"./reset-password.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\nimport { UserGroupsComponent } from \"./user-groups.component\";\n\n@Component({\n  selector: \"app-org-people\",\n  templateUrl: \"people.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PeopleComponent\n  extends BasePeopleComponent<OrganizationUserUserDetailsResponse>\n  implements OnInit\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n  @ViewChild(\"resetPasswordTemplate\", { read: ViewContainerRef, static: true })\n  resetPasswordModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = OrganizationUserType;\n  userStatusType = OrganizationUserStatusType;\n\n  organizationId: string;\n  status: OrganizationUserStatusType = null;\n  accessEvents = false;\n  accessGroups = false;\n  canResetPassword = false; // User permission (admin/custom)\n  orgUseResetPassword = false; // Org plan ability\n  orgHasKeys = false; // Org public/private keys\n  orgResetPasswordPolicyEnabled = false;\n  callingUserType: OrganizationUserType = null;\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    private router: Router,\n    searchService: SearchService,\n    validationService: ValidationService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    private syncService: SyncService,\n    stateService: StateService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      const organization = await this.organizationService.get(this.organizationId);\n      this.accessEvents = organization.useEvents;\n      this.accessGroups = organization.useGroups;\n      this.canResetPassword = organization.canManageUsersPassword;\n      this.orgUseResetPassword = organization.useResetPassword;\n      this.callingUserType = organization.type;\n      this.orgHasKeys = organization.hasPublicAndPrivateKeys;\n\n      // Backfill pub/priv key if necessary\n      if (this.canResetPassword && !this.orgHasKeys) {\n        const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n        const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n        const response = await this.organizationApiService.updateKeys(this.organizationId, request);\n        if (response != null) {\n          this.orgHasKeys = response.publicKey != null && response.privateKey != null;\n          await this.syncService.fullSync(true); // Replace oganizations with new data\n        } else {\n          throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n        }\n      }\n\n      await this.load();\n\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n        if (qParams.viewEvents != null) {\n          const user = this.users.filter((u) => u.id === qParams.viewEvents);\n          if (user.length > 0 && user[0].status === OrganizationUserStatusType.Confirmed) {\n            this.events(user[0]);\n          }\n        }\n      });\n    });\n  }\n\n  async load() {\n    const resetPasswordPolicy = await this.policyApiService.getPolicyForOrganization(\n      PolicyType.ResetPassword,\n      this.organizationId\n    );\n    this.orgResetPasswordPolicyEnabled = resetPasswordPolicy?.enabled;\n    super.load();\n  }\n\n  getUsers(): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    return this.apiService.getOrganizationUsers(this.organizationId);\n  }\n\n  deleteUser(id: string): Promise<void> {\n    return this.apiService.deleteOrganizationUser(this.organizationId, id);\n  }\n\n  revokeUser(id: string): Promise<void> {\n    return this.apiService.revokeOrganizationUser(this.organizationId, id);\n  }\n\n  restoreUser(id: string): Promise<void> {\n    return this.apiService.restoreOrganizationUser(this.organizationId, id);\n  }\n\n  reinviteUser(id: string): Promise<void> {\n    return this.apiService.postOrganizationUserReinvite(this.organizationId, id);\n  }\n\n  async confirmUser(\n    user: OrganizationUserUserDetailsResponse,\n    publicKey: Uint8Array\n  ): Promise<void> {\n    const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n    const key = await this.cryptoService.rsaEncrypt(orgKey.key, publicKey.buffer);\n    const request = new OrganizationUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.apiService.postOrganizationUserConfirm(this.organizationId, user.id, request);\n  }\n\n  allowResetPassword(orgUser: OrganizationUserUserDetailsResponse): boolean {\n    // Hierarchy check\n    let callingUserHasPermission = false;\n\n    switch (this.callingUserType) {\n      case OrganizationUserType.Owner:\n        callingUserHasPermission = true;\n        break;\n      case OrganizationUserType.Admin:\n        callingUserHasPermission = orgUser.type !== OrganizationUserType.Owner;\n        break;\n      case OrganizationUserType.Custom:\n        callingUserHasPermission =\n          orgUser.type !== OrganizationUserType.Owner &&\n          orgUser.type !== OrganizationUserType.Admin;\n        break;\n    }\n\n    // Final\n    return (\n      this.canResetPassword &&\n      callingUserHasPermission &&\n      this.orgUseResetPassword &&\n      this.orgHasKeys &&\n      orgUser.resetPasswordEnrolled &&\n      this.orgResetPasswordPolicyEnabled &&\n      orgUser.status === OrganizationUserStatusType.Confirmed\n    );\n  }\n\n  showEnrolledStatus(orgUser: OrganizationUserUserDetailsResponse): boolean {\n    return (\n      this.orgUseResetPassword &&\n      orgUser.resetPasswordEnrolled &&\n      this.orgResetPasswordPolicyEnabled\n    );\n  }\n\n  async edit(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organizationId;\n        comp.organizationUserId = user != null ? user.id : null;\n        comp.usesKeyConnector = user?.usesKeyConnector;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onRevokedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onRestoredUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n\n  async groups(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserGroupsComponent,\n      this.groupsModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organizationId;\n        comp.organizationUserId = user != null ? user.id : null;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkRevoke() {\n    await this.bulkRevokeOrRestore(true);\n  }\n\n  async bulkRestore() {\n    await this.bulkRevokeOrRestore(false);\n  }\n\n  async bulkRevokeOrRestore(isRevoking: boolean) {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const ref = this.modalService.open(BulkRestoreRevokeComponent, {\n      allowMultipleModals: true,\n      data: {\n        organizationId: this.organizationId,\n        users: this.getCheckedUsers(),\n        isRevoking: isRevoking,\n      },\n    });\n\n    await ref.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === OrganizationUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const request = new OrganizationUserBulkRequest(filteredUsers.map((user) => user.id));\n      const response = this.apiService.postManyOrganizationUserReinvite(\n        this.organizationId,\n        request\n      );\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async events(user: OrganizationUserUserDetailsResponse) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = this.userNamePipe.transform(user);\n      comp.organizationId = this.organizationId;\n      comp.entityId = user.id;\n      comp.showUser = false;\n      comp.entity = \"user\";\n    });\n  }\n\n  async resetPassword(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      ResetPasswordComponent,\n      this.resetPasswordModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.email = user != null ? user.email : null;\n        comp.organizationId = this.organizationId;\n        comp.id = user != null ? user.id : null;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onPasswordReset.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n\n  protected async removeUserConfirmationDialog(user: OrganizationUserUserDetailsResponse) {\n    const warningMessage = user.usesKeyConnector\n      ? this.i18nService.t(\"removeUserConfirmationKeyConnector\")\n      : this.i18nService.t(\"removeOrgUserConfirmation\");\n\n    return this.platformUtilsService.showDialog(\n      warningMessage,\n      this.i18nService.t(\"removeUserIdAccess\", this.userNamePipe.transform(user)),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n  }\n\n  private async showBulkStatus(\n    users: OrganizationUserUserDetailsResponse[],\n    filteredUsers: OrganizationUserUserDetailsResponse[],\n    request: Promise<ListResponse<OrganizationUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          // eslint-disable-next-line\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id), // eslint-disable-line\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { GetOrgNameFromIdPipe } from \"./get-organization-name.pipe\";\n\n@NgModule({\n  declarations: [GetOrgNameFromIdPipe],\n  exports: [GetOrgNameFromIdPipe],\n})\nexport class PipesModule {}\n","import { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\n\nexport class VaultService {\n  calculateSearchBarLocalizationString(vaultFilter: VaultFilter): string {\n    if (vaultFilter.status === \"favorites\") {\n      return \"searchFavorites\";\n    }\n    if (vaultFilter.status === \"trash\") {\n      return \"searchTrash\";\n    }\n    if (vaultFilter.cipherType != null) {\n      return \"searchType\";\n    }\n    if (vaultFilter.selectedFolderId != null && vaultFilter.selectedFolderId != \"none\") {\n      return \"searchFolder\";\n    }\n    if (vaultFilter.selectedCollection) {\n      return \"searchCollection\";\n    }\n    if (vaultFilter.selectedOrganizationId != null) {\n      return \"searchOrganization\";\n    }\n    if (vaultFilter.myVaultOnly) {\n      return \"searchMyVault\";\n    }\n\n    return \"searchVault\";\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\nimport { LooseComponentsModule } from \"../../shared/loose-components.module\";\nimport { VaultFilterModule } from \"../vault-filter/vault-filter.module\";\n\nimport { PipesModule } from \"./pipes/pipes.module\";\nimport { VaultService } from \"./vault.service\";\n\n@NgModule({\n  imports: [SharedModule, VaultFilterModule, LooseComponentsModule, PipesModule],\n  exports: [SharedModule, VaultFilterModule, LooseComponentsModule, PipesModule],\n  providers: [\n    {\n      provide: VaultService,\n      useClass: VaultService,\n    },\n  ],\n})\nexport class VaultSharedModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { VaultFilterSharedModule } from \"../../../vault/vault-filter/shared/vault-filter-shared.module\";\n\nimport { VaultFilterComponent } from \"./vault-filter.component\";\n\n@NgModule({\n  imports: [VaultFilterSharedModule],\n  declarations: [VaultFilterComponent],\n  exports: [VaultFilterComponent],\n})\nexport class VaultFilterModule {}\n","import { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherStatus } from \"./cipher-status.model\";\n\nexport type VaultFilterFunction = (cipher: CipherView) => boolean;\n\nexport class VaultFilter {\n  cipherType?: CipherType;\n  selectedCollection = false; // This is needed because of how the \"Unassigned\" collection works. It has a null id.\n  selectedCollectionId?: string;\n  status?: CipherStatus;\n  selectedFolder = false; // This is needed because of how the \"No Folder\" folder works. It has a null id.\n  selectedFolderId?: string;\n  selectedOrganizationId?: string;\n  myVaultOnly = false;\n  refreshCollectionsAndFolders = false;\n\n  constructor(init?: Partial<VaultFilter>) {\n    Object.assign(this, init);\n  }\n\n  resetFilter() {\n    this.cipherType = null;\n    this.status = null;\n    this.selectedCollection = false;\n    this.selectedCollectionId = null;\n    this.selectedFolder = false;\n    this.selectedFolderId = null;\n  }\n\n  resetOrganization() {\n    this.myVaultOnly = false;\n    this.selectedOrganizationId = null;\n    this.resetFilter();\n  }\n\n  buildFilter(): VaultFilterFunction {\n    return (cipher) => {\n      let cipherPassesFilter = true;\n      if (this.status === \"favorites\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.favorite;\n      }\n      if (this.status === \"trash\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.isDeleted;\n      }\n      if (this.cipherType != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.type === this.cipherType;\n      }\n      if (this.selectedFolder && this.selectedFolderId == null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId == null;\n      }\n      if (this.selectedFolder && this.selectedFolderId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId === this.selectedFolderId;\n      }\n      if (this.selectedCollection && this.selectedCollectionId == null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.organizationId != null &&\n          (cipher.collectionIds == null || cipher.collectionIds.length === 0);\n      }\n      if (this.selectedCollection && this.selectedCollectionId != null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.collectionIds != null && cipher.collectionIds.includes(this.selectedCollectionId);\n      }\n      if (this.selectedOrganizationId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === this.selectedOrganizationId;\n      }\n      if (this.myVaultOnly && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === null;\n      }\n      return cipherPassesFilter;\n    };\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/encArrayBuffer\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n      this.fileDownloadService.download({\n        fileName: attachment.fileName,\n        blobData: decBuf,\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const encBuf = await EncArrayBuffer.fromResponse(response);\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"attachmentsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"attachmentsTitle\">\n          {{ \"attachments\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <table class=\"table table-hover table-list\" *ngIf=\"cipher && cipher.hasAttachments\">\n          <tbody>\n            <tr *ngFor=\"let a of cipher.attachments\">\n              <td class=\"table-list-icon\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"!a.downloading\" aria-hidden=\"true\"></i>\n                <i\n                  class=\"bwi bwi-spinner bwi-lg bwi-fw bwi-spin\"\n                  *ngIf=\"a.downloading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </td>\n              <td class=\"wrap\">\n                <div class=\"d-flex\">\n                  <a href=\"#\" appStopClick (click)=\"download(a)\">{{ a.fileName }}</a>\n                  <div *ngIf=\"showFixOldAttachments(a)\" class=\"ml-2\">\n                    <a\n                      href=\"https://bitwarden.com/help/attachments/#fixing-old-attachments\"\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      <i\n                        class=\"bwi bwi-exclamation-triangle text-warning\"\n                        title=\"{{ 'attachmentFixDesc' | i18n }}\"\n                        aria-hidden=\"true\"\n                      ></i>\n                      <span class=\"sr-only\">{{ \"attachmentFixDesc\" | i18n }}</span></a\n                    >\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-primary btn-sm m-0 py-0 px-2\"\n                      (click)=\"reupload(a)\"\n                      #reuploadBtn\n                      [appApiAction]=\"reuploadPromises[a.id]\"\n                      [disabled]=\"reuploadBtn.loading\"\n                    >\n                      {{ \"fix\" | i18n }}\n                    </button>\n                  </div>\n                </div>\n                <small>{{ a.sizeName }}</small>\n              </td>\n              <td class=\"table-list-options\" *ngIf=\"!viewOnly\">\n                <button\n                  class=\"btn btn-outline-danger\"\n                  type=\"button\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'delete' | i18n }}\"\n                  (click)=\"delete(a)\"\n                  #deleteBtn\n                  [appApiAction]=\"deletePromises[a.id]\"\n                  [disabled]=\"deleteBtn.loading\"\n                >\n                  <i\n                    class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                    [hidden]=\"deleteBtn.loading\"\n                    aria-hidden=\"true\"\n                  ></i>\n                  <i\n                    class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                    [hidden]=\"!deleteBtn.loading\"\n                    title=\"{{ 'loading' | i18n }}\"\n                    aria-hidden=\"true\"\n                  ></i>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div *ngIf=\"!viewOnly\">\n          <h3>{{ \"newAttachment\" | i18n }}</h3>\n          <label for=\"file\" class=\"sr-only\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n          <small class=\"form-text text-muted\">{{ \"maxFileSize\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.showFixOldAttachments(attachment)) {\n      await this.reuploadCipherAttachment(attachment, false);\n    }\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.cipher.organizationId == null;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"../../vault/attachments.component\";\n\n@Component({\n  selector: \"app-org-vault-attachments\",\n  templateUrl: \"../../vault/attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n  organization: Organization;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      stateService,\n      platformUtilsService,\n      apiService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.organization.canEditAnyCollection && this.showFixOldAttachments(attachment)) {\n      await super.reuploadCipherAttachment(attachment, true);\n    }\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(\n      this.cipherDomain,\n      file,\n      this.organization.canEditAnyCollection\n    );\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipherAttachment(attachmentId);\n    }\n    return this.apiService.deleteCipherAttachmentAdmin(this.cipherId, attachmentId);\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.organization.canEditAnyCollection;\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Directive()\nexport class CiphersComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded = false;\n  ciphers: CipherView[] = [];\n  searchText: string;\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.loaded = false;\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"ellipsis\",\n})\nexport class EllipsisPipe implements PipeTransform {\n  transform(value: string, limit = 25, completeWords = false, ellipsis = \"...\") {\n    if (value.length <= limit) {\n      return value;\n    }\n    limit -= ellipsis.length;\n    if (completeWords && value.length > limit && value.indexOf(\" \") > 0) {\n      limit = value.substring(0, limit).lastIndexOf(\" \");\n    }\n    return value.substring(0, limit) + ellipsis;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-org-badge\",\n  templateUrl: \"organization-name-badge.component.html\",\n})\nexport class OrganizationNameBadgeComponent implements OnInit {\n  @Input() organizationName: string;\n  @Input() profileName: string;\n\n  @Output() onOrganizationClicked = new EventEmitter<string>();\n\n  color: string;\n  textColor: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit(): void {\n    if (this.organizationName == null || this.organizationName === \"\") {\n      this.organizationName = this.i18nService.t(\"me\");\n      this.color = Utils.stringToColor(this.profileName.toUpperCase());\n    }\n    if (this.color == null) {\n      this.color = Utils.stringToColor(this.organizationName.toUpperCase());\n    }\n    this.textColor = Utils.pickTextColorBasedOnBgColor(this.color);\n  }\n\n  emitOnOrganizationClicked() {\n    this.onOrganizationClicked.emit();\n  }\n}\n","<button\n  bitBadge\n  [style.color]=\"textColor\"\n  [style.background-color]=\"color\"\n  appA11yTitle=\"{{ organizationName }}\"\n  (click)=\"emitOnOrganizationClicked()\"\n>\n  {{ organizationName | ellipsis: 13 }}\n</button>\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Pipe({\n  name: \"orgNameFromId\",\n  pure: true,\n})\nexport class GetOrgNameFromIdPipe implements PipeTransform {\n  transform(value: string, organizations: Organization[]) {\n    const orgName = organizations.find((o) => o.id === value)?.name;\n    return orgName;\n  }\n}\n","<ng-container *ngIf=\"isPaging() ? pagedCiphers : ciphers as filteredCiphers\">\n  <table\n    class=\"table table-hover table-list table-ciphers\"\n    *ngIf=\"filteredCiphers.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of filteredCiphers\">\n        <td (click)=\"checkCipher(c)\" class=\"table-list-checkbox\">\n          <input type=\"checkbox\" [(ngModel)]=\"c.checked\" appStopProp />\n        </td>\n        <td (click)=\"checkCipher(c)\" class=\"table-list-icon\">\n          <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n        </td>\n        <td (click)=\"checkCipher(c)\" class=\"reduced-lh wrap\">\n          <a\n            appStopProp\n            [routerLink]=\"[]\"\n            [queryParams]=\"{ itemId: c.id }\"\n            queryParamsHandling=\"merge\"\n            title=\"{{ 'editItem' | i18n }}\"\n            >{{ c.name }}</a\n          >\n          <ng-container *ngIf=\"c.hasAttachments\">\n            <i\n              class=\"bwi bwi-paperclip\"\n              appStopProp\n              title=\"{{ 'attachments' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            <ng-container *ngIf=\"showFixOldAttachments(c)\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-warning\"\n                appStopProp\n                title=\"{{ 'attachmentsNeedFix' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachmentsNeedFix\" | i18n }}</span>\n            </ng-container>\n          </ng-container>\n          <br />\n          <small appStopProp>{{ c.subTitle }}</small>\n        </td>\n        <td *ngIf=\"organizations.length > 0 && !organization\" class=\"tw-w-28\">\n          <app-org-badge\n            organizationName=\"{{ c.organizationId | orgNameFromId: organizations }}\"\n            profileName=\"{{ profileName }}\"\n            (onOrganizationClicked)=\"onOrganizationClicked(c.organizationId)\"\n          >\n          </app-org-badge>\n        </td>\n        <td class=\"table-list-options\">\n          <button\n            [bitMenuTriggerFor]=\"cipherOptions\"\n            class=\"tw-border-none tw-bg-transparent tw-text-main\"\n            type=\"button\"\n            appA11yTitle=\"{{ 'options' | i18n }}\"\n          >\n            <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <bit-menu #cipherOptions>\n            <ng-container *ngIf=\"c.type === cipherType.Login && !c.isDeleted\">\n              <button bitMenuItem (click)=\"copy(c, c.login.username, 'username', 'Username')\">\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyUsername\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"copy(c, c.login.password, 'password', 'Password')\"\n                *ngIf=\"c.viewPassword\"\n              >\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyPassword\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"copy(c, c.login.totp, 'verificationCodeTotp', 'TOTP')\"\n                *ngIf=\"displayTotpCopyButton(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyVerificationCode\" | i18n }}\n              </button>\n              <button bitMenuItem *ngIf=\"c.login.canLaunch\" (click)=\"launch(c.login.launchUri)\">\n                <i class=\"bwi bwi-fw bwi-share-square\" aria-hidden=\"true\"></i>\n                {{ \"launch\" | i18n }}\n              </button>\n            </ng-container>\n            <button bitMenuItem (click)=\"attachments(c)\">\n              <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n              {{ \"attachments\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"((!organization && !c.organizationId) || organization) && !c.isDeleted\"\n              (click)=\"clone(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-files\" aria-hidden=\"true\"></i>\n              {{ \"clone\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"!organization && !c.organizationId && !c.isDeleted\"\n              (click)=\"share(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n              {{ \"moveToOrganization\" | i18n }}\n            </button>\n            <button bitMenuItem *ngIf=\"c.organizationId && !c.isDeleted\" (click)=\"collections(c)\">\n              <i class=\"bwi bwi-fw bwi-collection\" aria-hidden=\"true\"></i>\n              {{ \"collections\" | i18n }}\n            </button>\n            <button bitMenuItem *ngIf=\"c.organizationId && accessEvents\" (click)=\"events(c)\">\n              <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n              {{ \"eventLogs\" | i18n }}\n            </button>\n            <button bitMenuItem (click)=\"restore(c)\" *ngIf=\"c.isDeleted\">\n              <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n              {{ \"restore\" | i18n }}\n            </button>\n            <button bitMenuItem (click)=\"delete(c)\">\n              <span class=\"tw-text-danger\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ (c.isDeleted ? \"permanentlyDelete\" : \"delete\") | i18n }}\n              </span>\n            </button>\n          </bit-menu>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div class=\"no-items\" *ngIf=\"!filteredCiphers.length\">\n    <ng-container *ngIf=\"!loaded\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </ng-container>\n    <ng-container *ngIf=\"loaded\">\n      <img class=\"no-items-image\" aria-hidden=\"true\" />\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button (click)=\"addCipher()\" class=\"btn btn-outline-primary\" *ngIf=\"showAddNew\">\n        <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"addItem\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n</ng-container>\n","import { Component, EventEmitter, Input, OnDestroy, Output } from \"@angular/core\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"@bitwarden/angular/components/ciphers.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nconst MaxCheckedCount = 500;\n\n@Component({\n  selector: \"app-vault-ciphers\",\n  templateUrl: \"ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnDestroy {\n  @Input() showAddNew = true;\n  @Output() onAttachmentsClicked = new EventEmitter<CipherView>();\n  @Output() onShareClicked = new EventEmitter<CipherView>();\n  @Output() onCollectionsClicked = new EventEmitter<CipherView>();\n  @Output() onCloneClicked = new EventEmitter<CipherView>();\n  @Output() onOrganzationBadgeClicked = new EventEmitter<string>();\n\n  pagedCiphers: CipherView[] = [];\n  pageSize = 200;\n  cipherType = CipherType;\n  actionPromise: Promise<any>;\n  userHasPremiumAccess = false;\n  organizations: Organization[] = [];\n  profileName: string;\n\n  private didScroll = false;\n  private pagedCiphersCount = 0;\n  private refreshing = false;\n\n  constructor(\n    searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cipherService: CipherService,\n    protected eventService: EventService,\n    protected totpService: TotpService,\n    protected stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private tokenService: TokenService\n  ) {\n    super(searchService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  // load() is called after the page loads and the first sync has completed.\n  // Do not use ngOnInit() for anything that requires sync data.\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    await super.load(filter, deleted);\n    this.profileName = await this.tokenService.getName();\n    this.organizations = await this.organizationService.getAll();\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  loadMore() {\n    if (this.ciphers.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCiphers.length;\n    let pagedSize = this.pageSize;\n    if (this.refreshing && pagedLength === 0 && this.pagedCiphersCount > this.pageSize) {\n      pagedSize = this.pagedCiphersCount;\n    }\n    if (this.ciphers.length > pagedLength) {\n      this.pagedCiphers = this.pagedCiphers.concat(\n        this.ciphers.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCiphersCount = this.pagedCiphers.length;\n    this.didScroll = this.pagedCiphers.length > this.pageSize;\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter, this.deleted);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.ciphers.length > this.pageSize;\n  }\n\n  async resetPaging() {\n    this.pagedCiphers = [];\n    this.loadMore();\n  }\n\n  async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n    this.resetPaging();\n  }\n\n  launch(uri: string) {\n    this.platformUtilsService.launchUri(uri);\n  }\n\n  async attachments(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onAttachmentsClicked.emit(c);\n  }\n\n  async share(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onShareClicked.emit(c);\n  }\n\n  collections(c: CipherView) {\n    this.onCollectionsClicked.emit(c);\n  }\n\n  async clone(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onCloneClicked.emit(c);\n  }\n\n  async delete(c: CipherView): Promise<boolean> {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    if (this.actionPromise != null) {\n      return;\n    }\n    const permanent = c.isDeleted;\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        permanent ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(permanent ? \"permanentlyDeleteItem\" : \"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.deleteCipher(c.id, permanent);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(permanent ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async restore(c: CipherView): Promise<boolean> {\n    if (this.actionPromise != null || !c.isDeleted) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.cipherService.restoreWithServer(c.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.repromptCipher(cipher))\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (value === cipher.login.totp) {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n    const selectCount =\n      select && this.ciphers.length > MaxCheckedCount ? MaxCheckedCount : this.ciphers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkCipher(this.ciphers[i], select);\n    }\n  }\n\n  checkCipher(c: CipherView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  getSelected(): CipherView[] {\n    if (this.ciphers == null) {\n      return [];\n    }\n    return this.ciphers.filter((c) => !!(c as any).checked);\n  }\n\n  getSelectedIds(): string[] {\n    return this.getSelected().map((c) => c.id);\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (await this.repromptCipher(cipher)) {\n      super.selectCipher(cipher);\n    }\n  }\n\n  onOrganizationClicked(organizationId: string) {\n    this.onOrganzationBadgeClicked.emit(organizationId);\n  }\n\n  protected deleteCipher(id: string, permanent: boolean) {\n    return permanent\n      ? this.cipherService.deleteWithServer(id)\n      : this.cipherService.softDeleteWithServer(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return c.hasOldAttachments && c.organizationId == null;\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"../../vault/ciphers.component\";\n\n@Component({\n  selector: \"app-org-vault-ciphers\",\n  templateUrl: \"../../vault/ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent {\n  @Output() onEventsClicked = new EventEmitter<CipherView>();\n\n  organization: Organization;\n  accessEvents = false;\n\n  protected allCiphers: CipherView[] = [];\n\n  constructor(\n    searchService: SearchService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cipherService: CipherService,\n    eventService: EventService,\n    totpService: TotpService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService,\n    stateService: StateService,\n    organizationService: OrganizationService,\n    tokenService: TokenService,\n    private apiService: ApiService\n  ) {\n    super(\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cipherService,\n      eventService,\n      totpService,\n      stateService,\n      passwordRepromptService,\n      logService,\n      organizationService,\n      tokenService\n    );\n  }\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    if (this.organization.canEditAnyCollection) {\n      this.accessEvents = this.organization.useEvents;\n      this.allCiphers = await this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    } else {\n      this.allCiphers = (await this.cipherService.getAllDecrypted()).filter(\n        (c) => c.organizationId === this.organization.id\n      );\n    }\n    await this.searchService.indexCiphers(this.organization.id, this.allCiphers);\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    if (this.organization.canViewAllCollections) {\n      await super.applyFilter(filter);\n    } else {\n      const f = (c: CipherView) =>\n        c.organizationId === this.organization.id && (filter == null || filter(c));\n      await super.applyFilter(f);\n    }\n  }\n\n  async search(timeout: number = null) {\n    await super.search(timeout, this.allCiphers);\n  }\n  events(c: CipherView) {\n    this.onEventsClicked.emit(c);\n  }\n\n  protected deleteCipher(id: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher(id, this.deleted);\n    }\n    return this.deleted\n      ? this.apiService.deleteCipherAdmin(id)\n      : this.apiService.putDeleteCipherAdmin(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return this.organization.canEditAnyCollection && c.hasOldAttachments;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"collectionsTitle\">\n          {{ \"collections\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"collectionsDesc\" | i18n }}</p>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"@bitwarden/angular/components/collections.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherCollectionsRequest } from \"@bitwarden/common/models/request/cipherCollectionsRequest\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"../../vault/collections.component\";\n\n@Component({\n  selector: \"app-org-vault-collections\",\n  templateUrl: \"../../vault/collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  organization: Organization;\n\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private apiService: ApiService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n    this.allowSelectNone = true;\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canViewAllCollections) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected loadCipherCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCipherCollections();\n    }\n    return this.collectionIds;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected saveCollections() {\n    if (this.organization.canEditAnyCollection) {\n      const request = new CipherCollectionsRequest(this.cipherDomain.collectionIds);\n      return this.apiService.putCipherCollectionsAdmin(this.cipherId, request);\n    } else {\n      return super.saveCollections();\n    }\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, Observable } from \"rxjs\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\nimport { VaultFilterService } from \"../services/vault-filter.service\";\n\n@Directive()\nexport class VaultFilterComponent implements OnInit {\n  @Input() activeFilter: VaultFilter = new VaultFilter();\n  @Input() hideFolders = false;\n  @Input() hideCollections = false;\n  @Input() hideFavorites = false;\n  @Input() hideTrash = false;\n  @Input() hideOrganizations = false;\n\n  @Output() onFilterChange = new EventEmitter<VaultFilter>();\n  @Output() onAddFolder = new EventEmitter<never>();\n  @Output() onEditFolder = new EventEmitter<FolderView>();\n\n  isLoaded = false;\n  collapsedFilterNodes: Set<string>;\n  organizations: Organization[];\n  activePersonalOwnershipPolicy: boolean;\n  activeSingleOrganizationPolicy: boolean;\n  collections: DynamicTreeNode<CollectionView>;\n  folders$: Observable<DynamicTreeNode<FolderView>>;\n\n  constructor(protected vaultFilterService: VaultFilterService) {}\n\n  get displayCollections() {\n    return this.collections?.fullList != null && this.collections.fullList.length > 0;\n  }\n\n  async ngOnInit(): Promise<void> {\n    this.collapsedFilterNodes = await this.vaultFilterService.buildCollapsedFilterNodes();\n    this.organizations = await this.vaultFilterService.buildOrganizations();\n    if (this.organizations != null && this.organizations.length > 0) {\n      this.activePersonalOwnershipPolicy =\n        await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n      this.activeSingleOrganizationPolicy =\n        await this.vaultFilterService.checkForSingleOrganizationPolicy();\n    }\n    this.folders$ = await this.vaultFilterService.buildNestedFolders();\n    this.collections = await this.initCollections();\n    this.isLoaded = true;\n  }\n\n  // overwritten in web for organization vaults\n  async initCollections() {\n    return await this.vaultFilterService.buildCollections();\n  }\n\n  async toggleFilterNodeCollapseState(node: ITreeNodeObject) {\n    if (this.collapsedFilterNodes.has(node.id)) {\n      this.collapsedFilterNodes.delete(node.id);\n    } else {\n      this.collapsedFilterNodes.add(node.id);\n    }\n    await this.vaultFilterService.storeCollapsedFilterNodes(this.collapsedFilterNodes);\n  }\n\n  async applyFilter(filter: VaultFilter) {\n    if (filter.refreshCollectionsAndFolders) {\n      await this.reloadCollectionsAndFolders(filter);\n      filter = await this.pruneInvalidatedFilterSelections(filter);\n    }\n    this.onFilterChange.emit(filter);\n  }\n\n  async reloadCollectionsAndFolders(filter: VaultFilter) {\n    this.folders$ = await this.vaultFilterService.buildNestedFolders(filter.selectedOrganizationId);\n    this.collections = filter.myVaultOnly\n      ? null\n      : await this.vaultFilterService.buildCollections(filter.selectedOrganizationId);\n  }\n\n  async reloadOrganizations() {\n    this.organizations = await this.vaultFilterService.buildOrganizations();\n    this.activePersonalOwnershipPolicy =\n      await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n    this.activeSingleOrganizationPolicy =\n      await this.vaultFilterService.checkForSingleOrganizationPolicy();\n  }\n\n  addFolder() {\n    this.onAddFolder.emit();\n  }\n\n  editFolder(folder: FolderView) {\n    this.onEditFolder.emit(folder);\n  }\n\n  protected async pruneInvalidatedFilterSelections(filter: VaultFilter): Promise<VaultFilter> {\n    filter = await this.pruneInvalidFolderSelection(filter);\n    filter = this.pruneInvalidCollectionSelection(filter);\n    return filter;\n  }\n\n  protected async pruneInvalidFolderSelection(filter: VaultFilter): Promise<VaultFilter> {\n    if (\n      filter.selectedFolder &&\n      !(await firstValueFrom(this.folders$))?.hasId(filter.selectedFolderId)\n    ) {\n      filter.selectedFolder = false;\n      filter.selectedFolderId = null;\n    }\n    return filter;\n  }\n\n  protected pruneInvalidCollectionSelection(filter: VaultFilter): VaultFilter {\n    if (\n      filter.myVaultOnly ||\n      (filter.selectedCollection &&\n        filter.selectedCollectionId != null &&\n        !this.collections?.hasId(filter.selectedCollectionId))\n    ) {\n      filter.selectedCollection = false;\n      filter.selectedCollectionId = null;\n    }\n    return filter;\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class CollectionFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() collectionNodes: DynamicTreeNode<CollectionView>;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  readonly collectionsGrouping: TopLevelTreeNode = {\n    id: \"collections\",\n    name: \"collections\",\n  };\n\n  get collections() {\n    return this.collectionNodes?.fullList;\n  }\n\n  get nestedCollections() {\n    return this.collectionNodes?.nestedList;\n  }\n\n  get show() {\n    return !this.hide && this.collections != null && this.collections.length > 0;\n  }\n\n  isCollapsed(node: ITreeNodeObject) {\n    return this.collapsedFilterNodes.has(node.id);\n  }\n\n  applyFilter(collection: CollectionView) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.selectedCollection = true;\n    this.activeFilter.selectedCollectionId = collection.id;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  async toggleCollapse(node: ITreeNodeObject) {\n    this.onNodeCollapseStateChange.emit(node);\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <div class=\"filter-heading\">\n    <button\n      (click)=\"toggleCollapse(collectionsGrouping)\"\n      [attr.aria-expanded]=\"!isCollapsed(collectionsGrouping)\"\n      aria-controls=\"collection-filters\"\n      title=\"{{ 'toggleCollapse' | i18n }}\"\n      class=\"toggle-button\"\n    >\n      <i\n        class=\"bwi bwi-fw\"\n        [ngClass]=\"{\n          'bwi-angle-right': isCollapsed(collectionsGrouping),\n          'bwi-angle-down': !isCollapsed(collectionsGrouping)\n        }\"\n        aria-hidden=\"true\"\n      ></i>\n    </button>\n    <h3 class=\"filter-title\">&nbsp;{{ collectionsGrouping.name | i18n }}</h3>\n  </div>\n  <ul id=\"collection-filters\" *ngIf=\"!isCollapsed(collectionsGrouping)\" class=\"filter-options\">\n    <ng-template #recursiveCollections let-collections>\n      <li\n        *ngFor=\"let c of collections\"\n        [ngClass]=\"{\n          active: c.node.id === activeFilter.selectedCollectionId && activeFilter.selectedCollection\n        }\"\n        class=\"filter-option\"\n      >\n        <span class=\"filter-buttons\">\n          <button\n            class=\"toggle-button\"\n            *ngIf=\"c.children.length\"\n            (click)=\"toggleCollapse(c.node)\"\n            title=\"{{ 'toggleCollapse' | i18n }}\"\n            [attr.aria-expanded]=\"!isCollapsed(c.node)\"\n            [attr.aria-controls]=\"c.node.name + '_children'\"\n          >\n            <i\n              class=\"bwi bwi-fw\"\n              [ngClass]=\"{\n                'bwi-angle-right': isCollapsed(c.node),\n                'bwi-angle-down': !isCollapsed(c.node)\n              }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button class=\"filter-button\" (click)=\"applyFilter(c.node)\">\n            <i\n              *ngIf=\"c.children.length === 0\"\n              class=\"bwi bwi-collection bwi-fw\"\n              aria-hidden=\"true\"\n            ></i\n            >&nbsp;{{ c.node.name }}\n          </button>\n        </span>\n        <ul\n          [id]=\"c.node.name + '_children'\"\n          class=\"nested-filter-options\"\n          *ngIf=\"c.children.length && !isCollapsed(c.node)\"\n        >\n          <ng-container\n            *ngTemplateOutlet=\"recursiveCollections; context: { $implicit: c.children }\"\n          >\n          </ng-container>\n        </ul>\n      </li>\n    </ng-template>\n    <ng-container\n      *ngTemplateOutlet=\"recursiveCollections; context: { $implicit: nestedCollections }\"\n    >\n    </ng-container>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { CollectionFilterComponent as BaseCollectionFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/collection-filter.component\";\n\n@Component({\n  selector: \"app-collection-filter\",\n  templateUrl: \"collection-filter.component.html\",\n})\nexport class CollectionFilterComponent extends BaseCollectionFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class FolderFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() folderNodes: DynamicTreeNode<FolderView>;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n  @Output() onAddFolder = new EventEmitter();\n  @Output() onEditFolder = new EventEmitter<FolderView>();\n\n  get folders() {\n    return this.folderNodes?.fullList;\n  }\n\n  get nestedFolders() {\n    return this.folderNodes?.nestedList;\n  }\n\n  readonly foldersGrouping: TopLevelTreeNode = {\n    id: \"folders\",\n    name: \"folders\",\n  };\n\n  applyFilter(folder: FolderView) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.selectedFolder = true;\n    this.activeFilter.selectedFolderId = folder.id;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  addFolder() {\n    this.onAddFolder.emit();\n  }\n\n  editFolder(folder: FolderView) {\n    this.onEditFolder.emit(folder);\n  }\n\n  isCollapsed(node: ITreeNodeObject) {\n    return this.collapsedFilterNodes.has(node.id);\n  }\n\n  async toggleCollapse(node: ITreeNodeObject) {\n    this.onNodeCollapseStateChange.emit(node);\n  }\n}\n","<ng-container *ngIf=\"!hide\">\n  <div class=\"filter-heading\">\n    <button\n      class=\"toggle-button\"\n      (click)=\"toggleCollapse(foldersGrouping)\"\n      [attr.aria-expanded]=\"!isCollapsed(foldersGrouping)\"\n      aria-controls=\"folder-filters\"\n      title=\"{{ 'toggleCollapse' | i18n }}\"\n    >\n      <i\n        class=\"bwi bwi-fw\"\n        aria-hidden=\"true\"\n        [ngClass]=\"{\n          'bwi-angle-right': isCollapsed(foldersGrouping),\n          'bwi-angle-down': !isCollapsed(foldersGrouping)\n        }\"\n      ></i>\n    </button>\n    <h3 class=\"filter-title\">&nbsp;{{ \"folders\" | i18n }}</h3>\n    <button\n      class=\"text-muted ml-auto add-button\"\n      (click)=\"addFolder()\"\n      appA11yTitle=\"{{ 'addFolder' | i18n }}\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n  <ul id=\"folder-filters\" *ngIf=\"!isCollapsed(foldersGrouping)\" class=\"filter-options\">\n    <ng-template #recursiveFolders let-folders>\n      <li\n        *ngFor=\"let f of folders\"\n        [ngClass]=\"{\n          active: f.node.id === activeFilter.selectedFolderId && activeFilter.selectedFolder\n        }\"\n        class=\"filter-option\"\n      >\n        <span class=\"filter-buttons\">\n          <button\n            *ngIf=\"f.children.length\"\n            title=\"{{ 'toggleCollapse' | i18n }}\"\n            (click)=\"toggleCollapse(f.node)\"\n            [attr.aria-expanded]=\"!isCollapsed(f.node)\"\n            [attr.aria-controls]=\"f.node.name + '_children'\"\n            class=\"toggle-button\"\n          >\n            <i\n              class=\"bwi bwi-fw\"\n              [ngClass]=\"{\n                'bwi-angle-right': isCollapsed(f.node),\n                'bwi-angle-down': !isCollapsed(f.node)\n              }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button class=\"filter-button\" (click)=\"applyFilter(f.node)\">\n            <i *ngIf=\"f.children.length === 0\" class=\"bwi bwi-fw bwi-folder\" aria-hidden=\"true\"></i\n            >&nbsp;{{ f.node.name }}\n          </button>\n          <button\n            class=\"edit-button\"\n            (click)=\"editFolder(f.node)\"\n            appA11yTitle=\"{{ 'editFolder' | i18n }}\"\n            *ngIf=\"f.node.id\"\n          >\n            <i class=\"bwi bwi-pencil bwi-fw\" aria-hidden=\"true\"></i>\n          </button>\n        </span>\n        <ul\n          [id]=\"f.node.name + '_children'\"\n          class=\"nested-filter-options\"\n          *ngIf=\"f.children.length && !isCollapsed(f.node)\"\n        >\n          <ng-container *ngTemplateOutlet=\"recursiveFolders; context: { $implicit: f.children }\">\n          </ng-container>\n        </ul>\n      </li>\n    </ng-template>\n    <ng-container\n      *ngTemplateOutlet=\"recursiveFolders; context: { $implicit: nestedFolders }\"\n    ></ng-container>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { FolderFilterComponent as BaseFolderFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/folder-filter.component\";\n\n@Component({\n  selector: \"app-folder-filter\",\n  templateUrl: \"folder-filter.component.html\",\n})\nexport class FolderFilterComponent extends BaseFolderFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherStatus } from \"../models/cipher-status.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class StatusFilterComponent {\n  @Input() hideFavorites = false;\n  @Input() hideTrash = false;\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n  @Input() activeFilter: VaultFilter;\n\n  get show() {\n    return !(this.hideFavorites && this.hideTrash);\n  }\n\n  applyFilter(cipherStatus: CipherStatus) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.status = cipherStatus;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <ul class=\"filter-options\">\n    <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.status === 'all' }\">\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('all')\">\n          <i class=\"bwi bwi-fw bwi-filter\" aria-hidden=\"true\"></i>&nbsp;{{ \"allItems\" | i18n }}\n        </button>\n      </span>\n    </li>\n    <li\n      *ngIf=\"!hideFavorites\"\n      class=\"filter-option\"\n      [ngClass]=\"{ active: activeFilter.status === 'favorites' }\"\n    >\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('favorites')\">\n          <i class=\"bwi bwi-fw bwi-star\" aria-hidden=\"true\"></i>&nbsp;{{ \"favorites\" | i18n }}\n        </button>\n      </span>\n    </li>\n    <li\n      *ngIf=\"!hideTrash\"\n      class=\"filter-option\"\n      [ngClass]=\"{ active: activeFilter.status === 'trash' }\"\n    >\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('trash')\">\n          <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>&nbsp;{{ \"trash\" | i18n }}\n        </button>\n      </span>\n    </li>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { StatusFilterComponent as BaseStatusFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/status-filter.component\";\n\n@Component({\n  selector: \"app-status-filter\",\n  templateUrl: \"status-filter.component.html\",\n})\nexport class StatusFilterComponent extends BaseStatusFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\n\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class TypeFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() selectedCipherType: CipherType = null;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  readonly typesNode: TopLevelTreeNode = {\n    id: \"types\",\n    name: \"types\",\n  };\n\n  cipherTypeEnum = CipherType; // used in the template\n\n  get isCollapsed() {\n    return this.collapsedFilterNodes.has(this.typesNode.id);\n  }\n\n  applyFilter(cipherType: CipherType) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.cipherType = cipherType;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  async toggleCollapse() {\n    this.onNodeCollapseStateChange.emit(this.typesNode);\n  }\n}\n","<div class=\"filter-heading\">\n  <button\n    class=\"toggle-button\"\n    [attr.aria-expanded]=\"!isCollapsed\"\n    aria-controls=\"type-filters\"\n    (click)=\"toggleCollapse()\"\n    title=\"{{ 'toggleCollapse' | i18n }}\"\n  >\n    <i\n      class=\"bwi bwi-fw\"\n      aria-hidden=\"true\"\n      [ngClass]=\"{\n        'bwi-angle-right': isCollapsed,\n        'bwi-angle-down': !isCollapsed\n      }\"\n    ></i>\n  </button>\n  <h3>&nbsp;{{ \"types\" | i18n }}</h3>\n</div>\n<ul id=\"type-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Login }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Login)\">\n        <i class=\"bwi bwi-fw bwi-globe\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeLogin\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Card }\">\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Card)\">\n        <i class=\"bwi bwi-fw bwi-credit-card\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeCard\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Identity }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Identity)\">\n        <i class=\"bwi bwi-fw bwi-id-card\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeIdentity\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.SecureNote }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.SecureNote)\">\n        <i class=\"bwi bwi-fw bwi-sticky-note\" aria-hidden=\"true\"></i>&nbsp;{{\n          \"typeSecureNote\" | i18n\n        }}\n      </button>\n    </span>\n  </li>\n</ul>\n","import { Component } from \"@angular/core\";\n\nimport { TypeFilterComponent as BaseTypeFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/type-filter.component\";\n\n@Component({\n  selector: \"app-type-filter\",\n  templateUrl: \"type-filter.component.html\",\n})\nexport class TypeFilterComponent extends BaseTypeFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\n\nimport { DisplayMode } from \"../models/display-mode\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class OrganizationFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() organizations: Organization[];\n  @Input() activeFilter: VaultFilter;\n  @Input() activePersonalOwnershipPolicy: boolean;\n  @Input() activeSingleOrganizationPolicy: boolean;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  get displayMode(): DisplayMode {\n    let displayMode: DisplayMode = \"organizationMember\";\n    if (this.organizations == null || this.organizations.length < 1) {\n      displayMode = \"noOrganizations\";\n    } else if (this.activePersonalOwnershipPolicy && !this.activeSingleOrganizationPolicy) {\n      displayMode = \"personalOwnershipPolicy\";\n    } else if (!this.activePersonalOwnershipPolicy && this.activeSingleOrganizationPolicy) {\n      displayMode = \"singleOrganizationPolicy\";\n    } else if (this.activePersonalOwnershipPolicy && this.activeSingleOrganizationPolicy) {\n      displayMode = \"singleOrganizationAndPersonalOwnershipPolicies\";\n    }\n\n    return displayMode;\n  }\n\n  get hasActiveFilter() {\n    return this.activeFilter.myVaultOnly || this.activeFilter.selectedOrganizationId != null;\n  }\n\n  readonly organizationGrouping: TopLevelTreeNode = {\n    id: \"vaults\",\n    name: \"allVaults\",\n  };\n\n  async applyOrganizationFilter(organization: Organization) {\n    this.activeFilter.selectedOrganizationId = organization.id;\n    this.activeFilter.myVaultOnly = false;\n    this.activeFilter.refreshCollectionsAndFolders = true;\n    this.applyFilter(this.activeFilter);\n  }\n\n  async applyMyVaultFilter() {\n    this.activeFilter.selectedOrganizationId = null;\n    this.activeFilter.myVaultOnly = true;\n    this.activeFilter.refreshCollectionsAndFolders = true;\n    this.applyFilter(this.activeFilter);\n  }\n\n  clearFilter() {\n    this.activeFilter.myVaultOnly = false;\n    this.activeFilter.selectedOrganizationId = null;\n    this.applyFilter(new VaultFilter(this.activeFilter));\n  }\n\n  private applyFilter(filter: VaultFilter) {\n    this.onFilterChange.emit(filter);\n  }\n\n  async toggleCollapse() {\n    this.onNodeCollapseStateChange.emit(this.organizationGrouping);\n  }\n\n  get isCollapsed() {\n    return this.collapsedFilterNodes.has(this.organizationGrouping.id);\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalConfig } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-enroll-master-password-reset\",\n  templateUrl: \"enroll-master-password-reset.component.html\",\n})\nexport class EnrollMasterPasswordReset {\n  organization: Organization;\n\n  verification: Verification;\n  formPromise: Promise<void>;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private modalRef: ModalRef,\n    config: ModalConfig,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    this.organization = config.data.organization;\n  }\n\n  async submit() {\n    let toastStringRef = \"withdrawPasswordResetSuccess\";\n\n    this.formPromise = this.userVerificationService\n      .buildRequest(this.verification, OrganizationUserResetPasswordEnrollmentRequest)\n      .then(async (request) => {\n        // Set variables\n        let keyString: string = null;\n\n        // Retrieve Public Key\n        const orgKeys = await this.organizationApiService.getKeys(this.organization.id);\n        if (orgKeys == null) {\n          throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n        }\n\n        const publicKey = Utils.fromB64ToArray(orgKeys.publicKey);\n\n        // RSA Encrypt user's encKey.key with organization public key\n        const encKey = await this.cryptoService.getEncKey();\n        const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n        keyString = encryptedKey.encryptedString;\n        toastStringRef = \"enrollPasswordResetSuccess\";\n\n        // Create request and execute enrollment\n        request.resetPasswordKey = keyString;\n        await this.apiService.putOrganizationUserResetPasswordEnrollment(\n          this.organization.id,\n          this.organization.userId,\n          request\n        );\n\n        await this.syncService.fullSync(true);\n      });\n    try {\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(toastStringRef));\n      this.modalRef.close();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div\n  class=\"modal fade\"\n  role=\"dialog\"\n  aria-modal=\"true\"\n  aria-labelledby=\"enrollMasterPasswordResetTitle\"\n>\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"enrollMasterPasswordResetTitle\">\n          {{ \"enrollPasswordReset\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">\n          {{ \"resetPasswordEnrollmentWarning\" | i18n }}\n        </app-callout>\n        <app-user-verification [(ngModel)]=\"verification\" name=\"secret\"> </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <bit-submit-button [loading]=\"form.loading\">\n          {{ \"submit\" | i18n }}\n        </bit-submit-button>\n        <button\n          bitButton\n          buttonType=\"secondary\"\n          type=\"button\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span>\n            {{ \"cancel\" | i18n }}\n          </span>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { AfterContentInit, Component, Input } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-link-sso\",\n  templateUrl: \"link-sso.component.html\",\n})\nexport class LinkSsoComponent extends SsoComponent implements AfterContentInit {\n  @Input() organization: Organization;\n  returnUri = \"/settings/organizations\";\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    authService: AuthService,\n    router: Router,\n    route: ActivatedRoute,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    this.returnUri = \"/settings/organizations\";\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngAfterContentInit() {\n    this.identifier = this.organization.identifier;\n  }\n}\n","<a\n  class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main tw-no-underline hover:tw-bg-secondary-100 hover:tw-no-underline focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n  href=\"#\"\n  appStopClick\n  (click)=\"submit(returnUri, true)\"\n>\n  <i class=\"bwi bwi-fw bwi-link\" aria-hidden=\"true\"></i>\n  {{ \"linkSso\" | i18n }}\n</a>\n","<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted tw-m-2\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<div\n  *ngIf=\"loaded\"\n  class=\"tw-flex tw-min-w-[200px] tw-max-w-[300px] tw-flex-col\"\n  [appApiAction]=\"actionPromise\"\n>\n  <button\n    *ngIf=\"allowEnrollmentChanges(organization) && !organization.resetPasswordEnrolled\"\n    class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"toggleResetPasswordEnrollment(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n    {{ \"enrollPasswordReset\" | i18n }}\n  </button>\n  <button\n    *ngIf=\"allowEnrollmentChanges(organization) && organization.resetPasswordEnrolled\"\n    class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"toggleResetPasswordEnrollment(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n    {{ \"withdrawPasswordReset\" | i18n }}\n  </button>\n  <ng-container *ngIf=\"organization.useSso && organization.identifier\">\n    <button\n      *ngIf=\"organization.ssoBound; else linkSso\"\n      class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n      (click)=\"unlinkSso(organization)\"\n    >\n      <i class=\"bwi bwi-fw bwi-chain-broken\" aria-hidden=\"true\"></i>\n      {{ \"unlinkSso\" | i18n }}\n    </button>\n    <ng-template #linkSso>\n      <app-link-sso [organization]=\"organization\"> </app-link-sso>\n    </ng-template>\n  </ng-container>\n  <button\n    class=\"text-danger tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"leave(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n    {{ \"leave\" | i18n }}\n  </button>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\n\nimport { EnrollMasterPasswordReset } from \"../../../organizations/users/enroll-master-password-reset.component\";\n\n@Component({\n  selector: \"app-organization-options\",\n  templateUrl: \"organization-options.component.html\",\n})\nexport class OrganizationOptionsComponent {\n  actionPromise: Promise<void | boolean>;\n  policies: Policy[];\n  loaded = false;\n\n  @Input() organization: Organization;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private modalService: ModalService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.policies = await this.policyService.getAll(PolicyType.ResetPassword);\n    this.loaded = true;\n  }\n\n  allowEnrollmentChanges(org: Organization): boolean {\n    if (org.usePolicies && org.useResetPassword && org.hasPublicAndPrivateKeys) {\n      const policy = this.policies.find((p) => p.organizationId === org.id);\n      if (policy != null && policy.enabled) {\n        return org.resetPasswordEnrolled && policy.data.autoEnrollEnabled ? false : true;\n      }\n    }\n\n    return false;\n  }\n\n  showEnrolledStatus(org: Organization): boolean {\n    return (\n      org.useResetPassword &&\n      org.resetPasswordEnrolled &&\n      this.policies.some((p) => p.organizationId === org.id && p.enabled)\n    );\n  }\n\n  async unlinkSso(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"unlinkSsoConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.apiService.deleteSsoUser(org.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, \"Unlinked SSO\");\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async leave(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.organizationApiService.leave(org.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async toggleResetPasswordEnrollment(org: Organization) {\n    if (!this.organization.resetPasswordEnrolled) {\n      this.modalService.open(EnrollMasterPasswordReset, {\n        allowMultipleModals: true,\n        data: {\n          organization: org,\n        },\n      });\n    } else {\n      // Remove reset password\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.masterPasswordHash = \"ignored\";\n      request.resetPasswordKey = null;\n      this.actionPromise = this.apiService.putOrganizationUserResetPasswordEnrollment(\n        this.organization.id,\n        this.organization.userId,\n        request\n      );\n      try {\n        await this.actionPromise;\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"withdrawPasswordResetSuccess\")\n        );\n        this.syncService.fullSync(true);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n}\n","<ng-container *ngIf=\"!hide\">\n  <ng-container [ngSwitch]=\"displayMode\">\n    <ng-container *ngSwitchCase=\"'noOrganizations'\">\n      <ul class=\"filter-options\">\n        <li class=\"filter-option active\">\n          <span class=\"filter-buttons\">\n            <button class=\"filter-button\">\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"myVault\" | i18n }}\n            </button>\n          </span>\n        </li>\n        <li class=\"filter-option\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'personalOwnershipPolicy'\">\n      <div class=\"filter-heading\">\n        <button\n          (click)=\"toggleCollapse()\"\n          title=\"{{ 'toggleCollapse' | i18n }}\"\n          class=\"toggle-button\"\n          [attr.aria-expanded]=\"!isCollapsed\"\n          aria-controls=\"organization-filters\"\n        >\n          <i\n            class=\"bwi bwi-fw\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-right': isCollapsed,\n              'bwi-angle-down': !isCollapsed\n            }\"\n          ></i>\n        </button>\n        <button\n          class=\"filter-button\"\n          (click)=\"clearFilter()\"\n          [ngClass]=\"{ active: !hasActiveFilter }\"\n        >\n          &nbsp;{{ organizationGrouping.name | i18n }}\n        </button>\n      </div>\n      <ul id=\"organization-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n        <li\n          class=\"filter-option\"\n          *ngFor=\"let organization of organizations\"\n          [ngClass]=\"{ active: organization.id === activeFilter.selectedOrganizationId }\"\n        >\n          <span class=\"filter-buttons\">\n            <button class=\"filter-button\" (click)=\"applyOrganizationFilter(organization)\">\n              <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n              {{ organization.name }}\n            </button>\n            <ng-container *ngIf=\"organization.id === activeFilter.selectedOrganizationId\">\n              <button [bitMenuTriggerFor]=\"orgMenu\" class=\"org-options ml-auto\">\n                <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu class=\"filter-organization-options\" #orgMenu>\n                <app-organization-options [organization]=\"organization\"></app-organization-options>\n              </bit-menu>\n            </ng-container>\n          </span>\n        </li>\n        <li class=\"filter-option\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'singleOrganizationAndPersonalOwnershipPolicies'\">\n      <div class=\"filter-heading\">\n        <button class=\"filter-button active\">\n          <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n          {{ organizations[0].name }}\n        </button>\n      </div>\n    </ng-container>\n    <ng-container *ngSwitchDefault>\n      <div class=\"filter-heading\">\n        <button\n          class=\"toggle-button\"\n          title=\"{{ 'toggleCollapse' | i18n }}\"\n          (click)=\"toggleCollapse()\"\n          [attr.aria-expanded]=\"!isCollapsed\"\n          aria-controls=\"organization-filters\"\n        >\n          <i\n            class=\"bwi bwi-fw\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-right': isCollapsed,\n              'bwi-angle-down': !isCollapsed\n            }\"\n          ></i>\n        </button>\n        <button\n          class=\"filter-button\"\n          (click)=\"clearFilter()\"\n          [ngClass]=\"{ active: !hasActiveFilter }\"\n        >\n          &nbsp;{{ organizationGrouping.name | i18n }}\n        </button>\n      </div>\n      <ul id=\"organization-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n        <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.myVaultOnly }\">\n          <span class=\"filter-buttons\">\n            <button class=\"filter-button\" (click)=\"applyMyVaultFilter()\">\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"myVault\" | i18n }}\n            </button>\n          </span>\n        </li>\n        <li\n          class=\"filter-option\"\n          *ngFor=\"let organization of organizations\"\n          [ngClass]=\"{ active: organization.id === activeFilter.selectedOrganizationId }\"\n        >\n          <span class=\"filter-buttons\">\n            <button\n              class=\"filter-button\"\n              [ngClass]=\"{ 'disabled-organization': !organization.enabled }\"\n              (click)=\"applyOrganizationFilter(organization)\"\n            >\n              <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n              {{ organization.name }}\n            </button>\n            <span class=\"ml-auto\">\n              <i\n                *ngIf=\"!organization.enabled\"\n                class=\"org-options bwi bwi-fw bwi-exclamation-triangle text-danger\"\n                aria-label=\"{{ 'organizationIsDisabled' | i18n }}\"\n                appA11yTitle=\"{{ 'organizationIsDisabled' | i18n }}\"\n              ></i\n              ><button [bitMenuTriggerFor]=\"orgMenu\" class=\"org-options\">\n                <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu class=\"filter-organization-options\" #orgMenu>\n                <app-organization-options [organization]=\"organization\"></app-organization-options>\n              </bit-menu>\n            </span>\n          </span>\n        </li>\n        <li class=\"filter-option\" *ngIf=\"!(displayMode === 'singleOrganizationPolicy')\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n  </ng-container>\n  <hr />\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { OrganizationFilterComponent as BaseOrganizationFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/organization-filter.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-organization-filter\",\n  templateUrl: \"organization-filter.component.html\",\n})\nexport class OrganizationFilterComponent extends BaseOrganizationFilterComponent {\n  displayText = \"allVaults\";\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {\n    super();\n  }\n\n  async applyOrganizationFilter(organization: Organization) {\n    if (organization.enabled) {\n      //proceed with default behaviour for enabled organizations\n      super.applyOrganizationFilter(organization);\n    } else {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"disabledOrganizationFilterError\")\n      );\n    }\n  }\n}\n","<div class=\"card vault-filters\">\n  <div class=\"container loading-spinner\" *ngIf=\"!isLoaded\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n  </div>\n  <div *ngIf=\"isLoaded\">\n    <div class=\"card-header d-flex\">\n      {{ \"filters\" | i18n }}\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/searching-vault/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"card-body\">\n      <input\n        type=\"search\"\n        placeholder=\"{{ (searchPlaceholder | i18n) || ('searchVault' | i18n) }}\"\n        id=\"search\"\n        class=\"form-control\"\n        [(ngModel)]=\"searchText\"\n        (input)=\"searchTextChanged()\"\n        autocomplete=\"off\"\n        appAutofocus\n      />\n      <app-organization-filter\n        [hide]=\"hideOrganizations\"\n        [activeFilter]=\"activeFilter\"\n        [collapsedFilterNodes]=\"collapsedFilterNodes\"\n        [organizations]=\"organizations\"\n        [activePersonalOwnershipPolicy]=\"activePersonalOwnershipPolicy\"\n        [activeSingleOrganizationPolicy]=\"activeSingleOrganizationPolicy\"\n        (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n        (onFilterChange)=\"applyFilter($event)\"\n      ></app-organization-filter>\n      <div class=\"filter\">\n        <app-status-filter\n          [hideFavorites]=\"hideFavorites\"\n          [hideTrash]=\"hideTrash\"\n          [activeFilter]=\"activeFilter\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-status-filter>\n      </div>\n      <div class=\"filter\">\n        <app-type-filter\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-type-filter>\n      </div>\n      <div class=\"filter\">\n        <app-folder-filter\n          [hide]=\"hideFolders\"\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          [folderNodes]=\"folders$ | async\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n          (onAddFolder)=\"addFolder()\"\n          (onEditFolder)=\"editFolder($event)\"\n        ></app-folder-filter>\n      </div>\n      <div class=\"filter\">\n        <app-collection-filter\n          [hide]=\"hideCollections\"\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          [collectionNodes]=\"collections\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-collection-filter>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { VaultFilterComponent as BaseVaultFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/vault-filter.component\";\n\nimport { VaultFilterService } from \"./shared/vault-filter.service\";\n\n@Component({\n  selector: \"./app-vault-filter\",\n  templateUrl: \"vault-filter.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VaultFilterComponent extends BaseVaultFilterComponent {\n  @Output() onSearchTextChanged = new EventEmitter<string>();\n\n  searchPlaceholder: string;\n  searchText = \"\";\n\n  constructor(protected vaultFilterService: VaultFilterService) {\n    // This empty constructor is required to provide the web vaultFilterService subclass to super()\n    // TODO: refactor this to use proper dependency injection\n    super(vaultFilterService);\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.vaultFilterService.collapsedFilterNodes$.subscribe((nodes) => {\n      this.collapsedFilterNodes = nodes;\n    });\n  }\n\n  searchTextChanged() {\n    this.onSearchTextChanged.emit(this.searchText);\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { VaultFilterComponent as BaseVaultFilterComponent } from \"../../../vault/vault-filter/vault-filter.component\";\n\n@Component({\n  selector: \"app-organization-vault-filter\",\n  templateUrl: \"../../../vault/vault-filter/vault-filter.component.html\",\n})\nexport class VaultFilterComponent extends BaseVaultFilterComponent {\n  hideOrganizations = true;\n  hideFavorites = true;\n  hideFolders = true;\n\n  organization: Organization;\n\n  async initCollections() {\n    if (this.organization.canEditAnyCollection) {\n      return await this.vaultFilterService.buildAdminCollections(this.organization.id);\n    }\n    return await this.vaultFilterService.buildCollections(this.organization.id);\n  }\n\n  async reloadCollectionsAndFolders() {\n    this.collections = await this.initCollections();\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherBulkDeleteRequest } from \"@bitwarden/common/models/request/cipherBulkDeleteRequest\";\n\n@Component({\n  selector: \"app-vault-bulk-delete\",\n  templateUrl: \"bulk-delete.component.html\",\n})\nexport class BulkDeleteComponent {\n  @Input() cipherIds: string[] = [];\n  @Input() permanent = false;\n  @Input() organization: Organization;\n  @Output() onDeleted = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  async submit() {\n    if (!this.organization || !this.organization.canEditAnyCollection) {\n      await this.deleteCiphers();\n    } else {\n      await this.deleteCiphersAdmin();\n    }\n\n    await this.formPromise;\n\n    this.onDeleted.emit();\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(this.permanent ? \"permanentlyDeletedItems\" : \"deletedItems\")\n    );\n  }\n\n  private async deleteCiphers() {\n    if (this.permanent) {\n      this.formPromise = await this.cipherService.deleteManyWithServer(this.cipherIds);\n    } else {\n      this.formPromise = await this.cipherService.softDeleteManyWithServer(this.cipherIds);\n    }\n  }\n\n  private async deleteCiphersAdmin() {\n    const deleteRequest = new CipherBulkDeleteRequest(this.cipherIds, this.organization.id);\n    if (this.permanent) {\n      this.formPromise = await this.apiService.deleteManyCiphersAdmin(deleteRequest);\n    } else {\n      this.formPromise = await this.apiService.putDeleteManyCiphersAdmin(deleteRequest);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deleteSelectedTitle\">\n          {{ (permanent ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{\n          (permanent ? \"permanentlyDeleteSelectedItemsDesc\" : \"deleteSelectedItemsDesc\")\n            | i18n: cipherIds.length\n        }}\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          appAutoFocus\n          type=\"submit\"\n          class=\"btn btn-danger btn-submit\"\n          [disabled]=\"form.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (permanent ? \"permanentlyDelete\" : \"delete\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"moveSelectedTitle\">\n          {{ \"moveSelected\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"moveSelectedItemsDesc\" | i18n: cipherIds.length }}</p>\n        <div class=\"form-group\">\n          <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n          <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"folderId\" class=\"form-control\">\n            <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\n@Component({\n  selector: \"app-vault-bulk-move\",\n  templateUrl: \"bulk-move.component.html\",\n})\nexport class BulkMoveComponent implements OnInit {\n  @Input() cipherIds: string[] = [];\n  @Output() onMoved = new EventEmitter();\n\n  folderId: string = null;\n  folders$: Observable<FolderView[]>;\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService\n  ) {}\n\n  async ngOnInit() {\n    this.folders$ = this.folderService.folderViews$;\n    this.folderId = (await firstValueFrom(this.folders$))[0].id;\n  }\n\n  async submit() {\n    this.formPromise = this.cipherService.moveManyWithServer(this.cipherIds, this.folderId);\n    await this.formPromise;\n    this.onMoved.emit();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"movedItems\"));\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-bulk-restore\",\n  templateUrl: \"bulk-restore.component.html\",\n})\nexport class BulkRestoreComponent {\n  @Input() cipherIds: string[] = [];\n  @Output() onRestored = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async submit() {\n    this.formPromise = this.cipherService.restoreManyWithServer(this.cipherIds);\n    await this.formPromise;\n    this.onRestored.emit();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItems\"));\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"restoreSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"restoreSelectedTitle\">\n          {{ \"restoreSelected\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"restoreSelectedItemsDesc\" | i18n: cipherIds.length }}\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          appAutoFocus\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"restore\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedToOrgTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"moveSelectedToOrgTitle\">\n          {{ \"moveSelectedToOrg\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"moveManyToOrgDesc\" | i18n }}</p>\n        <p>\n          {{\n            \"moveSelectedItemsCountDesc\"\n              | i18n: this.ciphers.length:shareableCiphers.length:nonShareableCount\n          }}\n        </p>\n        <div class=\"form-group\">\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            class=\"form-control\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [disabled]=\"form.loading || !canSave\"\n          [ngClass]=\"{ loading: form.loading }\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-vault-bulk-share\",\n  templateUrl: \"bulk-share.component.html\",\n})\nexport class BulkShareComponent implements OnInit {\n  @Input() ciphers: CipherView[] = [];\n  @Input() organizationId: string;\n  @Output() onShared = new EventEmitter();\n\n  nonShareableCount = 0;\n  collections: CollectionView[] = [];\n  organizations: Organization[] = [];\n  shareableCiphers: CipherView[] = [];\n  formPromise: Promise<any>;\n\n  private writeableCollections: CollectionView[] = [];\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.shareableCiphers = this.ciphers.filter(\n      (c) => !c.hasOldAttachments && c.organizationId == null\n    );\n    this.nonShareableCount = this.ciphers.length - this.shareableCiphers.length;\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.filter((c) => !c.readOnly);\n    this.organizations = await this.organizationService.getAll();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  filterCollections() {\n    this.selectAll(false);\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit() {\n    const checkedCollectionIds = this.collections\n      .filter((c) => (c as any).checked)\n      .map((c) => c.id);\n    try {\n      this.formPromise = this.cipherService.shareManyWithServer(\n        this.shareableCiphers,\n        this.organizationId,\n        checkedCollectionIds\n      );\n      await this.formPromise;\n      this.onShared.emit();\n      const orgName =\n        this.organizations.find((o) => o.id === this.organizationId)?.name ??\n        this.i18nService.t(\"organization\");\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"movedItemsToOrg\", orgName)\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n\n  get canSave() {\n    if (\n      this.shareableCiphers != null &&\n      this.shareableCiphers.length > 0 &&\n      this.collections != null\n    ) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if ((this.collections[i] as any).checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"dropdown mr-2\" appListDropdown>\n  <button\n    class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n    type=\"button\"\n    id=\"bulkActionsButton\"\n    data-toggle=\"dropdown\"\n    aria-haspopup=\"true\"\n    aria-expanded=\"false\"\n    appA11yTitle=\"{{ 'options' | i18n }}\"\n  >\n    <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n  </button>\n  <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n    <button\n      class=\"dropdown-item\"\n      appStopClick\n      (click)=\"bulkMove()\"\n      *ngIf=\"!deleted && !organization\"\n    >\n      <i class=\"bwi bwi-fw bwi-folder\" aria-hidden=\"true\"></i>\n      {{ \"moveSelected\" | i18n }}\n    </button>\n    <button\n      class=\"dropdown-item\"\n      appStopClick\n      (click)=\"bulkShare()\"\n      *ngIf=\"!deleted && !organization\"\n    >\n      <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n      {{ \"moveSelectedToOrg\" | i18n }}\n    </button>\n    <button class=\"dropdown-item\" (click)=\"bulkRestore()\" *ngIf=\"deleted && !organization\">\n      <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n      {{ \"restoreSelected\" | i18n }}\n    </button>\n    <button class=\"dropdown-item text-danger\" (click)=\"bulkDelete()\">\n      <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n      {{ (deleted ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n    </button>\n    <div class=\"dropdown-divider\"></div>\n    <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n      <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n      {{ \"selectAll\" | i18n }}\n    </button>\n    <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n      <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n      {{ \"unselectAll\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-template #bulkDeleteTemplate></ng-template>\n<ng-template #bulkRestoreTemplate></ng-template>\n<ng-template #bulkMoveTemplate></ng-template>\n<ng-template #bulkShareTemplate></ng-template>\n","import { Component, Input, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { BulkDeleteComponent } from \"./bulk-delete.component\";\nimport { BulkMoveComponent } from \"./bulk-move.component\";\nimport { BulkRestoreComponent } from \"./bulk-restore.component\";\nimport { BulkShareComponent } from \"./bulk-share.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\n\n@Component({\n  selector: \"app-vault-bulk-actions\",\n  templateUrl: \"bulk-actions.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class BulkActionsComponent {\n  @Input() ciphersComponent: CiphersComponent;\n  @Input() deleted: boolean;\n  @Input() organization: Organization;\n\n  @ViewChild(\"bulkDeleteTemplate\", { read: ViewContainerRef, static: true })\n  bulkDeleteModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRestoreTemplate\", { read: ViewContainerRef, static: true })\n  bulkRestoreModalRef: ViewContainerRef;\n  @ViewChild(\"bulkMoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkMoveModalRef: ViewContainerRef;\n  @ViewChild(\"bulkShareTemplate\", { read: ViewContainerRef, static: true })\n  bulkShareModalRef: ViewContainerRef;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async bulkDelete() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkDeleteComponent,\n      this.bulkDeleteModalRef,\n      (comp) => {\n        comp.permanent = this.deleted;\n        comp.cipherIds = selectedIds;\n        comp.organization = this.organization;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeleted.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkRestore() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRestoreComponent,\n      this.bulkRestoreModalRef,\n      (comp) => {\n        comp.cipherIds = selectedIds;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onRestored.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkShare() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedCiphers = this.ciphersComponent.getSelected();\n    if (selectedCiphers.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkShareComponent,\n      this.bulkShareModalRef,\n      (comp) => {\n        comp.ciphers = selectedCiphers;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onShared.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkMove() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkMoveComponent,\n      this.bulkMoveModalRef,\n      (comp) => {\n        comp.cipherIds = selectedIds;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onMoved.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  selectAll(select: boolean) {\n    this.ciphersComponent.selectAll(select);\n  }\n\n  private async promptPassword() {\n    const selectedCiphers = this.ciphersComponent.getSelected();\n    const notProtected = !selectedCiphers.find(\n      (cipher) => cipher.reprompt !== CipherRepromptType.None\n    );\n\n    return notProtected || (await this.passwordRepromptService.showPasswordPrompt());\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"groupings\">\n        <div class=\"content\">\n          <div class=\"inner-content\">\n            <app-organization-vault-filter\n              #vaultFilter\n              [activeFilter]=\"activeFilter\"\n              (onFilterChange)=\"applyVaultFilter($event)\"\n              (onSearchTextChanged)=\"filterSearchText($event)\"\n            ></app-organization-vault-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"vaultItems\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <app-vault-bulk-actions\n            [ciphersComponent]=\"ciphersComponent\"\n            [deleted]=\"deleted\"\n            [organization]=\"organization\"\n          >\n          </app-vault-bulk-actions>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm ml-auto\"\n            (click)=\"addCipher()\"\n            *ngIf=\"!deleted\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"addItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout type=\"warning\" *ngIf=\"deleted\" icon=\"bwi bwi-exclamation-triangle\">\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-org-vault-ciphers\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onCollectionsClicked)=\"editCipherCollections($event)\"\n        (onEventsClicked)=\"viewEvents($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n      >\n      </app-org-vault-ciphers>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #eventsTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { VaultService } from \"../../vault/shared/vault.service\";\nimport { EntityEventsComponent } from \"../manage/entity-events.component\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { VaultFilterComponent } from \"./vault-filter/vault-filter.component\";\n\nconst BroadcasterSubscriptionId = \"OrgVaultComponent\";\n\n@Component({\n  selector: \"app-org-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(\"vaultFilter\", { static: true })\n  vaultFilterComponent: VaultFilterComponent;\n  @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n\n  organization: Organization;\n  collectionId: string = null;\n  type: CipherType = null;\n  trashCleanupWarning: string = null;\n  activeFilter: VaultFilter = new VaultFilter();\n\n  // This is a hack to avoid redundant api calls that fetch OrganizationVaultFilterComponent collections\n  // When it makes sense to do so we should leverage some other communication method for change events that isn't directly tied to the query param for organizationId\n  // i.e. exposing the VaultFiltersService to the OrganizationSwitcherComponent to make relevant updates from a change event instead of just depending on the router\n  firstLoaded = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private messagingService: MessagingService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private vaultService: VaultService,\n    private cipherService: CipherService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  ngOnInit() {\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params: any) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.vaultFilterComponent.organization = this.organization;\n      this.ciphersComponent.organization = this.organization;\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.ciphersComponent.searchText = this.vaultFilterComponent.searchText = qParams.search;\n        if (!this.organization.canViewAllCollections) {\n          await this.syncService.fullSync(false);\n          this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n            this.ngZone.run(async () => {\n              switch (message.command) {\n                case \"syncCompleted\":\n                  if (message.successfully) {\n                    await Promise.all([\n                      this.vaultFilterComponent.reloadCollectionsAndFolders(),\n                      this.ciphersComponent.refresh(),\n                    ]);\n                    this.changeDetectorRef.detectChanges();\n                  }\n                  break;\n              }\n            });\n          });\n        }\n\n        if (this.firstLoaded) {\n          await this.vaultFilterComponent.reloadCollectionsAndFolders();\n        }\n        this.firstLoaded = true;\n\n        await this.ciphersComponent.reload();\n\n        if (qParams.viewEvents != null) {\n          const cipher = this.ciphersComponent.ciphers.filter((c) => c.id === qParams.viewEvents);\n          if (cipher.length > 0) {\n            this.viewEvents(cipher[0]);\n          }\n        }\n\n        /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n        this.route.queryParams.subscribe(async (params) => {\n          const cipherId = getCipherIdFromParams(params);\n          if (cipherId) {\n            if (\n              // Handle users with implicit collection access since they use the admin endpoint\n              this.organization.canEditAnyCollection ||\n              (await this.cipherService.get(cipherId)) != null\n            ) {\n              this.editCipherId(cipherId);\n            } else {\n              this.platformUtilsService.showToast(\n                \"error\",\n                this.i18nService.t(\"errorOccurred\"),\n                this.i18nService.t(\"unknownCipher\")\n              );\n              this.router.navigate([], {\n                queryParams: { cipherId: null, itemId: null },\n                queryParamsHandling: \"merge\",\n              });\n            }\n          }\n        });\n      });\n    });\n  }\n\n  get deleted(): boolean {\n    return this.activeFilter.status === \"trash\";\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async applyVaultFilter(vaultFilter: VaultFilter) {\n    this.ciphersComponent.showAddNew = vaultFilter.status !== \"trash\";\n    this.activeFilter = vaultFilter;\n    await this.ciphersComponent.reload(\n      this.activeFilter.buildFilter(),\n      vaultFilter.status === \"trash\"\n    );\n    this.vaultFilterComponent.searchPlaceholder =\n      this.vaultService.calculateSearchBarLocalizationString(this.activeFilter);\n    this.go();\n  }\n\n  filterSearchText(searchText: string) {\n    this.ciphersComponent.searchText = searchText;\n    this.ciphersComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    if (this.organization.maxStorageGb == null || this.organization.maxStorageGb === 0) {\n      this.messagingService.send(\"upgradeOrganization\", { organizationId: cipher.organizationId });\n      return;\n    }\n\n    let madeAttachmentChanges = false;\n\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.ciphersComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        if (this.organization.canEditAnyCollection) {\n          comp.collectionIds = cipher.collectionIds;\n          comp.collections = this.vaultFilterComponent.collections.fullList.filter(\n            (c) => !c.readOnly && c.id != null\n          );\n        }\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.organizationId = this.organization.id;\n    component.type = this.type;\n    if (this.organization.canEditAnyCollection) {\n      component.collections = this.vaultFilterComponent.collections.fullList.filter(\n        (c) => !c.readOnly && c.id != null\n      );\n    }\n    if (this.collectionId != null) {\n      component.collectionIds = [this.collectionId];\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    return this.editCipherId(cipher?.id);\n  }\n\n  async editCipherId(cipherId: string) {\n    const cipher = await this.cipherService.get(cipherId);\n    if (cipher != null && cipher.reprompt != 0) {\n      if (!(await this.passwordRepromptService.showPasswordPrompt())) {\n        this.go({ cipherId: null, itemId: null });\n        return;\n      }\n    }\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipherId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n\n    modal.onClosedPromise().then(() => {\n      this.go({ cipherId: null, itemId: null });\n    });\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n    component.organizationId = this.organization.id;\n    if (this.organization.canEditAnyCollection) {\n      component.collections = this.vaultFilterComponent.collections.fullList.filter(\n        (c) => !c.readOnly && c.id != null\n      );\n    }\n    // Regardless of Admin state, the collection Ids need to passed manually as they are not assigned value\n    // in the add-edit componenet\n    component.collectionIds = cipher.collectionIds;\n  }\n\n  async viewEvents(cipher: CipherView) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = cipher.name;\n      comp.organizationId = this.organization.id;\n      comp.entityId = cipher.id;\n      comp.showUser = true;\n      comp.entity = \"cipher\";\n    });\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        type: this.activeFilter.cipherType,\n        collectionId: this.activeFilter.selectedCollectionId,\n        deleted: this.deleted ? true : null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: \"merge\",\n      replaceUrl: true,\n    });\n  }\n}\n\n/**\n * Allows backwards compatibility with\n * old links that used the original `cipherId` param\n */\nconst getCipherIdFromParams = (params: Params): string => {\n  return params[\"itemId\"] || params[\"cipherId\"];\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { VaultComponent } from \"./vault.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VaultComponent,\n    data: { titleId: \"vaults\" },\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaultRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { VaultSharedModule } from \"../../vault/shared/vault-shared.module\";\n\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { VaultFilterModule } from \"./vault-filter/vault-filter.module\";\nimport { VaultRoutingModule } from \"./vault-routing.module\";\nimport { VaultComponent } from \"./vault.component\";\n\n@NgModule({\n  imports: [VaultSharedModule, VaultRoutingModule, VaultFilterModule],\n  declarations: [VaultComponent, CiphersComponent],\n  exports: [VaultComponent],\n})\nexport class VaultModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\n\nimport { OrganizationPermissionsGuard } from \"./guards/org-permissions.guard\";\nimport { OrganizationLayoutComponent } from \"./layouts/organization-layout.component\";\nimport { GroupsComponent } from \"./manage/groups.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport {\n  canAccessGroupsTab,\n  canAccessMembersTab,\n  canAccessOrgAdmin,\n} from \"./navigation-permissions\";\nimport { VaultModule } from \"./vault/vault.module\";\n\nconst routes: Routes = [\n  {\n    path: \":organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuard, OrganizationPermissionsGuard],\n    data: {\n      organizationPermissions: canAccessOrgAdmin,\n    },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"vault\" },\n      {\n        path: \"vault\",\n        loadChildren: () => VaultModule,\n      },\n      {\n        path: \"settings\",\n        loadChildren: () => import(\"./settings\").then((m) => m.OrganizationSettingsModule),\n      },\n      {\n        path: \"members\",\n        component: PeopleComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          titleId: \"members\",\n          organizationPermissions: canAccessMembersTab,\n        },\n      },\n      {\n        path: \"groups\",\n        component: GroupsComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          titleId: \"groups\",\n          organizationPermissions: canAccessGroupsTab,\n        },\n      },\n      {\n        path: \"reporting\",\n        loadChildren: () =>\n          import(\"./reporting/organization-reporting.module\").then(\n            (m) => m.OrganizationReportingModule\n          ),\n      },\n      {\n        path: \"billing\",\n        loadChildren: () =>\n          import(\"./billing/organization-billing.module\").then((m) => m.OrganizationBillingModule),\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","export enum PlanSponsorshipType {\n  FamiliesForEnterprise = 0,\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Params } from \"@angular/router\";\n\nimport { BaseAcceptComponent } from \"../../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-family-sponsorship\",\n  templateUrl: \"accept-family-sponsorship.component.html\",\n})\nexport class AcceptFamilySponsorshipComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"email\", \"token\"];\n\n  async authedHandler(qParams: Params) {\n    this.router.navigate([\"/setup/families-for-enterprise\"], { queryParams: qParams });\n  }\n\n  async unauthedHandler(qParams: Params) {\n    if (!qParams.register) {\n      this.router.navigate([\"/login\"], { queryParams: { email: qParams.email } });\n    } else {\n      this.router.navigate([\"/register\"], { queryParams: { email: qParams.email } });\n    }\n  }\n}\n","import { PlanSponsorshipType } from \"../../../enums/planSponsorshipType\";\n\nexport class OrganizationSponsorshipRedeemRequest {\n  planSponsorshipType: PlanSponsorshipType;\n  sponsoredOrganizationId: string;\n}\n","<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"sponsoredFamiliesOffer\" | i18n }}</h1>\n  </div>\n  <div *ngIf=\"loading\" class=\"mt-5 d-flex justify-content-center\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </div>\n  <div *ngIf=\"!loading && badToken\" class=\"mt-5 d-flex justify-content-center\">\n    <span>{{ \"badToken\" | i18n }}</span>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    ngNativeValidate\n    *ngIf=\"!loading && !badToken\"\n  >\n    <p>\n      <span>{{ \"acceptBitwardenFamiliesHelp\" | i18n }}</span>\n    </p>\n    <div class=\"form-group col-6\">\n      <label for=\"availableSponsorshipOrg\">{{ \"sponsoredFamiliesSelectOffer\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        [(ngModel)]=\"selectedFamilyOrganizationId\"\n        class=\"form-control\"\n        required\n      >\n        <option value=\"\" disabled>-- {{ \"select\" | i18n }} --</option>\n        <option value=\"createNew\">{{ \"newFamiliesOrganization\" | i18n }}</option>\n        <option *ngFor=\"let o of existingFamilyOrganizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div *ngIf=\"showNewOrganization\" class=\"col-12\">\n      <app-organization-plans></app-organization-plans>\n    </div>\n    <div class=\"form-group col-6\" *ngIf=\"!showNewOrganization\">\n      <button class=\"btn btn-primary mt-2 btn-submit\" [disabled]=\"form.loading\" type=\"submit\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"acceptOffer\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PlanSponsorshipType } from \"@bitwarden/common/enums/planSponsorshipType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationSponsorshipRedeemRequest } from \"@bitwarden/common/models/request/organization/organizationSponsorshipRedeemRequest\";\n\nimport { DeleteOrganizationComponent } from \"../../organizations/settings\";\nimport { OrganizationPlansComponent } from \"../../settings/organization-plans.component\";\n\n@Component({\n  selector: \"families-for-enterprise-setup\",\n  templateUrl: \"families-for-enterprise-setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class FamiliesForEnterpriseSetupComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: false })\n  set organizationPlansComponent(value: OrganizationPlansComponent) {\n    if (!value) {\n      return;\n    }\n\n    value.plan = PlanType.FamiliesAnnually;\n    value.product = ProductType.Families;\n    value.acceptingSponsorship = true;\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    value.onSuccess.subscribe(this.onOrganizationCreateSuccess.bind(this));\n  }\n\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  loading = true;\n  badToken = false;\n  formPromise: Promise<any>;\n\n  token: string;\n  existingFamilyOrganizations: Organization[];\n\n  showNewOrganization = false;\n  _organizationPlansComponent: OrganizationPlansComponent;\n  _selectedFamilyOrganizationId = \"\";\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService,\n    private organizationService: OrganizationService,\n    private modalService: ModalService\n  ) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.token == null;\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"sponsoredFamiliesAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.token = qParams.token;\n\n      await this.syncService.fullSync(true);\n      this.badToken = !(await this.apiService.postPreValidateSponsorshipToken(this.token));\n      this.loading = false;\n\n      this.existingFamilyOrganizations = (await this.organizationService.getAll()).filter(\n        (o) => o.planProductType === ProductType.Families\n      );\n\n      if (this.existingFamilyOrganizations.length === 0) {\n        this.selectedFamilyOrganizationId = \"createNew\";\n      }\n    });\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit(this._selectedFamilyOrganizationId);\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  get selectedFamilyOrganizationId() {\n    return this._selectedFamilyOrganizationId;\n  }\n\n  set selectedFamilyOrganizationId(value: string) {\n    this._selectedFamilyOrganizationId = value;\n    this.showNewOrganization = value === \"createNew\";\n  }\n\n  private async doSubmit(organizationId: string) {\n    try {\n      const request = new OrganizationSponsorshipRedeemRequest();\n      request.planSponsorshipType = PlanSponsorshipType.FamiliesForEnterprise;\n      request.sponsoredOrganizationId = organizationId;\n\n      await this.apiService.postRedeemSponsorship(this.token, request);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"sponsoredFamiliesOfferRedeemed\")\n      );\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      if (this.showNewOrganization) {\n        await this.modalService.openViewRef(\n          DeleteOrganizationComponent,\n          this.deleteModalRef,\n          (comp) => {\n            comp.organizationId = organizationId;\n            comp.deleteOrganizationRequestType = \"InvalidFamiliesForEnterprise\";\n            // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n            comp.onSuccess.subscribe(() => {\n              this.router.navigate([\"/\"]);\n            });\n          }\n        );\n      }\n      this.validationService.showError(this.i18nService.t(\"sponsorshipTokenHasExpired\"));\n    }\n  }\n\n  private async onOrganizationCreateSuccess(value: any) {\n    // Use newly created organization id\n    await this.doSubmit(value.organizationId);\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccess } from \"../domain/sendAccess\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendAccessView implements View {\n  id: string = null;\n  name: string = null;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  expirationDate: Date = null;\n  creatorIdentifier: string = null;\n\n  constructor(s?: SendAccess) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.type = s.type;\n    this.expirationDate = s.expirationDate;\n    this.creatorIdentifier = s.creatorIdentifier;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccessResponse } from \"../response/sendAccessResponse\";\nimport { SendAccessView } from \"../view/sendAccessView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendAccess extends Domain {\n  id: string;\n  type: SendType;\n  name: EncString;\n  file: SendFile;\n  text: SendText;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(obj?: SendAccessResponse) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n        expirationDate: null,\n        creatorIdentifier: null,\n      },\n      [\"id\", \"expirationDate\", \"creatorIdentifier\"]\n    );\n\n    this.type = obj.type;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendAccessView> {\n    const model = new SendAccessView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n      },\n      null,\n      key\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(key);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(key);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","export class SendAccessRequest {\n  password: string;\n}\n","<form #form (ngSubmit)=\"load()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-center mt-5\">\n    <div class=\"col-12\">\n      <h1 class=\"lead text-center mb-4\">Bitwarden Send</h1>\n    </div>\n    <div class=\"col-12 text-center\" *ngIf=\"creatorIdentifier != null\">\n      <p>{{ \"sendCreatorIdentifier\" | i18n: creatorIdentifier }}</p>\n    </div>\n    <div class=\"col-8\" *ngIf=\"hideEmail\">\n      <app-callout type=\"warning\" title=\"{{ 'warning' | i18n }}\">\n        {{ \"viewSendHiddenEmailWarning\" | i18n }}\n        <a href=\"https://bitwarden.com/help/receive-send/\" target=\"_blank\">{{\n          \"learnMore\" | i18n\n        }}</a\n        >.\n      </app-callout>\n    </div>\n  </div>\n  <div class=\"row justify-content-center\">\n    <div class=\"col-5\">\n      <div class=\"card d-block\">\n        <div class=\"card-body\" *ngIf=\"loading\" class=\"text-center\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && passwordRequired\">\n          <p>{{ \"sendProtectedPassword\" | i18n }}</p>\n          <p>{{ \"sendProtectedPasswordDontKnow\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"password\">{{ \"password\" | i18n }}</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"Password\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"password\"\n              required\n              appInputVerbatim\n              appAutofocus\n            />\n          </div>\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && unavailable\">\n          {{ \"sendAccessUnavailable\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && error\">\n          {{ \"unexpectedError\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && !passwordRequired && send\">\n          <p class=\"text-center\">\n            <b>{{ send.name }}</b>\n          </p>\n          <hr />\n          <!-- Text -->\n          <ng-container *ngIf=\"send.type === sendType.Text\">\n            <app-callout *ngIf=\"send.text.hidden\" type=\"tip\">{{\n              \"sendHiddenByDefault\" | i18n\n            }}</app-callout>\n            <div class=\"form-group\">\n              <textarea\n                id=\"text\"\n                rows=\"8\"\n                name=\"Text\"\n                [(ngModel)]=\"sendText\"\n                class=\"form-control\"\n                readonly\n              ></textarea>\n            </div>\n            <button\n              class=\"btn btn-block btn-link\"\n              type=\"button\"\n              (click)=\"toggleText()\"\n              *ngIf=\"send.text.hidden\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showText, 'bwi-eye-slash': showText }\"\n              ></i>\n              {{ \"toggleVisibility\" | i18n }}\n            </button>\n            <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"copyText()\">\n              <i class=\"bwi bwi-copy\" aria-hidden=\"true\"></i> {{ \"copyValue\" | i18n }}\n            </button>\n          </ng-container>\n          <!-- File -->\n          <ng-container *ngIf=\"send.type === sendType.File\">\n            <p>{{ send.file.fileName }}</p>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              (click)=\"download()\"\n              *ngIf=\"!downloading\"\n            >\n              <i class=\"bwi bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"downloadFile\" | i18n }} ({{ send.file.sizeName }})\n            </button>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              *ngIf=\"downloading\"\n              disabled=\"true\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </ng-container>\n          <p *ngIf=\"expirationDate\" class=\"text-center text-muted\">\n            Expires: {{ expirationDate | date: \"medium\" }}\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 text-center mt-5 text-muted\">\n      <p class=\"mb-0\">\n        {{ \"sendAccessTaglineProductDesc\" | i18n }}<br />\n        {{ \"sendAccessTaglineLearnMore\" | i18n }}\n        <a href=\"https://www.bitwarden.com/products/send?source=web-vault\" target=\"_blank\"\n          >Bitwarden Send</a\n        >\n        {{ \"sendAccessTaglineOr\" | i18n }}\n        <a href=\"https://vault.bitwarden.com/#/register\" target=\"_blank\">{{\n          \"sendAccessTaglineSignUp\" | i18n\n        }}</a>\n        {{ \"sendAccessTaglineTryToday\" | i18n }}\n      </p>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SEND_KDF_ITERATIONS } from \"@bitwarden/common/enums/kdfType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/encArrayBuffer\";\nimport { SendAccess } from \"@bitwarden/common/models/domain/sendAccess\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { SendAccessRequest } from \"@bitwarden/common/models/request/sendAccessRequest\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\nimport { SendAccessResponse } from \"@bitwarden/common/models/response/sendAccessResponse\";\nimport { SendAccessView } from \"@bitwarden/common/models/view/sendAccessView\";\n\n@Component({\n  selector: \"app-send-access\",\n  templateUrl: \"access.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccessComponent implements OnInit {\n  send: SendAccessView;\n  sendType = SendType;\n  downloading = false;\n  loading = true;\n  passwordRequired = false;\n  formPromise: Promise<SendAccessResponse>;\n  password: string;\n  showText = false;\n  unavailable = false;\n  error = false;\n  hideEmail = false;\n\n  private id: string;\n  private key: string;\n  private decKey: SymmetricCryptoKey;\n  private accessRequest: SendAccessRequest;\n\n  constructor(\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private fileDownloadService: FileDownloadService\n  ) {}\n\n  get sendText() {\n    if (this.send == null || this.send.text == null) {\n      return null;\n    }\n    return this.showText ? this.send.text.text : this.send.text.maskedText;\n  }\n\n  get expirationDate() {\n    if (this.send == null || this.send.expirationDate == null) {\n      return null;\n    }\n    return this.send.expirationDate;\n  }\n\n  get creatorIdentifier() {\n    if (this.send == null || this.send.creatorIdentifier == null) {\n      return null;\n    }\n    return this.send.creatorIdentifier;\n  }\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.params.subscribe(async (params) => {\n      this.id = params.sendId;\n      this.key = params.key;\n      if (this.key == null || this.id == null) {\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async download() {\n    if (this.send == null || this.decKey == null) {\n      return;\n    }\n\n    if (this.downloading) {\n      return;\n    }\n\n    const downloadData = await this.apiService.getSendFileDownloadData(\n      this.send,\n      this.accessRequest\n    );\n\n    if (Utils.isNullOrWhitespace(downloadData.url)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingSendFile\"));\n      return;\n    }\n\n    this.downloading = true;\n    const response = await fetch(new Request(downloadData.url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      this.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, this.decKey);\n      this.fileDownloadService.download({\n        fileName: this.send.file.fileName,\n        blobData: decBuf,\n        downloadMethod: \"save\",\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    this.downloading = false;\n  }\n\n  copyText() {\n    this.platformUtilsService.copyToClipboard(this.send.text.text);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendTypeText\"))\n    );\n  }\n\n  toggleText() {\n    this.showText = !this.showText;\n  }\n\n  async load() {\n    this.unavailable = false;\n    this.error = false;\n    this.hideEmail = false;\n    const keyArray = Utils.fromUrlB64ToArray(this.key);\n    this.accessRequest = new SendAccessRequest();\n    if (this.password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        this.password,\n        keyArray,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      this.accessRequest.password = Utils.fromBufferToB64(passwordHash);\n    }\n    try {\n      let sendResponse: SendAccessResponse = null;\n      if (this.loading) {\n        sendResponse = await this.apiService.postSendAccess(this.id, this.accessRequest);\n      } else {\n        this.formPromise = this.apiService.postSendAccess(this.id, this.accessRequest);\n        sendResponse = await this.formPromise;\n      }\n      this.passwordRequired = false;\n      const sendAccess = new SendAccess(sendResponse);\n      this.decKey = await this.cryptoService.makeSendKey(keyArray);\n      this.send = await sendAccess.decrypt(this.decKey);\n      this.showText = this.send.text != null ? !this.send.text.hidden : true;\n    } catch (e) {\n      if (e instanceof ErrorResponse) {\n        if (e.statusCode === 401) {\n          this.passwordRequired = true;\n        } else if (e.statusCode === 404) {\n          this.unavailable = true;\n        } else {\n          this.error = true;\n        }\n      }\n    }\n    this.loading = false;\n    this.hideEmail =\n      this.creatorIdentifier == null &&\n      !this.passwordRequired &&\n      !this.loading &&\n      !this.unavailable;\n  }\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\n@Directive()\nexport class SendComponent implements OnInit {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new UntypedFormGroup({\n    selectedDeletionDatePreset: new UntypedFormControl(),\n    selectedExpirationDatePreset: new UntypedFormControl(),\n    defaultDeletionDateTime: new UntypedFormControl(),\n    defaultExpirationDateTime: new UntypedFormControl(),\n    fallbackDeletionDate: new UntypedFormControl(),\n    fallbackDeletionTime: new UntypedFormControl(),\n    fallbackExpirationDate: new UntypedFormControl(),\n    fallbackExpirationTime: new UntypedFormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as UntypedFormControl;\n  }\n\n  get selectedExpirationDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as UntypedFormControl;\n  }\n\n  get defaultDeletionDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as UntypedFormControl;\n  }\n\n  get defaultExpirationDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as UntypedFormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/encArrayBuffer\";\nimport { Send } from \"@bitwarden/common/models/domain/send\";\nimport { SendFileView } from \"@bitwarden/common/models/view/sendFileView\";\nimport { SendTextView } from \"@bitwarden/common/models/view/sendTextView\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  private sendLinkBaseUrl: string;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n    this.disableHideEmail = await this.policyService.policyAppliesToUser(\n      PolicyType.SendOptions,\n      (p) => p.data.disableHideEmail\n    );\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        const copySuccess = await this.copyLinkToClipboard(this.link);\n        if (copySuccess ?? true) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n          );\n        } else {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n            null,\n            this.i18nService.t(\"ok\"),\n            null,\n            \"success\",\n            null\n          );\n          await this.copyLinkToClipboard(this.link);\n        }\n      }\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n}\n","<div class=\"row\" [formGroup]=\"datesForm\">\n  <div class=\"col-6 form-group\">\n    <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n    <ng-template #deletionDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <ng-container *ngSwitchCase=\"'firefox'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              [readOnly]=\"disableSend\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <input\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              type=\"time\"\n              name=\"DeletionTimeDate\"\n              formControlName=\"fallbackDeletionTime\"\n              required\n              placeholder=\"HH:MM AM/PM\"\n              [readOnly]=\"disableSend\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'safari'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              [readOnly]=\"disableSend\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <select\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              [required]=\"!editMode\"\n              formControlName=\"fallbackDeletionTime\"\n              name=\"SafariDeletionTime\"\n            >\n              <option\n                *ngFor=\"let o of safariDeletionTimePresetOptions\"\n                [ngValue]=\"o.twentyFourHour\"\n              >\n                {{ o.twelveHour }}\n              </option>\n            </select>\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"deletionDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"DeletionDate\"\n            formControlName=\"defaultDeletionDateTime\"\n            required\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"deletionDate\"\n        name=\"SelectedDeletionDatePreset\"\n        formControlName=\"selectedDeletionDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedDeletionDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"deletionDateDesc\" | i18n }}</div>\n  </div>\n  <div class=\"col-6 form-group\">\n    <div class=\"d-flex\">\n      <label for=\"expirationDate\">{{ \"expirationDate\" | i18n }}</label>\n      <a\n        href=\"#\"\n        appStopClick\n        (click)=\"clearExpiration()\"\n        class=\"ml-auto\"\n        *ngIf=\"editMode && !disabled\"\n      >\n        {{ \"clear\" | i18n }}\n      </a>\n    </div>\n    <ng-template #expirationDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <div *ngSwitchCase=\"'firefox'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n        <!-- non-default cases are not showing up -->\n        <div *ngSwitchCase=\"'safari'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            [required]=\"!editMode\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"expirationDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"ExpirationDate\"\n            formControlName=\"defaultExpirationDateTime\"\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"expirationDate\"\n        name=\"SelectedExpirationDatePreset\"\n        formControlName=\"selectedExpirationDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedExpirationDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"expirationDateDesc\" | i18n }}</div>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"@bitwarden/angular/components/send/efflux-dates.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"sendAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"sendAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"send\">\n        <app-callout *ngIf=\"disableSend\">\n          <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n        </app-callout>\n        <app-callout *ngIf=\"!disableSend && disableHideEmail\">\n          <span>{{ \"sendOptionsPolicyInEffect\" | i18n }}</span>\n          <ul class=\"mb-0\">\n            <li>{{ \"sendDisableHideEmailInEffect\" | i18n }}</li>\n          </ul>\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"send.name\"\n              required\n              [readOnly]=\"disableSend\"\n            />\n            <small class=\"form-text text-muted\">{{ \"sendNameDesc\" | i18n }}</small>\n          </div>\n        </div>\n        <div class=\"row\" *ngIf=\"!editMode\">\n          <div class=\"col-6 form-group\">\n            <label>{{ \"whatTypeOfSend\" | i18n }}</label>\n            <div class=\"form-check\" *ngFor=\"let o of typeOptions\">\n              <input\n                class=\"form-check-input\"\n                type=\"radio\"\n                [(ngModel)]=\"send.type\"\n                name=\"Type_{{ o.value }}\"\n                id=\"type_{{ o.value }}\"\n                [value]=\"o.value\"\n                (change)=\"typeChanged(o)\"\n                [checked]=\"send.type === o.value\"\n              />\n              <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n                {{ o.name }}\n              </label>\n            </div>\n          </div>\n        </div>\n        <!-- Text -->\n        <ng-container *ngIf=\"send.type === sendType.Text\">\n          <div class=\"form-group\">\n            <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n            <textarea\n              id=\"text\"\n              name=\"Text.Text\"\n              rows=\"6\"\n              [(ngModel)]=\"send.text.text\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <small class=\"form-text text-muted\">{{ \"sendTextDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.text.hidden\"\n                id=\"text-hidden\"\n                name=\"Text.Hidden\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"text-hidden\">{{\n                \"textHiddenByDefault\" | i18n\n              }}</label>\n            </div>\n          </div>\n        </ng-container>\n        <!-- File -->\n        <ng-container *ngIf=\"send.type === sendType.File\">\n          <div class=\"form-group\">\n            <div *ngIf=\"editMode\">\n              <strong class=\"d-block\">{{ \"file\" | i18n }}</strong>\n              {{ send.file.fileName }} ({{ send.file.sizeName }})\n            </div>\n            <div *ngIf=\"!editMode\">\n              <label for=\"file\">{{ \"file\" | i18n }}</label>\n              <input\n                type=\"file\"\n                id=\"file\"\n                class=\"form-control-file\"\n                name=\"file\"\n                required\n                [disabled]=\"disableSend\"\n              />\n              <small class=\"form-text text-muted\"\n                >{{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}</small\n              >\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-5\">{{ \"share\" | i18n }}</h3>\n        <div class=\"form-group\" *ngIf=\"link\">\n          <label for=\"link\">{{ \"sendLinkLabel\" | i18n }}</label>\n          <input\n            type=\"text\"\n            readonly\n            id=\"link\"\n            name=\"Link\"\n            [(ngModel)]=\"link\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [(ngModel)]=\"copyLink\"\n              id=\"copy-link\"\n              name=\"CopyLink\"\n            />\n            <label class=\"form-check-label\" for=\"copy-link\">{{\n              \"copySendLinkOnSave\" | i18n\n            }}</label>\n          </div>\n        </div>\n        <div\n          id=\"options-header\"\n          class=\"section-header d-flex flex-row align-items-center mt-5\"\n          (click)=\"toggleOptions()\"\n        >\n          <h3 class=\"mb-0 mr-2\">{{ \"options\" | i18n }}</h3>\n          <a class=\"mb-1\" href=\"#\" appStopClick role=\"button\">\n            <i\n              class=\"bwi\"\n              aria-hidden=\"true\"\n              [ngClass]=\"{ 'bwi-angle-down': !showOptions, 'bwi-chevron-up': showOptions }\"\n            ></i>\n          </a>\n        </div>\n        <div id=\"options\" [hidden]=\"!showOptions\">\n          <app-send-efflux-dates\n            [initialDeletionDate]=\"send.deletionDate\"\n            [initialExpirationDate]=\"send.expirationDate\"\n            [editMode]=\"editMode\"\n            [disabled]=\"disableSend\"\n            (datesChanged)=\"setDates($event)\"\n          >\n          </app-send-efflux-dates>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"maxAccessCount\">{{ \"maxAccessCount\" | i18n }}</label>\n              <input\n                id=\"maxAccessCount\"\n                class=\"form-control\"\n                type=\"number\"\n                name=\"MaxAccessCount\"\n                [(ngModel)]=\"send.maxAccessCount\"\n                min=\"1\"\n                [readOnly]=\"disableSend\"\n              />\n              <div class=\"form-text text-muted small\">{{ \"maxAccessCountDesc\" | i18n }}</div>\n            </div>\n            <div class=\"col-6 form-group\" *ngIf=\"editMode\">\n              <label for=\"accessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n              <input\n                id=\"accessCount\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"AccessCount\"\n                readonly\n                [(ngModel)]=\"send.accessCount\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"password\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Password\"\n                  [(ngModel)]=\"password\"\n                  [readOnly]=\"disableSend\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePasswordVisible()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                </div>\n              </div>\n              <div class=\"form-text text-muted small\">{{ \"sendPasswordDesc\" | i18n }}</div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <div class=\"form-text text-muted small\">{{ \"sendNotesDesc\" | i18n }}</div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.hideEmail\"\n                id=\"hideEmail\"\n                name=\"HideEmail\"\n                [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"hideEmail\">\n                {{ \"hideEmail\" | i18n }}\n              </label>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.disabled\"\n                id=\"disabled\"\n                name=\"Disabled\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"disabled\">{{ \"disableThisSend\" | i18n }}</label>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [ngClass]=\"{ loading: form.loading }\"\n          [disabled]=\"form.loading || disableSend\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"send\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/send/add-edit.component\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    // Copy function on web depends on the modal being open or not. Since this event occurs during a transition\n    // of the modal closing we need to add a small delay to make sure state of the DOM is consistent.\n    return new Promise((resolve) => {\n      window.setTimeout(() => resolve(super.copyLinkToClipboard(link)), 500);\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-3 groupings\">\n      <div class=\"card vault-filters\">\n        <div class=\"card-header d-flex\">\n          {{ \"filters\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <input\n            type=\"search\"\n            placeholder=\"{{ searchPlaceholder || ('searchSends' | i18n) }}\"\n            id=\"search\"\n            class=\"form-control\"\n            [(ngModel)]=\"searchText\"\n            (input)=\"searchTextChanged()\"\n            autocomplete=\"off\"\n            appAutofocus\n          />\n          <div class=\"filter\">\n            <ul class=\"filter-options\">\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedAll }\">\n                <span class=\"filter-buttons\">\n                  <button bitButton class=\"filter-button\" appStopClick (click)=\"selectAll()\">\n                    <i class=\"bwi bwi-fw bwi-filter\"></i>{{ \"allSends\" | i18n }}\n                  </button>\n                </span>\n              </li>\n            </ul>\n          </div>\n          <div class=\"filter\">\n            <div class=\"filter-heading\">\n              <h3>{{ \"types\" | i18n }}</h3>\n            </div>\n            <ul class=\"filter-options\">\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedType === sendType.Text }\">\n                <span class=\"filter-buttons\">\n                  <button\n                    bitButton\n                    class=\"filter-button\"\n                    appStopClick\n                    (click)=\"selectType(sendType.Text)\"\n                  >\n                    <i class=\"bwi bwi-fw bwi-file-text\"></i>{{ \"sendTypeText\" | i18n }}\n                  </button>\n                </span>\n              </li>\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedType === sendType.File }\">\n                <span class=\"filter-buttons\">\n                  <button\n                    bitButton\n                    class=\"filter-button\"\n                    appStopClick\n                    (click)=\"selectType(sendType.File)\"\n                  >\n                    <i class=\"bwi bwi-fw bwi-file\"></i>{{ \"sendTypeFile\" | i18n }}\n                  </button>\n                </span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"send\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addSend()\"\n            [disabled]=\"disableSend\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <!--Listing Table-->\n      <table class=\"table table-hover table-list\" *ngIf=\"filteredSends && filteredSends.length\">\n        <tbody>\n          <tr *ngFor=\"let s of filteredSends\">\n            <td class=\"table-list-icon\">\n              <div class=\"icon\" aria-hidden=\"true\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type == sendType.File\"></i>\n                <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type == sendType.Text\"></i>\n              </div>\n            </td>\n            <td class=\"reduced-lh wrap\">\n              <a href=\"#\" appStopClick appStopProp (click)=\"editSend(s)\">{{ s.name }}</a>\n              <ng-container *ngIf=\"s.disabled\">\n                <i\n                  class=\"bwi bwi-exclamation-triangle\"\n                  appStopProp\n                  title=\"{{ 'disabled' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.password\">\n                <i\n                  class=\"bwi bwi-key\"\n                  appStopProp\n                  title=\"{{ 'password' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"password\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.maxAccessCountReached\">\n                <i\n                  class=\"bwi bwi-ban\"\n                  appStopProp\n                  title=\"{{ 'maxAccessCountReached' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.expired\">\n                <i\n                  class=\"bwi bwi-clock\"\n                  appStopProp\n                  title=\"{{ 'expired' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.pendingDelete\">\n                <i\n                  class=\"bwi bwi-trash\"\n                  appStopProp\n                  title=\"{{ 'pendingDeletion' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n              </ng-container>\n              <br />\n              <small appStopProp>{{ s.deletionDate | date: \"medium\" }}</small>\n            </td>\n            <td class=\"table-list-options\">\n              <button\n                [bitMenuTriggerFor]=\"sendOptions\"\n                class=\"tw-border-none tw-bg-transparent tw-text-main\"\n                type=\"button\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu #sendOptions>\n                <button bitMenuItem (click)=\"copy(s)\">\n                  <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                  {{ \"copySendLink\" | i18n }}\n                </button>\n                <button bitMenuItem (click)=\"removePassword(s)\" *ngIf=\"s.password && !disableSend\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"removePassword\" | i18n }}\n                </button>\n                <button bitMenuItem (click)=\"delete(s)\">\n                  <span class=\"tw-text-danger\">\n                    <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                    {{ \"delete\" | i18n }}\n                  </span>\n                </button>\n              </bit-menu>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div class=\"no-items\" *ngIf=\"filteredSends && !filteredSends.length\">\n        <ng-container *ngIf=\"!loaded\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"loaded\">\n          <img class=\"no-items-image\" aria-hidden=\"true\" />\n          <p>{{ \"noSendsInList\" | i18n }}</p>\n          <button (click)=\"addSend()\" class=\"btn btn-outline-primary\" [disabled]=\"disableSend\">\n            <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #sendAddEdit></ng-template>\n","import { Component, NgZone, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SendComponent as BaseSendComponent } from \"@bitwarden/angular/components/send/send.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\n\nconst BroadcasterSubscriptionId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send\",\n  templateUrl: \"send.component.html\",\n})\nexport class SendComponent extends BaseSendComponent {\n  @ViewChild(\"sendAddEdit\", { read: ViewContainerRef, static: true })\n  sendAddEditModalRef: ViewContainerRef;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    searchService: SearchService,\n    policyService: PolicyService,\n    private modalService: ModalService,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n\n    // Broadcaster subscription - load if sync completes in the background\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n\n    const component = await this.editSend(null);\n    component.type = this.type;\n  }\n\n  async editSend(send: SendView) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.sendAddEditModalRef,\n      (comp) => {\n        comp.sendId = send == null ? null : send.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-deauthorize-sessions\",\n  templateUrl: \"deauthorize-sessions.component.html\",\n})\nexport class DeauthorizeSessionsComponent {\n  masterPassword: Verification;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postSecurityStamp(request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"sessionsDeauthorized\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deAuthTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deAuthTitle\">{{ \"deauthorizeSessions\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deauthorizeSessionsDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deauthorizeSessionsWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deauthorizeSessions\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { AccountService } from \"@bitwarden/common/abstractions/account/account.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-delete-account\",\n  templateUrl: \"delete-account.component.html\",\n})\nexport class DeleteAccountComponent {\n  formPromise: Promise<void>;\n\n  deleteForm = this.formBuilder.group({\n    verification: undefined as Verification | undefined,\n  });\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private formBuilder: FormBuilder,\n    private accountService: AccountService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const verification = this.deleteForm.get(\"verification\").value;\n      this.formPromise = this.accountService.delete(verification);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteAccountTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      [formGroup]=\"deleteForm\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deleteAccountTitle\">{{ \"deleteAccount\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deleteAccountDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n        <app-user-verification ngDefaultControl formControlName=\"verification\" name=\"verification\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteAccount\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class EmailTokenRequest extends SecretVerificationRequest {\n  newEmail: string;\n  masterPasswordHash: string;\n}\n","import { EmailTokenRequest } from \"./emailTokenRequest\";\n\nexport class EmailRequest extends EmailTokenRequest {\n  newMasterPasswordHash: string;\n  token: string;\n  key: string;\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <app-callout type=\"warning\" *ngIf=\"showTwoFactorEmailWarning\">\n    {{ \"changeEmailTwoFactorWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          [readonly]=\"tokenSent\"\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"newEmail\">{{ \"newEmail\" | i18n }}</label>\n        <input\n          id=\"newEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"NewEmail\"\n          [(ngModel)]=\"newEmail\"\n          required\n          [readonly]=\"tokenSent\"\n          inputmode=\"email\"\n          appInputVerbatim=\"false\"\n        />\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"tokenSent\">\n    <hr />\n    <p>{{ \"changeEmailDesc\" | i18n: newEmail }}</p>\n    <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"token\">{{ \"code\" | i18n }}</label>\n          <input\n            id=\"token\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Token\"\n            [(ngModel)]=\"token\"\n            required\n            appInputVerbatim\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span *ngIf=\"!tokenSent\">{{ \"continue\" | i18n }}</span>\n    <span *ngIf=\"tokenSent\">{{ \"changeEmail\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" *ngIf=\"tokenSent\" (click)=\"reset()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { EmailRequest } from \"@bitwarden/common/models/request/emailRequest\";\nimport { EmailTokenRequest } from \"@bitwarden/common/models/request/emailTokenRequest\";\n\n@Component({\n  selector: \"app-change-email\",\n  templateUrl: \"change-email.component.html\",\n})\nexport class ChangeEmailComponent implements OnInit {\n  masterPassword: string;\n  newEmail: string;\n  token: string;\n  tokenSent = false;\n  showTwoFactorEmailWarning = false;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    const twoFactorProviders = await this.apiService.getTwoFactorProviders();\n    this.showTwoFactorEmailWarning = twoFactorProviders.data.some(\n      (p) => p.type === TwoFactorProviderType.Email && p.enabled\n    );\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    this.newEmail = this.newEmail.trim().toLowerCase();\n    if (!this.tokenSent) {\n      const request = new EmailTokenRequest();\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      try {\n        this.formPromise = this.apiService.postEmailToken(request);\n        await this.formPromise;\n        this.tokenSent = true;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const request = new EmailRequest();\n      request.token = this.token;\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.newEmail,\n        kdf,\n        kdfIterations\n      );\n      request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        newKey\n      );\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n      request.key = newEncKey[1].encryptedString;\n      try {\n        this.formPromise = this.apiService.postEmail(request);\n        await this.formPromise;\n        this.reset();\n        this.platformUtilsService.showToast(\n          \"success\",\n          this.i18nService.t(\"emailChanged\"),\n          this.i18nService.t(\"logBackIn\")\n        );\n        this.messagingService.send(\"logout\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n\n  reset() {\n    this.token = this.newEmail = this.masterPassword = null;\n    this.tokenSent = false;\n  }\n}\n","export class UpdateProfileRequest {\n  name: string;\n  masterPasswordHint: string;\n  culture = \"en-US\"; // deprecated\n\n  constructor(name: string, masterPasswordHint: string) {\n    this.name = name;\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"profile && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"profile.name\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">{{ \"email\" | i18n }}</label>\n        <input\n          id=\"email\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Email\"\n          [(ngModel)]=\"profile.email\"\n          readonly\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"mb-3\">\n        <app-avatar\n          data=\"{{ profile | userName }}\"\n          [email]=\"profile.email\"\n          dynamic=\"true\"\n          size=\"75\"\n          fontSize=\"35\"\n        >\n        </app-avatar>\n      </div>\n      <hr />\n      <p *ngIf=\"fingerprint\">\n        {{ \"yourAccountsFingerprint\" | i18n }}:\n        <a\n          href=\"https://bitwarden.com/help/fingerprint-phrase/\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i></a\n        ><br />\n        <code>{{ fingerprint }}</code>\n      </p>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UpdateProfileRequest } from \"@bitwarden/common/models/request/updateProfileRequest\";\nimport { ProfileResponse } from \"@bitwarden/common/models/response/profileResponse\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"profile.component.html\",\n})\nexport class ProfileComponent implements OnInit {\n  loading = true;\n  profile: ProfileResponse;\n  fingerprint: string;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.profile = await this.apiService.getProfile();\n    this.loading = false;\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    if (fingerprint != null) {\n      this.fingerprint = fingerprint.join(\"-\");\n    }\n  }\n\n  async submit() {\n    try {\n      const request = new UpdateProfileRequest(this.profile.name, this.profile.masterPasswordHint);\n      this.formPromise = this.apiService.putProfile(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"accountUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myAccount\" | i18n }}</h1>\n</div>\n<app-profile></app-profile>\n<ng-container *ngIf=\"showChangeEmail\">\n  <div class=\"secondary-header\">\n    <h1>{{ \"changeEmail\" | i18n }}</h1>\n  </div>\n  <app-change-email></app-change-email>\n</ng-container>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button bitButton buttonType=\"danger\" (click)=\"deauthorizeSessions()\">\n      {{ \"deauthorizeSessions\" | i18n }}\n    </button>\n    <button bitButton buttonType=\"danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n    <button bitButton buttonType=\"danger\" (click)=\"deleteAccount()\">\n      {{ \"deleteAccount\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deauthorizeSessionsTemplate></ng-template>\n<ng-template #purgeVaultTemplate></ng-template>\n<ng-template #deleteAccountTemplate></ng-template>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { DeauthorizeSessionsComponent } from \"./deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"./delete-account.component\";\nimport { PurgeVaultComponent } from \"./purge-vault.component\";\n\n@Component({\n  selector: \"app-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  @ViewChild(\"deauthorizeSessionsTemplate\", { read: ViewContainerRef, static: true })\n  deauthModalRef: ViewContainerRef;\n  @ViewChild(\"purgeVaultTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"deleteAccountTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  showChangeEmail = true;\n\n  constructor(\n    private modalService: ModalService,\n    private apiService: ApiService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeEmail = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async deauthorizeSessions() {\n    await this.modalService.openViewRef(DeauthorizeSessionsComponent, this.deauthModalRef);\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef);\n  }\n\n  async deleteAccount() {\n    await this.modalService.openViewRef(DeleteAccountComponent, this.deleteModalRef);\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"./organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.plan === \"families\") {\n        this.orgPlansComponent.plan = PlanType.FamiliesAnnually;\n        this.orgPlansComponent.product = ProductType.Families;\n      } else if (qParams.plan === \"teams\") {\n        this.orgPlansComponent.plan = PlanType.TeamsAnnually;\n        this.orgPlansComponent.product = ProductType.Teams;\n      } else if (qParams.plan === \"enterprise\") {\n        this.orgPlansComponent.plan = PlanType.EnterpriseAnnually;\n        this.orgPlansComponent.product = ProductType.Enterprise;\n      }\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"page-header\">\n        <h1>{{ \"newOrganization\" | i18n }}</h1>\n      </div>\n      <p>{{ \"newOrganizationDesc\" | i18n }}</p>\n      <app-organization-plans></app-organization-plans>\n    </div>\n  </div>\n</div>\n","export class UpdateDomainsRequest {\n  equivalentDomains: string[][];\n  excludedGlobalEquivalentDomains: number[];\n}\n","<div class=\"page-header\">\n  <h1>{{ \"domainRules\" | i18n }}</h1>\n</div>\n<p>{{ \"domainRulesDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <h2>{{ \"customEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"!loading\">\n    <div class=\"form-group d-flex\" *ngFor=\"let d of custom; let i = index; trackBy: indexTrackBy\">\n      <div class=\"flex-fill\">\n        <label for=\"customDomain_{{ i }}\" class=\"sr-only\">{{\n          \"customDomainX\" | i18n: i + 1\n        }}</label>\n        <textarea\n          class=\"form-control\"\n          name=\"CustomDomain[{{ i }}]\"\n          id=\"customDomain_{{ i }}\"\n          [(ngModel)]=\"custom[i]\"\n          placeholder=\"{{ 'ex' | i18n }} google.com, gmail.com\"\n          required\n        ></textarea>\n      </div>\n      <button\n        type=\"button\"\n        class=\"btn btn-link text-danger ml-2\"\n        (click)=\"remove(i)\"\n        appA11yTitle=\"{{ 'remove' | i18n }}\"\n      >\n        <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <button type=\"button\" (click)=\"add()\" class=\"btn btn-outline-secondary btn-sm mb-2\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomDomain\" | i18n }}\n    </button>\n    <small class=\"text-muted d-block mb-3\">{{ \"newCustomDomainDesc\" | i18n }}</small>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n  <h2 class=\"spaced-header\">{{ \"globalEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <table class=\"table table-hover table-list\" *ngIf=\"!loading && global.length > 0\">\n    <tbody>\n      <tr *ngFor=\"let d of global\">\n        <td [ngClass]=\"{ 'table-list-strike': d.excluded }\">{{ d.domains }}</td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"!d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                {{ \"exclude\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-plus\" aria-hidden=\"true\"></i>\n                {{ \"include\" | i18n }}\n              </a>\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"customize(d)\">\n                <i class=\"bwi bwi-fw bwi-cut\" aria-hidden=\"true\"></i>\n                {{ \"customize\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UpdateDomainsRequest } from \"@bitwarden/common/models/request/updateDomainsRequest\";\n\n@Component({\n  selector: \"app-domain-rules\",\n  templateUrl: \"domain-rules.component.html\",\n})\nexport class DomainRulesComponent implements OnInit {\n  loading = true;\n  custom: string[] = [];\n  global: any[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const response = await this.apiService.getSettingsDomains();\n    this.loading = false;\n    if (response.equivalentDomains != null) {\n      this.custom = response.equivalentDomains.map((d) => d.join(\", \"));\n    }\n    if (response.globalEquivalentDomains != null) {\n      this.global = response.globalEquivalentDomains.map((d) => {\n        return {\n          domains: d.domains.join(\", \"),\n          excluded: d.excluded,\n          key: d.type,\n        };\n      });\n    }\n  }\n\n  toggleExcluded(globalDomain: any) {\n    globalDomain.excluded = !globalDomain.excluded;\n  }\n\n  customize(globalDomain: any) {\n    globalDomain.excluded = true;\n    this.custom.push(globalDomain.domains);\n  }\n\n  remove(index: number) {\n    this.custom.splice(index, 1);\n  }\n\n  add() {\n    this.custom.push(\"\");\n  }\n\n  async submit() {\n    const request = new UpdateDomainsRequest();\n    request.excludedGlobalEquivalentDomains = this.global\n      .filter((d) => d.excluded)\n      .map((d) => d.key);\n    if (request.excludedGlobalEquivalentDomains.length === 0) {\n      request.excludedGlobalEquivalentDomains = null;\n    }\n    request.equivalentDomains = this.custom\n      .filter((d) => d != null && d.trim() !== \"\")\n      .map((d) => d.split(\",\").map((d2) => d2.trim()));\n    if (request.equivalentDomains.length === 0) {\n      request.equivalentDomains = null;\n    }\n\n    try {\n      this.formPromise = this.apiService.putSettingsDomains(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"domainsUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  indexTrackBy(index: number, obj: any): any {\n    return index;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\n\n@Component({\n  selector: \"emergency-access-attachments\",\n  templateUrl: \"../vault/attachments.component.html\",\n})\nexport class EmergencyAccessAttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = true;\n  canAccessAttachments = true;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  protected async init() {\n    // Do nothing since cipher is already decoded\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return false;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../vault/add-edit.component.html\",\n})\nexport class EmergencyAddEditComponent extends BaseAddEditComponent {\n  originalCipher: Cipher = null;\n  viewOnly = true;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    messagingService: MessagingService,\n    eventService: EventService,\n    policyService: PolicyService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async load() {\n    this.title = this.i18nService.t(\"viewItem\");\n  }\n\n  protected async loadCipher() {\n    return Promise.resolve(this.originalCipher);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"vault\" | i18n }}</h1>\n</div>\n<div class=\"mt-4\">\n  <ng-container *ngIf=\"ciphers.length\">\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown *ngIf=\"c.hasAttachments\">\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"viewAttachments(c)\">\n                  <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n                  {{ \"attachments\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #attachments></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { EmergencyAccessViewResponse } from \"@bitwarden/common/models/response/emergencyAccessResponse\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { EmergencyAccessAttachmentsComponent } from \"./emergency-access-attachments.component\";\nimport { EmergencyAddEditComponent } from \"./emergency-add-edit.component\";\n\n@Component({\n  selector: \"emergency-access-view\",\n  templateUrl: \"emergency-access-view.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessViewComponent implements OnInit {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n\n  id: string;\n  ciphers: CipherView[] = [];\n  loaded = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private modalService: ModalService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private apiService: ApiService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.route.params.subscribe((qParams) => {\n      if (qParams.id == null) {\n        return this.router.navigate([\"settings/emergency-access\"]);\n      }\n\n      this.id = qParams.id;\n\n      this.load();\n    });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    // eslint-disable-next-line\n    const [_, childComponent] = await this.modalService.openViewRef(\n      EmergencyAddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.cipher = cipher;\n      }\n    );\n\n    return childComponent;\n  }\n\n  async load() {\n    const response = await this.apiService.postEmergencyAccessView(this.id);\n    this.ciphers = await this.getAllCiphers(response);\n    this.loaded = true;\n  }\n\n  async viewAttachments(cipher: CipherView) {\n    await this.modalService.openViewRef(\n      EmergencyAccessAttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipher = cipher;\n        comp.emergencyAccessId = this.id;\n      }\n    );\n  }\n\n  protected async getAllCiphers(response: EmergencyAccessViewResponse): Promise<CipherView[]> {\n    const ciphers = response.ciphers;\n\n    const decCiphers: CipherView[] = [];\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(response.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    const promises: any[] = [];\n    ciphers.forEach((cipherResponse) => {\n      const cipherData = new CipherData(cipherResponse);\n      const cipher = new Cipher(cipherData);\n      promises.push(cipher.decrypt(oldEncKey).then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.cipherService.getLocaleSortingFunction());\n\n    return decCiphers;\n  }\n}\n","export enum EmergencyAccessStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  RecoveryInitiated = 3,\n  RecoveryApproved = 4,\n}\n","export enum EmergencyAccessType {\n  View = 0,\n  Takeover = 1,\n}\n","export class EmergencyAccessConfirmRequest {\n  key: string;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessInviteRequest {\n  email: string;\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessUpdateRequest {\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n  keyEncrypted?: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          <app-premium-badge *ngIf=\"readOnly\"></app-premium-badge>\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteEmergencyContactDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"email\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n            />\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userAccess\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/emergency-access/#user-access\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeView\"\n            [value]=\"emergencyAccessType.View\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeView\">\n            {{ \"view\" | i18n }}\n            <small>{{ \"viewDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeTakeover\"\n            [value]=\"emergencyAccessType.Takeover\"\n            [(ngModel)]=\"type\"\n            [disabled]=\"readOnly\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeTakeover\">\n            {{ \"takeover\" | i18n }}\n            <small>{{ \"takeoverDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-group col-6 mt-4\">\n          <label for=\"waitTime\">{{ \"waitTime\" | i18n }}</label>\n          <select\n            id=\"waitTime\"\n            name=\"waitTime\"\n            [(ngModel)]=\"waitTime\"\n            class=\"form-control\"\n            [disabled]=\"readOnly\"\n          >\n            <option *ngFor=\"let o of waitTimes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n          <small class=\"text-muted\">{{ \"waitTimeDesc\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <bit-submit-button [loading]=\"loading || form.loading\" [disabled]=\"readOnly\">\n          {{ \"save\" | i18n }}\n        </bit-submit-button>\n        <button bitButton buttonType=\"secondary\" type=\"button\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            bitButton\n            buttonType=\"danger\"\n            type=\"button\"\n            (click)=\"delete()\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EmergencyAccessType } from \"@bitwarden/common/enums/emergencyAccessType\";\nimport { EmergencyAccessInviteRequest } from \"@bitwarden/common/models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessUpdateRequest } from \"@bitwarden/common/models/request/emergencyAccessUpdateRequest\";\n\n@Component({\n  selector: \"emergency-access-add-edit\",\n  templateUrl: \"emergency-access-add-edit.component.html\",\n})\nexport class EmergencyAccessAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() emergencyAccessId: string;\n  @Output() onSaved = new EventEmitter();\n  @Output() onDeleted = new EventEmitter();\n\n  loading = true;\n  readOnly = false;\n  editMode = false;\n  title: string;\n  email: string;\n  type: EmergencyAccessType = EmergencyAccessType.View;\n\n  formPromise: Promise<any>;\n\n  emergencyAccessType = EmergencyAccessType;\n  waitTimes: { name: string; value: number }[];\n  waitTime: number;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.emergencyAccessId != null;\n\n    this.waitTimes = [\n      { name: this.i18nService.t(\"oneDay\"), value: 1 },\n      { name: this.i18nService.t(\"days\", \"2\"), value: 2 },\n      { name: this.i18nService.t(\"days\", \"7\"), value: 7 },\n      { name: this.i18nService.t(\"days\", \"14\"), value: 14 },\n      { name: this.i18nService.t(\"days\", \"30\"), value: 30 },\n      { name: this.i18nService.t(\"days\", \"90\"), value: 90 },\n    ];\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editEmergencyContact\");\n      try {\n        const emergencyAccess = await this.apiService.getEmergencyAccess(this.emergencyAccessId);\n        this.type = emergencyAccess.type;\n        this.waitTime = emergencyAccess.waitTimeDays;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteEmergencyContact\");\n      this.waitTime = this.waitTimes[2].value;\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new EmergencyAccessUpdateRequest();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.putEmergencyAccess(this.emergencyAccessId, request);\n      } else {\n        const request = new EmergencyAccessInviteRequest();\n        request.email = this.email.trim();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.postEmergencyAccessInvite(request);\n      }\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSaved.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    this.onDeleted.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"emergency-access-confirm\",\n  templateUrl: \"emergency-access-confirm.component.html\",\n})\nexport class EmergencyAccessConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() emergencyAccessId: string;\n  @Input() formPromise: Promise<any>;\n  @Output() onConfirmed = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n\n  constructor(\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(this.userId);\n      if (publicKeyResponse != null) {\n        const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n        const fingerprint = await this.cryptoService.getFingerprint(this.userId, publicKey.buffer);\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    try {\n      this.onConfirmed.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export class EmergencyAccessPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ \"takeover\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPassword\"\n                type=\"password\"\n                name=\"NewMasterPasswordHash\"\n                class=\"form-control mb-1\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <app-password-strength\n                [password]=\"masterPassword\"\n                [email]=\"email\"\n                [showText]=\"true\"\n                (passwordStrengthResult)=\"getStrengthResult($event)\"\n              >\n              </app-password-strength>\n            </div>\n          </div>\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"password\"\n                name=\"MasterPasswordRetype\"\n                class=\"form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ChangePasswordComponent } from \"@bitwarden/angular/components/change-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { EmergencyAccessPasswordRequest } from \"@bitwarden/common/models/request/emergencyAccessPasswordRequest\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\n@Component({\n  selector: \"emergency-access-takeover\",\n  templateUrl: \"emergency-access-takeover.component.html\",\n})\nexport class EmergencyAccessTakeoverComponent extends ChangePasswordComponent implements OnInit {\n  @Output() onDone = new EventEmitter();\n  @Input() emergencyAccessId: string;\n  @Input() name: string;\n  @Input() email: string;\n  @Input() kdf: KdfType;\n  @Input() kdfIterations: number;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private apiService: ApiService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    const response = await this.apiService.getEmergencyGrantorPolicies(this.emergencyAccessId);\n    if (response.data != null && response.data.length > 0) {\n      const policies = response.data.map(\n        (policyResponse: PolicyResponse) => new Policy(new PolicyData(policyResponse))\n      );\n      this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(\n        policies\n      );\n    }\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    const takeoverResponse = await this.apiService.postEmergencyAccessTakeover(\n      this.emergencyAccessId\n    );\n\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(takeoverResponse.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    if (oldEncKey == null) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"unexpectedError\")\n      );\n      return;\n    }\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      takeoverResponse.kdf,\n      takeoverResponse.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    const encKey = await this.cryptoService.remakeEncKey(key, oldEncKey);\n\n    const request = new EmergencyAccessPasswordRequest();\n    request.newMasterPasswordHash = masterPasswordHash;\n    request.key = encKey[1].encryptedString;\n\n    this.apiService.postEmergencyAccessPassword(this.emergencyAccessId, request);\n\n    try {\n      this.onDone.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"emergencyAccess\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"emergencyAccessDesc\" | i18n }}\n  <a href=\"https://bitwarden.com/help/emergency-access/\" target=\"_blank\" rel=\"noopener\">\n    {{ \"learnMore\" | i18n }}.\n  </a>\n</p>\n\n<p *ngIf=\"isOrganizationOwner\">\n  <b>{{ \"warning\" | i18n }}:</b> {{ \"emergencyAccessOwnerWarning\" | i18n }}\n</p>\n\n<div class=\"page-header d-flex\">\n  <h2>\n    {{ \"trustedEmergencyContacts\" | i18n }}\n    <app-premium-badge></app-premium-badge>\n  </h2>\n  <div class=\"ml-auto d-flex\">\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      type=\"button\"\n      (click)=\"invite()\"\n      [disabled]=\"!canAccessPremium\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-plus bwi-fw\"></i>\n      {{ \"addEmergencyContact\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"trustedContacts && trustedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of trustedContacts; let i = index\">\n      <td width=\"30\">\n        <app-avatar\n          [data]=\"c | userName\"\n          [email]=\"c.email\"\n          size=\"25\"\n          [circle]=\"true\"\n          [fontSize]=\"14\"\n        >\n        </app-avatar>\n      </td>\n      <td>\n        <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.email }}</a>\n        <span\n          bitBadge\n          badgeType=\"secondary\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n          >{{ \"invited\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n          >{{ \"accepted\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span bitBadge *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\">{{\n          \"emergencyAccessRecoveryApproved\" | i18n\n        }}</span>\n\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.View\">{{ \"view\" | i18n }}</span>\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <button\n          [bitMenuTriggerFor]=\"trustedContactOptions\"\n          class=\"tw-border-none tw-bg-transparent tw-text-main\"\n          type=\"button\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu #trustedContactOptions>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n            (click)=\"reinvite(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"resendInvitation\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n            (click)=\"confirm(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"confirm\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n            (click)=\"approve(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"approve\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryInitiated ||\n              c.status === emergencyAccessStatusType.RecoveryApproved\n            \"\n            (click)=\"reject(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"reject\" | i18n }}\n          </button>\n          <button bitMenuItem (click)=\"remove(c)\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n        </bit-menu>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!trustedContacts || !trustedContacts.length\">\n  <p *ngIf=\"loaded\">{{ \"noTrustedContacts\" | i18n }}</p>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</ng-container>\n\n<div class=\"page-header spaced-header\">\n  <h2>{{ \"designatedEmergencyContacts\" | i18n }}</h2>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"grantedContacts && grantedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of grantedContacts; let i = index\">\n      <td width=\"30\">\n        <app-avatar\n          [data]=\"c | userName\"\n          [email]=\"c.email\"\n          size=\"25\"\n          [circle]=\"true\"\n          [fontSize]=\"14\"\n        >\n        </app-avatar>\n      </td>\n      <td>\n        <span>{{ c.email }}</span>\n        <span bitBadge *ngIf=\"c.status === emergencyAccessStatusType.Invited\">{{\n          \"invited\" | i18n\n        }}</span>\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n          >{{ \"accepted\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"success\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\"\n          >{{ \"emergencyAccessRecoveryApproved\" | i18n }}</span\n        >\n\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.View\">{{ \"view\" | i18n }}</span>\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <button\n          [bitMenuTriggerFor]=\"grantedContactOptions\"\n          class=\"tw-border-none tw-bg-transparent tw-text-main\"\n          type=\"button\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu #grantedContactOptions>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Confirmed\"\n            (click)=\"requestAccess(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"requestAccess\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryApproved &&\n              c.type === emergencyAccessType.Takeover\n            \"\n            (click)=\"takeover(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n            {{ \"takeover\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryApproved &&\n              c.type === emergencyAccessType.View\n            \"\n            [routerLink]=\"c.id\"\n          >\n            <i class=\"bwi bwi-fw bwi-eye\" aria-hidden=\"true\"></i>\n            {{ \"view\" | i18n }}\n          </button>\n          <button bitMenuItem (click)=\"remove(c)\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n        </bit-menu>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!grantedContacts || !grantedContacts.length\">\n  <p *ngIf=\"loaded\">{{ \"noGrantedAccess\" | i18n }}</p>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</ng-container>\n\n<ng-template #addEdit></ng-template>\n<ng-template #takeoverTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmergencyAccessStatusType } from \"@bitwarden/common/enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"@bitwarden/common/enums/emergencyAccessType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EmergencyAccessConfirmRequest } from \"@bitwarden/common/models/request/emergencyAccessConfirmRequest\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n} from \"@bitwarden/common/models/response/emergencyAccessResponse\";\n\nimport { EmergencyAccessAddEditComponent } from \"./emergency-access-add-edit.component\";\nimport { EmergencyAccessConfirmComponent } from \"./emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"./emergency-access-takeover.component\";\n\n@Component({\n  selector: \"emergency-access\",\n  templateUrl: \"emergency-access.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"takeoverTemplate\", { read: ViewContainerRef, static: true })\n  takeoverModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  loaded = false;\n  canAccessPremium: boolean;\n  trustedContacts: EmergencyAccessGranteeDetailsResponse[];\n  grantedContacts: EmergencyAccessGrantorDetailsResponse[];\n  emergencyAccessType = EmergencyAccessType;\n  emergencyAccessStatusType = EmergencyAccessStatusType;\n  actionPromise: Promise<any>;\n  isOrganizationOwner: boolean;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const orgs = await this.organizationService.getAll();\n    this.isOrganizationOwner = orgs.some((o) => o.isOwner);\n    this.load();\n  }\n\n  async load() {\n    this.trustedContacts = (await this.apiService.getEmergencyAccessTrusted()).data;\n    this.grantedContacts = (await this.apiService.getEmergencyAccessGranted()).data;\n    this.loaded = true;\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  async edit(details: EmergencyAccessGranteeDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.emergencyAccessId = details?.id;\n        comp.readOnly = !this.canAccessPremium;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSaved.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeleted.subscribe(() => {\n          modal.close();\n          this.remove(details);\n        });\n      }\n    );\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  async reinvite(contact: EmergencyAccessGranteeDetailsResponse) {\n    if (this.actionPromise != null) {\n      return;\n    }\n    this.actionPromise = this.apiService.postEmergencyAccessReinvite(contact.id);\n    await this.actionPromise;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenReinvited\", contact.email)\n    );\n    this.actionPromise = null;\n  }\n\n  async confirm(contact: EmergencyAccessGranteeDetailsResponse) {\n    function updateUser() {\n      contact.status = EmergencyAccessStatusType.Confirmed;\n    }\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n    if (autoConfirm == null || !autoConfirm) {\n      const [modal] = await this.modalService.openViewRef(\n        EmergencyAccessConfirmComponent,\n        this.confirmModalRef,\n        (comp) => {\n          comp.name = this.userNamePipe.transform(contact);\n          comp.emergencyAccessId = contact.id;\n          comp.userId = contact?.granteeId;\n          // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n          comp.onConfirmed.subscribe(async () => {\n            modal.close();\n\n            comp.formPromise = this.doConfirmation(contact);\n            await comp.formPromise;\n\n            updateUser();\n            this.platformUtilsService.showToast(\n              \"success\",\n              null,\n              this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n            );\n          });\n        }\n      );\n      return;\n    }\n\n    this.actionPromise = this.doConfirmation(contact);\n    await this.actionPromise;\n    updateUser();\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n    );\n    this.actionPromise = null;\n  }\n\n  async remove(\n    details: EmergencyAccessGranteeDetailsResponse | EmergencyAccessGrantorDetailsResponse\n  ) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteEmergencyAccess(details.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(details))\n      );\n\n      if (details instanceof EmergencyAccessGranteeDetailsResponse) {\n        this.removeGrantee(details);\n      } else {\n        this.removeGrantor(details);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async requestAccess(details: EmergencyAccessGrantorDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"requestAccessConfirmation\", details.waitTimeDays.toString()),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"requestAccess\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessInitiate(details.id);\n\n    details.status = EmergencyAccessStatusType.RecoveryInitiated;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"requestSent\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async approve(details: EmergencyAccessGranteeDetailsResponse) {\n    const type = this.i18nService.t(\n      details.type === EmergencyAccessType.View ? \"view\" : \"takeover\"\n    );\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"approveAccessConfirmation\", this.userNamePipe.transform(details), type),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"approve\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessApprove(details.id);\n    details.status = EmergencyAccessStatusType.RecoveryApproved;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyApproved\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async reject(details: EmergencyAccessGranteeDetailsResponse) {\n    await this.apiService.postEmergencyAccessReject(details.id);\n    details.status = EmergencyAccessStatusType.Confirmed;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyRejected\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async takeover(details: EmergencyAccessGrantorDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessTakeoverComponent,\n      this.takeoverModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.email = details.email;\n        comp.emergencyAccessId = details != null ? details.id : null;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDone.subscribe(() => {\n          modal.close();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"passwordResetFor\", this.userNamePipe.transform(details))\n          );\n        });\n      }\n    );\n  }\n\n  private removeGrantee(details: EmergencyAccessGranteeDetailsResponse) {\n    const index = this.trustedContacts.indexOf(details);\n    if (index > -1) {\n      this.trustedContacts.splice(index, 1);\n    }\n  }\n\n  private removeGrantor(details: EmergencyAccessGrantorDetailsResponse) {\n    const index = this.grantedContacts.indexOf(details);\n    if (index > -1) {\n      this.grantedContacts.splice(index, 1);\n    }\n  }\n\n  // Encrypt the master password hash using the grantees public key, and send it to bitwarden for escrow.\n  private async doConfirmation(details: EmergencyAccessGranteeDetailsResponse) {\n    const encKey = await this.cryptoService.getEncKey();\n    const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n    const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n    try {\n      this.logService.debug(\n        \"User's fingerprint: \" +\n          (await this.cryptoService.getFingerprint(details.granteeId, publicKey.buffer)).join(\"-\")\n      );\n    } catch {\n      // Ignore errors since it's just a debug message\n    }\n\n    const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n    const request = new EmergencyAccessConfirmRequest();\n    request.key = encryptedKey.encryptedString;\n    await this.apiService.postEmergencyAccessConfirm(details.id, request);\n  }\n}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  UntypedFormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent implements ControlValueAccessor, Validator, OnInit {\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  get exceedsMinimumTimout(): boolean {\n    return (\n      !this.showCustom || this.customTimeInMinutes() > VaultTimeoutInputComponent.MIN_CUSTOM_MINUTES\n    );\n  }\n\n  static CUSTOM_VALUE = -100;\n  static MIN_CUSTOM_MINUTES = 0;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    if (await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout)) {\n      const vaultTimeoutPolicy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout);\n\n      this.vaultTimeoutPolicy = vaultTimeoutPolicy[0];\n      this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n      this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n      this.vaultTimeouts = this.vaultTimeouts.filter(\n        (t) =>\n          t.value <= this.vaultTimeoutPolicy.data.minutes &&\n          (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n          t.value != null\n      );\n      this.validatorChange();\n    }\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    // Empty\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Empty\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    if (!this.exceedsMinimumTimout) {\n      return { minTimeoutError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n\n  private customTimeInMinutes() {\n    return this.form.get(\"custom.hours\")?.value * 60 + this.form.get(\"custom.minutes\")?.value;\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"form-group\">\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n    <small class=\"form-text text-muted\">{{ \"vaultTimeoutDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\" *ngIf=\"showCustom\" formGroupName=\"custom\">\n    <label for=\"customVaultTimeout\">{{ \"customVaultTimeout\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n\n    <small *ngIf=\"!exceedsMinimumTimout\" class=\"tw-text-danger\">\n      <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i> {{ \"vaultCustomTimeoutMinimum\" | i18n }}\n    </small>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"@bitwarden/angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<div class=\"page-header\">\n  <h1>{{ \"preferences\" | i18n }}</h1>\n</div>\n<p>{{ \"preferencesDesc\" | i18n }}</p>\n<form (ngSubmit)=\"submit()\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label>{{ \"vaultTimeoutAction\" | i18n }}</label>\n    <div class=\"form-check form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLock\"\n        value=\"lock\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLock\">\n        {{ \"lock\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLockDesc\" | i18n }}</small>\n      </label>\n    </div>\n    <div class=\"form-check mt-2 form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLogOut\"\n        value=\"logOut\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n        (ngModelChange)=\"vaultTimeoutActionChanged($event)\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLogOut\">\n        {{ \"logOut\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLogOutDesc\" | i18n }}</small>\n      </label>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <div class=\"d-flex\">\n          <label for=\"locale\">{{ \"language\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/localization/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <select id=\"locale\" name=\"Locale\" [(ngModel)]=\"locale\" class=\"form-control\">\n          <option *ngFor=\"let o of localeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"languageDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFavicons\"\n        name=\"enableFavicons\"\n        [(ngModel)]=\"enableFavicons\"\n      />\n      <label class=\"form-check-label\" for=\"enableFavicons\">\n        {{ \"enableFavicon\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/website-icons/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"faviconDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableGravatars\"\n        name=\"enableGravatars\"\n        [(ngModel)]=\"enableGravatars\"\n      />\n      <label class=\"form-check-label\" for=\"enableGravatars\">\n        {{ \"enableGravatars\" | i18n }}\n      </label>\n      <a\n        href=\"https://gravatar.com/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"enableGravatarsDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFullWidth\"\n        name=\"enableFullWidth\"\n        [(ngModel)]=\"enableFullWidth\"\n      />\n      <label class=\"form-check-label\" for=\"enableFullWidth\">\n        {{ \"enableFullWidth\" | i18n }}\n      </label>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"enableFullWidthDesc\" | i18n }}</small>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n        <select id=\"theme\" name=\"theme\" [(ngModel)]=\"theme\" class=\"form-control\">\n          <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"themeDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormControl } from \"@angular/forms\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-preferences\",\n  templateUrl: \"preferences.component.html\",\n})\nexport class PreferencesComponent implements OnInit {\n  vaultTimeoutAction = \"lock\";\n  enableFavicons: boolean;\n  enableGravatars: boolean;\n  enableFullWidth: boolean;\n  theme: ThemeType;\n  locale: string;\n  vaultTimeouts: { name: string; value: number }[];\n  localeOptions: any[];\n  themeOptions: any[];\n\n  vaultTimeout: UntypedFormControl = new UntypedFormControl(null);\n\n  private startingLocale: string;\n  private startingTheme: ThemeType;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    private platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private themingService: AbstractThemingService\n  ) {\n    this.vaultTimeouts = [\n      { name: i18nService.t(\"oneMinute\"), value: 1 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: i18nService.t(\"oneHour\"), value: 60 },\n      { name: i18nService.t(\"fourHours\"), value: 240 },\n      { name: i18nService.t(\"onRefresh\"), value: -1 },\n    ];\n    if (this.platformUtilsService.isDev()) {\n      this.vaultTimeouts.push({ name: i18nService.t(\"never\"), value: null });\n    }\n\n    const localeOptions: any[] = [];\n    i18nService.supportedTranslationLocales.forEach((locale) => {\n      let name = locale;\n      if (i18nService.localeNames.has(locale)) {\n        name += \" - \" + i18nService.localeNames.get(locale);\n      }\n      localeOptions.push({ name: name, value: locale });\n    });\n    localeOptions.sort(Utils.getSortFunction(i18nService, \"name\"));\n    localeOptions.splice(0, 0, { name: i18nService.t(\"default\"), value: null });\n    this.localeOptions = localeOptions;\n    this.themeOptions = [\n      { name: i18nService.t(\"themeLight\"), value: ThemeType.Light },\n      { name: i18nService.t(\"themeDark\"), value: ThemeType.Dark },\n      { name: i18nService.t(\"themeSystem\"), value: ThemeType.System },\n    ];\n  }\n\n  async ngOnInit() {\n    this.vaultTimeout.setValue(await this.vaultTimeoutSettingsService.getVaultTimeout());\n    this.vaultTimeoutAction = await this.stateService.getVaultTimeoutAction();\n    this.enableFavicons = !(await this.stateService.getDisableFavicon());\n    this.enableGravatars = await this.stateService.getEnableGravitars();\n    this.enableFullWidth = await this.stateService.getEnableFullWidth();\n\n    this.locale = (await this.stateService.getLocale()) ?? null;\n    this.startingLocale = this.locale;\n\n    this.theme = await this.stateService.getTheme();\n    this.startingTheme = this.theme;\n  }\n\n  async submit() {\n    if (!this.vaultTimeout.valid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"vaultTimeoutRangeError\")\n      );\n      return;\n    }\n\n    await this.vaultTimeoutSettingsService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    await this.stateService.setDisableFavicon(!this.enableFavicons);\n    await this.stateService.setEnableGravitars(this.enableGravatars);\n    await this.stateService.setEnableFullWidth(this.enableFullWidth);\n    this.messagingService.send(\"setFullWidth\");\n    if (this.theme !== this.startingTheme) {\n      await this.themingService.updateConfiguredTheme(this.theme);\n      this.startingTheme = this.theme;\n    }\n    await this.stateService.setLocale(this.locale);\n    if (this.locale !== this.startingLocale) {\n      window.location.reload();\n    } else {\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"preferencesUpdated\")\n      );\n    }\n  }\n\n  async vaultTimeoutActionChanged(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutAction = \"lock\";\n        return;\n      }\n    }\n    this.vaultTimeoutAction = newValue;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nimport { FolderRequest } from \"./folderRequest\";\n\nexport class FolderWithIdRequest extends FolderRequest {\n  id: string;\n\n  constructor(folder: Folder) {\n    super(folder);\n    this.id = folder.id;\n  }\n}\n","import { Send } from \"../domain/send\";\n\nimport { SendRequest } from \"./sendRequest\";\n\nexport class SendWithIdRequest extends SendRequest {\n  id: string;\n\n  constructor(send: Send) {\n    super(send);\n    this.id = send.id;\n  }\n}\n","import { CipherWithIdRequest } from \"./cipherWithIdRequest\";\nimport { FolderWithIdRequest } from \"./folderWithIdRequest\";\nimport { SendWithIdRequest } from \"./sendWithIdRequest\";\n\nexport class UpdateKeyRequest {\n  ciphers: CipherWithIdRequest[] = [];\n  folders: FolderWithIdRequest[] = [];\n  sends: SendWithIdRequest[] = [];\n  masterPasswordHash: string;\n  privateKey: string;\n  key: string;\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"changeMasterPassword\" | i18n }}</h1>\n</div>\n\n<bit-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</bit-callout>\n<app-callout\n  type=\"info\"\n  [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n  *ngIf=\"enforcedPolicyOptions\"\n>\n</app-callout>\n\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n        <input\n          id=\"currentMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"currentMasterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n        <input\n          id=\"newMasterPassword\"\n          type=\"password\"\n          name=\"NewMasterPasswordHash\"\n          class=\"form-control mb-1\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n        <app-password-strength\n          [password]=\"masterPassword\"\n          [email]=\"email\"\n          [showText]=\"true\"\n          (passwordStrengthResult)=\"getStrengthResult($event)\"\n        >\n        </app-password-strength>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n        <input\n          id=\"masterPasswordRetype\"\n          type=\"password\"\n          name=\"MasterPasswordRetype\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPasswordRetype\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"masterPasswordHint\">{{ \"masterPassHintLabel\" | i18n }}</label>\n    <input\n      id=\"masterPasswordHint\"\n      class=\"form-control\"\n      maxlength=\"50\"\n      type=\"text\"\n      name=\"MasterPasswordHint\"\n      [(ngModel)]=\"masterPasswordHint\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"rotateEncKey\"\n        name=\"RotateEncKey\"\n        [(ngModel)]=\"rotateEncKey\"\n        (change)=\"rotateEncKeyClicked()\"\n      />\n      <label class=\"form-check-label\" for=\"rotateEncKey\">\n        {{ \"rotateAccountEncKey\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n  </div>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"changeMasterPassword\" | i18n }}\n  </bit-submit-button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"@bitwarden/angular/components/change-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EmergencyAccessStatusType } from \"@bitwarden/common/enums/emergencyAccessStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { CipherWithIdRequest } from \"@bitwarden/common/models/request/cipherWithIdRequest\";\nimport { EmergencyAccessUpdateRequest } from \"@bitwarden/common/models/request/emergencyAccessUpdateRequest\";\nimport { FolderWithIdRequest } from \"@bitwarden/common/models/request/folderWithIdRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { PasswordRequest } from \"@bitwarden/common/models/request/passwordRequest\";\nimport { SendWithIdRequest } from \"@bitwarden/common/models/request/sendWithIdRequest\";\nimport { UpdateKeyRequest } from \"@bitwarden/common/models/request/updateKeyRequest\";\n\n@Component({\n  selector: \"app-change-password\",\n  templateUrl: \"change-password.component.html\",\n})\nexport class ChangePasswordComponent extends BaseChangePasswordComponent {\n  rotateEncKey = false;\n  currentMasterPassword: string;\n  masterPasswordHint: string;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private syncService: SyncService,\n    private apiService: ApiService,\n    private sendService: SendService,\n    private organizationService: OrganizationService,\n    private keyConnectorService: KeyConnectorService,\n    private router: Router,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      this.router.navigate([\"/settings/security/two-factor\"]);\n    }\n\n    this.masterPasswordHint = (await this.apiService.getProfile()).masterPasswordHint;\n    await super.ngOnInit();\n  }\n\n  async rotateEncKeyClicked() {\n    if (this.rotateEncKey) {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      let hasOldAttachments = false;\n      if (ciphers != null) {\n        for (let i = 0; i < ciphers.length; i++) {\n          if (ciphers[i].organizationId == null && ciphers[i].hasOldAttachments) {\n            hasOldAttachments = true;\n            break;\n          }\n        }\n      }\n\n      if (hasOldAttachments) {\n        const learnMore = await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"oldAttachmentsNeedFixDesc\"),\n          null,\n          this.i18nService.t(\"learnMore\"),\n          this.i18nService.t(\"close\"),\n          \"warning\"\n        );\n        if (learnMore) {\n          this.platformUtilsService.launchUri(\n            \"https://bitwarden.com/help/attachments/#add-storage-space\"\n          );\n        }\n        this.rotateEncKey = false;\n        return;\n      }\n\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateEncryptionKeyWarning\") +\n          \" \" +\n          this.i18nService.t(\"updateEncryptionKeyExportWarning\") +\n          \" \" +\n          this.i18nService.t(\"rotateEncKeyConfirmation\"),\n        this.i18nService.t(\"rotateEncKeyTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        this.rotateEncKey = false;\n      }\n    }\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    await super.submit();\n  }\n\n  async setupSubmitActions() {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n\n    if (this.rotateEncKey) {\n      await this.syncService.fullSync(true);\n    }\n\n    return super.setupSubmitActions();\n  }\n\n  async performSubmitActions(\n    newMasterPasswordHash: string,\n    newKey: SymmetricCryptoKey,\n    newEncKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const request = new PasswordRequest();\n    request.masterPasswordHash = await this.cryptoService.hashPassword(\n      this.currentMasterPassword,\n      null\n    );\n    request.masterPasswordHint = this.masterPasswordHint;\n    request.newMasterPasswordHash = newMasterPasswordHash;\n    request.key = newEncKey[1].encryptedString;\n\n    try {\n      if (this.rotateEncKey) {\n        this.formPromise = this.apiService.postPassword(request).then(() => {\n          return this.updateKey(newKey, request.newMasterPasswordHash);\n        });\n      } else {\n        this.formPromise = this.apiService.postPassword(request);\n      }\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  private async updateKey(key: SymmetricCryptoKey, masterPasswordHash: string) {\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = masterPasswordHash;\n\n    const folders = await firstValueFrom(this.folderService.folderViews$);\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    const sends = await this.sendService.getAll();\n    await Promise.all(\n      sends.map(async (send) => {\n        const cryptoKey = await this.cryptoService.decryptToBytes(send.key, null);\n        send.key = (await this.cryptoService.encrypt(cryptoKey, encKey[0])) ?? send.key;\n        request.sends.push(new SendWithIdRequest(send));\n      })\n    );\n\n    await this.apiService.postAccountKey(request);\n\n    await this.updateEmergencyAccesses(encKey[0]);\n\n    await this.updateAllResetPasswordKeys(encKey[0], masterPasswordHash);\n  }\n\n  private async updateEmergencyAccesses(encKey: SymmetricCryptoKey) {\n    const emergencyAccess = await this.apiService.getEmergencyAccessTrusted();\n    const allowedStatuses = [\n      EmergencyAccessStatusType.Confirmed,\n      EmergencyAccessStatusType.RecoveryInitiated,\n      EmergencyAccessStatusType.RecoveryApproved,\n    ];\n\n    const filteredAccesses = emergencyAccess.data.filter((d) => allowedStatuses.includes(d.status));\n\n    for (const details of filteredAccesses) {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      const updateRequest = new EmergencyAccessUpdateRequest();\n      updateRequest.type = details.type;\n      updateRequest.waitTimeDays = details.waitTimeDays;\n      updateRequest.keyEncrypted = encryptedKey.encryptedString;\n\n      await this.apiService.putEmergencyAccess(details.id, updateRequest);\n    }\n  }\n\n  private async updateAllResetPasswordKeys(encKey: SymmetricCryptoKey, masterPasswordHash: string) {\n    const orgs = await this.organizationService.getAll();\n\n    for (const org of orgs) {\n      // If not already enrolled, skip\n      if (!org.resetPasswordEnrolled) {\n        continue;\n      }\n\n      // Retrieve public key\n      const response = await this.organizationApiService.getKeys(org.id);\n      const publicKey = Utils.fromB64ToArray(response?.publicKey);\n\n      // Re-enroll - encrpyt user's encKey.key with organization public key\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Create/Execute request\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.masterPasswordHash = masterPasswordHash;\n      request.resetPasswordKey = encryptedKey.encryptedString;\n\n      await this.apiService.putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request);\n    }\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { PasswordRequest } from \"./passwordRequest\";\n\nexport class KdfRequest extends PasswordRequest {\n  kdf: KdfType;\n  kdfIterations: number;\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"encKeySettings\" | i18n }}</h1>\n</div>\n<bit-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</bit-callout>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"kdfMasterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"kdfMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdf\">{{ \"kdfAlgorithm\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://en.wikipedia.org/wiki/Key_derivation_function\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <select id=\"kdf\" name=\"Kdf\" [(ngModel)]=\"kdf\" class=\"form-control\" required>\n          <option *ngFor=\"let o of kdfOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdfIterations\">{{ \"kdfIterations\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://bitwarden.com/help/what-encryption-is-used/#pbkdf2\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <input\n          id=\"kdfIterations\"\n          type=\"number\"\n          min=\"5000\"\n          max=\"2000000\"\n          name=\"KdfIterations\"\n          class=\"form-control\"\n          [(ngModel)]=\"kdfIterations\"\n          required\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <div class=\"small form-text text-muted\">\n          <p>{{ \"kdfIterationsDesc\" | i18n: (recommendedKdfIterations | number) }}</p>\n          <strong>{{ \"warning\" | i18n }}</strong\n          >: {{ \"kdfIterationsWarning\" | i18n: (50000 | number) }}\n        </div>\n      </div>\n    </div>\n  </div>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"changeKdf\" | i18n }}\n  </bit-submit-button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { KdfRequest } from \"@bitwarden/common/models/request/kdfRequest\";\n\n@Component({\n  selector: \"app-change-kdf\",\n  templateUrl: \"change-kdf.component.html\",\n})\nexport class ChangeKdfComponent implements OnInit {\n  masterPassword: string;\n  kdfIterations: number;\n  kdf = KdfType.PBKDF2_SHA256;\n  kdfOptions: any[] = [];\n  formPromise: Promise<any>;\n  recommendedKdfIterations = DEFAULT_KDF_ITERATIONS;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.kdfOptions = [{ name: \"PBKDF2 SHA-256\", value: KdfType.PBKDF2_SHA256 }];\n  }\n\n  async ngOnInit() {\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    const request = new KdfRequest();\n    request.kdf = this.kdf;\n    request.kdfIterations = this.kdfIterations;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n    const email = await this.stateService.getEmail();\n    const newKey = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email,\n      this.kdf,\n      this.kdfIterations\n    );\n    request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      newKey\n    );\n    const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n    request.key = newEncKey[1].encryptedString;\n    try {\n      this.formPromise = this.apiService.postAccountKdf(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"encKeySettingsChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<app-change-kdf *ngIf=\"showChangeKdf\"></app-change-kdf>\n<div\n  [ngClass]=\"{ 'tabbed-header': !showChangeKdf, 'secondary-header': showChangeKdf }\"\n  class=\"border-0 mb-0\"\n>\n  <h1>{{ \"apiKey\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"userApiKeyDesc\" | i18n }}\n</p>\n<button bitButton buttonType=\"secondary\" (click)=\"viewUserApiKey()\">\n  {{ \"viewApiKey\" | i18n }}\n</button>\n<button bitButton buttonType=\"secondary\" (click)=\"rotateUserApiKey()\">\n  {{ \"rotateApiKey\" | i18n }}\n</button>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { ApiKeyComponent } from \"./api-key.component\";\n\n@Component({\n  selector: \"app-security-keys\",\n  templateUrl: \"security-keys.component.html\",\n})\nexport class SecurityKeysComponent implements OnInit {\n  @ViewChild(\"viewUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  viewUserApiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateUserApiKeyModalRef: ViewContainerRef;\n\n  showChangeKdf = true;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private modalService: ModalService,\n    private apiService: ApiService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeKdf = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async viewUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.viewUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"userApiKeyDesc\";\n    });\n  }\n\n  async rotateUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.isRotation = true;\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserRotateApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div class=\"tabbed-nav d-flex flex-column\">\n  <ul class=\"nav nav-tabs\">\n    <ng-container *ngIf=\"showChangePassword\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"change-password\" routerLinkActive=\"active\">\n          {{ \"masterPassword\" | i18n }}\n        </a>\n      </li>\n    </ng-container>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"two-factor\" routerLinkActive=\"active\">\n        {{ \"twoStepLogin\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"security-keys\" routerLinkActive=\"active\">\n        {{ \"keys\" | i18n }}\n      </a>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\n\n@Component({\n  selector: \"app-security\",\n  templateUrl: \"security.component.html\",\n})\nexport class SecurityComponent {\n  showChangePassword = true;\n\n  constructor(private keyConnectorService: KeyConnectorService) {}\n\n  async ngOnInit() {\n    this.showChangePassword = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { ChangePasswordComponent } from \"./change-password.component\";\nimport { SecurityKeysComponent } from \"./security-keys.component\";\nimport { SecurityComponent } from \"./security.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SecurityComponent,\n    data: { titleId: \"security\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"change-password\" },\n      {\n        path: \"change-password\",\n        component: ChangePasswordComponent,\n        data: { titleId: \"masterPassword\" },\n      },\n      {\n        path: \"two-factor\",\n        component: TwoFactorSetupComponent,\n        data: { titleId: \"twoStepLogin\" },\n      },\n      {\n        path: \"security-keys\",\n        component: SecurityKeysComponent,\n        data: { titleId: \"keys\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SecurityRoutingModule {}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"accountSettings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myAccount\" | i18n }}\n          </a>\n          <a routerLink=\"security\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"security\" | i18n }}\n          </a>\n          <a routerLink=\"preferences\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"preferences\" | i18n }}\n          </a>\n          <a\n            routerLink=\"subscription\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"!hideSubscription\"\n          >\n            {{ \"subscription\" | i18n }}\n          </a>\n          <a routerLink=\"domain-rules\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"domainRules\" | i18n }}\n          </a>\n          <a routerLink=\"emergency-access\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"emergencyAccess\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sponsored-families\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"hasFamilySponsorshipAvailable\"\n          >\n            {{ \"sponsoredFamilies\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\nimport { StateService } from \"../core\";\n\nconst BroadcasterSubscriptionId = \"SettingsComponent\";\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  premium: boolean;\n  selfHosted: boolean;\n  hasFamilySponsorshipAvailable: boolean;\n  hideSubscription: boolean;\n\n  constructor(\n    private tokenService: TokenService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  async ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"purchasedPremium\":\n            await this.load();\n            break;\n          default:\n        }\n      });\n    });\n\n    this.selfHosted = await this.platformUtilsService.isSelfHost();\n    await this.load();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    this.premium = await this.stateService.getHasPremiumPersonally();\n    this.hasFamilySponsorshipAvailable = await this.organizationService.canManageSponsorships();\n    const hasPremiumFromOrg = await this.stateService.getHasPremiumFromOrganization();\n    let billing = null;\n    if (!this.selfHosted) {\n      billing = await this.apiService.getUserBillingHistory();\n    }\n    this.hideSubscription =\n      !this.premium && hasPremiumFromOrg && (this.selfHosted || billing?.hasNoHistory);\n  }\n}\n","import { AbstractControl, AsyncValidatorFn, ValidationErrors } from \"@angular/forms\";\n\nexport function notAllowedValueAsync(\n  valueGetter: () => Promise<string>,\n  caseInsensitive = false\n): AsyncValidatorFn {\n  return async (control: AbstractControl): Promise<ValidationErrors | null> => {\n    let notAllowedValue = await valueGetter();\n    let controlValue = control.value;\n    if (caseInsensitive) {\n      notAllowedValue = notAllowedValue.toLowerCase();\n      controlValue = controlValue.toLowerCase();\n    }\n\n    if (controlValue === notAllowedValue) {\n      return {\n        notAllowedValue: true,\n      };\n    }\n  };\n}\n","<td>\n  {{ sponsoringOrg.familySponsorshipFriendlyName }}\n</td>\n<td>{{ sponsoringOrg.name }}</td>\n<td>\n  <span [ngClass]=\"statusClass\">{{ statusMessage }}</span>\n</td>\n<td class=\"table-action-right\">\n  <div class=\"dropdown\" appListDropdown>\n    <button\n      *ngIf=\"!sponsoringOrg.familySponsorshipToDelete\"\n      class=\"btn btn-outline-secondary dropdown-toggle\"\n      type=\"button\"\n      id=\"dropdownMenuButton\"\n      data-toggle=\"dropdown\"\n      aria-haspopup=\"true\"\n      aria-expanded=\"false\"\n      appA11yTitle=\"{{ 'options' | i18n }}\"\n    >\n      <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n    </button>\n    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n      <button\n        #resendEmailBtn\n        *ngIf=\"!isSelfHosted && !sponsoringOrg.familySponsorshipValidUntil\"\n        [appApiAction]=\"resendEmailPromise\"\n        class=\"dropdown-item btn-submit\"\n        [disabled]=\"resendEmailBtn.loading\"\n        (click)=\"resendEmail()\"\n        [attr.aria-label]=\"'resendEmailLabel' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"resendEmail\" | i18n }}</span>\n      </button>\n      <button\n        #revokeSponsorshipBtn\n        [appApiAction]=\"revokeSponsorshipPromise\"\n        class=\"dropdown-item text-danger btn-submit\"\n        [disabled]=\"revokeSponsorshipBtn.loading\"\n        (click)=\"revokeSponsorship()\"\n        [attr.aria-label]=\"'revokeAccount' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"remove\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</td>\n","import { formatDate } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output, OnInit } from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"[sponsoring-org-row]\",\n  templateUrl: \"sponsoring-org-row.component.html\",\n})\nexport class SponsoringOrgRowComponent implements OnInit {\n  @Input() sponsoringOrg: Organization = null;\n  @Input() isSelfHosted = false;\n\n  @Output() sponsorshipRemoved = new EventEmitter();\n\n  statusMessage = \"loading\";\n  statusClass: \"text-success\" | \"text-danger\" = \"text-success\";\n\n  revokeSponsorshipPromise: Promise<any>;\n  resendEmailPromise: Promise<any>;\n\n  private locale = \"\";\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private logService: LogService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    this.locale = await firstValueFrom(this.i18nService.locale$);\n\n    this.setStatus(\n      this.isSelfHosted,\n      this.sponsoringOrg.familySponsorshipToDelete,\n      this.sponsoringOrg.familySponsorshipValidUntil,\n      this.sponsoringOrg.familySponsorshipLastSyncDate\n    );\n  }\n\n  async revokeSponsorship() {\n    try {\n      this.revokeSponsorshipPromise = this.doRevokeSponsorship();\n      await this.revokeSponsorshipPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.revokeSponsorshipPromise = null;\n  }\n\n  async resendEmail() {\n    this.resendEmailPromise = this.apiService.postResendSponsorshipOffer(this.sponsoringOrg.id);\n    await this.resendEmailPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailSent\"));\n    this.resendEmailPromise = null;\n  }\n\n  get isSentAwaitingSync() {\n    return this.isSelfHosted && !this.sponsoringOrg.familySponsorshipLastSyncDate;\n  }\n\n  private async doRevokeSponsorship() {\n    const isConfirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"revokeSponsorshipConfirmation\"),\n      `${this.i18nService.t(\"remove\")} ${this.sponsoringOrg.familySponsorshipFriendlyName}?`,\n      this.i18nService.t(\"remove\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    await this.apiService.deleteRevokeSponsorship(this.sponsoringOrg.id);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reclaimedFreePlan\"));\n    this.sponsorshipRemoved.emit();\n  }\n\n  private setStatus(\n    selfHosted: boolean,\n    toDelete?: boolean,\n    validUntil?: Date,\n    lastSyncDate?: Date\n  ) {\n    /*\n     * Possible Statuses:\n     * Requested (self-hosted only)\n     * Sent\n     * Active\n     * RequestRevoke\n     * RevokeWhenExpired\n     */\n\n    if (toDelete && validUntil) {\n      // They want to delete but there is a valid until date which means there is an active sponsorship\n      this.statusMessage = this.i18nService.t(\n        \"revokeWhenExpired\",\n        formatDate(validUntil, \"MM/dd/yyyy\", this.locale)\n      );\n      this.statusClass = \"text-danger\";\n    } else if (toDelete) {\n      // They want to delete and we don't have a valid until date so we can\n      // this should only happen on a self-hosted install\n      this.statusMessage = this.i18nService.t(\"requestRemoved\");\n      this.statusClass = \"text-danger\";\n    } else if (validUntil) {\n      // They don't want to delete and they have a valid until date\n      // that means they are actively sponsoring someone\n      this.statusMessage = this.i18nService.t(\"active\");\n      this.statusClass = \"text-success\";\n    } else if (selfHosted && lastSyncDate) {\n      // We are on a self-hosted install and it has been synced but we have not gotten\n      // a valid until date so we can't know if they are actively sponsoring someone\n      this.statusMessage = this.i18nService.t(\"sent\");\n      this.statusClass = \"text-success\";\n    } else if (!selfHosted) {\n      // We are in cloud and all other status checks have been false therefore we have\n      // sent the request but it hasn't been accepted yet\n      this.statusMessage = this.i18nService.t(\"sent\");\n      this.statusClass = \"text-success\";\n    } else {\n      // We are on a self-hosted install and we have not synced yet\n      this.statusMessage = this.i18nService.t(\"requested\");\n      this.statusClass = \"text-success\";\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"sponsoredFamilies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"!loading\">\n  <p>\n    {{ \"sponsoredFamiliesEligible\" | i18n }}\n  </p>\n  <div>\n    {{ \"sponsoredFamiliesInclude\" | i18n }}:\n    <ul class=\"inset-list\">\n      <li>{{ \"sponsoredFamiliesPremiumAccess\" | i18n }}</li>\n      <li>{{ \"sponsoredFamiliesSharedCollections\" | i18n }}</li>\n    </ul>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    [formGroup]=\"sponsorshipForm\"\n    ngNativeValidate\n    *ngIf=\"anyOrgsAvailable\"\n  >\n    <div class=\"form-group col-7\">\n      <label for=\"availableSponsorshipOrg\">{{ \"familiesSponsoringOrgSelect\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        formControlName=\"selectedSponsorshipOrgId\"\n        class=\"form-control\"\n        required\n      >\n        <option disabled=\"true\" value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option *ngFor=\"let o of availableSponsorshipOrgs\" [ngValue]=\"o.id\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div class=\"form-group col-7\">\n      <label for=\"sponsorshipEmail\">{{ \"sponsoredFamiliesEmail\" | i18n }}:</label>\n      <input\n        id=\"sponsorshipEmail\"\n        class=\"form-control\"\n        inputmode=\"email\"\n        formControlName=\"sponsorshipEmail\"\n        name=\"sponsorshipEmail\"\n        required\n        [attr.aria-invalid]=\"sponsorshipEmailControl.invalid\"\n      />\n      <small\n        aria-errormessage=\"sponsorshipEmail\"\n        *ngIf=\"sponsorshipEmailControl.errors?.notAllowedValue\"\n        class=\"error-inline\"\n        role=\"alert\"\n      >\n        <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i>\n        {{ \"cannotSponsorSelf\" | i18n }}\n      </small>\n      <small\n        aria-errormessage=\"sponsorshipEmail\"\n        *ngIf=\"sponsorshipEmailControl.errors?.email\"\n        class=\"error-inline\"\n        role=\"alert\"\n      >\n        <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i>\n        {{ \"invalidEmail\" | i18n }}\n      </small>\n    </div>\n    <div class=\"form-group col-7\">\n      <button class=\"btn btn-primary btn-submit mt-2\" type=\"submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"redeem\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n  <ng-container *ngIf=\"anyActiveSponsorships\">\n    <div class=\"border-bottom\">\n      <table class=\"table table-hover table-list\">\n        <thead>\n          <tr>\n            <th>{{ \"recipient\" | i18n }}</th>\n            <th>{{ \"sponsoringOrg\" | i18n }}</th>\n            <th>{{ \"status\" | i18n }}</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <ng-container *ngFor=\"let o of activeSponsorshipOrgs\">\n            <tr\n              sponsoring-org-row\n              [sponsoringOrg]=\"o\"\n              [isSelfHosted]=\"isSelfHosted\"\n              (sponsorshipRemoved)=\"load(true)\"\n            ></tr>\n          </ng-container>\n        </tbody>\n      </table>\n    </div>\n    <small>{{ \"sponsoredFamiliesLeaveCopy\" | i18n }}</small>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from \"@angular/forms\";\n\nimport { notAllowedValueAsync } from \"@bitwarden/angular/validators/notAllowedValueAsync.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PlanSponsorshipType } from \"@bitwarden/common/enums/planSponsorshipType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-sponsored-families\",\n  templateUrl: \"sponsored-families.component.html\",\n})\nexport class SponsoredFamiliesComponent implements OnInit {\n  loading = false;\n\n  availableSponsorshipOrgs: Organization[] = [];\n  activeSponsorshipOrgs: Organization[] = [];\n\n  // Conditional display properties\n  formPromise: Promise<any>;\n\n  sponsorshipForm: UntypedFormGroup;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService,\n    private formBuilder: UntypedFormBuilder,\n    private stateService: StateService\n  ) {\n    this.sponsorshipForm = this.formBuilder.group({\n      selectedSponsorshipOrgId: [\n        \"\",\n        {\n          validators: [Validators.required],\n        },\n      ],\n      sponsorshipEmail: [\n        \"\",\n        {\n          validators: [Validators.email],\n          asyncValidators: [\n            notAllowedValueAsync(async () => await this.stateService.getEmail(), true),\n          ],\n          updateOn: \"blur\",\n        },\n      ],\n    });\n  }\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async submit() {\n    this.formPromise = this.apiService.postCreateSponsorship(\n      this.sponsorshipForm.value.selectedSponsorshipOrgId,\n      {\n        sponsoredEmail: this.sponsorshipForm.value.sponsorshipEmail,\n        planSponsorshipType: PlanSponsorshipType.FamiliesForEnterprise,\n        friendlyName: this.sponsorshipForm.value.sponsorshipEmail,\n      }\n    );\n\n    await this.formPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"sponsorshipCreated\"));\n    this.formPromise = null;\n    this.resetForm();\n    await this.load(true);\n  }\n\n  async load(forceReload = false) {\n    if (this.loading) {\n      return;\n    }\n\n    this.loading = true;\n    if (forceReload) {\n      await this.syncService.fullSync(true);\n    }\n\n    const allOrgs = await this.organizationService.getAll();\n    this.availableSponsorshipOrgs = allOrgs.filter((org) => org.familySponsorshipAvailable);\n\n    this.activeSponsorshipOrgs = allOrgs.filter(\n      (org) => org.familySponsorshipFriendlyName !== null\n    );\n\n    if (this.availableSponsorshipOrgs.length === 1) {\n      this.sponsorshipForm.patchValue({\n        selectedSponsorshipOrgId: this.availableSponsorshipOrgs[0].id,\n      });\n    }\n    this.loading = false;\n  }\n\n  get sponsorshipEmailControl() {\n    return this.sponsorshipForm.controls[\"sponsorshipEmail\"];\n  }\n\n  private async resetForm() {\n    this.sponsorshipForm.reset();\n  }\n\n  get anyActiveSponsorships(): boolean {\n    return this.activeSponsorshipOrgs.length > 0;\n  }\n\n  get anyOrgsAvailable(): boolean {\n    return this.availableSponsorshipOrgs.length > 0;\n  }\n\n  get isSelfHosted(): boolean {\n    return this.platformUtilsService.isSelfHost();\n  }\n}\n","<div class=\"d-flex tabbed-header\">\n  <h1>\n    {{ \"billingHistory\" | i18n }}\n  </h1>\n  <button\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <app-billing-history [billing]=\"billing\"></app-billing-history>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { BillingHistoryResponse } from \"@bitwarden/common/models/response/billingHistoryResponse\";\n\n@Component({\n  selector: \"app-billing-history-view\",\n  templateUrl: \"billing-history-view.component.html\",\n})\nexport class BillingHistoryViewComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  billing: BillingHistoryResponse;\n\n  constructor(\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    if (this.platformUtilsService.isSelfHost()) {\n      this.router.navigate([\"/settings/subscription\"]);\n      return;\n    }\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    this.billing = await this.apiService.getUserBillingHistory();\n    this.loading = false;\n  }\n}\n","<div *ngIf=\"selfHosted\" class=\"page-header\">\n  <h1>{{ \"subscription\" | i18n }}</h1>\n</div>\n<div *ngIf=\"!selfHosted\" class=\"tabbed-header\">\n  <h1>{{ \"goPremium\" | i18n }}</h1>\n</div>\n<bit-callout\n  type=\"info\"\n  *ngIf=\"canAccessPremium\"\n  title=\"{{ 'youHavePremiumAccess' | i18n }}\"\n  icon=\"bwi bwi-star-f\"\n>\n  {{ \"alreadyPremiumFromOrg\" | i18n }}\n</bit-callout>\n<bit-callout type=\"success\">\n  <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n  <ul class=\"bwi-ul\">\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpStorage\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTwoStep\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpEmergency\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpReports\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTotp\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpSupport\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpFuture\" | i18n }}\n    </li>\n  </ul>\n  <p class=\"text-lg\" [ngClass]=\"{ 'mb-0': !selfHosted }\">\n    {{ \"premiumPrice\" | i18n: (premiumPrice | currency: \"$\") }}\n  </p>\n  <a\n    bitButton\n    href=\"https://vault.bitwarden.com/#/settings/premium\"\n    target=\"_blank\"\n    rel=\"noopener\"\n    buttonType=\"secondary\"\n    *ngIf=\"selfHosted\"\n  >\n    {{ \"purchasePremium\" | i18n }}\n  </a>\n</bit-callout>\n<ng-container *ngIf=\"selfHosted\">\n  <p>{{ \"uploadLicenseFilePremium\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_premium_license.json\"\n      }}</small>\n    </div>\n    <bit-submit-button [loading]=\"form.loading\">\n      {{ \"submit\" | i18n }}\n    </bit-submit-button>\n  </form>\n</ng-container>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!selfHosted\">\n  <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n      <input\n        id=\"additionalStorage\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"AdditionalStorageGb\"\n        [(ngModel)]=\"additionalStorage\"\n        min=\"0\"\n        max=\"99\"\n        step=\"1\"\n        placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n      />\n      <small class=\"text-muted form-text\">{{\n        \"additionalStorageIntervalDesc\"\n          | i18n: \"1 GB\":(storageGbPrice | currency: \"$\"):(\"year\" | i18n)\n      }}</small>\n    </div>\n  </div>\n  <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n  {{ \"premiumMembership\" | i18n }}: {{ premiumPrice | currency: \"$\" }} <br />\n  {{ \"additionalStorageGb\" | i18n }}: {{ additionalStorage || 0 }} GB &times;\n  {{ storageGbPrice | currency: \"$\" }} =\n  {{ additionalStorageTotal | currency: \"$\" }}\n  <hr class=\"my-3\" />\n  <h2 class=\"spaced-header mb-4\">{{ \"paymentInformation\" | i18n }}</h2>\n  <app-payment [hideBank]=\"true\"></app-payment>\n  <app-tax-info></app-tax-info>\n  <div id=\"price\" class=\"my-4\">\n    <div class=\"text-muted text-sm\">\n      {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n      <br />\n      <ng-container>\n        {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n      </ng-container>\n    </div>\n    <hr class=\"my-1 col-3 ml-0\" />\n    <p class=\"text-lg\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{ \"year\" | i18n }}\n    </p>\n  </div>\n  <small class=\"text-muted font-italic\">{{ \"paymentChargedAnnually\" | i18n }}</small>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"submit\" | i18n }}\n  </bit-submit-button>\n</form>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent implements OnInit {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxInfoComponent: TaxInfoComponent;\n\n  canAccessPremium = false;\n  selfHosted = false;\n  premiumPrice = 10;\n  storageGbPrice = 4;\n  additionalStorage = 0;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const premiumPersonally = await this.stateService.getHasPremiumPersonally();\n    if (premiumPersonally) {\n      this.router.navigate([\"/settings/subscription/user-subscription\"]);\n      return;\n    }\n  }\n\n  async submit() {\n    let files: FileList = null;\n    if (this.selfHosted) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n    }\n\n    try {\n      if (this.selfHosted) {\n        if (!this.tokenService.getEmailVerified()) {\n          this.platformUtilsService.showToast(\n            \"error\",\n            this.i18nService.t(\"errorOccurred\"),\n            this.i18nService.t(\"verifyEmailFirst\")\n          );\n          return;\n        }\n\n        const fd = new FormData();\n        fd.append(\"license\", files[0]);\n        this.formPromise = this.apiService.postAccountLicense(fd).then(() => {\n          return this.finalizePremium();\n        });\n      } else {\n        this.formPromise = this.paymentComponent\n          .createPaymentToken()\n          .then((result) => {\n            const fd = new FormData();\n            fd.append(\"paymentMethodType\", result[1].toString());\n            if (result[0] != null) {\n              fd.append(\"paymentToken\", result[0]);\n            }\n            fd.append(\"additionalStorageGb\", (this.additionalStorage || 0).toString());\n            fd.append(\"country\", this.taxInfoComponent.taxInfo.country);\n            fd.append(\"postalCode\", this.taxInfoComponent.taxInfo.postalCode);\n            return this.apiService.postPremium(fd);\n          })\n          .then((paymentResponse) => {\n            if (!paymentResponse.success && paymentResponse.paymentIntentClientSecret != null) {\n              return this.paymentComponent.handleStripeCardPayment(\n                paymentResponse.paymentIntentClientSecret,\n                () => this.finalizePremium()\n              );\n            } else {\n              return this.finalizePremium();\n            }\n          });\n      }\n      await this.formPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async finalizePremium() {\n    await this.apiService.refreshIdentityToken();\n    await this.syncService.fullSync(true);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"premiumUpdated\"));\n    this.messagingService.send(\"purchasedPremium\");\n    this.router.navigate([\"/settings/subscription/user-subscription\"]);\n  }\n\n  get additionalStorageTotal(): number {\n    return this.storageGbPrice * Math.abs(this.additionalStorage || 0);\n  }\n\n  get subtotal(): number {\n    return this.premiumPrice + this.additionalStorageTotal;\n  }\n\n  get taxCharges(): number {\n    return this.taxInfoComponent != null && this.taxInfoComponent.taxRate != null\n      ? (this.taxInfoComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total(): number {\n    return this.subtotal + this.taxCharges || 0;\n  }\n}\n","<div class=\"tabbed-nav d-flex flex-column\" *ngIf=\"!selfHosted\">\n  <ul class=\"nav nav-tabs\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [routerLink]=\"subscriptionRoute\" routerLinkActive=\"active\">\n        {{ \"subscription\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"payment-method\" routerLinkActive=\"active\">\n        {{ \"paymentMethod\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"billing-history\" routerLinkActive=\"active\">\n        {{ \"billingHistory\" | i18n }}\n      </a>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-subscription\",\n  templateUrl: \"subscription.component.html\",\n})\nexport class SubscriptionComponent {\n  hasPremium: boolean;\n  selfHosted: boolean;\n\n  constructor(\n    private stateService: StateService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    this.hasPremium = await this.stateService.getHasPremiumPersonally();\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  get subscriptionRoute(): string {\n    return this.hasPremium ? \"user-subscription\" : \"premium\";\n  }\n}\n","<div\n  [ngClass]=\"{\n    'page-header': selfHosted,\n    'tabbed-header': !selfHosted\n  }\"\n>\n  <h1>\n    {{ title }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"sub\">\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</bit-callout\n  >\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      bitButton\n      type=\"button\"\n      buttonType=\"secondary\"\n      #reinstateBtn\n      class=\"btn-submit\"\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"reinstateBtn.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"reinstateSubscription\" | i18n }}</span>\n    </button>\n  </bit-callout>\n  <dl *ngIf=\"selfHosted\">\n    <dt>{{ \"expiration\" | i18n }}</dt>\n    <dd *ngIf=\"sub.expiration\">{{ sub.expiration | date: \"mediumDate\" }}</dd>\n    <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n  </dl>\n  <div class=\"row\" *ngIf=\"!selfHosted\">\n    <div class=\"col-4\">\n      <dl>\n        <dt>{{ \"status\" | i18n }}</dt>\n        <dd>\n          <span class=\"text-capitalize\">{{ (subscription && subscription.status) || \"-\" }}</span>\n          <span bitBadge badgeType=\"warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n            \"pendingCancellation\" | i18n\n          }}</span>\n        </dd>\n        <dt>{{ \"nextCharge\" | i18n }}</dt>\n        <dd>\n          {{\n            nextInvoice\n              ? (nextInvoice.date | date: \"mediumDate\") +\n                \", \" +\n                (nextInvoice.amount | currency: \"$\")\n              : \"-\"\n          }}\n        </dd>\n      </dl>\n    </div>\n    <div class=\"col-8\" *ngIf=\"subscription\">\n      <strong class=\"d-block mb-1\">{{ \"details\" | i18n }}</strong>\n      <table class=\"table\">\n        <tbody>\n          <tr *ngFor=\"let i of subscription.items\">\n            <td>\n              {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n              {{ i.amount | currency: \"$\" }}\n            </td>\n            <td>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <ng-container *ngIf=\"selfHosted\">\n    <div>\n      <button type=\"button\" bitButton buttonType=\"secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        bitButton\n        buttonType=\"secondary\"\n        href=\"https://vault.bitwarden.com/#/settings/subscription\"\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        {{ \"manageSubscription\" | i18n }}\n      </a>\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n      <div class=\"card-body\">\n        <button\n          type=\"button\"\n          class=\"close\"\n          appA11yTitle=\"{{ 'cancel' | i18n }}\"\n          (click)=\"closeUpdateLicense(false)\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h3 class=\"card-body-header\">{{ \"updateLicense\" | i18n }}</h3>\n        <app-update-license\n          (onUpdated)=\"closeUpdateLicense(true)\"\n          (onCanceled)=\"closeUpdateLicense(false)\"\n        >\n        </app-update-license>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"d-flex\">\n      <button\n        bitButton\n        type=\"button\"\n        buttonType=\"secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"!subscription || !subscription.cancelled\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        bitButton\n        #cancelBtn\n        type=\"button\"\n        buttonType=\"danger\"\n        class=\"btn-submit tw-ml-auto\"\n        (click)=\"cancel()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"cancelBtn.loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"cancelSubscription\" | i18n }}</span>\n      </button>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"storage\" | i18n }}</h2>\n    <p>{{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0:sub.storageName || \"0 MB\" }}</p>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar bg-success\"\n        role=\"progressbar\"\n        [ngStyle]=\"{ width: storageProgressWidth + '%' }\"\n        [attr.aria-valuenow]=\"storagePercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ storagePercentage / 100 | percent }}\n      </div>\n    </div>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"mt-3\">\n        <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n          <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button\n            bitButton\n            type=\"button\"\n            buttonType=\"secondary\"\n            class=\"tw-ml-1\"\n            (click)=\"adjustStorage(false)\"\n          >\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"4\"\n          [add]=\"adjustStorageAdd\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SubscriptionResponse } from \"@bitwarden/common/models/response/subscriptionResponse\";\n\n@Component({\n  selector: \"app-user-subscription\",\n  templateUrl: \"user-subscription.component.html\",\n})\nexport class UserSubscriptionComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  showUpdateLicense = false;\n  sub: SubscriptionResponse;\n  selfHosted = false;\n\n  cancelPromise: Promise<any>;\n  reinstatePromise: Promise<any>;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private router: Router,\n    private logService: LogService,\n    private fileDownloadService: FileDownloadService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.stateService.getHasPremiumPersonally()) {\n      this.loading = true;\n      this.sub = await this.apiService.getUserSubscription();\n    } else {\n      this.router.navigate([\"/settings/subscription/premium\"]);\n      return;\n    }\n\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"reinstateConfirmation\"),\n      this.i18nService.t(\"reinstateSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.apiService.postReinstatePremium();\n      await this.reinstatePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async cancel() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"cancelConfirmation\"),\n      this.i18nService.t(\"cancelSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.cancelPromise = this.apiService.postCancelPremium();\n      await this.cancelPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  downloadLicense() {\n    if (this.loading) {\n      return;\n    }\n\n    const licenseString = JSON.stringify(this.sub.license, null, 2);\n    this.fileDownloadService.download({\n      fileName: \"bitwarden_premium_license.json\",\n      blobData: licenseString,\n    });\n  }\n\n  updateLicense() {\n    if (this.loading) {\n      return;\n    }\n    this.showUpdateLicense = true;\n  }\n\n  closeUpdateLicense(load: boolean) {\n    this.showUpdateLicense = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  adjustStorage(add: boolean) {\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(add ? \"addStorage\" : \"removeStorage\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get usingInAppPurchase() {\n    return this.sub != null ? this.sub.usingInAppPurchase : false;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.selfHosted ? \"subscription\" : \"premiumMembership\");\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { BillingHistoryViewComponent } from \"./billing-history-view.component\";\nimport { PaymentMethodComponent } from \"./payment-method.component\";\nimport { PremiumComponent } from \"./premium.component\";\nimport { SubscriptionComponent } from \"./subscription.component\";\nimport { UserSubscriptionComponent } from \"./user-subscription.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SubscriptionComponent,\n    data: { titleId: \"subscription\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"premium\" },\n      {\n        path: \"user-subscription\",\n        component: UserSubscriptionComponent,\n        data: { titleId: \"premiumMembership\" },\n      },\n      {\n        path: \"premium\",\n        component: PremiumComponent,\n        data: { titleId: \"goPremium\" },\n      },\n      {\n        path: \"payment-method\",\n        component: PaymentMethodComponent,\n        data: { titleId: \"paymentMethod\" },\n      },\n      {\n        path: \"billing-history\",\n        component: BillingHistoryViewComponent,\n        data: { titleId: \"billingHistory\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SubscriptionRoutingModule {}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { PasswordGeneratorPolicyOptions } from \"@bitwarden/common/models/domain/passwordGeneratorPolicyOptions\";\n\n@Directive()\nexport class GeneratorComponent implements OnInit {\n  @Input() comingFromAddEdit = false;\n  @Input() type: string;\n  @Output() onSelected = new EventEmitter<string>();\n\n  usernameGeneratingPromise: Promise<string>;\n  typeOptions: any[];\n  passTypeOptions: any[];\n  usernameTypeOptions: any[];\n  subaddressOptions: any[];\n  catchallOptions: any[];\n  forwardOptions: any[];\n  usernameOptions: any = {};\n  passwordOptions: any = {};\n  username = \"-\";\n  password = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPasswordPolicyOptions: PasswordGeneratorPolicyOptions;\n  usernameWebsite: string = null;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected usernameGenerationService: UsernameGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected stateService: StateService,\n    protected i18nService: I18nService,\n    protected logService: LogService,\n    protected route: ActivatedRoute,\n    private win: Window\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"username\"), value: \"username\" },\n    ];\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n    this.usernameTypeOptions = [\n      {\n        name: i18nService.t(\"plusAddressedEmail\"),\n        value: \"subaddress\",\n        desc: i18nService.t(\"plusAddressedEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"catchallEmail\"),\n        value: \"catchall\",\n        desc: i18nService.t(\"catchallEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"forwardedEmail\"),\n        value: \"forwarded\",\n        desc: i18nService.t(\"forwardedEmailDesc\"),\n      },\n      { name: i18nService.t(\"randomWord\"), value: \"word\" },\n    ];\n    this.subaddressOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.catchallOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.forwardOptions = [\n      { name: \"SimpleLogin\", value: \"simplelogin\" },\n      { name: \"AnonAddy\", value: \"anonaddy\" },\n      { name: \"Firefox Relay\", value: \"firefoxrelay\" },\n      { name: \"Fastmail\", value: \"fastmail\" },\n      { name: \"DuckDuckGo\", value: \"duckduckgo\" },\n    ];\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const passwordOptionsResponse = await this.passwordGenerationService.getOptions();\n      this.passwordOptions = passwordOptionsResponse[0];\n      this.enforcedPasswordPolicyOptions = passwordOptionsResponse[1];\n      this.avoidAmbiguous = !this.passwordOptions.ambiguous;\n      this.passwordOptions.type =\n        this.passwordOptions.type === \"passphrase\" ? \"passphrase\" : \"password\";\n\n      this.usernameOptions = await this.usernameGenerationService.getOptions();\n      if (this.usernameOptions.type == null) {\n        this.usernameOptions.type = \"word\";\n      }\n      if (\n        this.usernameOptions.subaddressEmail == null ||\n        this.usernameOptions.subaddressEmail === \"\"\n      ) {\n        this.usernameOptions.subaddressEmail = await this.stateService.getEmail();\n      }\n      if (this.usernameWebsite == null) {\n        this.usernameOptions.subaddressType = this.usernameOptions.catchallType = \"random\";\n      } else {\n        this.usernameOptions.website = this.usernameWebsite;\n        const websiteOption = { name: this.i18nService.t(\"websiteName\"), value: \"website-name\" };\n        this.subaddressOptions.push(websiteOption);\n        this.catchallOptions.push(websiteOption);\n      }\n\n      if (this.type !== \"username\" && this.type !== \"password\") {\n        if (qParams.type === \"username\" || qParams.type === \"password\") {\n          this.type = qParams.type;\n        } else {\n          const generatorOptions = await this.stateService.getGeneratorOptions();\n          this.type = generatorOptions?.type ?? \"password\";\n        }\n      }\n      if (this.regenerateWithoutButtonPress()) {\n        await this.regenerate();\n      }\n    });\n  }\n\n  async typeChanged() {\n    await this.stateService.setGeneratorOptions({ type: this.type });\n    if (this.regenerateWithoutButtonPress()) {\n      await this.regenerate();\n    }\n  }\n\n  async regenerate() {\n    if (this.type === \"password\") {\n      await this.regeneratePassword();\n    } else if (this.type === \"username\") {\n      await this.regenerateUsername();\n    }\n  }\n\n  async sliderChanged() {\n    this.savePasswordOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizePasswordOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n  }\n\n  async savePasswordOptions(regenerate = true) {\n    this.normalizePasswordOptions();\n    await this.passwordGenerationService.saveOptions(this.passwordOptions);\n\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regeneratePassword();\n    }\n  }\n\n  async saveUsernameOptions(regenerate = true) {\n    await this.usernameGenerationService.saveOptions(this.usernameOptions);\n    if (this.usernameOptions.type === \"forwarded\") {\n      this.username = \"-\";\n    }\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regenerateUsername();\n    }\n  }\n\n  async regeneratePassword() {\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  regenerateUsername() {\n    return this.generateUsername();\n  }\n\n  async generateUsername() {\n    try {\n      this.usernameGeneratingPromise = this.usernameGenerationService.generateUsername(\n        this.usernameOptions\n      );\n      this.username = await this.usernameGeneratingPromise;\n      if (this.username === \"\" || this.username === null) {\n        this.username = \"-\";\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  copy() {\n    const password = this.type === \"password\";\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(\n      password ? this.password : this.username,\n      copyOptions\n    );\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(password ? \"password\" : \"username\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.type === \"password\" ? this.password : this.username);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  regenerateWithoutButtonPress() {\n    return this.type !== \"username\" || this.usernameOptions.type !== \"forwarded\";\n  }\n\n  private normalizePasswordOptions() {\n    // Application level normalize options depedent on class variables\n    this.passwordOptions.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.passwordOptions.uppercase &&\n      !this.passwordOptions.lowercase &&\n      !this.passwordOptions.number &&\n      !this.passwordOptions.special\n    ) {\n      this.passwordOptions.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(\n      this.passwordOptions,\n      this.enforcedPasswordPolicyOptions\n    );\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { GeneratedPasswordHistory } from \"@bitwarden/common/models/domain/generatedPasswordHistory\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n/*\n An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)\n and handles Unicode / Emoji characters correctly.\n*/\n@Pipe({ name: \"colorPassword\" })\nexport class ColorPasswordPipe implements PipeTransform {\n  transform(password: string) {\n    const template = (character: string, type: string) =>\n      `<span class=\"password-${type}\">${character}</span>`;\n    const colorizedPassword = this.generateTemplate(password, template);\n    return colorizedPassword;\n  }\n\n  protected generateTemplate(\n    password: string,\n    templateGenerator: (chararacter: string, type: string, index?: number) => string\n  ) {\n    // Convert to an array to handle cases that stings have special characters, ie: emoji.\n    const passwordArray = Array.from(password);\n    let colorizedPassword = \"\";\n    for (let i = 0; i < passwordArray.length; i++) {\n      let character = passwordArray[i];\n      let isSpecial = false;\n      // Sanitize HTML first.\n      switch (character) {\n        case \"&\":\n          character = \"&amp;\";\n          isSpecial = true;\n          break;\n        case \"<\":\n          character = \"&lt;\";\n          isSpecial = true;\n          break;\n        case \">\":\n          character = \"&gt;\";\n          isSpecial = true;\n          break;\n        case \" \":\n          character = \"&nbsp;\";\n          isSpecial = true;\n          break;\n        default:\n          break;\n      }\n      let type = \"letter\";\n      if (character.match(Utils.regexpEmojiPresentation)) {\n        type = \"emoji\";\n      } else if (isSpecial || character.match(/[^\\w ]/)) {\n        type = \"special\";\n      } else if (character.match(/\\d/)) {\n        type = \"number\";\n      }\n      colorizedPassword += templateGenerator(character, type, i);\n    }\n    return colorizedPassword;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"passHistoryTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"passHistoryTitle\">{{ \"passwordHistory\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"history.length\">\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item d-flex\" *ngFor=\"let h of history\">\n            <div class=\"password-row\">\n              <div\n                class=\"text-monospace generated-wrapper\"\n                [innerHTML]=\"h.password | colorPassword\"\n                appSelectCopy\n              ></div>\n              <small class=\"text-muted\">{{ h.date | date: \"medium\" }}</small>\n            </div>\n            <div class=\"ml-auto\">\n              <button\n                class=\"btn btn-link\"\n                appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                (click)=\"copy(h.password)\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!history.length\">\n        {{ \"noPasswordsInList\" | i18n }}\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            type=\"button\"\n            (click)=\"clear()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'clear' | i18n }}\"\n          >\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"@bitwarden/angular/components/password-generator-history.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"generator\" | i18n }}</h1>\n</div>\n<app-callout type=\"info\" *ngIf=\"enforcedPasswordPolicyOptions?.inEffect() && type === 'password'\">\n  {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n</app-callout>\n<div class=\"card card-generated bg-light my-4\">\n  <div class=\"card-body\">\n    <div\n      *ngIf=\"type === 'password'\"\n      class=\"generated-wrapper\"\n      [innerHTML]=\"password | colorPassword\"\n      appSelectCopy\n    ></div>\n    <div\n      *ngIf=\"type === 'username'\"\n      class=\"generated-wrapper\"\n      [innerHTML]=\"username | colorPassword\"\n      appSelectCopy\n    ></div>\n  </div>\n</div>\n<div class=\"form-group\" role=\"radiogroup\" aria-labelledby=\"typeHeading\">\n  <label id=\"typeHeading\" class=\"d-block\">{{ \"whatWouldYouLikeToGenerate\" | i18n }}</label>\n  <div class=\"form-check form-check-inline\" *ngFor=\"let o of typeOptions\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      [(ngModel)]=\"type\"\n      name=\"Type\"\n      id=\"type_{{ o.value }}\"\n      [value]=\"o.value\"\n      (change)=\"typeChanged()\"\n      [checked]=\"type === o.value\"\n    />\n    <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n      {{ o.name }}\n    </label>\n  </div>\n</div>\n<ng-container *ngIf=\"type === 'password'\">\n  <div aria-labelledby=\"passwordTypeHeading\" class=\"form-group\" role=\"radiogroup\">\n    <label id=\"passwordTypeHeading\" class=\"d-block\">{{ \"passwordType\" | i18n }}</label>\n    <div class=\"form-check form-check-inline\" *ngFor=\"let o of passTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"passwordOptions.type\"\n        name=\"PasswordType\"\n        id=\"passwordType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"savePasswordOptions()\"\n        [checked]=\"passwordOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"passwordType_{{ o.value }}\">\n        {{ o.name }}\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"passwordOptions.type === 'passphrase'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n        <input\n          id=\"num-words\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"3\"\n          max=\"20\"\n          [(ngModel)]=\"passwordOptions.numWords\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n        <input\n          id=\"word-separator\"\n          class=\"form-control\"\n          type=\"text\"\n          maxlength=\"1\"\n          [(ngModel)]=\"passwordOptions.wordSeparator\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"capitalize\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.capitalize\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.capitalize\"\n        />\n        <label for=\"capitalize\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"include-number\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.includeNumber\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.includeNumber\"\n        />\n        <label for=\"include-number\" class=\"form-check-label\">{{ \"includeNumber\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"passwordOptions.type === 'password'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"length\">{{ \"length\" | i18n }}</label>\n        <input\n          id=\"length\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"5\"\n          max=\"128\"\n          [(ngModel)]=\"passwordOptions.length\"\n          (blur)=\"savePasswordOptions()\"\n          (change)=\"lengthChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n        <input\n          id=\"min-number\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minNumber\"\n          (change)=\"minNumberChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n        <input\n          id=\"min-special\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minSpecial\"\n          (change)=\"minSpecialChanged()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"uppercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.uppercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useUppercase\"\n          attr.aria-label=\"{{ 'uppercase' | i18n }}\"\n        />\n        <label for=\"uppercase\" class=\"form-check-label\">A-Z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"lowercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.lowercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useLowercase\"\n          attr.aria-label=\"{{ 'lowercase' | i18n }}\"\n        />\n        <label for=\"lowercase\" class=\"form-check-label\">a-z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"numbers\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.number\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useNumbers\"\n          attr.aria-label=\"{{ 'numbers' | i18n }}\"\n        />\n        <label for=\"numbers\" class=\"form-check-label\">0-9</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"special\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.special\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useSpecial\"\n          attr.aria-label=\"{{ 'specialCharacters' | i18n }}\"\n        />\n        <label for=\"special\" class=\"form-check-label\">!@#$%^&amp;*</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"ambiguous\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"avoidAmbiguous\"\n        />\n        <label for=\"ambiguous\" class=\"form-check-label\">{{ \"ambiguous\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"d-flex\">\n    <div>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"regenerate()\">\n        {{ \"regeneratePassword\" | i18n }}\n      </button>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n        {{ \"copyPassword\" | i18n }}\n      </button>\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"history()\"\n        appA11yTitle=\"{{ 'passwordHistory' | i18n }}\"\n      >\n        <i class=\"bwi bwi-clock bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'username'\">\n  <div aria-labelledby=\"usernameTypeHeading\" class=\"form-group\" role=\"radiogroup\">\n    <div class=\"d-block\">\n      <label id=\"usernameTypeHeading\">{{ \"usernameType\" | i18n }}</label>\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/generator/#username-types\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"form-check\" *ngFor=\"let o of usernameTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"usernameOptions.type\"\n        name=\"UsernameType\"\n        id=\"usernameType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"saveUsernameOptions()\"\n        [checked]=\"usernameOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"usernameType_{{ o.value }}\">\n        {{ o.name }}\n        <div class=\"small text-muted\">{{ o.desc }}</div>\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'forwarded'\">\n    <div class=\"form-group\">\n      <label class=\"d-block\">{{ \"service\" | i18n }}</label>\n      <div class=\"form-check\" *ngFor=\"let o of forwardOptions\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          [(ngModel)]=\"usernameOptions.forwardedService\"\n          name=\"ForwardType\"\n          id=\"forwardtype_{{ o.value }}\"\n          [value]=\"o.value\"\n          (change)=\"saveUsernameOptions()\"\n          [checked]=\"usernameOptions.forwardedService === o.value\"\n        />\n        <label class=\"form-check-label\" for=\"forwardtype_{{ o.value }}\">\n          {{ o.name }}\n        </label>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'simplelogin'\">\n      <div class=\"form-group col-4\">\n        <label for=\"simplelogin-apikey\">{{ \"apiKey\" | i18n }}</label>\n        <input\n          id=\"simplelogin-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedSimpleLoginApiKey\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'duckduckgo'\">\n      <div class=\"form-group col-4\">\n        <label for=\"duckduckgo-apikey\">{{ \"apiKey\" | i18n }}</label>\n        <input\n          id=\"duckduckgo-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          name=\"DuckDudkGoApiKey\"\n          [(ngModel)]=\"usernameOptions.forwardedDuckDuckGoToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'anonaddy'\">\n      <div class=\"form-group col-4\">\n        <label for=\"anonaddy-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"anonaddy-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedAnonAddyApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"anonaddy-domain\">{{ \"domainName\" | i18n }}</label>\n        <input\n          id=\"anonaddy-domain\"\n          class=\"form-control\"\n          type=\"text\"\n          [(ngModel)]=\"usernameOptions.forwardedAnonAddyDomain\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'firefoxrelay'\">\n      <div class=\"form-group col-4\">\n        <label for=\"firefox-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"firefox-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedFirefoxApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'fastmail'\">\n      <div class=\"form-group col-4\">\n        <label for=\"fastmail-apiToken\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"fastmail-apiToken\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedFastmailApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'subaddress'\">\n    <div class=\"form-group col-4\">\n      <label for=\"subaddress-email\">{{ \"emailAddress\" | i18n }}</label>\n      <input\n        id=\"subaddress-email\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.subaddressEmail\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'catchall'\">\n    <div class=\"form-group col-4\">\n      <label for=\"catchall-domain\">{{ \"domainName\" | i18n }}</label>\n      <input\n        id=\"catchall-domain\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.catchallDomain\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'word'\">\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input\n            id=\"capitalizeUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordCapitalize\"\n          />\n          <label for=\"capitalizeUsername\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n        </div>\n        <div class=\"form-check\">\n          <input\n            id=\"includeNumberUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordIncludeNumber\"\n          />\n          <label for=\"includeNumberUsername\" class=\"form-check-label\">{{\n            \"includeNumber\" | i18n\n          }}</label>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <div #form [appApiAction]=\"usernameGeneratingPromise\">\n    <button\n      type=\"button\"\n      class=\"btn btn-submit btn-primary\"\n      (click)=\"regenerate()\"\n      [disabled]=\"form.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"regenerateUsername\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n      {{ \"copyUsername\" | i18n }}\n    </button>\n  </div>\n</ng-container>\n<ng-template #historyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { GeneratorComponent as BaseGeneratorComponent } from \"@bitwarden/angular/components/generator.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\n\nimport { PasswordGeneratorHistoryComponent } from \"./password-generator-history.component\";\n\n@Component({\n  selector: \"app-generator\",\n  templateUrl: \"generator.component.html\",\n})\nexport class GeneratorComponent extends BaseGeneratorComponent {\n  @ViewChild(\"historyTemplate\", { read: ViewContainerRef, static: true })\n  historyModalRef: ViewContainerRef;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    usernameGenerationService: UsernameGenerationService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService,\n    route: ActivatedRoute,\n    private modalService: ModalService\n  ) {\n    super(\n      passwordGenerationService,\n      usernameGenerationService,\n      platformUtilsService,\n      stateService,\n      i18nService,\n      logService,\n      route,\n      window\n    );\n    if (platformUtilsService.isSelfHost()) {\n      // Cannot use Firefox Relay on self hosted web vaults due to CORS issues with Firefox Relay API\n      this.forwardOptions.splice(\n        this.forwardOptions.findIndex((o) => o.value === \"firefoxrelay\"),\n        1\n      );\n    }\n  }\n\n  async history() {\n    await this.modalService.openViewRef(PasswordGeneratorHistoryComponent, this.historyModalRef);\n  }\n\n  lengthChanged() {\n    document.getElementById(\"length\").focus();\n  }\n\n  minNumberChanged() {\n    document.getElementById(\"min-number\").focus();\n  }\n\n  minSpecialChanged() {\n    document.getElementById(\"min-special\").focus();\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-tools\",\n  templateUrl: \"tools.component.html\",\n})\nexport class ToolsComponent implements OnInit {\n  canAccessPremium = false;\n\n  constructor(private stateService: StateService, private messagingService: MessagingService) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card mb-4\">\n        <div class=\"card-header\">{{ \"tools\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"generator\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"generator\" | i18n }}\n          </a>\n          <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"importData\" | i18n }}\n          </a>\n          <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"exportVault\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { CipherWithIdRequest } from \"@bitwarden/common/models/request/cipherWithIdRequest\";\nimport { FolderWithIdRequest } from \"@bitwarden/common/models/request/folderWithIdRequest\";\nimport { UpdateKeyRequest } from \"@bitwarden/common/models/request/updateKeyRequest\";\n\n@Component({\n  selector: \"app-update-key\",\n  templateUrl: \"update-key.component.html\",\n})\nexport class UpdateKeyComponent {\n  masterPassword: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (hasEncKey) {\n      return;\n    }\n\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.makeRequest().then((request) => {\n        return this.apiService.postAccountKey(request);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"keyUpdated\"),\n        this.i18nService.t(\"logBackInOthersToo\"),\n        { timeout: 15000 }\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async makeRequest(): Promise<UpdateKeyRequest> {\n    const key = await this.cryptoService.getKey();\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n\n    await this.syncService.fullSync(true);\n\n    const folders = await firstValueFrom(this.folderService.folderViews$);\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    return request;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"updateEncKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"updateEncKeyTitle\">{{ \"updateEncryptionKey\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"updateEncryptionKeyShortDesc\" | i18n }} {{ \"updateEncryptionKeyDesc\" | i18n }}\n          <a\n            href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            >{{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <app-callout type=\"warning\">{{ \"updateEncryptionKeyWarning\" | i18n }}</app-callout>\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appAutofocus\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"updateEncryptionKey\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    protected folderService: FolderService,\n    protected folderApiService: FolderApiServiceAbstraction,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderApiService.save(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderApiService.delete(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"folderAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"folderAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"folder.name\"\n          required\n          appAutofocus\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"@bitwarden/angular/components/folder-add-edit.component\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  constructor(\n    folderService: FolderService,\n    folderApiService: FolderApiServiceAbstraction,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(folderService, folderApiService, i18nService, platformUtilsService, logService);\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Directive()\nexport class ShareComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collections: CollectionView[] = [];\n  organizations: Organization[] = [];\n\n  protected writeableCollections: CollectionView[] = [];\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n    const orgs = await this.organizationService.getAll();\n    this.organizations = orgs\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"))\n      .filter((o) => o.enabled && o.status === OrganizationUserStatusType.Confirmed);\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgName =\n      this.organizations.find((o) => o.id === this.organizationId)?.name ??\n      this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if ((this.collections[i] as any).checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"shareTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"shareTitle\">\n          {{ \"moveToOrganization\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!organizations || !organizations.length\">\n        {{ \"noOrganizationsList\" | i18n }}\n      </div>\n      <div class=\"modal-body\" *ngIf=\"organizations && organizations.length\">\n        <p>{{ \"moveToOrgDesc\" | i18n }}</p>\n        <div class=\"form-group\">\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            class=\"form-control\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [disabled]=\"form.loading || !canSave\"\n          [ngClass]=\"{ loading: form.loading }\"\n          *ngIf=\"organizations && organizations.length\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <a\n          href=\"#\"\n          routerLink=\"/create-organization\"\n          class=\"btn btn-primary\"\n          *ngIf=\"!organizations || !organizations.length\"\n        >\n          {{ \"newOrganization\" | i18n }}\n        </a>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { ShareComponent as BaseShareComponent } from \"@bitwarden/angular/components/share.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\nexport class ShareComponent extends BaseShareComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-verify-email\",\n  templateUrl: \"verify-email.component.html\",\n})\nexport class VerifyEmailComponent {\n  actionPromise: Promise<unknown>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async send() {\n    if (this.actionPromise != null) {\n      return;\n    }\n    try {\n      this.actionPromise = this.apiService.postAccountVerifyEmail();\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"checkInboxForVerification\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","<div class=\"card border-warning\">\n  <div class=\"card-header bg-warning text-white\">\n    <i class=\"bwi bwi-envelope bwi-fw\" aria-hidden=\"true\"></i> {{ \"verifyEmail\" | i18n }}\n  </div>\n  <div class=\"card-body\">\n    <p>{{ \"verifyEmailDesc\" | i18n }}</p>\n    <button\n      type=\"button\"\n      class=\"btn btn-block btn-outline-secondary btn-submit\"\n      #sendBtn\n      [appApiAction]=\"actionPromise\"\n      [disabled]=\"sendBtn.loading\"\n      (click)=\"send()\"\n    >\n      <i class=\"bwi bwi-spin bwi-spinner\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>\n        {{ \"sendEmail\" | i18n }}\n      </span>\n    </button>\n  </div>\n</div>\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"groupings\">\n        <div class=\"content\">\n          <div class=\"inner-content\">\n            <app-vault-filter\n              #vaultFilter\n              [activeFilter]=\"activeFilter\"\n              (onFilterChange)=\"applyVaultFilter($event)\"\n              (onAddFolder)=\"addFolder()\"\n              (onEditFolder)=\"editFolder($event.id)\"\n              (onSearchTextChanged)=\"filterSearchText($event)\"\n            ></app-vault-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div [ngClass]=\"{ 'col-6': isShowingCards, 'col-9': !isShowingCards }\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"vaultItems\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <app-vault-bulk-actions\n            [ciphersComponent]=\"ciphersComponent\"\n            [deleted]=\"activeFilter.status === 'trash'\"\n          >\n          </app-vault-bulk-actions>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addCipher()\"\n            *ngIf=\"activeFilter.status !== 'trash'\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"addItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout\n        type=\"warning\"\n        *ngIf=\"activeFilter.status === 'trash'\"\n        icon=\"bwi-exclamation-triangle\"\n      >\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-vault-ciphers\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onShareClicked)=\"shareCipher($event)\"\n        (onCollectionsClicked)=\"editCipherCollections($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n        (onOrganzationBadgeClicked)=\"applyOrganizationFilter($event)\"\n      >\n      </app-vault-ciphers>\n    </div>\n    <div class=\"col-3\">\n      <div class=\"card border-warning mb-4\" *ngIf=\"showUpdateKey\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateKeyTitle\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateEncryptionKeyShortDesc\" | i18n }}</p>\n          <button class=\"btn btn-block btn-outline-secondary\" type=\"button\" (click)=\"updateKey()\">\n            {{ \"updateEncryptionKey\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-verify-email *ngIf=\"showVerifyEmail\" class=\"d-block mb-4\"></app-verify-email>\n      <div class=\"card border-warning mb-4\" *ngIf=\"showBrowserOutdated\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateBrowser\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateBrowserDesc\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            target=\"_blank\"\n            href=\"https://browser-update.org/update-browser.html\"\n            rel=\"noopener\"\n          >\n            {{ \"updateBrowser\" | i18n }}\n          </a>\n        </div>\n      </div>\n      <div class=\"card border-success mb-4\" *ngIf=\"showPremiumCallout\">\n        <div class=\"card-header bg-success text-white\">\n          <i class=\"bwi bwi-star-f bwi-fw\" aria-hidden=\"true\"></i> {{ \"goPremium\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            routerLink=\"/settings/subscription/premium\"\n          >\n            {{ \"goPremium\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #folderAddEdit></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #share></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #updateKeyTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { FolderAddEditComponent } from \"./folder-add-edit.component\";\nimport { ShareComponent } from \"./share.component\";\nimport { VaultService } from \"./shared/vault.service\";\nimport { VaultFilterService } from \"./vault-filter/shared/vault-filter.service\";\nimport { VaultFilterComponent } from \"./vault-filter/vault-filter.component\";\n\nconst BroadcasterSubscriptionId = \"VaultComponent\";\n\n@Component({\n  selector: \"app-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(\"vaultFilter\", { static: true }) filterComponent: VaultFilterComponent;\n  @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"folderAddEdit\", { read: ViewContainerRef, static: true })\n  folderAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"share\", { read: ViewContainerRef, static: true }) shareModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"updateKeyTemplate\", { read: ViewContainerRef, static: true })\n  updateKeyModalRef: ViewContainerRef;\n\n  folderId: string = null;\n  myVaultOnly = false;\n  showVerifyEmail = false;\n  showBrowserOutdated = false;\n  showUpdateKey = false;\n  showPremiumCallout = false;\n  trashCleanupWarning: string = null;\n  activeFilter: VaultFilter = new VaultFilter();\n\n  constructor(\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private tokenService: TokenService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private vaultService: VaultService,\n    private cipherService: CipherService,\n    private passwordRepromptService: PasswordRepromptService,\n    private vaultFilterService: VaultFilterService\n  ) {}\n\n  async ngOnInit() {\n    this.showVerifyEmail = !(await this.tokenService.getEmailVerified());\n    this.showBrowserOutdated = window.navigator.userAgent.indexOf(\"MSIE\") !== -1;\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      await this.syncService.fullSync(false);\n      const canAccessPremium = await this.stateService.getCanAccessPremium();\n      this.showPremiumCallout =\n        !this.showVerifyEmail && !canAccessPremium && !this.platformUtilsService.isSelfHost();\n\n      this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n      this.filterComponent.reloadOrganizations();\n      this.showUpdateKey = !(await this.cryptoService.hasEncKey());\n\n      const cipherId = getCipherIdFromParams(params);\n\n      if (cipherId) {\n        const cipherView = new CipherView();\n        cipherView.id = cipherId;\n        if (params.action === \"clone\") {\n          await this.cloneCipher(cipherView);\n        } else if (params.action === \"edit\") {\n          await this.editCipher(cipherView);\n        }\n      }\n      await this.ciphersComponent.reload();\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.subscribe(async (params) => {\n        const cipherId = getCipherIdFromParams(params);\n        if (cipherId) {\n          if ((await this.cipherService.get(cipherId)) != null) {\n            this.editCipherId(cipherId);\n          } else {\n            this.platformUtilsService.showToast(\n              \"error\",\n              this.i18nService.t(\"errorOccurred\"),\n              this.i18nService.t(\"unknownCipher\")\n            );\n            this.router.navigate([], {\n              queryParams: { itemId: null, cipherId: null },\n              queryParamsHandling: \"merge\",\n            });\n          }\n        }\n      });\n\n      this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n        this.ngZone.run(async () => {\n          switch (message.command) {\n            case \"syncCompleted\":\n              if (message.successfully) {\n                await Promise.all([\n                  this.filterComponent.reloadCollectionsAndFolders(this.activeFilter),\n                  this.filterComponent.reloadOrganizations(),\n                  this.ciphersComponent.load(this.ciphersComponent.filter),\n                ]);\n                this.changeDetectorRef.detectChanges();\n              }\n              break;\n          }\n        });\n      });\n    });\n  }\n\n  get isShowingCards() {\n    return (\n      this.showBrowserOutdated ||\n      this.showPremiumCallout ||\n      this.showUpdateKey ||\n      this.showVerifyEmail\n    );\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async applyVaultFilter(vaultFilter: VaultFilter) {\n    this.ciphersComponent.showAddNew = vaultFilter.status !== \"trash\";\n    this.activeFilter = vaultFilter;\n    await this.ciphersComponent.reload(\n      this.activeFilter.buildFilter(),\n      vaultFilter.status === \"trash\"\n    );\n    this.filterComponent.searchPlaceholder = this.vaultService.calculateSearchBarLocalizationString(\n      this.activeFilter\n    );\n    this.go();\n  }\n\n  async applyOrganizationFilter(orgId: string) {\n    if (orgId == null) {\n      this.activeFilter.resetOrganization();\n      this.activeFilter.myVaultOnly = true;\n    } else {\n      this.activeFilter.selectedOrganizationId = orgId;\n    }\n    await this.vaultFilterService.ensureVaultFiltersAreExpanded();\n    await this.applyVaultFilter(this.activeFilter);\n  }\n\n  filterSearchText(searchText: string) {\n    this.ciphersComponent.searchText = searchText;\n    this.ciphersComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (cipher.organizationId == null && !canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    } else if (cipher.organizationId != null) {\n      const org = await this.organizationService.get(cipher.organizationId);\n      if (org != null && (org.maxStorageGb == null || org.maxStorageGb === 0)) {\n        this.messagingService.send(\"upgradeOrganization\", {\n          organizationId: cipher.organizationId,\n        });\n        return;\n      }\n    }\n\n    let madeAttachmentChanges = false;\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onReuploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.ciphersComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async shareCipher(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      ShareComponent,\n      this.shareModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSharedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addFolder() {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = null;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n      }\n    );\n  }\n\n  async editFolder(folderId: string) {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = folderId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.type = this.activeFilter.cipherType;\n    component.folderId = this.folderId === \"none\" ? null : this.folderId;\n    if (this.activeFilter.selectedCollectionId != null) {\n      const collection = this.filterComponent.collections.fullList.filter(\n        (c) => c.id === this.activeFilter.selectedCollectionId\n      );\n      if (collection.length > 0) {\n        component.organizationId = collection[0].organizationId;\n        component.collectionIds = [this.activeFilter.selectedCollectionId];\n      }\n    }\n    if (this.activeFilter.selectedFolderId && this.activeFilter.selectedFolder) {\n      component.folderId = this.activeFilter.selectedFolderId;\n    }\n    if (this.activeFilter.selectedOrganizationId) {\n      component.organizationId = this.activeFilter.selectedOrganizationId;\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    return this.editCipherId(cipher?.id);\n  }\n\n  async editCipherId(id: string) {\n    const cipher = await this.cipherService.get(id);\n    if (cipher != null && cipher.reprompt != 0) {\n      if (!(await this.passwordRepromptService.showPasswordPrompt())) {\n        this.go({ cipherId: null, itemId: null });\n        return;\n      }\n    }\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n\n    modal.onClosedPromise().then(() => {\n      this.go({ cipherId: null, itemId: null });\n    });\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n  }\n\n  async updateKey() {\n    await this.modalService.openViewRef(UpdateKeyComponent, this.updateKeyModalRef);\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        favorites: this.activeFilter.status === \"favorites\" ? true : null,\n        type: this.activeFilter.cipherType,\n        folderId: this.activeFilter.selectedFolderId,\n        collectionId: this.activeFilter.selectedCollectionId,\n        deleted: this.activeFilter.status === \"trash\" ? true : null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: \"merge\",\n      replaceUrl: true,\n    });\n  }\n}\n\n/**\n * Allows backwards compatibility with\n * old links that used the original `cipherId` param\n */\nconst getCipherIdFromParams = (params: Params): string => {\n  return params[\"itemId\"] || params[\"cipherId\"];\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { VaultComponent } from \"./vault.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VaultComponent,\n    data: { titleId: \"vaults\" },\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaultRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { OrganizationBadgeModule } from \"./organization-badge/organization-badge.module\";\nimport { VaultSharedModule } from \"./shared/vault-shared.module\";\nimport { VaultRoutingModule } from \"./vault-routing.module\";\nimport { VaultComponent } from \"./vault.component\";\n\n@NgModule({\n  imports: [VaultSharedModule, VaultRoutingModule, OrganizationBadgeModule],\n  declarations: [VaultComponent, CiphersComponent],\n  exports: [VaultComponent],\n})\nexport class VaultModule {}\n","import { NgModule } from \"@angular/core\";\nimport { Route, RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { LockGuard } from \"@bitwarden/angular/guards/lock.guard\";\nimport { UnauthGuard } from \"@bitwarden/angular/guards/unauth.guard\";\n\nimport { flagEnabled, Flags } from \"../utils/flags\";\n\nimport { AcceptEmergencyComponent } from \"./accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"./accounts/accept-organization.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RecoverDeleteComponent } from \"./accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"./accounts/recover-two-factor.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TrialInitiationComponent } from \"./accounts/trial-initiation/trial-initiation.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"./accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"./accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"./accounts/verify-recover-delete.component\";\nimport { HomeGuard } from \"./guards/home.guard\";\nimport { FrontendLayoutComponent } from \"./layouts/frontend-layout.component\";\nimport { UserLayoutComponent } from \"./layouts/user-layout.component\";\nimport { OrganizationsRoutingModule } from \"./organizations/organization-routing.module\";\nimport { AcceptFamilySponsorshipComponent } from \"./organizations/sponsorships/accept-family-sponsorship.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"./organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ReportsModule } from \"./reports\";\nimport { AccessComponent } from \"./send/access.component\";\nimport { SendComponent } from \"./send/send.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { CreateOrganizationComponent } from \"./settings/create-organization.component\";\nimport { DomainRulesComponent } from \"./settings/domain-rules.component\";\nimport { EmergencyAccessViewComponent } from \"./settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"./settings/emergency-access.component\";\nimport { PreferencesComponent } from \"./settings/preferences.component\";\nimport { SecurityRoutingModule } from \"./settings/security-routing.module\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"./settings/sponsored-families.component\";\nimport { SubscriptionRoutingModule } from \"./settings/subscription-routing.module\";\nimport { GeneratorComponent } from \"./tools/generator.component\";\nimport { ToolsComponent } from \"./tools/tools.component\";\nimport { VaultModule } from \"./vault/vault.module\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    data: { doNotSaveUrl: true },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        children: [], // Children lets us have an empty component.\n        canActivate: [HomeGuard], // Redirects either to vault, login or lock page.\n      },\n      { path: \"login\", component: LoginComponent, canActivate: [UnauthGuard] },\n      { path: \"2fa\", component: TwoFactorComponent, canActivate: [UnauthGuard] },\n      {\n        path: \"register\",\n        component: RegisterComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"createAccount\" },\n      },\n      buildFlaggedRoute(\"showTrial\", {\n        path: \"trial\",\n        component: TrialInitiationComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"startTrial\" },\n      }),\n      {\n        path: \"sso\",\n        component: SsoComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"enterpriseSingleSignOn\" },\n      },\n      {\n        path: \"set-password\",\n        component: SetPasswordComponent,\n        data: { titleId: \"setMasterPassword\" },\n      },\n      {\n        path: \"hint\",\n        component: HintComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"passwordHint\" },\n      },\n      {\n        path: \"lock\",\n        component: LockComponent,\n        canActivate: [LockGuard],\n      },\n      { path: \"verify-email\", component: VerifyEmailTokenComponent },\n      {\n        path: \"accept-organization\",\n        component: AcceptOrganizationComponent,\n        data: { titleId: \"joinOrganization\", doNotSaveUrl: false },\n      },\n      {\n        path: \"accept-emergency\",\n        component: AcceptEmergencyComponent,\n        data: { titleId: \"acceptEmergency\", doNotSaveUrl: false },\n      },\n      {\n        path: \"accept-families-for-enterprise\",\n        component: AcceptFamilySponsorshipComponent,\n        data: { titleId: \"acceptFamilySponsorship\", doNotSaveUrl: false },\n      },\n      { path: \"recover\", pathMatch: \"full\", redirectTo: \"recover-2fa\" },\n      {\n        path: \"recover-2fa\",\n        component: RecoverTwoFactorComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"recoverAccountTwoStep\" },\n      },\n      {\n        path: \"recover-delete\",\n        component: RecoverDeleteComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"verify-recover-delete\",\n        component: VerifyRecoverDeleteComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"send/:sendId/:key\",\n        component: AccessComponent,\n        data: { title: \"Bitwarden Send\" },\n      },\n      {\n        path: \"update-temp-password\",\n        component: UpdateTempPasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"updateTempPassword\" },\n      },\n      {\n        path: \"update-password\",\n        component: UpdatePasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"updatePassword\" },\n      },\n      {\n        path: \"remove-password\",\n        component: RemovePasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"removeMasterPassword\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    component: UserLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: \"vault\",\n        loadChildren: () => VaultModule,\n      },\n      { path: \"sends\", component: SendComponent, data: { title: \"Send\" } },\n      {\n        path: \"create-organization\",\n        component: CreateOrganizationComponent,\n        data: { titleId: \"newOrganization\" },\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n          { path: \"account\", component: AccountComponent, data: { titleId: \"myAccount\" } },\n          {\n            path: \"preferences\",\n            component: PreferencesComponent,\n            data: { titleId: \"preferences\" },\n          },\n          {\n            path: \"security\",\n            loadChildren: () => SecurityRoutingModule,\n          },\n          {\n            path: \"domain-rules\",\n            component: DomainRulesComponent,\n            data: { titleId: \"domainRules\" },\n          },\n          {\n            path: \"subscription\",\n            loadChildren: () => SubscriptionRoutingModule,\n          },\n          {\n            path: \"emergency-access\",\n            children: [\n              {\n                path: \"\",\n                component: EmergencyAccessComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n              {\n                path: \":id\",\n                component: EmergencyAccessViewComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n            ],\n          },\n          {\n            path: \"sponsored-families\",\n            component: SponsoredFamiliesComponent,\n            data: { titleId: \"sponsoredFamilies\" },\n          },\n        ],\n      },\n      {\n        path: \"tools\",\n        component: ToolsComponent,\n        canActivate: [AuthGuard],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"generator\" },\n          {\n            path: \"\",\n            loadChildren: () =>\n              import(\"./tools/import-export/import-export.module\").then(\n                (m) => m.ImportExportModule\n              ),\n          },\n          {\n            path: \"generator\",\n            component: GeneratorComponent,\n            data: { titleId: \"generator\" },\n          },\n        ],\n      },\n      {\n        path: \"reports\",\n        loadChildren: () => ReportsModule,\n      },\n      { path: \"setup/families-for-enterprise\", component: FamiliesForEnterpriseSetupComponent },\n    ],\n  },\n  {\n    path: \"organizations\",\n    loadChildren: () => OrganizationsRoutingModule,\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      paramsInheritanceStrategy: \"always\",\n      // enableTracing: true,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class OssRoutingModule {}\n\nexport function buildFlaggedRoute(flagName: keyof Flags, route: Route): Route {\n  return flagEnabled(flagName)\n    ? route\n    : {\n        path: route.path,\n        redirectTo: \"/\",\n      };\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\n\nimport { VerticalStepContentComponent } from \"./vertical-step-content.component\";\nimport { VerticalStep } from \"./vertical-step.component\";\nimport { VerticalStepperComponent } from \"./vertical-stepper.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [VerticalStepperComponent, VerticalStep, VerticalStepContentComponent],\n  exports: [VerticalStepperComponent, VerticalStep],\n})\nexport class VerticalStepperModule {}\n","import { CdkStepperModule } from \"@angular/cdk/stepper\";\nimport { TitleCasePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { FormFieldModule } from \"@bitwarden/components\";\n\nimport { OrganizationCreateModule } from \"../../organizations/create/organization-create.module\";\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\nimport { RegisterFormModule } from \"../register-form/register-form.module\";\n\nimport { BillingComponent } from \"./billing.component\";\nimport { ConfirmationDetailsComponent } from \"./confirmation-details.component\";\nimport { AbmEnterpriseContentComponent } from \"./content/abm-enterprise-content.component\";\nimport { AbmTeamsContentComponent } from \"./content/abm-teams-content.component\";\nimport { CnetEnterpriseContentComponent } from \"./content/cnet-enterprise-content.component\";\nimport { CnetIndividualContentComponent } from \"./content/cnet-individual-content.component\";\nimport { CnetTeamsContentComponent } from \"./content/cnet-teams-content.component\";\nimport { DefaultContentComponent } from \"./content/default-content.component\";\nimport { EnterpriseContentComponent } from \"./content/enterprise-content.component\";\nimport { Enterprise1ContentComponent } from \"./content/enterprise1-content.component\";\nimport { Enterprise2ContentComponent } from \"./content/enterprise2-content.component\";\nimport { LogoCnetComponent } from \"./content/logo-cnet.component\";\nimport { LogoForbesComponent } from \"./content/logo-forbes.component\";\nimport { LogoUSNewsComponent } from \"./content/logo-us-news.component\";\nimport { TeamsContentComponent } from \"./content/teams-content.component\";\nimport { Teams1ContentComponent } from \"./content/teams1-content.component\";\nimport { Teams2ContentComponent } from \"./content/teams2-content.component\";\nimport { TrialInitiationComponent } from \"./trial-initiation.component\";\nimport { VerticalStepperModule } from \"./vertical-stepper/vertical-stepper.module\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    CdkStepperModule,\n    VerticalStepperModule,\n    FormFieldModule,\n    RegisterFormModule,\n    OrganizationCreateModule,\n    LooseComponentsModule,\n  ],\n  declarations: [\n    TrialInitiationComponent,\n    EnterpriseContentComponent,\n    TeamsContentComponent,\n    ConfirmationDetailsComponent,\n    BillingComponent,\n    DefaultContentComponent,\n    EnterpriseContentComponent,\n    Enterprise1ContentComponent,\n    Enterprise2ContentComponent,\n    TeamsContentComponent,\n    Teams1ContentComponent,\n    Teams2ContentComponent,\n    CnetEnterpriseContentComponent,\n    CnetIndividualContentComponent,\n    CnetTeamsContentComponent,\n    AbmEnterpriseContentComponent,\n    AbmTeamsContentComponent,\n    LogoCnetComponent,\n    LogoForbesComponent,\n    LogoUSNewsComponent,\n  ],\n  exports: [TrialInitiationComponent],\n  providers: [TitleCasePipe],\n})\nexport class TrialInitiationModule {}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\n\n@NgModule({\n  imports: [SharedModule, ScrollingModule],\n  declarations: [EntityUsersComponent],\n  exports: [EntityUsersComponent],\n})\nexport class OrganizationManageModule {}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\n\nimport { EnrollMasterPasswordReset } from \"./enroll-master-password-reset.component\";\n\n@NgModule({\n  imports: [SharedModule, ScrollingModule, LooseComponentsModule],\n  declarations: [EnrollMasterPasswordReset],\n  exports: [EnrollMasterPasswordReset],\n})\nexport class OrganizationUserModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { TrialInitiationModule } from \"./accounts/trial-initiation/trial-initiation.module\";\nimport { OrganizationCreateModule } from \"./organizations/create/organization-create.module\";\nimport { OrganizationManageModule } from \"./organizations/manage/organization-manage.module\";\nimport { OrganizationUserModule } from \"./organizations/users/organization-user.module\";\nimport { LooseComponentsModule, SharedModule } from \"./shared\";\nimport { OrganizationBadgeModule } from \"./vault/organization-badge/organization-badge.module\";\nimport { VaultFilterModule } from \"./vault/vault-filter/vault-filter.module\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    LooseComponentsModule,\n    TrialInitiationModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    OrganizationManageModule,\n    OrganizationUserModule,\n    OrganizationCreateModule,\n  ],\n  exports: [\n    SharedModule,\n    LooseComponentsModule,\n    TrialInitiationModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n  ],\n  bootstrap: [],\n})\nexport class OssModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nconst routes: Routes = [{ path: \"**\", redirectTo: \"\" }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WildcardRoutingModule {}\n","export class ProviderAddOrganizationRequest {\n  organizationId: string;\n  key: string;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProviderAddOrganizationRequest } from \"@bitwarden/common/models/request/provider/providerAddOrganizationRequest\";\n\n@Injectable()\nexport class WebProviderService {\n  constructor(\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private apiService: ApiService\n  ) {}\n\n  async addOrganizationToProvider(providerId: string, organizationId: string) {\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const providerKey = await this.cryptoService.getProviderKey(providerId);\n\n    const encryptedOrgKey = await this.cryptoService.encrypt(orgKey.key, providerKey);\n\n    const request = new ProviderAddOrganizationRequest();\n    request.organizationId = organizationId;\n    request.key = encryptedOrgKey.encryptedString;\n\n    const response = await this.apiService.postProviderAddOrganization(providerId, request);\n    await this.syncService.fullSync(true);\n    return response;\n  }\n\n  async detachOrganizastion(providerId: string, organizationId: string): Promise<any> {\n    await this.apiService.deleteProviderOrganization(providerId, organizationId);\n    await this.syncService.fullSync(true);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"addTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"addTitle\">\n          {{ \"addExistingOrganization\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <ng-container *ngIf=\"!loading\">\n          <table class=\"table table-hover table-list\">\n            <tr *ngFor=\"let o of organizations\">\n              <td width=\"30\">\n                <app-avatar [data]=\"o.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar>\n              </td>\n              <td>\n                {{ o.name }}\n              </td>\n              <td>\n                <button\n                  class=\"btn btn-outline-secondary pull-right\"\n                  (click)=\"add(o)\"\n                  [disabled]=\"formPromise\"\n                >\n                  Add\n                </button>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\n@Component({\n  selector: \"provider-add-organization\",\n  templateUrl: \"add-organization.component.html\",\n})\nexport class AddOrganizationComponent implements OnInit {\n  @Input() providerId: string;\n  @Input() organizations: Organization[];\n  @Output() onAddedOrganization = new EventEmitter();\n\n  provider: Provider;\n  formPromise: Promise<any>;\n  loading = true;\n\n  constructor(\n    private providerService: ProviderService,\n    private webProviderService: WebProviderService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private validationService: ValidationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    if (this.providerId == null) {\n      return;\n    }\n\n    this.provider = await this.providerService.get(this.providerId);\n\n    this.loading = false;\n  }\n\n  async add(organization: Organization) {\n    if (this.formPromise) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"addOrganizationConfirmation\", organization.name, this.provider.name),\n      organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.formPromise = this.webProviderService.addOrganizationToProvider(\n        this.providerId,\n        organization.id\n      );\n      await this.formPromise;\n    } catch (e) {\n      this.validationService.showError(e);\n      return;\n    } finally {\n      this.formPromise = null;\n    }\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"organizationJoinedProvider\")\n    );\n    this.onAddedOrganization.emit();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Injectable()\nexport class ProviderPermissionsGuard implements CanActivate {\n  constructor(\n    private providerService: ProviderService,\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const provider = await this.providerService.get(route.params.providerId);\n    if (provider == null) {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    if (!provider.isProviderAdmin && !provider.enabled) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"providerIsDisabled\"));\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    const permissionsCallback: (provider: Provider) => boolean = route.data?.providerPermissions;\n    const hasSpecifiedPermissions = permissionsCallback == null || permissionsCallback(provider);\n\n    if (!hasSpecifiedPermissions) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"accessDenied\"));\n      return this.router.createUrlTree([\"/providers\", provider.id]);\n    }\n\n    return true;\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"container page-content\">\n  <div class=\"page-header d-flex\">\n    <h1>{{ \"providers\" | i18n }}</h1>\n  </div>\n  <p *ngIf=\"!loaded\" class=\"text-muted\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"loaded\">\n    <table class=\"table table-hover table-list\" *ngIf=\"providers && providers.length\">\n      <tbody>\n        <tr *ngFor=\"let p of providers\">\n          <td width=\"30\">\n            <app-avatar [data]=\"p.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" [routerLink]=\"['/providers', p.id]\">{{ p.name }}</a>\n            <ng-container *ngIf=\"!p.enabled\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-danger\"\n                title=\"{{ 'providerIsDisabled' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"providerIsDisabled\" | i18n }}</span>\n            </ng-container>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"app-providers\",\n  templateUrl: \"providers.component.html\",\n})\nexport class ProvidersComponent implements OnInit {\n  providers: Provider[];\n  loaded = false;\n  actionPromise: Promise<any>;\n\n  constructor(private providerService: ProviderService, private i18nService: I18nService) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    await this.load();\n  }\n\n  async load() {\n    const providers = await this.providerService.getAll();\n    providers.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.providers = providers;\n    this.loaded = true;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"clients\" | i18n }}</h1>\n\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <a class=\"btn btn-sm btn-outline-primary ml-3\" routerLink=\"create\" *ngIf=\"manageOrganizations\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newClientOrganization\" | i18n }}\n    </a>\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"addExistingOrganization()\"\n      *ngIf=\"manageOrganizations && showAddExisting\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"addExistingOrganization\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<ng-container\n  *ngIf=\"!loading && (clients | search: searchText:'organizationName':'id') as searchedClients\"\n>\n  <p *ngIf=\"!searchedClients.length\">{{ \"noClientsInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedClients.length\">\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <thead>\n        <tr>\n          <th colspan=\"2\">{{ \"name\" | i18n }}</th>\n          <th>{{ \"numberOfUsers\" | i18n }}</th>\n          <th>{{ \"billingPlan\" | i18n }}</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let o of searchedClients\">\n          <td width=\"30\">\n            <app-avatar\n              [data]=\"o.organizationName\"\n              size=\"25\"\n              [circle]=\"true\"\n              [fontSize]=\"14\"\n            ></app-avatar>\n          </td>\n          <td>\n            <a [routerLink]=\"['/organizations', o.organizationId]\">{{ o.organizationName }}</a>\n          </td>\n          <td>\n            <span>{{ o.userCount }}</span>\n            <span *ngIf=\"o.seats != null\"> / {{ o.seats }}</span>\n          </td>\n          <td>\n            <span>{{ o.plan }}</span>\n          </td>\n          <td class=\"table-list-options\" *ngIf=\"manageOrganizations\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(o)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n\n<ng-template #add></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ProviderOrganizationOrganizationDetailsResponse } from \"@bitwarden/common/models/response/provider/providerOrganizationResponse\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\nimport { AddOrganizationComponent } from \"./add-organization.component\";\n\nconst DisallowedPlanTypes = [\n  PlanType.Free,\n  PlanType.FamiliesAnnually2019,\n  PlanType.FamiliesAnnually,\n];\n\n@Component({\n  templateUrl: \"clients.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ClientsComponent implements OnInit {\n  @ViewChild(\"add\", { read: ViewContainerRef, static: true }) addModalRef: ViewContainerRef;\n\n  providerId: string;\n  searchText: string;\n  addableOrganizations: Organization[];\n  loading = true;\n  manageOrganizations = false;\n  showAddExisting = false;\n\n  clients: ProviderOrganizationOrganizationDetailsResponse[];\n  pagedClients: ProviderOrganizationOrganizationDetailsResponse[];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n  protected actionPromise: Promise<unknown>;\n  private pagedClientsCount = 0;\n\n  constructor(\n    private route: ActivatedRoute,\n    private providerService: ProviderService,\n    private apiService: ApiService,\n    private searchService: SearchService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private validationService: ValidationService,\n    private webProviderService: WebProviderService,\n    private logService: LogService,\n    private modalService: ModalService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n\n      await this.load();\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderClients(this.providerId);\n    this.clients = response.data != null && response.data.length > 0 ? response.data : [];\n    this.manageOrganizations =\n      (await this.providerService.get(this.providerId)).type === ProviderUserType.ProviderAdmin;\n    const candidateOrgs = (await this.organizationService.getAll()).filter(\n      (o) => o.isOwner && o.providerId == null\n    );\n    const allowedOrgsIds = await Promise.all(\n      candidateOrgs.map((o) => this.organizationApiService.get(o.id))\n    ).then((orgs) =>\n      orgs.filter((o) => !DisallowedPlanTypes.includes(o.planType)).map((o) => o.id)\n    );\n    this.addableOrganizations = candidateOrgs.filter((o) => allowedOrgsIds.includes(o.id));\n\n    this.showAddExisting = this.addableOrganizations.length !== 0;\n    this.loading = false;\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.clients && this.clients.length > this.pageSize;\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  async resetPaging() {\n    this.pagedClients = [];\n    this.loadMore();\n  }\n\n  loadMore() {\n    if (!this.clients || this.clients.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedClients.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedClientsCount > this.pageSize) {\n      pagedSize = this.pagedClientsCount;\n    }\n    if (this.clients.length > pagedLength) {\n      this.pagedClients = this.pagedClients.concat(\n        this.clients.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedClientsCount = this.pagedClients.length;\n    this.didScroll = this.pagedClients.length > this.pageSize;\n  }\n\n  async addExistingOrganization() {\n    const [modal] = await this.modalService.openViewRef(\n      AddOrganizationComponent,\n      this.addModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.organizations = this.addableOrganizations;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onAddedOrganization.subscribe(async () => {\n          try {\n            await this.load();\n            modal.close();\n          } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n          }\n        });\n      }\n    );\n  }\n\n  async remove(organization: ProviderOrganizationOrganizationDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"detachOrganizationConfirmation\"),\n      organization.organizationName,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.webProviderService.detachOrganizastion(\n      this.providerId,\n      organization.id\n    );\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"detachedOrganization\", organization.organizationName)\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationPlansComponent } from \"src/app/settings/organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  providerId: string;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n    });\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"newClientOrganization\" | i18n }}</h1>\n</div>\n<p>{{ \"newClientOrganizationDesc\" | i18n }}</p>\n<app-organization-plans [providerId]=\"providerId\"></app-organization-plans>\n","export class ProviderUserAcceptRequest {\n  token: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ providerName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinProviderDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ProviderUserAcceptRequest } from \"@bitwarden/common/models/request/provider/providerUserAcceptRequest\";\n\nimport { BaseAcceptComponent } from \"src/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-provider\",\n  templateUrl: \"accept-provider.component.html\",\n})\nexport class AcceptProviderComponent extends BaseAcceptComponent {\n  providerName: string;\n\n  failedMessage = \"providerInviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"providerUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    private apiService: ApiService,\n    platformUtilService: PlatformUtilsService\n  ) {\n    super(router, platformUtilService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params) {\n    const request = new ProviderUserAcceptRequest();\n    request.token = qParams.token;\n\n    await this.apiService.postProviderUserAccept(\n      qParams.providerId,\n      qParams.providerUserId,\n      request\n    );\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"providerInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params) {\n    this.providerName = qParams.providerName;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"eventLogs\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"form-inline\">\n      <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"start\"\n        placeholder=\"{{ 'startDate' | i18n }}\"\n        [(ngModel)]=\"start\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n      <span class=\"mx-2\">-</span>\n      <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"end\"\n        placeholder=\"{{ 'endDate' | i18n }}\"\n        [(ngModel)]=\"end\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n    </div>\n    <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary ml-3\"\n        (click)=\"loadEvents(true)\"\n        [disabled]=\"loaded && refreshForm.loading\"\n      >\n        <i\n          class=\"bwi bwi-refresh bwi-fw\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{ 'bwi-spin': loaded && refreshForm.loading }\"\n        ></i>\n        {{ \"refresh\" | i18n }}\n      </button>\n    </form>\n    <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\"\n        [ngClass]=\"{ loading: exportForm.loading }\"\n        (click)=\"exportEvents()\"\n        [disabled]=\"(loaded && exportForm.loading) || dirtyDates\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i>\n        <span>{{ \"export\" | i18n }}</span>\n      </button>\n    </form>\n  </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n  <p *ngIf=\"!events || !events.length\">{{ \"noEventsInList\" | i18n }}</p>\n  <table class=\"table table-hover\" *ngIf=\"events && events.length\">\n    <thead>\n      <tr>\n        <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n        <th class=\"border-top-0\" width=\"40\">\n          <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n        </th>\n        <th class=\"border-top-0\" width=\"150\">{{ \"user\" | i18n }}</th>\n        <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of events\">\n        <td>{{ e.date | date: \"medium\" }}</td>\n        <td>\n          <i\n            class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n            title=\"{{ e.appName }}, {{ e.ip }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n        </td>\n        <td>\n          <span title=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n        </td>\n        <td [innerHTML]=\"e.message\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <button\n    #moreBtn\n    [appApiAction]=\"morePromise\"\n    type=\"button\"\n    class=\"btn btn-block btn-link btn-submit\"\n    (click)=\"loadEvents(false)\"\n    [disabled]=\"loaded && moreBtn.loading\"\n    *ngIf=\"continuationToken\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"loadMore\" | i18n }}</span>\n  </button>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\n\nimport { BaseEventsComponent } from \"src/app/common/base.events.component\";\nimport { EventService } from \"src/app/core\";\n\n@Component({\n  selector: \"provider-events\",\n  templateUrl: \"events.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n  exportFileName = \"provider-events\";\n  providerId: string;\n\n  private providerUsersUserIdMap = new Map<string, any>();\n  private providerUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    eventService: EventService,\n    i18nService: I18nService,\n    private providerService: ProviderService,\n    exportService: ExportService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    logService: LogService,\n    private userNamePipe: UserNamePipe,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      eventService,\n      i18nService,\n      exportService,\n      platformUtilsService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n      if (provider == null || !provider.useEvents) {\n        this.router.navigate([\"/providers\", this.providerId]);\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderUsers(this.providerId);\n    response.data.forEach((u) => {\n      const name = this.userNamePipe.transform(u);\n      this.providerUsersIdMap.set(u.id, { name: name, email: u.email });\n      this.providerUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n    });\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n    return this.apiService.getEventsProvider(\n      this.providerId,\n      startDate,\n      endDate,\n      continuationToken\n    );\n  }\n\n  protected getUserName(r: EventResponse, userId: string) {\n    return userId != null && this.providerUsersUserIdMap.has(userId)\n      ? this.providerUsersUserIdMap.get(userId)\n      : null;\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"provider\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"people\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canManageUsers\"\n          >\n            {{ \"people\" | i18n }}\n          </a>\n          <a\n            routerLink=\"events\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canAccessEventLogs && accessEvents\"\n          >\n            {{ \"eventLogs\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"provider-manage\",\n  templateUrl: \"manage.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ManageComponent implements OnInit {\n  provider: Provider;\n  accessEvents = false;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.provider = await this.providerService.get(params.providerId);\n      this.accessEvents = this.provider.useEvents;\n    });\n  }\n}\n","export class ProviderUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class ProviderUserConfirmRequest {\n  key: string;\n}\n","type ProviderUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class ProviderUserBulkConfirmRequest {\n  keys: ProviderUserBulkRequestEntry[];\n\n  constructor(keys: ProviderUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserBulkConfirmRequest } from \"@bitwarden/common/models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/providerUserBulkRequest\";\n\nimport { BulkConfirmComponent as OrganizationBulkConfirmComponent } from \"src/app/organizations/manage/bulk/bulk-confirm.component\";\nimport { BulkUserDetails } from \"src/app/organizations/manage/bulk/bulk-status.component\";\n\n@Component({\n  templateUrl:\n    \"../../../../../../../apps/web/src/app/organizations/manage/bulk/bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent extends OrganizationBulkConfirmComponent {\n  @Input() providerId: string;\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === ProviderUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    const request = new ProviderUserBulkRequest(this.filteredUsers.map((user) => user.id));\n    return await this.apiService.postProviderUsersPublicKey(this.providerId, request);\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getProviderKey(this.providerId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new ProviderUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.apiService.postProviderUserBulkConfirm(this.providerId, request);\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/providerUserBulkRequest\";\n\nimport { BulkRemoveComponent as OrganizationBulkRemoveComponent } from \"src/app/organizations/manage/bulk/bulk-remove.component\";\n\n@Component({\n  templateUrl:\n    \"../../../../../../../apps/web/src/app/organizations/manage/bulk/bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent extends OrganizationBulkRemoveComponent {\n  @Input() providerId: string;\n\n  async deleteUsers() {\n    const request = new ProviderUserBulkRequest(this.users.map((user) => user.id));\n    return await this.apiService.deleteManyProviderUsers(this.providerId, request);\n  }\n\n  protected get removeUsersWarning() {\n    return this.i18nService.t(\"removeUsersWarning\");\n  }\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserInviteRequest {\n  emails: string[] = [];\n  type: ProviderUserType;\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserUpdateRequest {\n  type: ProviderUserType;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"providerInviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/provider-users/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeServiceUser\"\n            [value]=\"userType.ServiceUser\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeServiceUser\">\n            {{ \"serviceUser\" | i18n }}\n            <small>{{ \"serviceUserDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeProviderAdmin\"\n            [value]=\"userType.ProviderAdmin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeProviderAdmin\">\n            {{ \"providerAdmin\" | i18n }}\n            <small>{{ \"providerAdminDesc\" | i18n }}</small>\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { PermissionsApi } from \"@bitwarden/common/models/api/permissionsApi\";\nimport { ProviderUserInviteRequest } from \"@bitwarden/common/models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"@bitwarden/common/models/request/provider/providerUserUpdateRequest\";\n\n@Component({\n  selector: \"provider-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() providerUserId: string;\n  @Input() providerId: string;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  emails: string;\n  type: ProviderUserType = ProviderUserType.ServiceUser;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  userType = ProviderUserType;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.providerUserId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.apiService.getProviderUser(this.providerId, this.providerUserId);\n        this.type = user.type;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new ProviderUserUpdateRequest();\n        request.type = this.type;\n        this.formPromise = this.apiService.putProviderUser(\n          this.providerId,\n          this.providerUserId,\n          request\n        );\n      } else {\n        const request = new ProviderUserInviteRequest();\n        request.emails = this.emails.trim().split(/\\s*,\\s*/);\n        request.type = this.type;\n        this.formPromise = this.apiService.postProviderUserInvite(this.providerId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteProviderUser(this.providerId, this.providerUserId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"people\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == null }\"\n        (click)=\"filter(null)\"\n      >\n        {{ \"all\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"allCount\">{{ allCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Invited }\"\n        (click)=\"filter(userStatusType.Invited)\"\n      >\n        {{ \"invited\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n        (click)=\"filter(userStatusType.Accepted)\"\n      >\n        {{ \"accepted\" | i18n }}\n        <span bitBadge badgeType=\"warning\" *ngIf=\"acceptedCount\">{{ acceptedCount }}</span>\n      </button>\n    </div>\n    <div class=\"ml-3\">\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <div class=\"dropdown ml-3\" appListDropdown>\n      <button\n        class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        appA11yTitle=\"{{ 'options' | i18n }}\"\n      >\n        <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n          <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n          {{ \"reinviteSelected\" | i18n }}\n        </button>\n        <button\n          class=\"dropdown-item text-success\"\n          appStopClick\n          (click)=\"bulkConfirm()\"\n          *ngIf=\"showBulkConfirmUsers\"\n        >\n          <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n          {{ \"confirmSelected\" | i18n }}\n        </button>\n        <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n          <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n          {{ \"remove\" | i18n }}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n          <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n          <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"inviteUser\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n  \"\n>\n  <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedUsers.length\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'confirmUsers' | i18n }}\"\n      icon=\"bwi bwi-check-circle\"\n      *ngIf=\"showConfirmUsers\"\n    >\n      {{ \"providerUsersNeedConfirmed\" | i18n }}\n    </app-callout>\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let u of searchedUsers\">\n          <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n            <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp />\n          </td>\n          <td width=\"30\">\n            <app-avatar\n              [data]=\"u | userName\"\n              [email]=\"u.email\"\n              size=\"25\"\n              [circle]=\"true\"\n              [fontSize]=\"14\"\n            >\n            </app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n              \"invited\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n              \"accepted\" | i18n\n            }}</span>\n            <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n          </td>\n          <td>\n            <ng-container *ngIf=\"u.twoFactorEnabled\">\n              <i\n                class=\"bwi bwi-lock\"\n                title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td>\n            <span *ngIf=\"u.type === userType.ProviderAdmin\">{{ \"providerAdmin\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.ServiceUser\">{{ \"serviceUser\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Custom\">{{ \"custom\" | i18n }}</span>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"reinvite(u)\"\n                  *ngIf=\"u.status === userStatusType.Invited\"\n                >\n                  <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                  {{ \"resendInvitation\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item text-success\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"confirm(u)\"\n                  *ngIf=\"u.status === userStatusType.Accepted\"\n                >\n                  <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                  {{ \"confirm\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"groups(u)\"\n                  *ngIf=\"accessGroups\"\n                >\n                  <i class=\"bwi bwi-fw bwi-sitemap\" aria-hidden=\"true\"></i>\n                  {{ \"groups\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"events(u)\"\n                  *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"\n                >\n                  <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                  {{ \"eventLogs\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n<ng-template #bulkStatusTemplate></ng-template>\n<ng-template #bulkConfirmTemplate></ng-template>\n<ng-template #bulkRemoveTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"@bitwarden/common/models/request/provider/providerUserConfirmRequest\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { ProviderUserBulkResponse } from \"@bitwarden/common/models/response/provider/providerUserBulkResponse\";\nimport { ProviderUserUserDetailsResponse } from \"@bitwarden/common/models/response/provider/providerUserResponse\";\n\nimport { BasePeopleComponent } from \"src/app/common/base.people.component\";\nimport { BulkStatusComponent } from \"src/app/organizations/manage/bulk/bulk-status.component\";\nimport { EntityEventsComponent } from \"src/app/organizations/manage/entity-events.component\";\n\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\n\n@Component({\n  selector: \"provider-people\",\n  templateUrl: \"people.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PeopleComponent\n  extends BasePeopleComponent<ProviderUserUserDetailsResponse>\n  implements OnInit\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = ProviderUserType;\n  userStatusType = ProviderUserStatusType;\n  providerId: string;\n  accessEvents = false;\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    private router: Router,\n    searchService: SearchService,\n    validationService: ValidationService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    stateService: StateService,\n    private providerService: ProviderService\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n\n      if (!provider.canManageUsers) {\n        this.router.navigate([\"../\"], { relativeTo: this.route });\n        return;\n      }\n\n      this.accessEvents = provider.useEvents;\n\n      await this.load();\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n        if (qParams.viewEvents != null) {\n          const user = this.users.filter((u) => u.id === qParams.viewEvents);\n          if (user.length > 0 && user[0].status === ProviderUserStatusType.Confirmed) {\n            this.events(user[0]);\n          }\n        }\n      });\n    });\n  }\n\n  getUsers(): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    return this.apiService.getProviderUsers(this.providerId);\n  }\n\n  deleteUser(id: string): Promise<any> {\n    return this.apiService.deleteProviderUser(this.providerId, id);\n  }\n\n  revokeUser(id: string): Promise<any> {\n    // Not implemented.\n    return null;\n  }\n\n  restoreUser(id: string): Promise<any> {\n    // Not implemented.\n    return null;\n  }\n\n  reinviteUser(id: string): Promise<any> {\n    return this.apiService.postProviderUserReinvite(this.providerId, id);\n  }\n\n  async confirmUser(user: ProviderUserUserDetailsResponse, publicKey: Uint8Array): Promise<any> {\n    const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n    const key = await this.cryptoService.rsaEncrypt(providerKey.key, publicKey.buffer);\n    const request = new ProviderUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.apiService.postProviderUserConfirm(this.providerId, user.id, request);\n  }\n\n  async edit(user: ProviderUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.providerId = this.providerId;\n        comp.providerUserId = user != null ? user.id : null;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n      }\n    );\n  }\n\n  async events(user: ProviderUserUserDetailsResponse) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = this.userNamePipe.transform(user);\n      comp.providerId = this.providerId;\n      comp.entityId = user.id;\n      comp.showUser = false;\n      comp.entity = \"user\";\n    });\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === ProviderUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const request = new ProviderUserBulkRequest(filteredUsers.map((user) => user.id));\n      const response = this.apiService.postManyProviderUserReinvite(this.providerId, request);\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  private async showBulkStatus(\n    users: ProviderUserUserDetailsResponse[],\n    filteredUsers: ProviderUserUserDetailsResponse[],\n    request: Promise<ListResponse<ProviderUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          // eslint-disable-next-line\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id), // eslint-disable-line\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav\" *ngIf=\"provider\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <div class=\"my-auto d-flex align-items-center pl-1\">\n        <app-avatar [data]=\"provider.name\" size=\"45\" [circle]=\"true\"></app-avatar>\n        <div class=\"org-name ml-3\">\n          <span>{{ provider.name }}</span>\n          <small class=\"text-muted\">{{ \"provider\" | i18n }}</small>\n        </div>\n        <div class=\"ml-3 card border-danger text-danger bg-transparent\" *ngIf=\"!provider.enabled\">\n          <div class=\"card-body py-2\">\n            <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n            {{ \"providerIsDisabled\" | i18n }}\n          </div>\n        </div>\n      </div>\n      <ul class=\"nav nav-tabs\" *ngIf=\"showMenuBar\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"clients\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i>\n            {{ \"clients\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showManageTab\">\n          <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-sliders\" aria-hidden=\"true\"></i>\n            {{ \"manage\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showSettingsTab\">\n          <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-cogs\" aria-hidden=\"true\"></i>\n            {{ \"settings\" | i18n }}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"providers-layout\",\n  templateUrl: \"providers-layout.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ProvidersLayoutComponent {\n  provider: Provider;\n  private providerId: string;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    this.provider = await this.providerService.get(this.providerId);\n  }\n\n  get showMenuBar() {\n    return this.showManageTab || this.showSettingsTab;\n  }\n\n  get showManageTab() {\n    return this.provider.canManageUsers || this.provider.canAccessEventLogs;\n  }\n\n  get showSettingsTab() {\n    return this.provider.isProviderAdmin;\n  }\n\n  get manageRoute(): string {\n    switch (true) {\n      case this.provider.canManageUsers:\n        return \"manage/people\";\n      case this.provider.canAccessEventLogs:\n        return \"manage/events\";\n    }\n  }\n}\n","export class ProviderUpdateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myProvider\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"provider && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"provider.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"provider.billingEmail\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <app-avatar data=\"{{ provider.name }}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProviderUpdateRequest } from \"@bitwarden/common/models/request/provider/providerUpdateRequest\";\nimport { ProviderResponse } from \"@bitwarden/common/models/response/provider/providerResponse\";\n\n@Component({\n  selector: \"provider-account\",\n  templateUrl: \"account.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccountComponent {\n  selfHosted = false;\n  loading = true;\n  provider: ProviderResponse;\n  formPromise: Promise<any>;\n  taxFormPromise: Promise<any>;\n\n  private providerId: string;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      try {\n        this.provider = await this.apiService.getProvider(this.providerId);\n      } catch (e) {\n        this.logService.error(`Handled exception: ${e}`);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new ProviderUpdateRequest();\n      request.name = this.provider.name;\n      request.businessName = this.provider.businessName;\n      request.billingEmail = this.provider.billingEmail;\n\n      this.formPromise = this.apiService.putProvider(this.providerId, request).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerUpdated\"));\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\n\n@Component({\n  selector: \"provider-settings\",\n  templateUrl: \"settings.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SettingsComponent {\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      await this.providerService.get(params.providerId);\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myProvider\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setupProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"setupProviderLoginDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Params } from \"@angular/router\";\n\nimport { BaseAcceptComponent } from \"src/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-setup-provider\",\n  templateUrl: \"setup-provider.component.html\",\n})\nexport class SetupProviderComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"email\", \"token\"];\n\n  async authedHandler(qParams: Params) {\n    this.router.navigate([\"/providers/setup\"], { queryParams: qParams });\n  }\n\n  async unauthedHandler(qParams: Params) {\n    // Empty\n  }\n}\n","export class ProviderSetupRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  token: string;\n  key: string;\n}\n","<app-navbar></app-navbar>\n<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"setupProvider\" | i18n }}</h1>\n  </div>\n  <p>{{ \"setupProviderDesc\" | i18n }}</p>\n\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"loading\">\n    <h2 class=\"mt-5\">{{ \"generalInformation\" | i18n }}</h2>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required />\n      </div>\n      <div class=\"form-group col-6\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"billingEmail\"\n          required\n        />\n      </div>\n    </div>\n\n    <div class=\"mt-4\">\n      <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"submit\" | i18n }}</span>\n      </button>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n        {{ \"cancel\" | i18n }}\n      </button>\n    </div>\n  </form>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProviderSetupRequest } from \"@bitwarden/common/models/request/provider/providerSetupRequest\";\n\n@Component({\n  selector: \"provider-setup\",\n  templateUrl: \"setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SetupComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  formPromise: Promise<any>;\n\n  providerId: string;\n  token: string;\n  name: string;\n  billingEmail: string;\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService\n  ) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.providerId == null || qParams.email == null || qParams.token == null;\n\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"emergencyInviteAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.providerId = qParams.providerId;\n      this.token = qParams.token;\n\n      // Check if provider exists, redirect if it does\n      try {\n        const provider = await this.apiService.getProvider(this.providerId);\n        if (provider.name != null) {\n          this.router.navigate([\"/providers\", provider.id], { replaceUrl: true });\n        }\n      } catch (e) {\n        this.validationService.showError(e);\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit();\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  async doSubmit() {\n    try {\n      const shareKey = await this.cryptoService.makeShareKey();\n      const key = shareKey[0].encryptedString;\n\n      const request = new ProviderSetupRequest();\n      request.name = this.name;\n      request.billingEmail = this.billingEmail;\n      request.token = this.token;\n      request.key = key;\n\n      const provider = await this.apiService.postProviderSetup(this.providerId, request);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerSetup\"));\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/providers\", provider.id]);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\nimport { FrontendLayoutComponent } from \"src/app/layouts/frontend-layout.component\";\nimport { ProvidersComponent } from \"src/app/providers/providers.component\";\n\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { ProviderPermissionsGuard } from \"./guards/provider-permissions.guard\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    component: ProvidersComponent,\n  },\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    children: [\n      {\n        path: \"setup-provider\",\n        component: SetupProviderComponent,\n        data: { titleId: \"setupProvider\" },\n      },\n      {\n        path: \"accept-provider\",\n        component: AcceptProviderComponent,\n        data: { titleId: \"acceptProvider\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: \"setup\",\n        component: SetupComponent,\n      },\n      {\n        path: \":providerId\",\n        component: ProvidersLayoutComponent,\n        canActivate: [ProviderPermissionsGuard],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"clients\" },\n          { path: \"clients/create\", component: CreateOrganizationComponent },\n          { path: \"clients\", component: ClientsComponent, data: { titleId: \"clients\" } },\n          {\n            path: \"manage\",\n            component: ManageComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"people\",\n              },\n              {\n                path: \"people\",\n                component: PeopleComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"people\",\n                  providerPermissions: (provider: Provider) => provider.canManageUsers,\n                },\n              },\n              {\n                path: \"events\",\n                component: EventsComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"eventLogs\",\n                  providerPermissions: (provider: Provider) => provider.canAccessEventLogs,\n                },\n              },\n            ],\n          },\n          {\n            path: \"settings\",\n            component: SettingsComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"account\",\n              },\n              {\n                path: \"account\",\n                component: AccountComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"myProvider\",\n                  providerPermissions: (provider: Provider) => provider.isProviderAdmin,\n                },\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProvidersRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { ComponentFactoryResolver, NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\n\nimport { OssModule } from \"src/app/oss.module\";\n\nimport { AddOrganizationComponent } from \"./clients/add-organization.component\";\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { ProviderPermissionsGuard } from \"./guards/provider-permissions.guard\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { BulkConfirmComponent } from \"./manage/bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./manage/bulk/bulk-remove.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { UserAddEditComponent } from \"./manage/user-add-edit.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { ProvidersRoutingModule } from \"./providers-routing.module\";\nimport { WebProviderService } from \"./services/webProvider.service\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, OssModule, JslibModule, ProvidersRoutingModule],\n  declarations: [\n    AcceptProviderComponent,\n    AccountComponent,\n    AddOrganizationComponent,\n    BulkConfirmComponent,\n    BulkRemoveComponent,\n    ClientsComponent,\n    CreateOrganizationComponent,\n    EventsComponent,\n    ManageComponent,\n    PeopleComponent,\n    ProvidersLayoutComponent,\n    SettingsComponent,\n    SetupComponent,\n    SetupProviderComponent,\n    UserAddEditComponent,\n  ],\n  providers: [WebProviderService, ProviderPermissionsGuard],\n})\nexport class ProvidersModule {\n  constructor(modalService: ModalService, componentFactoryResolver: ComponentFactoryResolver) {\n    modalService.registerComponentFactoryResolver(\n      AddOrganizationComponent,\n      componentFactoryResolver\n    );\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { ProvidersModule } from \"./providers/providers.module\";\n\nconst routes: Routes = [\n  {\n    path: \"providers\",\n    loadChildren: () => ProvidersModule,\n  },\n  {\n    path: \"sm\",\n    loadChildren: async () => (await import(\"./sm/sm.module\")).SecretsManagerModule,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { DOCUMENT } from \"@angular/common\";\nimport { Component, Inject, NgZone, OnDestroy, OnInit, SecurityContext } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport * as jq from \"jquery\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport Swal from \"sweetalert2\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { InternalFolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SettingsService } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\n\nimport { PolicyListService, RouterService } from \"./core\";\nimport {\n  DisableSendPolicy,\n  MasterPasswordPolicy,\n  PasswordGeneratorPolicy,\n  PersonalOwnershipPolicy,\n  RequireSsoPolicy,\n  ResetPasswordPolicy,\n  SendOptionsPolicy,\n  SingleOrgPolicy,\n  TwoFactorAuthenticationPolicy,\n} from \"./organizations/policies\";\n\nconst BroadcasterSubscriptionId = \"AppComponent\";\nconst IdleTimeout = 60000 * 10; // 10 minutes\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"app.component.html\",\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  private lastActivity: number = null;\n  private idleTimer: number = null;\n  private isIdle = false;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private broadcasterService: BroadcasterService,\n    private folderService: InternalFolderService,\n    private settingsService: SettingsService,\n    private syncService: SyncService,\n    private passwordGenerationService: PasswordGenerationService,\n    private cipherService: CipherService,\n    private authService: AuthService,\n    private router: Router,\n    private toastrService: ToastrService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    private vaultTimeoutService: VaultTimeoutService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private sanitizer: DomSanitizer,\n    private searchService: SearchService,\n    private notificationsService: NotificationsService,\n    private routerService: RouterService,\n    private stateService: StateService,\n    private eventService: EventService,\n    private policyService: InternalPolicyService,\n    protected policyListService: PolicyListService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  ngOnInit() {\n    this.i18nService.locale$.pipe(takeUntil(this.destroy$)).subscribe((locale) => {\n      this.document.documentElement.lang = locale;\n    });\n\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousemove = () => this.recordActivity();\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"loggedIn\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"loggedOut\":\n            this.routerService.setPreviousUrl(null);\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"unlocked\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"authBlocked\":\n            this.routerService.setPreviousUrl(message.url);\n            this.router.navigate([\"/\"]);\n            break;\n          case \"logout\":\n            this.logOut(!!message.expired);\n            break;\n          case \"lockVault\":\n            await this.vaultTimeoutService.lock();\n            break;\n          case \"locked\":\n            this.notificationsService.updateConnection(false);\n            this.router.navigate([\"lock\"]);\n            break;\n          case \"lockedUrl\":\n            this.routerService.setPreviousUrl(message.url);\n            break;\n          case \"syncStarted\":\n            break;\n          case \"syncCompleted\":\n            break;\n          case \"upgradeOrganization\": {\n            const upgradeConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"upgradeOrganizationDesc\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (upgradeConfirmed) {\n              this.router.navigate([\n                \"organizations\",\n                message.organizationId,\n                \"settings\",\n                \"billing\",\n              ]);\n            }\n            break;\n          }\n          case \"premiumRequired\": {\n            const premiumConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"premiumRequiredDesc\"),\n              this.i18nService.t(\"premiumRequired\"),\n              this.i18nService.t(\"upgrade\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (premiumConfirmed) {\n              this.router.navigate([\"settings/subscription/premium\"]);\n            }\n            break;\n          }\n          case \"emailVerificationRequired\": {\n            const emailVerificationConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"emailVerificationRequiredDesc\"),\n              this.i18nService.t(\"emailVerificationRequired\"),\n              this.i18nService.t(\"learnMore\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (emailVerificationConfirmed) {\n              this.platformUtilsService.launchUri(\n                \"https://bitwarden.com/help/create-bitwarden-account/\"\n              );\n            }\n            break;\n          }\n          case \"showToast\":\n            this.showToast(message);\n            break;\n          case \"setFullWidth\":\n            this.setFullWidth();\n            break;\n          case \"convertAccountToKeyConnector\":\n            this.router.navigate([\"/remove-password\"]);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n\n    this.router.events.pipe(takeUntil(this.destroy$)).subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        const modals = Array.from(document.querySelectorAll(\".modal\"));\n        for (const modal of modals) {\n          (jq(modal) as any).modal(\"hide\");\n        }\n\n        if (document.querySelector(\".swal-modal\") != null) {\n          Swal.close(undefined);\n        }\n      }\n    });\n\n    this.policyListService.addPolicies([\n      new TwoFactorAuthenticationPolicy(),\n      new MasterPasswordPolicy(),\n      new ResetPasswordPolicy(),\n      new PasswordGeneratorPolicy(),\n      new SingleOrgPolicy(),\n      new RequireSsoPolicy(),\n      new PersonalOwnershipPolicy(),\n      new DisableSendPolicy(),\n      new SendOptionsPolicy(),\n    ]);\n\n    this.setFullWidth();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private async logOut(expired: boolean) {\n    await this.eventService.uploadEvents();\n    const userId = await this.stateService.getUserId();\n    await Promise.all([\n      this.eventService.clearEvents(),\n      this.syncService.setLastSync(new Date(0)),\n      this.cryptoService.clearKeys(),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(),\n      this.keyConnectorService.clear(),\n    ]);\n\n    this.searchService.clearIndex();\n    this.authService.logOut(async () => {\n      if (expired) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          this.i18nService.t(\"loggedOut\"),\n          this.i18nService.t(\"loginExpired\")\n        );\n      }\n\n      await this.stateService.clean({ userId: userId });\n      Swal.close();\n      this.router.navigate([\"/\"]);\n    });\n  }\n\n  private async recordActivity() {\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    this.stateService.setLastActive(now);\n    // Idle states\n    if (this.isIdle) {\n      this.isIdle = false;\n      this.idleStateChanged();\n    }\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idleTimer = window.setTimeout(() => {\n      if (!this.isIdle) {\n        this.isIdle = true;\n        this.idleStateChanged();\n      }\n    }, IdleTimeout);\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private idleStateChanged() {\n    if (this.isIdle) {\n      this.notificationsService.disconnectFromInactivity();\n    } else {\n      this.notificationsService.reconnectFromActivity();\n    }\n  }\n\n  private async setFullWidth() {\n    const enableFullWidth = await this.stateService.getEnableFullWidth();\n    if (enableFullWidth) {\n      document.body.classList.add(\"full-width\");\n    } else {\n      document.body.classList.remove(\"full-width\");\n    }\n  }\n}\n","<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"src/app/organizations/policies\";\n\nexport class DisablePersonalVaultExportPolicy extends BasePolicy {\n  name = \"disablePersonalVaultExport\";\n  description = \"disablePersonalVaultExportDesc\";\n  type = PolicyType.DisablePersonalVaultExport;\n  component = DisablePersonalVaultExportPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-personal-vault-export\",\n  templateUrl: \"disable-personal-vault-export.component.html\",\n})\nexport class DisablePersonalVaultExportPolicyComponent extends BasePolicyComponent {}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\n\nimport { BasePolicy, BasePolicyComponent } from \"src/app/organizations/policies\";\n\nexport class MaximumVaultTimeoutPolicy extends BasePolicy {\n  name = \"maximumVaultTimeout\";\n  description = \"maximumVaultTimeoutDesc\";\n  type = PolicyType.MaximumVaultTimeout;\n  component = MaximumVaultTimeoutPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-maximum-timeout\",\n  templateUrl: \"maximum-vault-timeout.component.html\",\n})\nexport class MaximumVaultTimeoutPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    hours: [null],\n    minutes: [null],\n  });\n\n  constructor(private formBuilder: UntypedFormBuilder, private i18nService: I18nService) {\n    super();\n  }\n\n  loadData() {\n    const minutes = this.policyResponse.data?.minutes;\n\n    if (minutes == null) {\n      return;\n    }\n\n    this.data.patchValue({\n      hours: Math.floor(minutes / 60),\n      minutes: minutes % 60,\n    });\n  }\n\n  buildRequestData() {\n    if (this.data.value.hours == null && this.data.value.minutes == null) {\n      return null;\n    }\n\n    return {\n      minutes: this.data.value.hours * 60 + this.data.value.minutes,\n    };\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    const data = this.buildRequestData();\n    if (data?.minutes == null || data?.minutes <= 0) {\n      throw new Error(this.i18nService.t(\"invalidMaximumVaultTimeout\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <label for=\"hours\">{{ \"maximumVaultTimeoutLabel\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AppComponent as BaseAppComponent } from \"src/app/app.component\";\n\nimport { DisablePersonalVaultExportPolicy } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicy } from \"./policies/maximum-vault-timeout.component\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"../../../../apps/web/src/app/app.component.html\",\n})\nexport class AppComponent extends BaseAppComponent {\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.policyListService.addPolicies([\n      new MaximumVaultTimeoutPolicy(),\n      new DisablePersonalVaultExportPolicy(),\n    ]);\n  }\n}\n","import { ScimProviderType } from \"@bitwarden/common/enums/scimProviderType\";\n\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class ScimConfigApi extends BaseResponse {\n  enabled: boolean;\n  scimProvider: ScimProviderType;\n\n  constructor(data: any) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.scimProvider = this.getResponseProperty(\"ScimProvider\");\n  }\n}\n","import { ScimProviderType } from \"@bitwarden/common/enums/scimProviderType\";\n\nexport class ScimConfigRequest {\n  constructor(private enabled: boolean, private scimProvider: ScimProviderType = null) {}\n}\n","<div class=\"page-header\">\n  <h1>{{ \"scim\" | i18n }}</h1>\n</div>\n\n<p>{{ \"scimDescription\" | i18n }}</p>\n\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  [formGroup]=\"formData\"\n  *ngIf=\"!loading\"\n>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n        aria-describedby=\"scimEnabledCheckboxDescHelpText\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"scimEnabledCheckboxDesc\" | i18n }}</label>\n      <div id=\"scimEnabledCheckboxDescHelpText\">\n        <small class=\"form-text text-muted\">{{ \"scimEnabledCheckboxDescHelpText\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n\n  <bit-form-field *ngIf=\"showScimSettings\">\n    <bit-label>{{ \"scimUrl\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"endpointUrl\" />\n    <button\n      type=\"button\"\n      bitSuffix\n      bitButton\n      (click)=\"copyScimUrl()\"\n      [appA11yTitle]=\"'copyScimUrl' | i18n\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-clone\"></i>\n    </button>\n  </bit-form-field>\n\n  <bit-form-field *ngIf=\"showScimSettings\">\n    <bit-label>{{ \"scimApiKey\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"clientSecret\" />\n    <ng-container #rotateButton [appApiAction]=\"rotatePromise\">\n      <button\n        [disabled]=\"rotateButton.loading\"\n        type=\"button\"\n        bitSuffix\n        bitButton\n        (click)=\"rotateScimKey()\"\n        [appA11yTitle]=\"'rotateScimKey' | i18n\"\n      >\n        <i\n          aria-hidden=\"true\"\n          class=\"bwi bwi-lg bwi-generate\"\n          [ngClass]=\"{ 'bwi-spin': rotateButton.loading }\"\n        ></i>\n      </button>\n    </ng-container>\n    <button\n      type=\"button\"\n      bitSuffix\n      bitButton\n      (click)=\"copyScimKey()\"\n      [appA11yTitle]=\"'copyScimKey' | i18n\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-clone\"></i>\n    </button>\n    <bit-hint>{{ \"scimApiKeyHelperText\" | i18n }}</bit-hint>\n  </bit-form-field>\n\n  <bit-submit-button buttonType=\"primary\" [loading]=\"form.loading\" [disabled]=\"form.loading\">\n    {{ \"save\" | i18n }}\n  </bit-submit-button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormBuilder, FormControl } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/enums/organizationApiKeyType\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/enums/organizationConnectionType\";\nimport { ScimConfigApi } from \"@bitwarden/common/models/api/scimConfigApi\";\nimport { OrganizationApiKeyRequest } from \"@bitwarden/common/models/request/organizationApiKeyRequest\";\nimport { OrganizationConnectionRequest } from \"@bitwarden/common/models/request/organizationConnectionRequest\";\nimport { ScimConfigRequest } from \"@bitwarden/common/models/request/scimConfigRequest\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/apiKeyResponse\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/models/response/organizationConnectionResponse\";\n\n@Component({\n  selector: \"app-org-manage-scim\",\n  templateUrl: \"scim.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ScimComponent implements OnInit {\n  loading = true;\n  organizationId: string;\n  existingConnectionId: string;\n  formPromise: Promise<OrganizationConnectionResponse<ScimConfigApi>>;\n  rotatePromise: Promise<ApiKeyResponse>;\n  enabled = new FormControl(false);\n  showScimSettings = false;\n\n  formData = this.formBuilder.group({\n    endpointUrl: new FormControl({ value: \"\", disabled: true }),\n    clientSecret: new FormControl({ value: \"\", disabled: true }),\n  });\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private environmentService: EnvironmentService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    const connection = await this.apiService.getOrganizationConnection(\n      this.organizationId,\n      OrganizationConnectionType.Scim,\n      ScimConfigApi\n    );\n    await this.setConnectionFormValues(connection);\n  }\n\n  async loadApiKey() {\n    const apiKeyRequest = new OrganizationApiKeyRequest();\n    apiKeyRequest.type = OrganizationApiKeyType.Scim;\n    apiKeyRequest.masterPasswordHash = \"N/A\";\n    const apiKeyResponse = await this.organizationApiService.getOrCreateApiKey(\n      this.organizationId,\n      apiKeyRequest\n    );\n    this.formData.setValue({\n      endpointUrl: this.getScimEndpointUrl(),\n      clientSecret: apiKeyResponse.apiKey,\n    });\n  }\n\n  async copyScimUrl() {\n    this.platformUtilsService.copyToClipboard(this.getScimEndpointUrl());\n  }\n\n  async rotateScimKey() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"rotateScimKeyWarning\"),\n      this.i18nService.t(\"rotateScimKey\"),\n      this.i18nService.t(\"rotateKey\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    const request = new OrganizationApiKeyRequest();\n    request.type = OrganizationApiKeyType.Scim;\n    request.masterPasswordHash = \"N/A\";\n\n    this.rotatePromise = this.organizationApiService.rotateApiKey(this.organizationId, request);\n\n    try {\n      const response = await this.rotatePromise;\n      this.formData.setValue({\n        endpointUrl: this.getScimEndpointUrl(),\n        clientSecret: response.apiKey,\n      });\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"scimApiKeyRotated\"));\n    } catch {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.rotatePromise = null;\n  }\n\n  async copyScimKey() {\n    this.platformUtilsService.copyToClipboard(this.formData.get(\"clientSecret\").value);\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationConnectionRequest(\n        this.organizationId,\n        OrganizationConnectionType.Scim,\n        true,\n        new ScimConfigRequest(this.enabled.value)\n      );\n      if (this.existingConnectionId == null) {\n        this.formPromise = this.apiService.createOrganizationConnection(request, ScimConfigApi);\n      } else {\n        this.formPromise = this.apiService.updateOrganizationConnection(\n          request,\n          ScimConfigApi,\n          this.existingConnectionId\n        );\n      }\n      const response = (await this.formPromise) as OrganizationConnectionResponse<ScimConfigApi>;\n      await this.setConnectionFormValues(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"scimSettingsSaved\"));\n    } catch (e) {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.formPromise = null;\n  }\n\n  getScimEndpointUrl() {\n    return this.environmentService.getScimUrl() + \"/\" + this.organizationId;\n  }\n\n  private async setConnectionFormValues(connection: OrganizationConnectionResponse<ScimConfigApi>) {\n    this.existingConnectionId = connection?.id;\n    if (connection !== null && connection.config?.enabled) {\n      this.showScimSettings = true;\n      this.enabled.setValue(true);\n      this.formData.setValue({\n        endpointUrl: this.getScimEndpointUrl(),\n        clientSecret: \"\",\n      });\n      await this.loadApiKey();\n    } else {\n      this.showScimSettings = false;\n      this.enabled.setValue(false);\n    }\n    this.loading = false;\n  }\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\n\nexport class OrganizationSsoRequest {\n  enabled = false;\n  identifier: string;\n  data: SsoConfigApi;\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { SsoConfigApi } from \"../api/ssoConfigApi\";\n\nimport { View } from \"./view\";\n\nexport class SsoConfigView extends View {\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  openId: {\n    authority: string;\n    clientId: string;\n    clientSecret: string;\n    metadataAddress: string;\n    redirectBehavior: OpenIdConnectRedirectBehavior;\n    getClaimsFromUserInfoEndpoint: boolean;\n    additionalScopes: string;\n    additionalUserIdClaimTypes: string;\n    additionalEmailClaimTypes: string;\n    additionalNameClaimTypes: string;\n    acrValues: string;\n    expectedReturnAcrValue: string;\n  };\n\n  saml: {\n    spNameIdFormat: Saml2NameIdFormat;\n    spOutboundSigningAlgorithm: string;\n    spSigningBehavior: Saml2SigningBehavior;\n    spMinIncomingSigningAlgorithm: string;\n    spWantAssertionsSigned: boolean;\n    spValidateCertificates: boolean;\n\n    idpEntityId: string;\n    idpBindingType: Saml2BindingType;\n    idpSingleSignOnServiceUrl: string;\n    idpSingleLogoutServiceUrl: string;\n    idpX509PublicCert: string;\n    idpOutboundSigningAlgorithm: string;\n    idpAllowUnsolicitedAuthnResponse: boolean;\n    idpAllowOutboundLogoutRequests: boolean;\n    idpWantAuthnRequestsSigned: boolean;\n  };\n\n  constructor(api: SsoConfigApi) {\n    super();\n    if (api == null) {\n      return;\n    }\n\n    this.configType = api.configType;\n\n    this.keyConnectorEnabled = api.keyConnectorEnabled;\n    this.keyConnectorUrl = api.keyConnectorUrl;\n\n    if (this.configType === SsoType.OpenIdConnect) {\n      this.openId = {\n        authority: api.authority,\n        clientId: api.clientId,\n        clientSecret: api.clientSecret,\n        metadataAddress: api.metadataAddress,\n        redirectBehavior: api.redirectBehavior,\n        getClaimsFromUserInfoEndpoint: api.getClaimsFromUserInfoEndpoint,\n        additionalScopes: api.additionalScopes,\n        additionalUserIdClaimTypes: api.additionalUserIdClaimTypes,\n        additionalEmailClaimTypes: api.additionalEmailClaimTypes,\n        additionalNameClaimTypes: api.additionalNameClaimTypes,\n        acrValues: api.acrValues,\n        expectedReturnAcrValue: api.expectedReturnAcrValue,\n      };\n    } else if (this.configType === SsoType.Saml2) {\n      this.saml = {\n        spNameIdFormat: api.spNameIdFormat,\n        spOutboundSigningAlgorithm: api.spOutboundSigningAlgorithm,\n        spSigningBehavior: api.spSigningBehavior,\n        spMinIncomingSigningAlgorithm: api.spMinIncomingSigningAlgorithm,\n        spWantAssertionsSigned: api.spWantAssertionsSigned,\n        spValidateCertificates: api.spValidateCertificates,\n\n        idpEntityId: api.idpEntityId,\n        idpBindingType: api.idpBindingType,\n        idpSingleSignOnServiceUrl: api.idpSingleSignOnServiceUrl,\n        idpSingleLogoutServiceUrl: api.idpSingleLogoutServiceUrl,\n        idpX509PublicCert: api.idpX509PublicCert,\n        idpOutboundSigningAlgorithm: api.idpOutboundSigningAlgorithm,\n        idpAllowUnsolicitedAuthnResponse: api.idpAllowUnsolicitedAuthnResponse,\n        idpWantAuthnRequestsSigned: api.idpWantAuthnRequestsSigned,\n\n        // Value is inverted in the view model (allow instead of disable)\n        idpAllowOutboundLogoutRequests:\n          api.idpDisableOutboundLogoutRequests == null\n            ? null\n            : !api.idpDisableOutboundLogoutRequests,\n      };\n    }\n  }\n}\n","export class View {}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"input[appInputStripSpaces]\",\n})\nexport class InputStripSpacesDirective {\n  constructor(private el: ElementRef<HTMLInputElement>) {}\n\n  @HostListener(\"input\") onInput() {\n    this.el.nativeElement.value = this.el.nativeElement.value.replace(/ /g, \"\");\n  }\n}\n","import { Directive, HostListener, Input } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appCopyClick]\",\n})\nexport class CopyClickDirective {\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  @Input(\"appCopyClick\") valueToCopy = \"\";\n\n  @HostListener(\"click\") onClick() {\n    this.platformUtilsService.copyToClipboard(this.valueToCopy);\n  }\n}\n","import { Directive, HostListener, Input } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive({\n  selector: \"[appLaunchClick]\",\n})\nexport class LaunchClickDirective {\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  @Input(\"appLaunchClick\") uriToLaunch = \"\";\n\n  @HostListener(\"click\") onClick() {\n    if (!Utils.isNullOrWhitespace(this.uriToLaunch)) {\n      this.platformUtilsService.launchUri(this.uriToLaunch);\n    }\n  }\n}\n","import { Directive, Input, OnInit, Self } from \"@angular/core\";\nimport { ControlValueAccessor, UntypedFormControl, NgControl, Validators } from \"@angular/forms\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Directive()\nexport abstract class BaseCvaComponent implements ControlValueAccessor, OnInit {\n  get describedById() {\n    return this.showDescribedBy ? this.controlId + \"Desc\" : null;\n  }\n\n  get showDescribedBy() {\n    return this.helperText != null || this.controlDir.control.hasError(\"required\");\n  }\n\n  get isRequired() {\n    return this.controlDir.control.hasValidator(Validators.required);\n  }\n\n  @Input() label: string;\n  @Input() controlId: string;\n  @Input() helperText: string;\n\n  internalControl = new UntypedFormControl(\"\");\n\n  protected onChange: any;\n  protected onTouched: any;\n\n  constructor(@Self() public controlDir: NgControl) {\n    this.controlDir.valueAccessor = this;\n  }\n\n  ngOnInit() {\n    this.internalControl.valueChanges.subscribe(this.onValueChangesInternal);\n  }\n\n  onBlurInternal() {\n    this.onTouched();\n  }\n\n  // CVA interfaces\n  writeValue(value: string) {\n    this.internalControl.setValue(value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    if (isDisabled) {\n      this.internalControl.disable();\n    } else {\n      this.internalControl.enable();\n    }\n  }\n\n  protected onValueChangesInternal: any = (value: string) => this.onChange(value);\n  // End CVA interfaces\n}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      [attr.id]=\"controlId\"\n      [attr.aria-describedby]=\"describedById\"\n      [formControl]=\"internalControl\"\n      (blur)=\"onBlurInternal()\"\n    />\n    <label class=\"form-check-label\" [attr.for]=\"controlId\">{{ label }}</label>\n  </div>\n  <small *ngIf=\"showDescribedBy\" [attr.id]=\"describedById\" class=\"form-text text-muted\">{{\n    helperText\n  }}</small>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-checkbox\",\n  templateUrl: \"input-checkbox.component.html\",\n})\nexport class InputCheckboxComponent extends BaseCvaComponent {}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"singleSignOn\" | i18n }}</h1>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [formGroup]=\"ssoConfigForm\"\n  [appApiAction]=\"formPromise\"\n  *ngIf=\"!loading\"\n>\n  <p>\n    {{ \"ssoPolicyHelpStart\" | i18n }}\n    <a routerLink=\"../policies\">{{ \"ssoPolicyHelpLink\" | i18n }}</a>\n    {{ \"ssoPolicyHelpEnd\" | i18n }}\n    <br />\n    {{ \"ssoPolicyHelpKeyConnector\" | i18n }}\n  </p>\n\n  <!-- Root form -->\n  <ng-container>\n    <app-input-checkbox\n      controlId=\"enabled\"\n      [formControl]=\"enabled\"\n      [label]=\"'allowSso' | i18n\"\n      [helperText]=\"'allowSsoDesc' | i18n\"\n    ></app-input-checkbox>\n\n    <bit-form-field>\n      <bit-label>{{ \"ssoIdentifier\" | i18n }}</bit-label>\n      <input bitInput type=\"text\" [formControl]=\"ssoIdentifier\" />\n      <bit-hint>{{ \"ssoIdentifierHint\" | i18n }}</bit-hint>\n    </bit-form-field>\n\n    <hr />\n\n    <div class=\"form-group\">\n      <label>{{ \"memberDecryptionOption\" | i18n }}</label>\n      <div class=\"form-check form-check-block\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"memberDecryptionPass\"\n          [value]=\"false\"\n          formControlName=\"keyConnectorEnabled\"\n        />\n        <label class=\"form-check-label\" for=\"memberDecryptionPass\">\n          {{ \"masterPass\" | i18n }}\n          <small>{{ \"memberDecryptionPassDesc\" | i18n }}</small>\n        </label>\n      </div>\n      <div class=\"form-check mt-2 form-check-block\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"memberDecryptionKey\"\n          [value]=\"true\"\n          formControlName=\"keyConnectorEnabled\"\n          [attr.disabled]=\"!organization.useKeyConnector || null\"\n        />\n        <label class=\"form-check-label\" for=\"memberDecryptionKey\">\n          {{ \"keyConnector\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/about-key-connector/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n          <small>{{ \"memberDecryptionKeyConnectorDesc\" | i18n }}</small>\n        </label>\n      </div>\n    </div>\n\n    <!-- Key Connector -->\n    <ng-container *ngIf=\"ssoConfigForm.get('keyConnectorEnabled').value\">\n      <app-callout type=\"warning\" [useAlertRole]=\"true\">\n        {{ \"keyConnectorWarning\" | i18n }}\n      </app-callout>\n\n      <bit-form-field>\n        <bit-label>{{ \"keyConnectorUrl\" | i18n }}</bit-label>\n        <input\n          bitInput\n          type=\"text\"\n          required\n          formControlName=\"keyConnectorUrl\"\n          appInputStripSpaces\n          (input)=\"haveTestedKeyConnector = false\"\n        />\n        <button\n          bitSuffix\n          bitButton\n          [disabled]=\"!enableTestKeyConnector\"\n          type=\"button\"\n          (click)=\"validateKeyConnectorUrl()\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"keyConnectorUrl.pending\"\n          ></i>\n          <span *ngIf=\"!keyConnectorUrl.pending\">\n            {{ \"keyConnectorTest\" | i18n }}\n          </span>\n        </button>\n        <bit-hint\n          aria-live=\"polite\"\n          *ngIf=\"haveTestedKeyConnector && !keyConnectorUrl.hasError('invalidUrl')\"\n        >\n          <small class=\"text-success\">\n            <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n            {{ \"keyConnectorTestSuccess\" | i18n }}\n          </small>\n        </bit-hint>\n      </bit-form-field>\n    </ng-container>\n\n    <hr />\n\n    <bit-form-field>\n      <bit-label>{{ \"type\" | i18n }}</bit-label>\n      <select bitInput formControlName=\"configType\">\n        <option *ngFor=\"let o of ssoTypeOptions\" [ngValue]=\"o.value\" disabled=\"{{ o.disabled }}\">\n          {{ o.name }}\n        </option>\n      </select>\n    </bit-form-field>\n  </ng-container>\n\n  <!-- OIDC -->\n  <div\n    *ngIf=\"ssoConfigForm.get('configType').value === ssoType.OpenIdConnect\"\n    [formGroup]=\"openIdForm\"\n  >\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"openIdConnectConfig\" | i18n }}</h2>\n\n      <bit-form-field>\n        <bit-label>{{ \"callbackPath\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"callbackPath\" />\n        <button\n          bitButton\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"callbackPath\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        >\n          <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n        </button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"signedOutCallbackPath\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"signedOutCallbackPath\" />\n        <button\n          bitButton\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"signedOutCallbackPath\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        >\n          <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n        </button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"authority\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"authority\" appInputStripSpaces />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"clientId\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"clientId\" appInputStripSpaces />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"clientSecret\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"clientSecret\" appInputStripSpaces />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"metadataAddress\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"metadataAddress\" appInputStripSpaces />\n        <bit-hint>{{ \"openIdAuthorityRequired\" | i18n }}</bit-hint>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"oidcRedirectBehavior\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"redirectBehavior\">\n          <option\n            *ngFor=\"let o of connectRedirectOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <app-input-checkbox\n        controlId=\"getClaimsFromUserInfoEndpoint\"\n        formControlName=\"getClaimsFromUserInfoEndpoint\"\n        [label]=\"'getClaimsFromUserInfoEndpoint' | i18n\"\n      ></app-input-checkbox>\n\n      <!-- Optional customizations -->\n      <div\n        class=\"section-header d-flex flex-row align-items-center mt-3 mb-3\"\n        (click)=\"toggleOpenIdCustomizations()\"\n      >\n        <h3 class=\"mb-0 mr-2\" id=\"customizations-header\">\n          {{ \"openIdOptionalCustomizations\" | i18n }}\n        </h3>\n        <button\n          class=\"mb-1 btn btn-link\"\n          type=\"button\"\n          appStopClick\n          role=\"button\"\n          aria-controls=\"customizations\"\n          [attr.aria-expanded]=\"showOpenIdCustomizations\"\n          aria-labelledby=\"customizations-header\"\n        >\n          <i\n            class=\"bwi\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-down': !showOpenIdCustomizations,\n              'bwi-chevron-up': showOpenIdCustomizations\n            }\"\n          ></i>\n        </button>\n      </div>\n      <div id=\"customizations\" [hidden]=\"!showOpenIdCustomizations\">\n        <bit-form-field>\n          <bit-label>{{ \"additionalScopes\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"additionalScopes\" />\n          <bit-hint>{{ \"separateMultipleWithComma\" | i18n }}</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"additionalUserIdClaimTypes\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"additionalUserIdClaimTypes\" />\n          <bit-hint>{{ \"separateMultipleWithComma\" | i18n }}</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"additionalEmailClaimTypes\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"additionalEmailClaimTypes\" />\n          <bit-hint>{{ \"separateMultipleWithComma\" | i18n }}</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"additionalNameClaimTypes\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"additionalNameClaimTypes\" />\n          <bit-hint>{{ \"separateMultipleWithComma\" | i18n }}</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"acrValues\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"acrValues\" />\n          <bit-hint>acr_values</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"expectedReturnAcrValue\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"expectedReturnAcrValue\" />\n          <bit-hint>acr_validaton</bit-hint>\n        </bit-form-field>\n      </div>\n    </div>\n  </div>\n\n  <!-- SAML2 SP -->\n  <div *ngIf=\"ssoConfigForm.get('configType').value === ssoType.Saml2\" [formGroup]=\"samlForm\">\n    <!-- SAML2 SP -->\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"samlSpConfig\" | i18n }}</h2>\n\n      <bit-form-field>\n        <bit-label>{{ \"spEntityId\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"spEntityId\" />\n        <button\n          bitButton\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"spEntityId\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        >\n          <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n        </button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spMetadataUrl\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"spMetadataUrl\" />\n        <button\n          bitButton\n          bitSuffix\n          type=\"button\"\n          [appLaunchClick]=\"spMetadataUrl\"\n          [appA11yTitle]=\"'launch' | i18n\"\n        >\n          <i class=\"bwi bwi-lg bwi-external-link\" aria-hidden=\"true\"></i>\n        </button>\n        <button\n          bitButton\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"spMetadataUrl\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        >\n          <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n        </button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spAcsUrl\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"spAcsUrl\" />\n        <button\n          bitButton\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"spAcsUrl\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        >\n          <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n        </button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spNameIdFormat\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"spNameIdFormat\">\n          <option\n            *ngFor=\"let o of saml2NameIdFormatOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spOutboundSigningAlgorithm\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"spOutboundSigningAlgorithm\">\n          <option\n            *ngFor=\"let o of samlSigningAlgorithmOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spSigningBehavior\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"spSigningBehavior\">\n          <option\n            *ngFor=\"let o of saml2SigningBehaviourOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spMinIncomingSigningAlgorithm\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"spMinIncomingSigningAlgorithm\">\n          <option\n            *ngFor=\"let o of samlSigningAlgorithmOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <app-input-checkbox\n        controlId=\"spWantAssertionsSigned\"\n        formControlName=\"spWantAssertionsSigned\"\n        [label]=\"'spWantAssertionsSigned' | i18n\"\n      ></app-input-checkbox>\n\n      <app-input-checkbox\n        controlId=\"spValidateCertificates\"\n        formControlName=\"spValidateCertificates\"\n        [label]=\"'spValidateCertificates' | i18n\"\n      ></app-input-checkbox>\n    </div>\n\n    <!-- SAML2 IDP -->\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"samlIdpConfig\" | i18n }}</h2>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpEntityId\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"idpEntityId\" />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpBindingType\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"idpBindingType\">\n          <option\n            *ngFor=\"let o of saml2BindingTypeOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpSingleSignOnServiceUrl\" | i18n }}</bit-label>\n        <input\n          bitInput\n          type=\"text\"\n          formControlName=\"idpSingleSignOnServiceUrl\"\n          appInputStripSpaces\n        />\n        <bit-hint>{{ \"idpSingleSignOnServiceUrlRequired\" | i18n }}</bit-hint>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpSingleLogoutServiceUrl\" | i18n }}</bit-label>\n        <input\n          bitInput\n          type=\"text\"\n          formControlName=\"idpSingleLogoutServiceUrl\"\n          appInputStripSpaces\n        />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpX509PublicCert\" | i18n }}</bit-label>\n        <textarea bitInput rows=\"6\" formControlName=\"idpX509PublicCert\"></textarea>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpOutboundSigningAlgorithm\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"idpOutboundSigningAlgorithm\">\n          <option\n            *ngFor=\"let o of samlSigningAlgorithmOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <!--TODO: Uncomment once Unsolicited IdP Response is supported-->\n      <!-- <app-input-checkbox\n        controlId=\"idpAllowUnsolicitedAuthnResponse\"\n        formControlName=\"idpAllowUnsolicitedAuthnResponse\"\n        [label]=\"'idpAllowUnsolicitedAuthnResponse' | i18n\"\n      ></app-input-checkbox> -->\n\n      <app-input-checkbox\n        controlId=\"idpAllowOutboundLogoutRequests\"\n        formControlName=\"idpAllowOutboundLogoutRequests\"\n        [label]=\"'idpAllowOutboundLogoutRequests' | i18n\"\n      ></app-input-checkbox>\n\n      <app-input-checkbox\n        controlId=\"idpWantAuthnRequestsSigned\"\n        formControlName=\"idpWantAuthnRequestsSigned\"\n        [label]=\"'idpSignAuthenticationRequests' | i18n\"\n      ></app-input-checkbox>\n    </div>\n  </div>\n\n  <bit-submit-button buttonType=\"primary\" [loading]=\"form.loading\">\n    {{ \"save\" | i18n }}\n  </bit-submit-button>\n  <bit-error-summary [formGroup]=\"ssoConfigForm\"></bit-error-summary>\n</form>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  UntypedFormGroup,\n  Validators,\n} from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { concatMap, Subject, takeUntil } from \"rxjs\";\n\nimport { SelectOptions } from \"@bitwarden/angular/interfaces/selectOptions\";\nimport { ControlsOf } from \"@bitwarden/angular/types/controls-of\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"@bitwarden/common/enums/ssoEnums\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SsoConfigApi } from \"@bitwarden/common/models/api/ssoConfigApi\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationSsoRequest } from \"@bitwarden/common/models/request/organization/organizationSsoRequest\";\nimport { OrganizationSsoResponse } from \"@bitwarden/common/models/response/organization/organizationSsoResponse\";\nimport { SsoConfigView } from \"@bitwarden/common/models/view/ssoConfigView\";\n\nconst defaultSigningAlgorithm = \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\";\n\n@Component({\n  selector: \"app-org-manage-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent implements OnInit, OnDestroy {\n  readonly ssoType = SsoType;\n\n  readonly ssoTypeOptions: SelectOptions[] = [\n    { name: this.i18nService.t(\"selectType\"), value: SsoType.None, disabled: true },\n    { name: \"OpenID Connect\", value: SsoType.OpenIdConnect },\n    { name: \"SAML 2.0\", value: SsoType.Saml2 },\n  ];\n\n  readonly samlSigningAlgorithms = [\n    \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha384\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha512\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\",\n  ];\n\n  readonly saml2SigningBehaviourOptions: SelectOptions[] = [\n    {\n      name: \"If IdP Wants Authn Requests Signed\",\n      value: Saml2SigningBehavior.IfIdpWantAuthnRequestsSigned,\n    },\n    { name: \"Always\", value: Saml2SigningBehavior.Always },\n    { name: \"Never\", value: Saml2SigningBehavior.Never },\n  ];\n  readonly saml2BindingTypeOptions: SelectOptions[] = [\n    { name: \"Redirect\", value: Saml2BindingType.HttpRedirect },\n    { name: \"HTTP POST\", value: Saml2BindingType.HttpPost },\n  ];\n  readonly saml2NameIdFormatOptions: SelectOptions[] = [\n    { name: \"Not Configured\", value: Saml2NameIdFormat.NotConfigured },\n    { name: \"Unspecified\", value: Saml2NameIdFormat.Unspecified },\n    { name: \"Email Address\", value: Saml2NameIdFormat.EmailAddress },\n    { name: \"X.509 Subject Name\", value: Saml2NameIdFormat.X509SubjectName },\n    { name: \"Windows Domain Qualified Name\", value: Saml2NameIdFormat.WindowsDomainQualifiedName },\n    { name: \"Kerberos Principal Name\", value: Saml2NameIdFormat.KerberosPrincipalName },\n    { name: \"Entity Identifier\", value: Saml2NameIdFormat.EntityIdentifier },\n    { name: \"Persistent\", value: Saml2NameIdFormat.Persistent },\n    { name: \"Transient\", value: Saml2NameIdFormat.Transient },\n  ];\n\n  readonly connectRedirectOptions: SelectOptions[] = [\n    { name: \"Redirect GET\", value: OpenIdConnectRedirectBehavior.RedirectGet },\n    { name: \"Form POST\", value: OpenIdConnectRedirectBehavior.FormPost },\n  ];\n\n  private destory$ = new Subject<void>();\n\n  showOpenIdCustomizations = false;\n\n  loading = true;\n  haveTestedKeyConnector = false;\n  organizationId: string;\n  organization: Organization;\n  formPromise: Promise<OrganizationSsoResponse>;\n\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  private enabled = this.formBuilder.control(false);\n\n  private ssoIdentifier = this.formBuilder.control(\"\", {\n    validators: [Validators.maxLength(50), Validators.required],\n  });\n\n  private openIdForm = this.formBuilder.group<ControlsOf<SsoConfigView[\"openId\"]>>(\n    {\n      authority: new FormControl(\"\", Validators.required),\n      clientId: new FormControl(\"\", Validators.required),\n      clientSecret: new FormControl(\"\", Validators.required),\n      metadataAddress: new FormControl(),\n      redirectBehavior: new FormControl(\n        OpenIdConnectRedirectBehavior.RedirectGet,\n        Validators.required\n      ),\n      getClaimsFromUserInfoEndpoint: new FormControl(),\n      additionalScopes: new FormControl(),\n      additionalUserIdClaimTypes: new FormControl(),\n      additionalEmailClaimTypes: new FormControl(),\n      additionalNameClaimTypes: new FormControl(),\n      acrValues: new FormControl(),\n      expectedReturnAcrValue: new FormControl(),\n    },\n    {\n      updateOn: \"blur\",\n    }\n  );\n\n  private samlForm = this.formBuilder.group<ControlsOf<SsoConfigView[\"saml\"]>>(\n    {\n      spNameIdFormat: new FormControl(Saml2NameIdFormat.NotConfigured),\n      spOutboundSigningAlgorithm: new FormControl(defaultSigningAlgorithm),\n      spSigningBehavior: new FormControl(Saml2SigningBehavior.IfIdpWantAuthnRequestsSigned),\n      spMinIncomingSigningAlgorithm: new FormControl(defaultSigningAlgorithm),\n      spWantAssertionsSigned: new FormControl(),\n      spValidateCertificates: new FormControl(),\n\n      idpEntityId: new FormControl(\"\", Validators.required),\n      idpBindingType: new FormControl(Saml2BindingType.HttpRedirect),\n      idpSingleSignOnServiceUrl: new FormControl(),\n      idpSingleLogoutServiceUrl: new FormControl(),\n      idpX509PublicCert: new FormControl(\"\", Validators.required),\n      idpOutboundSigningAlgorithm: new FormControl(defaultSigningAlgorithm),\n      idpAllowUnsolicitedAuthnResponse: new FormControl(),\n      idpAllowOutboundLogoutRequests: new FormControl(true),\n      idpWantAuthnRequestsSigned: new FormControl(),\n    },\n    {\n      updateOn: \"blur\",\n    }\n  );\n\n  private ssoConfigForm = this.formBuilder.group<ControlsOf<SsoConfigView>>({\n    configType: new FormControl(SsoType.None),\n    keyConnectorEnabled: new FormControl(false),\n    keyConnectorUrl: new FormControl(\"\"),\n    openId: this.openIdForm,\n    saml: this.samlForm,\n  });\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.ssoConfigForm\n      .get(\"configType\")\n      .valueChanges.pipe(takeUntil(this.destory$))\n      .subscribe((newType: SsoType) => {\n        if (newType === SsoType.OpenIdConnect) {\n          this.openIdForm.enable();\n          this.samlForm.disable();\n        } else if (newType === SsoType.Saml2) {\n          this.openIdForm.disable();\n          this.samlForm.enable();\n        } else {\n          this.openIdForm.disable();\n          this.samlForm.disable();\n        }\n      });\n\n    this.samlForm\n      .get(\"spSigningBehavior\")\n      .valueChanges.pipe(takeUntil(this.destory$))\n      .subscribe(() => this.samlForm.get(\"idpX509PublicCert\").updateValueAndValidity());\n\n    this.route.params\n      .pipe(\n        concatMap(async (params) => {\n          this.organizationId = params.organizationId;\n          await this.load();\n        }),\n        takeUntil(this.destory$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.destory$.next();\n    this.destory$.complete();\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    const ssoSettings = await this.organizationApiService.getSso(this.organizationId);\n    this.populateForm(ssoSettings);\n\n    this.callbackPath = ssoSettings.urls.callbackPath;\n    this.signedOutCallbackPath = ssoSettings.urls.signedOutCallbackPath;\n    this.spEntityId = ssoSettings.urls.spEntityId;\n    this.spMetadataUrl = ssoSettings.urls.spMetadataUrl;\n    this.spAcsUrl = ssoSettings.urls.spAcsUrl;\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.validateForm(this.ssoConfigForm);\n\n    if (this.ssoConfigForm.value.keyConnectorEnabled) {\n      this.haveTestedKeyConnector = false;\n      await this.validateKeyConnectorUrl();\n    }\n\n    if (!this.ssoConfigForm.valid) {\n      this.readOutErrors();\n      return;\n    }\n\n    const request = new OrganizationSsoRequest();\n    request.enabled = this.enabled.value;\n    request.identifier = this.ssoIdentifier.value;\n    request.data = SsoConfigApi.fromView(this.ssoConfigForm.getRawValue());\n\n    this.formPromise = this.organizationApiService.updateSso(this.organizationId, request);\n\n    try {\n      const response = await this.formPromise;\n      this.populateForm(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"ssoSettingsSaved\"));\n    } catch {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.formPromise = null;\n  }\n\n  async validateKeyConnectorUrl() {\n    if (this.haveTestedKeyConnector) {\n      return;\n    }\n\n    this.keyConnectorUrl.markAsPending();\n\n    try {\n      await this.apiService.getKeyConnectorAlive(this.keyConnectorUrl.value);\n      this.keyConnectorUrl.updateValueAndValidity();\n    } catch {\n      this.keyConnectorUrl.setErrors({\n        invalidUrl: { message: this.i18nService.t(\"keyConnectorTestFail\") },\n      });\n    }\n\n    this.haveTestedKeyConnector = true;\n  }\n\n  toggleOpenIdCustomizations() {\n    this.showOpenIdCustomizations = !this.showOpenIdCustomizations;\n  }\n\n  getErrorCount(form: UntypedFormGroup): number {\n    return Object.values(form.controls).reduce((acc: number, control: AbstractControl) => {\n      if (control instanceof UntypedFormGroup) {\n        return acc + this.getErrorCount(control);\n      }\n\n      if (control.errors == null) {\n        return acc;\n      }\n      return acc + Object.keys(control.errors).length;\n    }, 0);\n  }\n\n  get enableTestKeyConnector() {\n    return (\n      this.ssoConfigForm.get(\"keyConnectorEnabled\").value &&\n      !Utils.isNullOrWhitespace(this.keyConnectorUrl?.value)\n    );\n  }\n\n  get keyConnectorUrl() {\n    return this.ssoConfigForm.get(\"keyConnectorUrl\");\n  }\n\n  get samlSigningAlgorithmOptions(): SelectOptions[] {\n    return this.samlSigningAlgorithms.map((algorithm) => ({ name: algorithm, value: algorithm }));\n  }\n\n  private validateForm(form: UntypedFormGroup) {\n    Object.values(form.controls).forEach((control: AbstractControl) => {\n      if (control.disabled) {\n        return;\n      }\n\n      if (control instanceof UntypedFormGroup) {\n        this.validateForm(control);\n      } else {\n        control.markAsDirty();\n        control.markAsTouched();\n        control.updateValueAndValidity();\n      }\n    });\n  }\n\n  private populateForm(ssoSettings: OrganizationSsoResponse) {\n    this.enabled.setValue(ssoSettings.enabled);\n    this.ssoIdentifier.setValue(ssoSettings.identifier);\n    if (ssoSettings.data != null) {\n      const ssoConfigView = new SsoConfigView(ssoSettings.data);\n      this.ssoConfigForm.patchValue(ssoConfigView);\n    }\n  }\n\n  private readOutErrors() {\n    const errorText = this.i18nService.t(\"error\");\n    const errorCount = this.getErrorCount(this.ssoConfigForm);\n    const errorCountText = this.i18nService.t(\n      errorCount === 1 ? \"formErrorSummarySingle\" : \"formErrorSummaryPlural\",\n      errorCount.toString()\n    );\n\n    const div = document.createElement(\"div\");\n    div.className = \"sr-only\";\n    div.id = \"srErrorCount\";\n    div.setAttribute(\"aria-live\", \"polite\");\n    div.innerText = errorText + \": \" + errorCountText;\n\n    const existing = document.getElementById(\"srErrorCount\");\n    if (existing != null) {\n      existing.remove();\n    }\n\n    document.body.append(div);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"src/app/organizations/guards/org-permissions.guard\";\nimport { OrganizationLayoutComponent } from \"src/app/organizations/layouts/organization-layout.component\";\nimport { canAccessSettingsTab } from \"src/app/organizations/navigation-permissions\";\nimport { SettingsComponent } from \"src/app/organizations/settings/settings.component\";\n\nimport { ScimComponent } from \"./manage/scim.component\";\nimport { SsoComponent } from \"./manage/sso.component\";\n\nconst routes: Routes = [\n  {\n    path: \"organizations/:organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuard, OrganizationPermissionsGuard],\n    children: [\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: canAccessSettingsTab,\n        },\n        children: [\n          {\n            path: \"sso\",\n            component: SsoComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              organizationPermissions: (org: Organization) => org.canManageSso,\n            },\n          },\n          {\n            path: \"scim\",\n            component: ScimComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              organizationPermissions: (org: Organization) => org.canManageScim,\n            },\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"src/app/shared/shared.module\";\n\nimport { InputCheckboxComponent } from \"./components/input-checkbox.component\";\nimport { ScimComponent } from \"./manage/scim.component\";\nimport { SsoComponent } from \"./manage/sso.component\";\nimport { OrganizationsRoutingModule } from \"./organizations-routing.module\";\n\n@NgModule({\n  imports: [SharedModule, OrganizationsRoutingModule],\n  declarations: [InputCheckboxComponent, SsoComponent, ScimComponent],\n})\nexport class OrganizationsModule {}\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\n\nimport { CoreModule } from \"src/app/core\";\nimport { OssRoutingModule } from \"src/app/oss-routing.module\";\nimport { OssModule } from \"src/app/oss.module\";\nimport { WildcardRoutingModule } from \"src/app/wildcard-routing.module\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { OrganizationsModule } from \"./organizations/organizations.module\";\nimport { DisablePersonalVaultExportPolicyComponent } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicyComponent } from \"./policies/maximum-vault-timeout.component\";\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    OssModule,\n    JslibModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CoreModule,\n    InfiniteScrollModule,\n    DragDropModule,\n    AppRoutingModule,\n    OssRoutingModule,\n    OrganizationsModule, // Must be after OssRoutingModule for competing routes to resolve properly\n    RouterModule,\n    WildcardRoutingModule, // Needs to be last to catch all non-existing routes\n  ],\n  declarations: [\n    AppComponent,\n    DisablePersonalVaultExportPolicyComponent,\n    MaximumVaultTimeoutPolicyComponent,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport \"bootstrap\";\nimport \"jquery\";\nimport \"popper.js\";\n\nrequire(\"src/scss/styles.scss\");\nrequire(\"src/scss/tailwind.css\");\n\nimport { AppModule } from \"./app/app.module\";\n\nif (process.env.NODE_ENV === \"production\") {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-avatar\",\n  template:\n    '<img *ngIf=\"src\" [src]=\"sanitizer.bypassSecurityTrustResourceUrl(src)\" title=\"{{data}}\" ' +\n    \"[ngClass]=\\\"{'rounded-circle': circle}\\\">\",\n})\nexport class AvatarComponent implements OnChanges, OnInit {\n  @Input() data: string;\n  @Input() email: string;\n  @Input() size = 45;\n  @Input() charCount = 2;\n  @Input() textColor = \"#ffffff\";\n  @Input() fontSize = 20;\n  @Input() fontWeight = 300;\n  @Input() dynamic = false;\n  @Input() circle = false;\n\n  src: string;\n\n  constructor(\n    public sanitizer: DomSanitizer,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    if (!this.dynamic) {\n      this.generate();\n    }\n  }\n\n  ngOnChanges() {\n    if (this.dynamic) {\n      this.generate();\n    }\n  }\n\n  private async generate() {\n    const enableGravatars = await this.stateService.getEnableGravitars();\n    if (enableGravatars && this.email != null) {\n      const hashBytes = await this.cryptoFunctionService.hash(\n        this.email.toLowerCase().trim(),\n        \"md5\"\n      );\n      const hash = Utils.fromBufferToHex(hashBytes).toLowerCase();\n      this.src = \"https://www.gravatar.com/avatar/\" + hash + \"?s=\" + this.size + \"&r=pg&d=retro\";\n    } else {\n      let chars: string = null;\n      const upperData = this.data.toUpperCase();\n\n      if (this.charCount > 1) {\n        chars = this.getFirstLetters(upperData, this.charCount);\n      }\n      if (chars == null) {\n        chars = this.unicodeSafeSubstring(upperData, this.charCount);\n      }\n\n      // If the chars contain an emoji, only show it.\n      if (chars.match(Utils.regexpEmojiPresentation)) {\n        chars = chars.match(Utils.regexpEmojiPresentation)[0];\n      }\n\n      const charObj = this.getCharText(chars);\n      const color = Utils.stringToColor(upperData);\n      const svg = this.getSvg(this.size, color);\n      svg.appendChild(charObj);\n      const html = window.document.createElement(\"div\").appendChild(svg).outerHTML;\n      const svgHtml = window.btoa(unescape(encodeURIComponent(html)));\n      this.src = \"data:image/svg+xml;base64,\" + svgHtml;\n    }\n  }\n\n  private getFirstLetters(data: string, count: number): string {\n    const parts = data.split(\" \");\n    if (parts.length > 1) {\n      let text = \"\";\n      for (let i = 0; i < count; i++) {\n        text += this.unicodeSafeSubstring(parts[i], 1);\n      }\n      return text;\n    }\n    return null;\n  }\n\n  private getSvg(size: number, color: string): HTMLElement {\n    const svgTag = window.document.createElement(\"svg\");\n    svgTag.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    svgTag.setAttribute(\"pointer-events\", \"none\");\n    svgTag.setAttribute(\"width\", size.toString());\n    svgTag.setAttribute(\"height\", size.toString());\n    svgTag.style.backgroundColor = color;\n    svgTag.style.width = size + \"px\";\n    svgTag.style.height = size + \"px\";\n    return svgTag;\n  }\n\n  private getCharText(character: string): HTMLElement {\n    const textTag = window.document.createElement(\"text\");\n    textTag.setAttribute(\"text-anchor\", \"middle\");\n    textTag.setAttribute(\"y\", \"50%\");\n    textTag.setAttribute(\"x\", \"50%\");\n    textTag.setAttribute(\"dy\", \"0.35em\");\n    textTag.setAttribute(\"pointer-events\", \"auto\");\n    textTag.setAttribute(\"fill\", this.textColor);\n    textTag.setAttribute(\n      \"font-family\",\n      '\"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,' +\n        'sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"'\n    );\n    textTag.textContent = character;\n    textTag.style.fontWeight = this.fontWeight.toString();\n    textTag.style.fontSize = this.fontSize + \"px\";\n    return textTag;\n  }\n\n  private unicodeSafeSubstring(str: string, count: number) {\n    const characters = str.match(/./gu);\n    return characters != null ? characters.slice(0, count).join(\"\") : \"\";\n  }\n}\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img\n    [src]=\"image\"\n    appFallbackSrc=\"{{ fallbackImage }}\"\n    *ngIf=\"imageEnabled && image\"\n    alt=\"\"\n    decoding=\"async\"\n    loading=\"lazy\"\n  />\n  <i class=\"bwi bwi-fw bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n  RuPay: \"card-ru-pay\",\n  Mir: \"card-mir\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n  <input\n    id=\"masterPassword\"\n    type=\"password\"\n    name=\"MasterPasswordHash\"\n    class=\"form-control\"\n    [formControl]=\"secret\"\n    required\n    appAutofocus\n    appInputVerbatim\n  />\n  <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n    <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from \"@angular/forms\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Collects the user's master password, or if they are using Key Connector, prompts for an OTP via email.\n * This is exposed to the parent component via the ControlValueAccessor interface (e.g. bind it to a FormControl).\n * Use UserVerificationService to verify the user's input.\n */\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class UserVerificationComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector = false;\n  disableRequestOTP = false;\n  sentCode = false;\n\n  secret = new FormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.secret.valueChanges.subscribe((secret: string) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: Utils.isNullOrWhitespace(secret) ? null : secret,\n    });\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\n\nimport { ValidationService } from \"../services/validation.service\";\n\n/**\n * Provides error handling, in particular for any error returned by the server in an api call.\n * Attach it to a <form> element and provide the name of the class property that will hold the api call promise.\n * e.g. <form [appApiAction]=\"this.formPromise\">\n * Any errors/rejections that occur will be intercepted and displayed as error toasts.\n */\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if ((e as ErrorResponse).captchaRequired) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      this.messagingService.send(\"authBlocked\", { url: routerState.url });\n      return false;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      return this.router.createUrlTree([\"lock\"], { queryParams: { promptBiometric: true } });\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      return this.router.createUrlTree([\"/remove-password\"]);\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class LockGuard implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return true;\n    }\n\n    const redirectUrl =\n      authStatus === AuthenticationStatus.LoggedOut ? this.loginpage : this.homepage;\n\n    return this.router.createUrlTree([redirectUrl]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class UnauthGuard implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return true;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"lock\"]);\n    }\n\n    return this.router.createUrlTree([this.homepage]);\n  }\n}\n","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface CardRuleEntry {\n  cardLength: number;\n  blocks: number[];\n}\n\n// See https://baymard.com/checkout-usability/credit-card-patterns for\n// all possible credit card spacing patterns. For now, we just handle\n// the below.\nconst numberFormats: Record<string, CardRuleEntry[]> = {\n  Visa: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Mastercard: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Maestro: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 13, blocks: [4, 4, 5] },\n    { cardLength: 15, blocks: [4, 6, 5] },\n    { cardLength: 19, blocks: [4, 4, 4, 4, 3] },\n  ],\n  Discover: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  \"Diners Club\": [{ cardLength: 14, blocks: [4, 6, 4] }],\n  JCB: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  UnionPay: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 19, blocks: [6, 13] },\n  ],\n  Amex: [{ cardLength: 15, blocks: [4, 6, 5] }],\n  Mir: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 17, blocks: [5, 4, 4, 4] },\n    { cardLength: 18, blocks: [6, 4, 4, 4] },\n    { cardLength: 19, blocks: [7, 4, 4, 4] },\n  ],\n  Other: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n};\n\n@Pipe({ name: \"creditCardNumber\" })\nexport class CreditCardNumberPipe implements PipeTransform {\n  transform(creditCardNumber: string, brand: string): string {\n    let rules = numberFormats[brand];\n\n    if (rules == null) {\n      rules = numberFormats[\"Other\"];\n    }\n\n    const cardLength = creditCardNumber.length;\n\n    let matchingRule = rules.find((r) => r.cardLength == cardLength);\n    if (matchingRule == null) {\n      matchingRule = rules[0];\n    }\n\n    const blocks = matchingRule.blocks;\n\n    const chunks: string[] = [];\n    let total = 0;\n\n    blocks.forEach((c) => {\n      chunks.push(creditCardNumber.slice(total, total + c));\n      total += c;\n    });\n\n    // Append the remaining part\n    if (cardLength > total) {\n      chunks.push(creditCardNumber.slice(total));\n    }\n\n    return chunks.join(\" \");\n  }\n}\n","import { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AvatarComponent } from \"./components/avatar.component\";\nimport { CalloutComponent } from \"./components/callout.component\";\nimport { ExportScopeCalloutComponent } from \"./components/export-scope-callout.component\";\nimport { IconComponent } from \"./components/icon.component\";\nimport { BitwardenToastModule } from \"./components/toastr.component\";\nimport { A11yInvalidDirective } from \"./directives/a11y-invalid.directive\";\nimport { A11yTitleDirective } from \"./directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"./directives/api-action.directive\";\nimport { AutofocusDirective } from \"./directives/autofocus.directive\";\nimport { BoxRowDirective } from \"./directives/box-row.directive\";\nimport { CopyClickDirective } from \"./directives/copy-click.directive\";\nimport { FallbackSrcDirective } from \"./directives/fallback-src.directive\";\nimport { InputStripSpacesDirective } from \"./directives/input-strip-spaces.directive\";\nimport { InputVerbatimDirective } from \"./directives/input-verbatim.directive\";\nimport { LaunchClickDirective } from \"./directives/launch-click.directive\";\nimport { NotPremiumDirective } from \"./directives/not-premium.directive\";\nimport { SelectCopyDirective } from \"./directives/select-copy.directive\";\nimport { StopClickDirective } from \"./directives/stop-click.directive\";\nimport { StopPropDirective } from \"./directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"./directives/true-false-value.directive\";\nimport { ColorPasswordCountPipe } from \"./pipes/color-password-count.pipe\";\nimport { ColorPasswordPipe } from \"./pipes/color-password.pipe\";\nimport { CreditCardNumberPipe } from \"./pipes/credit-card-number.pipe\";\nimport { EllipsisPipe } from \"./pipes/ellipsis.pipe\";\nimport { I18nPipe } from \"./pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"./pipes/search-ciphers.pipe\";\nimport { SearchPipe } from \"./pipes/search.pipe\";\nimport { UserNamePipe } from \"./pipes/user-name.pipe\";\nimport { PasswordStrengthComponent } from \"./shared/components/password-strength/password-strength.component\";\n\n@NgModule({\n  imports: [\n    BitwardenToastModule.forRoot({\n      maxOpened: 5,\n      autoDismiss: true,\n      closeButton: true,\n    }),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    AvatarComponent,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    CopyClickDirective,\n    LaunchClickDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n  ],\n  exports: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    AvatarComponent,\n    BitwardenToastModule,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    CopyClickDirective,\n    LaunchClickDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n  ],\n  providers: [CreditCardNumberPipe, DatePipe, I18nPipe, SearchPipe, UserNamePipe],\n})\nexport class JslibModule {}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"search\",\n})\nexport class SearchPipe implements PipeTransform {\n  transform(\n    items: any[],\n    searchText: string,\n    prop1?: string,\n    prop2?: string,\n    prop3?: string\n  ): any[] {\n    if (items == null || items.length === 0) {\n      return [];\n    }\n\n    if (searchText == null || searchText.length < 2) {\n      return items;\n    }\n\n    searchText = searchText.trim().toLowerCase();\n    return items.filter((i) => {\n      if (\n        prop1 != null &&\n        i[prop1] != null &&\n        i[prop1].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop2 != null &&\n        i[prop2] != null &&\n        i[prop2].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop3 != null &&\n        i[prop3] != null &&\n        i[prop3].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface User {\n  name?: string;\n  email: string;\n}\n\n@Pipe({\n  name: \"userName\",\n})\nexport class UserNamePipe implements PipeTransform {\n  transform(user?: User): string {\n    if (user == null) {\n      return null;\n    }\n\n    return user.name == null || user.name.trim() === \"\" ? user.email : user.name;\n  }\n}\n","import { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals?: boolean;\n  replaceTopModal?: boolean;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config: ModalConfig = {}) {\n    const { replaceTopModal = false, allowMultipleModals = false } = config;\n\n    if (this.modalCount > 0 && replaceTopModal) {\n      this.topModal.instance.close();\n    }\n\n    if (this.modalCount > 0 && !allowMultipleModals) {\n      return;\n    }\n\n    const [modalRef] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  closeAll(): void {\n    this.modalList.forEach((modal) => modal.instance.close());\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", () => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport abstract class AbstractThemingService {\n  theme$: Observable<Theme>;\n  monitorThemeChanges: () => Promise<void>;\n  updateSystemTheme: (systemTheme: ThemeType) => void;\n  updateConfiguredTheme: (theme: ThemeType) => Promise<void>;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\n\n@Injectable()\nexport class ValidationService {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import { TreeNode } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nexport class DynamicTreeNode<T extends CollectionView | FolderView> {\n  fullList: T[];\n  nestedList: TreeNode<T>[];\n\n  hasId(id: string): boolean {\n    return this.fullList != null && this.fullList.filter((i: T) => i.id === id).length > 0;\n  }\n\n  constructor(init?: Partial<DynamicTreeNode<T>>) {\n    Object.assign(this, init);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { firstValueFrom, from, mergeMap, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ServiceUtils } from \"@bitwarden/common/misc/serviceUtils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\n\nconst NestingDelimiter = \"/\";\n\n@Injectable()\nexport class VaultFilterService {\n  constructor(\n    protected stateService: StateService,\n    protected organizationService: OrganizationService,\n    protected folderService: FolderService,\n    protected cipherService: CipherService,\n    protected collectionService: CollectionService,\n    protected policyService: PolicyService\n  ) {}\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await this.stateService.setCollapsedGroupings(Array.from(collapsedFilterNodes));\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    return new Set(await this.stateService.getCollapsedGroupings());\n  }\n\n  async buildOrganizations(): Promise<Organization[]> {\n    return await this.organizationService.getAll();\n  }\n\n  buildNestedFolders(organizationId?: string): Observable<DynamicTreeNode<FolderView>> {\n    const transformation = async (storedFolders: FolderView[]) => {\n      let folders: FolderView[];\n      if (organizationId != null) {\n        const ciphers = await this.cipherService.getAllDecrypted();\n        const orgCiphers = ciphers.filter((c) => c.organizationId == organizationId);\n        folders = storedFolders.filter(\n          (f) =>\n            orgCiphers.filter((oc) => oc.folderId == f.id).length > 0 ||\n            ciphers.filter((c) => c.folderId == f.id).length < 1\n        );\n      } else {\n        folders = storedFolders;\n      }\n      const nestedFolders = await this.getAllFoldersNested(folders);\n      return new DynamicTreeNode<FolderView>({\n        fullList: folders,\n        nestedList: nestedFolders,\n      });\n    };\n\n    return this.folderService.folderViews$.pipe(\n      mergeMap((folders) => from(transformation(folders)))\n    );\n  }\n\n  async buildCollections(organizationId?: string): Promise<DynamicTreeNode<CollectionView>> {\n    const storedCollections = await this.collectionService.getAllDecrypted();\n    let collections: CollectionView[];\n    if (organizationId != null) {\n      collections = storedCollections.filter((c) => c.organizationId === organizationId);\n    } else {\n      collections = storedCollections;\n    }\n    const nestedCollections = await this.collectionService.getAllNested(collections);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: collections,\n      nestedList: nestedCollections,\n    });\n  }\n\n  async checkForSingleOrganizationPolicy(): Promise<boolean> {\n    return await this.policyService.policyAppliesToUser(PolicyType.SingleOrg);\n  }\n\n  async checkForPersonalOwnershipPolicy(): Promise<boolean> {\n    return await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership);\n  }\n\n  protected async getAllFoldersNested(folders: FolderView[]): Promise<TreeNode<FolderView>[]> {\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getFolderNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllFoldersNested(\n      await firstValueFrom(this.folderService.folderViews$)\n    );\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n}\n","import { Verification } from \"../../types/verification\";\n\nexport abstract class AccountService {\n  abstract delete(verification: Verification): Promise<any>;\n}\n","import { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { DeviceVerificationRequest } from \"../models/request/deviceVerificationRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationConnectionRequest } from \"../models/request/organizationConnectionRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingHistoryResponse } from \"../models/response/billingHistoryResponse\";\nimport { BillingPaymentResponse } from \"../models/response/billingPaymentResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DeviceVerificationResponse } from \"../models/response/deviceVerificationResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organizationConnectionResponse\";\nimport { OrganizationExportResponse } from \"../models/response/organizationExportResponse\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organizationSponsorshipSyncStatusResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SsoPreValidateResponse } from \"../models/response/ssoPreValidateResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport abstract class ApiService {\n  send: (\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ) => Promise<any>;\n\n  postIdentityToken: (\n    request: PasswordTokenRequest | SsoTokenRequest | ApiTokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<any>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<void>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postConvertToKeyConnector: () => Promise<void>;\n\n  getUserBillingHistory: () => Promise<BillingHistoryResponse>;\n  getUserBillingPayment: () => Promise<BillingPaymentResponse>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getFullCipherDetails: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n  postImportOrganizationCiphers: (\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getCollectionDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionGroupDetailsResponse>;\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n  getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroup: (organizationId: string, id: string) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getOrganizationUser: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserDetailsResponse>;\n  getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n  getOrganizationUsers: (\n    organizationId: string\n  ) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n  getOrganizationUserResetPasswordDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserResetPasswordDetailsReponse>;\n  postOrganizationUserInvite: (\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ) => Promise<any>;\n  postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n  postManyOrganizationUserReinvite: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  postOrganizationUserAccept: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ) => Promise<any>;\n  postOrganizationUserConfirm: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ) => Promise<any>;\n  postOrganizationUsersPublicKey: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n  postOrganizationUserBulkConfirm: (\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  putOrganizationUser: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ) => Promise<any>;\n  putOrganizationUserGroups: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPasswordEnrollment: (\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ) => Promise<void>;\n  putOrganizationUserResetPassword: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ) => Promise<any>;\n  deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  revokeOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  revokeManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  restoreOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  restoreManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  getSync: () => Promise<SyncResponse>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n  getDeviceVerificationSettings: () => Promise<DeviceVerificationResponse>;\n  putDeviceVerificationSettings: (\n    request: DeviceVerificationRequest\n  ) => Promise<DeviceVerificationResponse>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n  getCloudCommunicationsEnabled: () => Promise<boolean>;\n  abstract getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId: string\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  deleteOrganizationConnection: (id: string) => Promise<void>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<void>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<SsoPreValidateResponse>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  getSponsorshipSyncStatus: (\n    sponsoredOrgId: string\n  ) => Promise<OrganizationSponsorshipSyncStatusResponse>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n  getOrganizationExport: (organizationId: string) => Promise<OrganizationExportResponse>;\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\n\nexport abstract class AuthService {\n  masterPasswordHash: string;\n  email: string;\n  logIn: (\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ) => Promise<AuthResult>;\n  logOut: (callback: () => void) => void;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n  getAuthStatus: (userId?: string) => Promise<AuthenticationStatus>;\n}\n","export interface MessageBase {\n  command: string;\n}\n\nexport abstract class BroadcasterService {\n  send: (message: MessageBase, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: MessageBase) => void) => void;\n  unsubscribe: (id: string) => void;\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  saveWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: any, b: any) => number;\n  sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  getKeyForUserEncryption: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuffer: EncArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","import { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n  scim?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  getScimUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n  isCloud: () => boolean;\n}\n","import { EventType } from \"../enums/eventType\";\n\nexport abstract class EventService {\n  collect: (\n    eventType: EventType,\n    cipherId?: string,\n    uploadImmediately?: boolean,\n    organizationId?: string\n  ) => Promise<any>;\n  uploadEvents: (userId?: string) => Promise<any>;\n  clearEvents: (userId?: string) => Promise<any>;\n}\n","import { EventView } from \"../models/view/eventView\";\n\nexport type ExportFormat = \"csv\" | \"json\" | \"encrypted_json\";\n\nexport abstract class ExportService {\n  getExport: (format?: ExportFormat, organizationId?: string) => Promise<string>;\n  getPasswordProtectedExport: (password: string, organizationId?: string) => Promise<string>;\n  getOrganizationExport: (organizationId: string, format?: ExportFormat) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport abstract class FileDownloadService {\n  download: (request: FileDownloadRequest) => void;\n}\n","import { Folder } from \"@bitwarden/common/models/domain/folder\";\nimport { FolderResponse } from \"@bitwarden/common/models/response/folderResponse\";\n\nexport class FolderApiServiceAbstraction {\n  save: (folder: Folder) => Promise<any>;\n  delete: (id: string) => Promise<any>;\n  get: (id: string) => Promise<FolderResponse>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { FolderData } from \"../../models/data/folderData\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { FolderView } from \"../../models/view/folderView\";\n\nexport abstract class FolderService {\n  folders$: Observable<Folder[]>;\n  folderViews$: Observable<FolderView[]>;\n\n  clearCache: () => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n  /**\n   * @deprecated Only use in CLI!\n   */\n  getAllDecryptedFromState: () => Promise<FolderView[]>;\n}\n\nexport abstract class InternalFolderService extends FolderService {\n  upsert: (folder: FolderData | FolderData[]) => Promise<void>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<void>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { AbstractControl } from \"@angular/forms\";\nexport interface AllValidationErrors {\n  controlName: string;\n  errorName: string;\n}\n\nexport interface FormGroupControls {\n  [key: string]: AbstractControl;\n}\n\nexport abstract class FormValidationErrorsService {\n  getFormValidationErrors: (controls: FormGroupControls) => AllValidationErrors[];\n}\n","import { Observable } from \"rxjs\";\n\nexport abstract class I18nService {\n  locale$: Observable<string>;\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { Organization } from \"../models/domain/organization\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  convertNewSsoUserToKeyConnector: (\n    tokenResponse: IdentityTokenResponse,\n    orgId: string\n  ) => Promise<void>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","import { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport abstract class OrganizationService {\n  get: (id: string) => Promise<Organization>;\n  getByIdentifier: (identifier: string) => Promise<Organization>;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  save: (orgs: { [id: string]: OrganizationData }) => Promise<any>;\n  canManageSponsorships: () => Promise<boolean>;\n  hasOrganizations: (userId?: string) => Promise<boolean>;\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\nimport { ImportDirectoryRequest } from \"../../models/request/importDirectoryRequest\";\nimport { OrganizationSsoRequest } from \"../../models/request/organization/organizationSsoRequest\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organizationApiKeyRequest\";\nimport { OrganizationCreateRequest } from \"../../models/request/organizationCreateRequest\";\nimport { OrganizationKeysRequest } from \"../../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organizationUpgradeRequest\";\nimport { PaymentRequest } from \"../../models/request/paymentRequest\";\nimport { SeatRequest } from \"../../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../../models/request/secretVerificationRequest\";\nimport { StorageRequest } from \"../../models/request/storageRequest\";\nimport { VerifyBankRequest } from \"../../models/request/verifyBankRequest\";\nimport { ApiKeyResponse } from \"../../models/response/apiKeyResponse\";\nimport { BillingResponse } from \"../../models/response/billingResponse\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../../models/response/organization/organizationSsoResponse\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organizationApiKeyInformationResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organizationSubscriptionResponse\";\nimport { PaymentResponse } from \"../../models/response/paymentResponse\";\nimport { TaxInfoResponse } from \"../../models/response/taxInfoResponse\";\n\nexport class OrganizationApiServiceAbstraction {\n  get: (id: string) => Promise<OrganizationResponse>;\n  getBilling: (id: string) => Promise<BillingResponse>;\n  getSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getLicense: (id: string, installationId: string) => Promise<unknown>;\n  getAutoEnrollStatus: (identifier: string) => Promise<OrganizationAutoEnrollStatusResponse>;\n  create: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  createLicense: (data: FormData) => Promise<OrganizationResponse>;\n  save: (id: string, request: OrganizationUpdateRequest) => Promise<OrganizationResponse>;\n  updatePayment: (id: string, request: PaymentRequest) => Promise<void>;\n  upgrade: (id: string, request: OrganizationUpgradeRequest) => Promise<PaymentResponse>;\n  updateSubscription: (id: string, request: OrganizationSubscriptionUpdateRequest) => Promise<void>;\n  updateSeats: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  updateStorage: (id: string, request: StorageRequest) => Promise<PaymentResponse>;\n  verifyBank: (id: string, request: VerifyBankRequest) => Promise<void>;\n  cancel: (id: string) => Promise<void>;\n  reinstate: (id: string) => Promise<void>;\n  leave: (id: string) => Promise<void>;\n  delete: (id: string, request: SecretVerificationRequest) => Promise<void>;\n  updateLicense: (id: string, data: FormData) => Promise<void>;\n  importDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<void>;\n  getOrCreateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getApiKeyInformation: (\n    id: string,\n    organizationApiKeyType?: OrganizationApiKeyType\n  ) => Promise<ListResponse<OrganizationApiKeyInformationResponse>>;\n  rotateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  updateTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<void>;\n  getKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  updateKeys: (id: string, request: OrganizationKeysRequest) => Promise<OrganizationKeysResponse>;\n  getSso: (id: string) => Promise<OrganizationSsoResponse>;\n  updateSso: (id: string, request: OrganizationSsoRequest) => Promise<OrganizationSsoResponse>;\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\n\nexport abstract class PasswordGenerationService {\n  generatePassword: (options: any) => Promise<string>;\n  generatePassphrase: (options: any) => Promise<string>;\n  getOptions: () => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: any\n  ) => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: any) => Promise<any>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) => void;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","import { ClientType } from \"../enums/clientType\";\nimport { DeviceType } from \"../enums/deviceType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  getClientType: () => ClientType;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  getApplicationVersion: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  supportsSecureStorage: () => boolean;\n}\n","import { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nexport class PolicyApiServiceAbstraction {\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPolicyForOrganization: (policyType: PolicyType, organizationId: string) => Promise<Policy>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  putPolicy: (organizationId: string, type: PolicyType, request: PolicyRequest) => Promise<any>;\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { PolicyResponse } from \"../../models/response/policyResponse\";\n\nexport abstract class PolicyService {\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n\n  getMasterPasswordPolicyOptions: (policies?: Policy[]) => Promise<MasterPasswordPolicyOptions>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n\nexport abstract class InternalPolicyService extends PolicyService {\n  upsert: (policy: PolicyData) => Promise<any>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n}\n","import { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","import { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { AccountSettingsSettings } from \"../models/domain/account\";\n\nexport abstract class SettingsService {\n  settings$: Observable<AccountSettingsSettings>;\n\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  clear: (userId?: string) => Promise<void>;\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { LocalData } from \"../models/data/localData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { ServerConfigData } from \"../models/data/server-config.data\";\nimport { Account, AccountSettingsSettings } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts: BehaviorSubject<{ [userId: string]: T }>;\n  activeAccount$: Observable<string>;\n  activeAccountUnlocked$: Observable<boolean>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<any>;\n  setAddEditCipherInfo: (value: any, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getHasPremiumPersonally: (options?: StorageOptions) => Promise<boolean>;\n  setHasPremiumPersonally: (value: boolean, options?: StorageOptions) => Promise<void>;\n  setHasPremiumFromOrganization: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getHasPremiumFromOrganization: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<string[]>;\n  setCollapsedGroupings: (value: string[], options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecodedToken: (options?: StorageOptions) => Promise<any>;\n  setDecodedToken: (value: any, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableGravitars: (options?: StorageOptions) => Promise<boolean>;\n  setEnableGravitars: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<{ [orgId: string]: EncryptedOrganizationKeyData }>;\n  setEncryptedOrganizationKeys: (\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<any>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfIterations: (options?: StorageOptions) => Promise<number>;\n  setKdfIterations: (value: number, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<{ [cipherId: string]: LocalData }>;\n  setLocalData: (\n    value: { [cipherId: string]: LocalData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getUsernameGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setUsernameGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getGeneratorOptions: (options?: StorageOptions) => Promise<any>;\n  setGeneratorOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use SettingsService\n   */\n  getSettings: (options?: StorageOptions) => Promise<AccountSettingsSettings>;\n  /**\n   * @deprecated Do not call this directly, use SettingsService\n   */\n  setSettings: (value: AccountSettingsSettings, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use ConfigService\n   */\n  getServerConfig: (options?: StorageOptions) => Promise<ServerConfigData>;\n  /**\n   * @deprecated Do not call this directly, use ConfigService\n   */\n  setServerConfig: (value: ServerConfigData, options?: StorageOptions) => Promise<void>;\n}\n","import { Observable } from \"rxjs\";\n\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../../models/response/notificationResponse\";\nimport { SyncEventArgs } from \"../../types/syncEventArgs\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  sync$: Observable<SyncEventArgs>;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  setTwoFactorToken: (tokenResponse: IdentityTokenResponse) => Promise<any>;\n  getTwoFactorToken: () => Promise<string>;\n  clearTwoFactorToken: () => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n}\n","import { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport interface TwoFactorProviderDetails {\n  type: TwoFactorProviderType;\n  name: string;\n  description: string;\n  priority: number;\n  sort: number;\n  premium: boolean;\n}\n\nexport abstract class TwoFactorService {\n  init: () => void;\n  getSupportedProviders: (win: Window) => TwoFactorProviderDetails[];\n  getDefaultProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  setSelectedProvider: (type: TwoFactorProviderType) => void;\n  clearSelectedProvider: () => void;\n\n  setProviders: (response: IdentityTwoFactorResponse) => void;\n  clearProviders: () => void;\n  getProviders: () => Map<TwoFactorProviderType, { [key: string]: string }>;\n}\n","import { SecretVerificationRequest } from \"../../models/request/secretVerificationRequest\";\nimport { Verification } from \"../../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","export abstract class UsernameGenerationService {\n  generateUsername: (options: any) => Promise<string>;\n  generateWord: (options: any) => Promise<string>;\n  generateSubaddress: (options: any) => Promise<string>;\n  generateCatchall: (options: any) => Promise<string>;\n  generateForwarded: (options: any) => Promise<string>;\n  getOptions: () => Promise<any>;\n  saveOptions: (options: any) => Promise<void>;\n}\n","export abstract class VaultTimeoutService {\n  checkVaultTimeout: () => Promise<void>;\n  lock: (userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n}\n","export abstract class VaultTimeoutSettingsService {\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: (userId?: string) => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<void>;\n}\n","export enum AuthenticationStatus {\n  LoggedOut = 0,\n  Locked = 1,\n  Unlocked = 2,\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  Api = 2,\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n  OrganizationUser_Revoked = 1511,\n  OrganizationUser_Restored = 1512,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n  Organization_SponsorshipsSynced = 1608,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const DEFAULT_KDF_ITERATIONS = 100000;\nexport const SEND_KDF_ITERATIONS = 100000;\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","export enum OrganizationApiKeyType {\n  Default = 0,\n  BillingSync = 1,\n  Scim = 2,\n}\n","export enum OrganizationConnectionType {\n  CloudBillingSync = 1,\n  Scim = 2,\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1,\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","export enum PaymentMethodType {\n  Card = 0,\n  BankAccount = 1,\n  PayPal = 2,\n  BitPay = 3,\n  Credit = 4,\n  WireTransfer = 5,\n  AppleInApp = 6,\n  GoogleInApp = 7,\n  Check = 8,\n}\n","export enum PlanType {\n  Free = 0,\n  FamiliesAnnually2019 = 1,\n  TeamsMonthly2019 = 2,\n  TeamsAnnually2019 = 3,\n  EnterpriseMonthly2019 = 4,\n  EnterpriseAnnually2019 = 5,\n  Custom = 6,\n  FamiliesAnnually = 7,\n  TeamsMonthly = 8,\n  TeamsAnnually = 9,\n  EnterpriseMonthly = 10,\n  EnterpriseAnnually = 11,\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1, // Not used, compile-time support only\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../models/view/itemView\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/treeNode\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","export function getDomain(host: string): string | null {\n  return null;\n}\n\nexport function isValid(host: string): boolean {\n  return true;\n}\n","/* eslint-disable no-useless-escape */\nimport * as tldjs from \"tldjs\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\n\nimport { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\ndeclare global {\n  /* eslint-disable-next-line no-var */\n  var bitwardenContainerService: BitwardenContainerService;\n}\n\ninterface BitwardenContainerService {\n  getCryptoService: () => CryptoService;\n  getEncryptService: () => AbstractEncryptService;\n}\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: typeof global = null;\n  static tldEndingRegex =\n    /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n\n    if (Utils.isNode) {\n      Utils.global = global;\n    } else if (Utils.isBrowser) {\n      Utils.global = window;\n    } else {\n      // If it's not browser or node then it must be a service worker\n      Utils.global = self;\n    }\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = Utils.global.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return Utils.global.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.hostname !== \"\" ? url.hostname : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    let httpUrl = uriString.startsWith(\"http://\") || uriString.startsWith(\"https://\");\n    if (\n      !httpUrl &&\n      uriString.indexOf(\"://\") < 0 &&\n      Utils.tldEndingRegex.test(uriString) &&\n      uriString.indexOf(\"@\") < 0\n    ) {\n      uriString = \"http://\" + uriString;\n      httpUrl = true;\n    }\n\n    if (httpUrl) {\n      try {\n        const url = Utils.getUrlObject(uriString);\n        const validHostname = tldjs?.isValid != null ? tldjs.isValid(url.hostname) : true;\n        if (!validHostname) {\n          return null;\n        }\n\n        if (url.hostname === \"localhost\" || Utils.validIpAddress(url.hostname)) {\n          return url.hostname;\n        }\n\n        const urlDomain =\n          tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n        return urlDomain != null ? urlDomain : url.hostname;\n      } catch (e) {\n        // Invalid domain, try another approach below.\n      }\n    }\n\n    try {\n      const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n      if (domain != null) {\n        return domain;\n      }\n    } catch {\n      return null;\n    }\n\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction(i18nService: I18nService, prop: string) {\n    return (a: any, b: any) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop], b[prop])\n        : a[prop].localeCompare(b[prop]);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  /**\n   * There are a few ways to calculate text color for contrast, this one seems to fit accessibility guidelines best.\n   * https://stackoverflow.com/a/3943023/6869691\n   *\n   * @param {string} bgColor\n   * @param {number} [threshold] see stackoverflow link above\n   * @param {boolean} [svgTextFill]\n   * Indicates if this method is performed on an SVG <text> 'fill' attribute (e.g. <text fill=\"black\"></text>).\n   * This check is necessary because the '!important' tag cannot be used in a 'fill' attribute.\n   */\n  static pickTextColorBasedOnBgColor(bgColor: string, threshold = 186, svgTextFill = false) {\n    const bgColorHexNums = bgColor.charAt(0) === \"#\" ? bgColor.substring(1, 7) : bgColor;\n    const r = parseInt(bgColorHexNums.substring(0, 2), 16); // hexToR\n    const g = parseInt(bgColorHexNums.substring(2, 4), 16); // hexToG\n    const b = parseInt(bgColorHexNums.substring(4, 6), 16); // hexToB\n    const blackColor = svgTextFill ? \"black\" : \"black !important\";\n    const whiteColor = svgTextFill ? \"white\" : \"white !important\";\n    return r * 0.299 + g * 0.587 + b * 0.114 > threshold ? blackColor : whiteColor;\n  }\n\n  static stringToColor(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return color;\n  }\n\n  /**\n   * @throws Will throw an error if the ContainerService has not been attached to the window object\n   */\n  static getContainerService(): BitwardenContainerService {\n    if (this.global.bitwardenContainerService == null) {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n    return this.global.bitwardenContainerService;\n  }\n\n  private static validIpAddress(ipString: string): boolean {\n    const ipRegex =\n      /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return ipRegex.test(ipString);\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (typeof window !== \"undefined\") {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { LoginUriApi } from \"./loginUriApi\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n  manageScim: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n    this.manageScim = this.getResponseProperty(\"ManageScim\");\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { BaseResponse } from \"../response/baseResponse\";\nimport { SsoConfigView } from \"../view/ssoConfigView\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: string;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { AttachmentResponse } from \"../response/attachmentResponse\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/cardApi\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherResponse } from \"../response/cipherResponse\";\n\nimport { AttachmentData } from \"./attachmentData\";\nimport { CardData } from \"./cardData\";\nimport { FieldData } from \"./fieldData\";\nimport { IdentityData } from \"./identityData\";\nimport { LoginData } from \"./loginData\";\nimport { PasswordHistoryData } from \"./passwordHistoryData\";\nimport { SecureNoteData } from \"./secureNoteData\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collectionResponse\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldApi } from \"../api/fieldApi\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { IdentityApi } from \"../api/identityApi\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { LoginApi } from \"../api/loginApi\";\n\nimport { LoginUriData } from \"./loginUriData\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/passwordHistoryResponse\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policyResponse\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { Utils } from \"../../misc/utils\";\nimport { AttachmentData } from \"../data/attachmentData\";\nimport { AttachmentView } from \"../view/attachmentView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string; // Readable size, ex: \"4.2 KB\" or \"1.43 GB\"\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      view.key = await this.decryptAttachmentKey(orgId, encKey);\n    }\n\n    return view;\n  }\n\n  private async decryptAttachmentKey(orgId: string, encKey?: SymmetricCryptoKey) {\n    try {\n      if (encKey == null) {\n        encKey = await this.getKeyForDecryption(orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      const decValue = await encryptService.decryptToBytes(this.key, encKey);\n      return new SymmetricCryptoKey(decValue);\n    } catch (e) {\n      // TODO: error?\n    }\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n}\n","import { CardData } from \"../data/cardData\";\nimport { CardView } from \"../view/cardView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { LocalData } from \"../data/localData\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secureNote\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Cipher extends Domain {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: LocalData;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, localData: LocalData = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      [\"id\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n}\n","import { CollectionData } from \"../data/collectionData\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import { EncryptionType } from \"@bitwarden/common/enums/encryptionType\";\nimport { IEncrypted } from \"@bitwarden/common/interfaces/IEncrypted\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nconst ENC_TYPE_LENGTH = 1;\nconst IV_LENGTH = 16;\nconst MAC_LENGTH = 32;\nconst MIN_DATA_LENGTH = 1;\n\nexport class EncArrayBuffer implements IEncrypted {\n  readonly encryptionType: EncryptionType = null;\n  readonly dataBytes: ArrayBuffer = null;\n  readonly ivBytes: ArrayBuffer = null;\n  readonly macBytes: ArrayBuffer = null;\n\n  constructor(readonly buffer: ArrayBuffer) {\n    const encBytes = new Uint8Array(buffer);\n    const encType = encBytes[0];\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.macBytes = encBytes.slice(\n          ENC_TYPE_LENGTH + IV_LENGTH,\n          ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH\n        ).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH).buffer;\n        break;\n      }\n      case EncryptionType.AesCbc256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        break;\n      }\n      default:\n        this.throwDecryptionError();\n    }\n\n    this.encryptionType = encType;\n  }\n\n  private throwDecryptionError() {\n    throw new Error(\n      \"Error parsing encrypted ArrayBuffer: data is corrupted or has an invalid format.\"\n    );\n  }\n\n  static async fromResponse(response: {\n    arrayBuffer: () => Promise<ArrayBuffer>;\n  }): Promise<EncArrayBuffer> {\n    const buffer = await response.arrayBuffer();\n    if (buffer == null) {\n      throw new Error(\"Cannot create EncArrayBuffer from Response - Response is empty\");\n    }\n    return new EncArrayBuffer(buffer);\n  }\n\n  static fromB64(b64: string) {\n    const buffer = Utils.fromB64ToArray(b64).buffer;\n    return new EncArrayBuffer(buffer);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IEncrypted } from \"@bitwarden/common/interfaces/IEncrypted\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncString implements IEncrypted {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      this.initFromData(encryptedStringOrType as EncryptionType, data, iv, mac);\n    } else {\n      this.initFromEncryptedString(encryptedStringOrType as string);\n    }\n  }\n\n  get ivBytes(): ArrayBuffer {\n    return this.iv == null ? null : Utils.fromB64ToArray(this.iv).buffer;\n  }\n\n  get macBytes(): ArrayBuffer {\n    return this.mac == null ? null : Utils.fromB64ToArray(this.mac).buffer;\n  }\n\n  get dataBytes(): ArrayBuffer {\n    return this.data == null ? null : Utils.fromB64ToArray(this.data).buffer;\n  }\n\n  toJSON() {\n    return this.encryptedString;\n  }\n\n  static fromJSON(obj: Jsonify<EncString>): EncString {\n    return new EncString(obj);\n  }\n\n  private initFromData(encType: EncryptionType, data: string, iv: string, mac: string) {\n    if (iv != null) {\n      this.encryptedString = encType + \".\" + iv + \"|\" + data;\n    } else {\n      this.encryptedString = encType + \".\" + data;\n    }\n\n    // mac\n    if (mac != null) {\n      this.encryptedString += \"|\" + mac;\n    }\n\n    this.encryptionType = encType;\n    this.data = data;\n    this.iv = iv;\n    this.mac = mac;\n  }\n\n  private initFromEncryptedString(encryptedString: string) {\n    this.encryptedString = encryptedString as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const { encType, encPieces } = this.parseEncryptedString(this.encryptedString);\n    this.encryptionType = encType;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  private parseEncryptedString(encryptedString: string): {\n    encType: EncryptionType;\n    encPieces: string[];\n  } {\n    const headerPieces = encryptedString.split(\".\");\n    let encType: EncryptionType;\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = encryptedString.split(\"|\");\n      encType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    return {\n      encType,\n      encPieces,\n    };\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    try {\n      if (key == null) {\n        key = await this.getKeyForDecryption(orgId);\n      }\n      if (key == null) {\n        throw new Error(\"No key to decrypt EncString with orgId \" + orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      this.decryptedValue = await encryptService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldData } from \"../data/fieldData\";\nimport { FieldView } from \"../view/fieldView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FolderData } from \"../data/folderData\";\nimport { FolderView } from \"../view/folderView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n\n  static fromJSON(obj: Jsonify<Folder>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new Folder(), obj, { name: EncString.fromJSON(obj.name), revisionDate });\n  }\n}\n","import { IdentityData } from \"../data/identityData\";\nimport { IdentityView } from \"../view/identityView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n}\n","import { LoginData } from \"../data/loginData\";\nimport { LoginView } from \"../view/loginView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { LoginUri } from \"./loginUri\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriData } from \"../data/loginUriData\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n        match: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { OrganizationData } from \"../data/organizationData\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useScim = obj.useScim;\n    this.useResetPassword = obj.useResetPassword;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = obj.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = obj.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = obj.familySponsorshipToDelete;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return (this.isAdmin || this.permissions.accessEventLogs) && this.useEvents;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return (this.isAdmin || this.permissions.manageGroups) && this.useGroups;\n  }\n\n  get canManageSso() {\n    return (this.isAdmin || this.permissions.manageSso) && this.useSso;\n  }\n\n  get canManageScim() {\n    return (this.isAdmin || this.permissions.manageScim) && this.useScim;\n  }\n\n  get canManagePolicies() {\n    return (this.isAdmin || this.permissions.managePolicies) && this.usePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n\n  get canManageBilling() {\n    return this.isOwner && (this.isProviderUser || !this.hasProvider);\n  }\n\n  get hasProvider() {\n    return this.providerId != null || this.providerName != null;\n  }\n}\n","import { PasswordHistoryData } from \"../data/passwordHistoryData\";\nimport { PasswordHistoryView } from \"../view/passwordHistoryView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(this, obj, {\n      password: null,\n    });\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policyData\";\n\nimport Domain from \"./domainBase\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteData } from \"../data/secureNoteData\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nimport Domain from \"./domainBase\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n}\n","import { SendFileData } from \"../data/sendFileData\";\nimport { SendFileView } from \"../view/sendFileView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/sendTextData\";\nimport { SendTextView } from \"../view/sendTextView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n\n  toJSON() {\n    // The whole object is constructed from the initial key, so just store the B64 key\n    return { keyB64: this.keyB64 };\n  }\n\n  static fromJSON(obj: Jsonify<SymmetricCryptoKey>): SymmetricCryptoKey {\n    if (obj == null) {\n      return null;\n    }\n\n    const arrayBuffer = Utils.fromB64ToArray(obj.keyB64).buffer;\n    return new SymmetricCryptoKey(arrayBuffer);\n  }\n}\n","import { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/encString\";\nimport { CardView } from \"../view/cardView\";\n\nexport class CardExport {\n  static template(): CardExport {\n    const req = new CardExport();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: CardExport, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: CardExport, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { EncString } from \"../domain/encString\";\nimport { Field as FieldDomain } from \"../domain/field\";\nimport { FieldView } from \"../view/fieldView\";\n\nexport class FieldExport {\n  static template(): FieldExport {\n    const req = new FieldExport();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: FieldExport, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: FieldExport, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\nimport { IdentityView } from \"../view/identityView\";\n\nexport class IdentityExport {\n  static template(): IdentityExport {\n    const req = new IdentityExport();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: IdentityExport, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: IdentityExport, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { EncString } from \"../domain/encString\";\nimport { LoginUri as LoginUriDomain } from \"../domain/loginUri\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nexport class LoginUriExport {\n  static template(): LoginUriExport {\n    const req = new LoginUriExport();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUriExport, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUriExport, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Login as LoginDomain } from \"../domain/login\";\nimport { LoginView } from \"../view/loginView\";\n\nimport { LoginUriExport } from \"./loginUriExport\";\n\nexport class LoginExport {\n  static template(): LoginExport {\n    const req = new LoginExport();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: LoginExport, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUriExport.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: LoginExport, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUriExport.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUriExport[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../domain/secureNote\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nexport class SecureNoteExport {\n  static template(): SecureNoteExport {\n    const req = new SecureNoteExport();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNoteExport, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNoteExport, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/encString\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { CardExport } from \"./cardExport\";\nimport { FieldExport } from \"./fieldExport\";\nimport { IdentityExport } from \"./identityExport\";\nimport { LoginExport } from \"./loginExport\";\nimport { SecureNoteExport } from \"./secureNoteExport\";\n\nexport class CipherExport {\n  static template(): CipherExport {\n    const req = new CipherExport();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: CipherExport, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => FieldExport.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = LoginExport.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteExport.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = CardExport.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityExport.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: CipherExport, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => FieldExport.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = LoginExport.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNoteExport.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = CardExport.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = IdentityExport.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: FieldExport[];\n  login: LoginExport;\n  secureNote: SecureNoteExport;\n  card: CardExport;\n  identity: IdentityExport;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      } else {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new LoginExport(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteExport(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardExport(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityExport(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { CipherExport } from \"./cipherExport\";\n\nexport class CipherWithIdExport extends CipherExport {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/encString\";\nimport { CollectionView } from \"../view/collectionView\";\n\nexport class CollectionExport {\n  static template(): CollectionExport {\n    const req = new CollectionExport();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: CollectionExport, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: CollectionExport, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport { CollectionExport } from \"./collectionExport\";\n\nexport class CollectionWithIdExport extends CollectionExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nexport class FolderExport {\n  static template(): FolderExport {\n    const req = new FolderExport();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: FolderExport, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: FolderExport, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nimport { FolderExport } from \"./folderExport\";\n\nexport class FolderWithIdExport extends FolderExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachmentRequest\";\nimport { PasswordHistoryRequest } from \"./passwordHistoryRequest\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","import { TwoFactorProviderType } from \"../../../enums/twoFactorProviderType\";\n\nexport class TokenRequestTwoFactor {\n  constructor(\n    public provider: TwoFactorProviderType = null,\n    public token: string = null,\n    public remember: boolean = false\n  ) {}\n}\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class OrganizationApiKeyRequest extends SecretVerificationRequest {\n  type: OrganizationApiKeyType = OrganizationApiKeyType.Default;\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\n\nimport { BillingSyncConfigRequest } from \"./billingSyncConfigRequest\";\nimport { ScimConfigRequest } from \"./scimConfigRequest\";\n\n/**API request config types for OrganizationConnectionRequest */\nexport type OrganizationConnectionRequestConfigs = BillingSyncConfigRequest | ScimConfigRequest;\n\nexport class OrganizationConnectionRequest {\n  constructor(\n    public organizationId: string,\n    public type: OrganizationConnectionType,\n    public enabled: boolean,\n    public config: OrganizationConnectionRequestConfigs\n  ) {}\n}\n","import { KeysRequest } from \"./keysRequest\";\n\nexport class OrganizationKeysRequest extends KeysRequest {\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    super(publicKey, encryptedPrivateKey);\n  }\n}\n","import { TaxInfoUpdateRequest } from \"./taxInfoUpdateRequest\";\n\nexport class OrganizationTaxInfoUpdateRequest extends TaxInfoUpdateRequest {\n  taxId: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export class TaxInfoUpdateRequest {\n  country: string;\n  postalCode: string;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n  deviceIdentifier: string;\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nimport { AttachmentResponse } from \"./attachmentResponse\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { PasswordHistoryResponse } from \"./passwordHistoryResponse\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (status === 429) {\n      this.message = \"Rate limit exceeded. Try again later.\";\n    } else if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { View } from \"./view\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<AttachmentView>>): AttachmentView {\n    const key = obj.key == null ? null : SymmetricCryptoKey.fromJSON(obj.key);\n    return Object.assign(new AttachmentView(), obj, { key: key });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CardView>>): CardView {\n    return Object.assign(new CardView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { LocalData } from \"../data/localData\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachmentView\";\nimport { CardView } from \"./cardView\";\nimport { FieldView } from \"./fieldView\";\nimport { IdentityView } from \"./identityView\";\nimport { LoginView } from \"./loginView\";\nimport { PasswordHistoryView } from \"./passwordHistoryView\";\nimport { SecureNoteView } from \"./secureNoteView\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View {\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: LocalData;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CipherView>>): CipherView {\n    const view = new CipherView();\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => AttachmentView.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => FieldView.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => PasswordHistoryView.fromJSON(ph));\n\n    Object.assign(view, obj, {\n      revisionDate: revisionDate,\n      deletedDate: deletedDate,\n      attachments: attachments,\n      fields: fields,\n      passwordHistory: passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        view.card = CardView.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityView.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        view.login = LoginView.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteView.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return view;\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\nimport { CollectionGroupDetailsResponse } from \"../response/collectionResponse\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field } from \"../domain/field\";\n\nimport { View } from \"./view\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<FieldView>>): FieldView {\n    return Object.assign(new FieldView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\n\nimport { View } from \"./view\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n\n  static fromJSON(obj: Jsonify<FolderView>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new FolderView(), obj, { revisionDate });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<IdentityView>>): IdentityView {\n    return Object.assign(new IdentityView(), obj);\n  }\n}\n","import { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { View } from \"./view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { LoginUri } from \"../domain/loginUri\";\n\nimport { View } from \"./view\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginUriView>>): LoginUriView {\n    return Object.assign(new LoginUriView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./itemView\";\nimport { LoginUriView } from \"./loginUriView\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginView>>): LoginView {\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUriView.fromJSON(uri));\n\n    return Object.assign(new LoginView(), obj, {\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Password } from \"../domain/password\";\n\nimport { View } from \"./view\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<PasswordHistoryView>>): PasswordHistoryView {\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new PasswordHistoryView(), obj, {\n      lastUsedDate: lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secureNote\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<SecureNoteView>>): SecureNoteView {\n    return Object.assign(new SecureNoteView(), obj);\n  }\n}\n","import { SendFile } from \"../domain/sendFile\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { SendText } from \"../domain/sendText\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","import { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","import { Directive, ElementRef, HostBinding, Input } from \"@angular/core\";\n\ntype BadgeTypes = \"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\";\n\nconst styles: Record<BadgeTypes, string[]> = {\n  primary: [\"tw-bg-primary-500\"],\n  secondary: [\"tw-bg-text-muted\"],\n  success: [\"tw-bg-success-500\"],\n  danger: [\"tw-bg-danger-500\"],\n  warning: [\"tw-bg-warning-500\"],\n  info: [\"tw-bg-info-500\"],\n};\n\nconst hoverStyles: Record<BadgeTypes, string[]> = {\n  primary: [\"hover:tw-bg-primary-700\"],\n  secondary: [\"hover:tw-bg-secondary-700\"],\n  success: [\"hover:tw-bg-success-700\"],\n  danger: [\"hover:tw-bg-danger-700\"],\n  warning: [\"hover:tw-bg-warning-700\"],\n  info: [\"hover:tw-bg-info-700\"],\n};\n\n@Directive({\n  selector: \"span[bitBadge], a[bitBadge], button[bitBadge]\",\n})\nexport class BadgeDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-inline\",\n      \"tw-py-0.5\",\n      \"tw-px-1.5\",\n      \"tw-font-bold\",\n      \"tw-text-center\",\n      \"!tw-text-contrast\",\n      \"tw-rounded\",\n      \"tw-border-none\",\n      \"tw-box-border\",\n      \"tw-whitespace-no-wrap\",\n      \"tw-text-xs\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n      \"focus:tw-ring\",\n      \"focus:tw-ring-offset-2\",\n      \"focus:tw-ring-primary-700\",\n    ]\n      .concat(styles[this.badgeType])\n      .concat(this.hasHoverEffects ? hoverStyles[this.badgeType] : []);\n  }\n\n  @Input() badgeType: BadgeTypes = \"primary\";\n\n  private hasHoverEffects = false;\n\n  constructor(el: ElementRef<Element>) {\n    this.hasHoverEffects = el?.nativeElement?.nodeName != \"SPAN\";\n  }\n}\n","import { Input, HostBinding, Directive } from \"@angular/core\";\n\nexport type ButtonTypes = \"primary\" | \"secondary\" | \"danger\";\n\nconst buttonStyles: Record<ButtonTypes, string[]> = {\n  primary: [\n    \"tw-border-primary-500\",\n    \"tw-bg-primary-500\",\n    \"!tw-text-contrast\",\n    \"hover:tw-bg-primary-700\",\n    \"hover:tw-border-primary-700\",\n    \"focus:tw-bg-primary-700\",\n    \"focus:tw-border-primary-700\",\n    \"disabled:tw-bg-primary-500/60\",\n    \"disabled:tw-border-primary-500/60\",\n    \"disabled:!tw-text-contrast/60\",\n    \"disabled:tw-bg-clip-padding\",\n  ],\n  secondary: [\n    \"tw-bg-transparent\",\n    \"tw-border-text-muted\",\n    \"!tw-text-muted\",\n    \"hover:tw-bg-secondary-500\",\n    \"hover:tw-border-secondary-500\",\n    \"hover:!tw-text-contrast\",\n    \"focus:tw-bg-secondary-500\",\n    \"focus:tw-border-secondary-500\",\n    \"focus:!tw-text-contrast\",\n    \"disabled:tw-bg-transparent\",\n    \"disabled:tw-border-text-muted/60\",\n    \"disabled:!tw-text-muted/60\",\n  ],\n  danger: [\n    \"tw-bg-transparent\",\n    \"tw-border-danger-500\",\n    \"!tw-text-danger\",\n    \"hover:tw-bg-danger-500\",\n    \"hover:tw-border-danger-500\",\n    \"hover:!tw-text-contrast\",\n    \"focus:tw-bg-danger-500\",\n    \"focus:tw-border-danger-500\",\n    \"focus:!tw-text-contrast\",\n    \"disabled:tw-bg-transparent\",\n    \"disabled:tw-border-danger-500/60\",\n    \"disabled:!tw-text-danger/60\",\n  ],\n};\n\n@Directive({\n  selector: \"button[bitButton], a[bitButton]\",\n})\nexport class ButtonDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-font-semibold\",\n      \"tw-py-1.5\",\n      \"tw-px-3\",\n      \"tw-rounded\",\n      \"tw-transition\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      \"tw-text-center\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n      \"focus:tw-ring\",\n      \"focus:tw-ring-offset-2\",\n      \"focus:tw-ring-primary-700\",\n      \"focus:tw-z-10\",\n    ]\n      .concat(this.block ? [\"tw-w-full\", \"tw-block\"] : [\"tw-inline-block\"])\n      .concat(buttonStyles[this.buttonType ?? \"secondary\"]);\n  }\n\n  @Input()\n  buttonType: ButtonTypes = null;\n\n  @Input()\n  block = false;\n}\n","<div\n  class=\"tw-mb-4 tw-box-border tw-rounded tw-border tw-border-l-8 tw-border-solid tw-border-secondary-300 tw-bg-background-alt tw-py-3 tw-px-5 tw-leading-5 tw-text-main\"\n  [ngClass]=\"calloutClass\"\n>\n  <h3\n    class=\"tw-mt-0 tw-mb-2 tw-text-base tw-font-bold tw-uppercase\"\n    [ngClass]=\"headerClass\"\n    *ngIf=\"title\"\n  >\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\ntype CalloutTypes = \"success\" | \"info\" | \"warning\" | \"danger\";\n\nconst defaultIcon: Record<CalloutTypes, string> = {\n  success: \"bwi-check\",\n  info: \"bwi-info-circle\",\n  warning: \"bwi-exclamation-triangle\",\n  danger: \"bwi-error\",\n};\n\nconst defaultI18n: Partial<Record<CalloutTypes, string>> = {\n  warning: \"warning\",\n  danger: \"error\",\n};\n\n@Component({\n  selector: \"bit-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type: CalloutTypes = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() useAlertRole = false;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.icon ??= defaultIcon[this.type];\n    if (this.title == null && defaultI18n[this.type] != null) {\n      this.title = this.i18nService.t(defaultI18n[this.type]);\n    }\n  }\n\n  get calloutClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"tw-border-l-danger-500\";\n      case \"info\":\n        return \"tw-border-l-info-500\";\n      case \"success\":\n        return \"tw-border-l-success-500\";\n      case \"warning\":\n        return \"tw-border-l-warning-500\";\n    }\n  }\n\n  get headerClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"!tw-text-danger\";\n      case \"info\":\n        return \"!tw-text-info\";\n      case \"success\":\n        return \"!tw-text-success\";\n      case \"warning\":\n        return \"!tw-text-warning\";\n    }\n  }\n}\n","import { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Component({\n  selector: \"bit-error\",\n  template: `<i class=\"bwi bwi-error\"></i> {{ displayError }}`,\n  host: {\n    class: \"tw-block tw-mt-1 tw-text-danger\",\n    \"aria-live\": \"assertive\",\n  },\n})\nexport class BitErrorComponent {\n  @HostBinding() id = `bit-error-${nextId++}`;\n\n  @Input() error: [string, any];\n\n  constructor(private i18nService: I18nService) {}\n\n  get displayError() {\n    switch (this.error[0]) {\n      case \"required\":\n        return this.i18nService.t(\"inputRequired\");\n      case \"email\":\n        return this.i18nService.t(\"inputEmail\");\n      case \"minlength\":\n        return this.i18nService.t(\"inputMinLength\", this.error[1]?.requiredLength);\n      case \"maxlength\":\n        return this.i18nService.t(\"inputMaxLength\", this.error[1]?.requiredLength);\n      default:\n        // Attempt to show a custom error message.\n        if (this.error[1]?.message) {\n          return this.error[1]?.message;\n        }\n\n        return this.error;\n    }\n  }\n}\n","<label class=\"tw-mb-1 tw-block tw-font-semibold tw-text-main\" [attr.for]=\"input.id\">\n  <ng-content select=\"bit-label\"></ng-content>\n  <span *ngIf=\"input.required\" class=\"tw-text-xs tw-font-normal\"> ({{ \"required\" | i18n }})</span>\n</label>\n<div class=\"tw-flex\">\n  <div *ngIf=\"prefixChildren.length\" class=\"tw-flex\">\n    <ng-content select=\"[bitPrefix]\"></ng-content>\n  </div>\n  <ng-content></ng-content>\n  <div *ngIf=\"suffixChildren.length\" class=\"tw-flex\">\n    <ng-content select=\"[bitSuffix]\"></ng-content>\n  </div>\n</div>\n<ng-container [ngSwitch]=\"input.hasError\">\n  <ng-content select=\"bit-hint\" *ngSwitchCase=\"false\"></ng-content>\n  <bit-error [error]=\"input.error\" *ngSwitchCase=\"true\"></bit-error>\n</ng-container>\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChild,\n  ContentChildren,\n  QueryList,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { BitInputDirective } from \"../input/input.directive\";\n\nimport { BitErrorComponent } from \"./error.component\";\nimport { BitHintComponent } from \"./hint.component\";\nimport { BitPrefixDirective } from \"./prefix.directive\";\nimport { BitSuffixDirective } from \"./suffix.directive\";\n\n@Component({\n  selector: \"bit-form-field\",\n  templateUrl: \"./form-field.component.html\",\n  host: {\n    class: \"tw-mb-6 tw-block\",\n  },\n})\nexport class BitFormFieldComponent implements AfterContentChecked {\n  @ContentChild(BitInputDirective) input: BitInputDirective;\n  @ContentChild(BitHintComponent) hint: BitHintComponent;\n\n  @ViewChild(BitErrorComponent) error: BitErrorComponent;\n\n  @ContentChildren(BitPrefixDirective) prefixChildren: QueryList<BitPrefixDirective>;\n  @ContentChildren(BitSuffixDirective) suffixChildren: QueryList<BitSuffixDirective>;\n\n  ngAfterContentChecked(): void {\n    if (this.error) {\n      this.input.ariaDescribedBy = this.error.id;\n    } else if (this.hint) {\n      this.input.ariaDescribedBy = this.hint.id;\n    } else {\n      this.input.ariaDescribedBy = undefined;\n    }\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitInputDirective } from \"./input.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitInputDirective],\n  exports: [BitInputDirective],\n})\nexport class InputModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { I18nPipe } from \"./i18n.pipe\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [I18nPipe],\n  exports: [CommonModule, I18nPipe],\n})\nexport class SharedModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { BitInputDirective } from \"../input/input.directive\";\nimport { InputModule } from \"../input/input.module\";\nimport { SharedModule } from \"../shared\";\n\nimport { BitErrorSummary } from \"./error-summary.component\";\nimport { BitErrorComponent } from \"./error.component\";\nimport { BitFormFieldComponent } from \"./form-field.component\";\nimport { BitHintComponent } from \"./hint.component\";\nimport { BitLabel } from \"./label.directive\";\nimport { BitPrefixDirective } from \"./prefix.directive\";\nimport { BitSuffixDirective } from \"./suffix.directive\";\n\n@NgModule({\n  imports: [SharedModule, InputModule],\n  exports: [\n    BitErrorComponent,\n    BitErrorSummary,\n    BitFormFieldComponent,\n    BitHintComponent,\n    BitInputDirective,\n    BitLabel,\n    BitPrefixDirective,\n    BitSuffixDirective,\n  ],\n  declarations: [\n    BitErrorComponent,\n    BitErrorSummary,\n    BitFormFieldComponent,\n    BitHintComponent,\n    BitLabel,\n    BitPrefixDirective,\n    BitSuffixDirective,\n  ],\n})\nexport class FormFieldModule {}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"bit-hint\",\n  host: {\n    class: \"tw-text-muted tw-inline-block tw-mt-1\",\n  },\n})\nexport class BitHintComponent {\n  @HostBinding() id = `bit-hint-${nextId++}`;\n}\n","import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"bit-label\",\n})\nexport class BitLabel {}\n","import { Directive, HostBinding, Input } from \"@angular/core\";\n\nexport const PrefixClasses = [\n  \"tw-block\",\n  \"tw-px-3\",\n  \"tw-py-1.5\",\n  \"tw-bg-background-alt\",\n  \"tw-border\",\n  \"tw-border-solid\",\n  \"tw-border-secondary-500\",\n  \"tw-text-muted\",\n  \"tw-rounded-none\",\n  \"disabled:!tw-text-muted\",\n  \"disabled:tw-border-secondary-500\",\n];\n\n@Directive({\n  selector: \"[bitPrefix]\",\n})\nexport class BitPrefixDirective {\n  @HostBinding(\"class\") @Input() get classList() {\n    return PrefixClasses.concat([\"tw-border-r-0\", \"first:tw-rounded-l\"]);\n  }\n}\n","import { Directive, HostBinding, Input } from \"@angular/core\";\n\nimport { PrefixClasses } from \"./prefix.directive\";\n\n@Directive({\n  selector: \"[bitSuffix]\",\n})\nexport class BitSuffixDirective {\n  @HostBinding(\"class\") @Input() get classList() {\n    return PrefixClasses.concat([\"tw-border-l-0\", \"last:tw-rounded-r\"]);\n  }\n}\n","class Icon {\n  constructor(readonly svg: string) {}\n}\n\n// We only export the type to prohibit the creation of Icons without using\n// the `svgIcon` template literal tag.\nexport type { Icon };\n\nexport function isIcon(icon: unknown): icon is Icon {\n  return icon instanceof Icon;\n}\n\nexport class DynamicContentNotAllowedError extends Error {\n  constructor() {\n    super(\"Dynamic content in icons is not allowed due to risk of user-injected XSS.\");\n  }\n}\n\nexport function svgIcon(strings: TemplateStringsArray, ...values: unknown[]): Icon {\n  if (values.length > 0) {\n    throw new DynamicContentNotAllowedError();\n  }\n\n  return new Icon(strings[0]);\n}\n","import { Directive, HostBinding, Input, Optional, Self } from \"@angular/core\";\nimport { NgControl, Validators } from \"@angular/forms\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"input[bitInput], select[bitInput], textarea[bitInput]\",\n})\nexport class BitInputDirective {\n  @HostBinding(\"class\") @Input() get classList() {\n    return [\n      \"tw-block\",\n      \"tw-w-full\",\n      \"tw-px-3\",\n      \"tw-py-1.5\",\n      \"tw-bg-background-alt\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      this.hasError ? \"tw-border-danger-500\" : \"tw-border-secondary-500\",\n      \"tw-text-main\",\n      \"tw-placeholder-text-muted\",\n      // Rounded\n      \"tw-rounded-none\",\n      \"first:tw-rounded-l\",\n      \"last:tw-rounded-r\",\n      // Focus\n      \"focus:tw-outline-none\",\n      \"focus:tw-border-primary-700\",\n      \"focus:tw-ring-1\",\n      \"focus:tw-ring-primary-700\",\n      \"focus:tw-z-10\",\n      \"disabled:tw-bg-secondary-100\",\n    ].filter((s) => s != \"\");\n  }\n\n  @HostBinding() @Input() id = `bit-input-${nextId++}`;\n\n  @HostBinding(\"attr.aria-describedby\") ariaDescribedBy: string;\n\n  @HostBinding(\"attr.aria-invalid\") get ariaInvalid() {\n    return this.hasError ? true : undefined;\n  }\n\n  @HostBinding()\n  @Input()\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value: any) {\n    this._required = value != null && value !== false;\n  }\n  private _required: boolean;\n\n  @Input() hasPrefix = false;\n  @Input() hasSuffix = false;\n\n  get hasError() {\n    return this.ngControl?.status === \"INVALID\" && this.ngControl?.touched;\n  }\n\n  get error(): [string, any] {\n    const key = Object.keys(this.ngControl.errors)[0];\n    return [key, this.ngControl.errors[key]];\n  }\n  constructor(@Optional() @Self() private ngControl: NgControl) {}\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n/**\n * Temporarily duplicate this pipe\n */\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ButtonTypes } from \"../button\";\n\n@Component({\n  selector: \"bit-submit-button\",\n  templateUrl: \"./submit-button.component.html\",\n})\nexport class SubmitButtonComponent {\n  @Input() buttonType: ButtonTypes = \"primary\";\n  @Input() disabled = false;\n  @Input() loading: boolean;\n}\n","<button bitButton type=\"submit\" [buttonType]=\"buttonType\" [disabled]=\"loading || disabled\">\n  <span class=\"tw-relative\">\n    <span [ngClass]=\"{ 'tw-invisible': loading }\">\n      <ng-content></ng-content>\n    </span>\n    <span class=\"tw-absolute tw-inset-0\" [ngClass]=\"{ 'tw-invisible': !loading }\">\n      <i class=\"bwi bwi-spinner bwi-lg bwi-spin tw-align-baseline\" aria-hidden=\"true\"></i>\n    </span>\n  </span>\n</button>\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + {\"182\":\"f40f00bffd202a8d77bc\",\"367\":\"d99a202a9bbc24878d38\",\"391\":\"d03a27bf6f4e3fff633f\",\"440\":\"d28daf4574dbcdf06446\",\"477\":\"e882d21429c04bcbe47c\",\"584\":\"238f402a694e2a33f299\",\"754\":\"a93e746f787a38ec213a\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t148: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_web_vault\"] = self[\"webpackChunk_bitwarden_web_vault\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [734], () => (__webpack_require__(94660)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","inProgress","dataWebpackPrefix","RegisterFormModule","EventView","constructor","data","this","message","humanReadableMessage","appIcon","appName","userId","userName","userEmail","date","ip","type","installationId","BaseEventsComponent","eventService","i18nService","exportService","platformUtilsService","logService","fileDownloadService","loading","loaded","dirtyDates","defaultDates","getDefaultDateFilters","start","end","exportEvents","appApiPromiseUnfulfilled","dates","parseDates","exportPromise","export","e","error","loadEvents","clearExisting","events","promise","loadAndParseEvents","continuationToken","refreshPromise","morePromise","result","length","concat","startDate","endDate","response","requestEvents","Promise","all","map","r","actingUserId","eventInfo","getEventInfo","user","getUserName","name","t","email","ipAddress","formatDateFilters","showToast","getEventExport","fileName","getFileName","exportFileName","download","blobData","blobOptions","NotPremiumDirective","templateRef","viewContainer","stateService","ngOnInit","getCanAccessPremium","clear","createEmbeddedView","premiumRequired","PremiumBadgeComponent","messagingService","send","WINDOW","MEMORY_STORAGE","SECURE_STORAGE","STATE_FACTORY","STATE_SERVICE_USE_CACHE","LOGOUT_CALLBACK","LOCKED_CALLBACK","LOCALES_DIRECTORY","SYSTEM_LANGUAGE","LOG_MAC_FAILURES","ThemeBuilder","configuredTheme","systemTheme","effectiveTheme","updateSystemTheme","updateConfiguredTheme","ThemingService","window","document","_theme","BehaviorSubject","theme$","pipe","filter","x","monitorThemeChanges","next","getTheme","getSystemTheme","monitorConfiguredThemeChanges","monitorSystemThemeChanges","getValue","theme","setTheme","subscribe","documentElement","classList","remove","add","matchMedia","matches","fromEvent","event","AbstractEncryptService","AccountApiService","ConfigApiServiceAbstraction","FileUploadService","StateMigrationService","AbstractStorageService","UserVerificationApiServiceAbstraction","StateVersion","AccountFactory","accountConstructor","create","args","GlobalStateFactory","globalStateConstructor","StateFactory","globalStateFactory","accountFactory","createGlobal","createAccount","EnvironmentUrls","base","api","identity","icons","notifications","webVault","keyConnector","EncryptionPair","DataEncryptionPair","TemporaryDataEncryption","AccountData","ciphers","folders","sends","collections","policies","passwordGenerationHistory","AccountKeys","cryptoSymmetricKey","organizationKeys","providerKeys","privateKey","AccountProfile","environmentUrls","pinProtected","vaultTimeoutAction","AccountTokens","init","keys","profile","settings","tokens","Object","assign","WindowState","stateVersion","One","DeviceType","DeviceRequest","appId","getDevice","getDeviceString","identifier","pushToken","TokenRequest","twoFactor","device","alterIdentityTokenHeaders","headers","setTwoFactor","toIdentityToken","clientId","obj","scope","client_id","deviceType","deviceIdentifier","deviceName","token","provider","twoFactorToken","twoFactorProvider","twoFactorRemember","remember","ApiTokenRequest","clientSecret","super","startsWith","grant_type","client_secret","ApiKeyResponse","apiKey","getResponseProperty","revisionDate","Date","AttachmentUploadDataResponse","url","attachmentId","fileUploadType","cipherResponse","cipherMiniResponse","BillingResponse","invoices","transactions","balance","paymentSource","BillingSourceResponse","BillingTransactionResponse","i","BillingInvoiceResponse","hasNoHistory","cardBrand","description","needsVerification","pdfUrl","number","paid","amount","createdDate","refunded","partiallyRefunded","refundedAmount","paymentMethodType","details","BillingHistoryResponse","BillingPaymentResponse","BreachAccountResponse","addedDate","breachDate","dataClasses","domain","isActive","isVerified","logoPath","modifiedDate","pwnCount","title","SelectionReadOnlyResponse","id","readOnly","hidePasswords","CollectionResponse","organizationId","externalId","CollectionDetailsResponse","CollectionGroupDetailsResponse","groups","g","DeviceVerificationResponse","isDeviceVerificationSectionEnabled","unknownDeviceVerificationEnabled","GlobalDomainResponse","domains","excluded","DomainsResponse","globalEquivalentDomains","equivalentDomains","d","EventResponse","providerId","cipherId","collectionId","groupId","policyId","organizationUserId","providerUserId","providerOrganizationId","GroupResponse","accessAll","GroupDetailsResponse","c","IdentityCaptchaResponse","siteKey","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","resetMasterPassword","key","kdf","kdfIterations","forcePasswordReset","apiUseKeyConnector","keyConnectorUrl","IdentityTwoFactorResponse","twoFactorProviders2","Map","captchaToken","twoFactorProviders","prop","hasOwnProperty","set","parseInt","KeyConnectorUserKeyResponse","ListResponse","dr","OrganizationConnectionResponse","configType","enabled","rawConfig","config","OrganizationExportResponse","OrganizationSponsorshipSyncStatusResponse","lastSyncDate","OrganizationUserBulkPublicKeyResponse","OrganizationUserBulkResponse","OrganizationUserResponse","status","permissions","resetPasswordEnrolled","OrganizationUserUserDetailsResponse","twoFactorEnabled","usesKeyConnector","OrganizationUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","resetPasswordKey","encryptedPrivateKey","ProfileOrganizationResponse","usePolicies","useGroups","useDirectory","useEvents","useTotp","use2fa","useApi","useSso","useKeyConnector","useScim","useResetPassword","selfHost","usersGetPremium","seats","maxCollections","maxStorageGb","hasPublicAndPrivateKeys","ssoBound","providerName","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","keyConnectorEnabled","familySponsorshipLastSyncDateString","familySponsorshipLastSyncDate","familySponsorshipValidUntilString","familySponsorshipValidUntil","familySponsorshipToDelete","ProfileProviderOrganizationResponse","ProfileProviderResponse","ProfileResponse","organizations","providers","providerOrganizations","emailVerified","masterPasswordHint","premiumPersonally","premiumFromOrganization","culture","securityStamp","o","PaymentResponse","userProfile","paymentIntentClientSecret","success","PlanResponse","product","isAnnual","nameLocalizationKey","descriptionLocalizationKey","canBeUsedByBusiness","baseSeats","baseStorageGb","maxUsers","hasAdditionalSeatsOption","maxAdditionalSeats","hasAdditionalStorageOption","maxAdditionalStorage","hasPremiumAccessOption","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","hasTotp","has2fa","hasApi","hasSso","hasResetPassword","upgradeSortOrder","displaySortOrder","legacyYear","disabled","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","basePrice","seatPrice","additionalStoragePricePerGb","premiumAccessOptionPrice","PreloginResponse","ProviderOrganizationResponse","creationDate","userCount","plan","ProviderOrganizationOrganizationDetailsResponse","organizationName","ProviderResponse","businessName","billingEmail","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","ProviderUserUserDetailsResponse","SendAccessResponse","text","file","expirationDate","creatorIdentifier","SendFileDownloadDataResponse","SendResponse","accessId","notes","maxAccessCount","accessCount","deletionDate","password","disable","hideEmail","SendFileUploadDataResponse","sendResponse","SsoPreValidateResponse","SubscriptionResponse","storageName","storageGb","license","expiration","usingInAppPurchase","subscription","upcomingInvoice","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","items","trialEndDate","periodStartDate","periodEndDate","cancelledDate","cancelAtEndDate","cancelled","BillingSubscriptionItemResponse","quantity","interval","sponsoredSubscriptionItem","FolderResponse","SyncResponse","f","p","s","TaxInfoResponse","taxId","taxIdType","line1","line2","city","state","postalCode","country","TaxRateResponse","rate","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","host","secretKey","integrationKey","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","code","TwoFactorWebAuthnResponse","k","KeyResponse","migrated","ChallengeResponse","attestation","authenticatorSelection","challenge","excludeCredentials","buffer","extensions","pubKeyCredParams","rp","timeout","TwoFactorYubiKeyResponse","key1","key2","key3","key4","key5","nfc","UserKeyResponse","publicKey","HtmlStorageLocation","AuditService","cryptoFunctionService","apiService","passwordLeaked","hashBytes","hash","toUpperCase","hashStart","substr","hashEnding","nativeFetch","Request","match","split","find","v","breachedAccounts","username","getHibpBreach","statusCode","Error","limit","throttleKey","target","propertyKey","descriptor","originalMethod","value","allThrottles","throttles","get","getThrottles","argsThrottleKey","queue","resolve","reject","exec","onFinally","splice","indexOf","delete","size","apply","then","val","catch","err","push","AuthResult","captchaSiteKey","requiresCaptcha","requiresTwoFactor","LogInStrategy","cryptoService","tokenService","appIdService","twoFactorService","captchaBypassToken","logInTwoFactor","captchaResponse","tokenRequest","startLogIn","clearSelectedProvider","postIdentityToken","processTwoFactorResponse","processCaptchaResponse","processTokenResponse","onSuccessfulLogin","buildDeviceRequest","getAppId","buildTwoFactor","userProvidedTwoFactor","storedTwoFactorToken","getTwoFactorToken","saveAccountInformation","tokenResponse","accountInformation","decodeToken","addAccount","sub","hasPremiumPersonally","premium","kdfType","setTwoFactorToken","setEncKey","setEncPrivateKey","createKeyPairForOldAccount","setProviders","makeKeyPair","postAccountKeys","encryptedString","ApiLogInStrategy","environmentService","keyConnectorService","getKeyConnectorUrl","getAndSetKey","logIn","credentials","setApiKeyClientId","setApiKeyClientSecret","PasswordTokenRequest","masterPasswordHash","PasswordLogInStrategy","authService","setKey","setKeyHash","localHashedPassword","masterPassword","makePreloginKey","hashPassword","hashedPassword","SsoTokenRequest","codeVerifier","redirectUri","code_verifier","redirect_uri","SsoLogInStrategy","newSsoUser","convertNewSsoUserToKeyConnector","orgId","redirectUrl","PreloginRequest","sequentialize","cacheKey","caches","cache","getCache","argsCacheKey","SortedCiphersCache","comparator","sortedCiphersByUrl","timeouts","isCached","has","addCiphers","sort","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","clearTimeout","setTimeout","lastUsedIndex","Math","max","cipher","localData","lastLaunched","y","valueOf","getNextIndex","CipherBulkMoveRequest","ids","folderId","CipherBulkRestoreRequest","CipherBulkShareRequest","collectionIds","forEach","CipherShareRequest","DomainMatchBlacklist","Set","CipherService","settingsService","fileUploadService","searchService","sortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","indexCiphers","clearCache","clearDecryptedCiphersState","encrypt","model","originalCipher","existingCipher","decrypt","passwordHistory","login","ph","lastUsedDate","passwordRevisionDate","hasFields","existingHiddenFields","fields","hiddenFields","ef","matchedField","slice","favorite","reprompt","getOrgKey","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachments","attachmentsModel","promises","encAttachments","attachment","sizeName","fieldsModel","self","encFields","reduce","field","encField","encryptField","fieldModel","linkedId","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getEncryptedCiphers","getLocalData","getAll","getAllDecrypted","getUserId","indexedEntityId","decCiphers","hasKey","getLocaleSortingFunction","getAllDecryptedForGrouping","groupingId","folder","isDeleted","getAllDecryptedForUrl","includeOtherTypes","defaultMatch","eqDomainsPromise","firstValueFrom","settings$","eqDomain","matchingDomains","getDefaultUriMatch","deletedDate","uris","u","uri","domainUrlHost","urlHost","RegExp","test","getAllFromApiForOrganization","getCiphersOrganization","getLastUsedForUrl","autofillOnPageLoad","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","getTime","setLocalData","decryptedCipherCache","cached","updateLastLaunchedDate","saveNeverDomain","getNeverDomains","setNeverDomains","saveWithServer","request","postCipherCreate","postCipher","putCipher","upsert","shareWithServer","attachmentPromises","shareAttachmentWithServer","encCipher","putShareCipher","shareManyWithServer","encCiphers","putShareCiphers","toCipherData","saveAttachmentWithServer","unencryptedFile","admin","reader","FileReader","readAsArrayBuffer","onload","evt","cData","saveAttachmentRawWithServer","onerror","filename","encFileName","dataEncKey","makeEncKey","encData","encryptToBytes","fileSize","byteLength","adminRequest","uploadDataResponse","postCipherAttachment","uploadCipherAttachment","getSingleMessage","legacyServerAttachmentFileUpload","fd","FormData","blob","Blob","append","Buffer","from","filepath","contentType","postCipherAttachmentAdminLegacy","postCipherAttachmentLegacy","saveCollectionsWithServer","putCipherCollections","replace","setEncryptedCiphers","clearEncryptedCiphersState","moveManyWithServer","putMoveCiphers","deleteWithServer","deleteCipher","deleteManyWithServer","deleteManyCiphers","deleteAttachment","deleteAttachmentWithServer","deleteCipherAttachment","a","b","aLastUsed","bLastUsed","bothNotNull","sortCiphersByLastUsedThenName","aName","bName","collator","compare","localeCompare","softDelete","setDeletedDate","toISOString","softDeleteWithServer","putDeleteCipher","softDeleteManyWithServer","putDeleteManyCiphers","restore","clearDeletedDate","Array","restoreWithServer","putRestoreCipher","restoreManyWithServer","putRestoreManyCiphers","restores","attachmentView","attachmentResponse","toString","encBuf","decBuf","decryptFromBytes","postShareCipherAttachment","theProp","theObj","modelProp","totp","loginUri","secureNote","card","cardholderName","brand","expMonth","expYear","firstName","middleName","lastName","address1","address2","address3","company","phone","ssn","passportNumber","licenseNumber","lastUsed","autofillOnPageLoadDefault","getAutoFillOnPageLoadDefault","clearSortedCiphers","ServerConfigResponse","version","gitHash","server","ThirdPartyServerConfigResponse","environment","EnvironmentServerConfigResponse","vault","sso","ServerConfigData","serverConfigReponse","ThirdPartyServerConfigData","utcDate","EnvironmentServerConfigData","ServerConfig","serverConfigData","getAgeInMilliseconds","isValid","expiresSoon","EEFLongWordList","BaseEncryptedOrganizationKey","static","EncryptedOrganizationKey","ProviderEncryptedOrganizationKey","decValue","rsaDecrypt","toData","providerKey","getProviderKey","decryptToBytes","CryptoService","encryptService","platformUtilService","setCryptoMasterKey","storeKey","keyHash","encKey","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","encPrivateKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","orgs","providerOrgs","encOrgKeyData","org","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","getKey","keySuffix","inMemoryKey","getCryptoMasterKey","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","warning","clearSecretKeyStore","getKeyHash","compareAndUpdateKeyHash","storedKeyHash","localKeyHash","serverKeyHash","getEncKey","getEncKeyHelper","getPublicKey","inMemoryPublicKey","getPrivateKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","getFingerprint","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","getOrgKeys","decryptedOrganizationKeys","getDecryptedOrganizationKeys","getEncryptedOrganizationKeys","encOrgKey","fromData","decOrgKey","orgKeys","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","hasKeyInMemory","hasKeyStored","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","hasEncKey","getEncryptedCryptoSymmetricKey","clearKey","clearSecretStorage","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearPinProtectedKey","setEncryptedPinProtected","clearKeys","toggleKey","makeKey","salt","pbkdf2","makeKeyFromPin","pin","protectedKeyCs","pinProtectedKey","getEncryptedPinProtected","pinKey","makePinKey","decKey","makeShareKey","shareKey","randomBytes","rsaEncrypt","keyPair","rsaGenerateKeyPair","stretchKey","makeSendKey","keyMaterial","sendKey","hkdf","hashPurpose","iterations","theKey","getKeyForUserEncryption","buildEncKey","remakeEncKey","plainValue","encBytes","encValue","privateKeyValue","headerPieces","encPieces","encType","alg","encString","keyForEnc","decryptToUtf8","encBuffer","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","Uint8Array","shouldStoreKey","keyB64","getVaultTimeout","getBiometricUnlock","supportsSecureStorage","getCryptoMasterKeyBiometric","newKey","macKey","minimumEntropy","entropyPerWord","log","numWords","hashArr","phrase","hashNumber","remainder","mod","divide","encKeyEnc","getDecryptedCryptoSymmetricKey","decEncKey","encKeyCipher","encryptionType","symmetricCryptoKey","EncryptedObject","EventData","EventRequest","EventExport","FileUploadType","AzureFileUploadService","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","Headers","toUTCString","searchParams","body","method","blobResponse","fetch","baseUrl","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","json","blockListUrl","blockListXml","expiry","isNaN","setTime","now","utfBlockId","blockIdList","xml","Version","year","month","day","parts","Number","compareTo","BitwardenFileUploadService","encryptedFileName","encryptedFileData","apiCall","FolderData","SetKeyConnectorKeyRequest","orgIdentifier","KeyConnectorUserKeyRequest","NotificationType","NotificationResponse","contextId","payload","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","OrganizationSsoResponse","urls","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","OrganizationApiKeyInformationResponse","keyType","OrganizationAutoEnrollStatusResponse","resetPasswordEnabled","KeysResponse","OrganizationKeysResponse","OrganizationResponse","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","planType","maxAutoscaleSeats","OrganizationSubscriptionResponse","GeneratedPasswordHistory","PasswordGeneratorPolicyOptions","defaultType","minLength","useUppercase","useLowercase","useNumbers","numberCount","useSpecial","specialCount","minNumberWords","capitalize","includeNumber","inEffect","DefaultOptions","ambiguous","minNumber","uppercase","minUppercase","lowercase","minLowercase","special","minSpecial","wordSeparator","ResetPasswordPolicyOptions","autoEnrollEnabled","Provider","canAccess","isProviderAdmin","canCreateOrganizations","canManageUsers","canAccessEventLogs","SearchService","cipherService","indexing","index","immediateSearchLocales","defaultSearchableMinLength","searchableMinLength","locale$","locale","registeredPipeline","lunr","Pipeline","registerFunction","normalizeAccentsPipelineFunction","isSearchable","query","normalizeSearchQuery","builder","Builder","pipeline","ref","boost","extractor","subTitle","uriExtractor","fieldExtractor","attachmentExtractor","build","info","searchCiphers","results","trim","toLowerCase","isArray","every","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","search","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","deleted","hasUris","some","searchSends","toLocaleLowerCase","sendsMatched","lowPriorityMatched","joined","join","hasAttachments","lastIndexOf","hostname","protocolIndex","queryIndex","substring","searchableFields","metadata","includes","normalize","SendFileData","SendTextData","hidden","SendData","Send","buildDomainModel","getCryptoService","cryptoKey","decryptObj","StorageLocation","ProviderData","State","globals","accounts","authenticatedAccounts","accountActivity","partialKeys","storageService","secureStorageService","memoryStorageService","stateMigrationService","stateFactory","useAccountCache","activeAccountSubject","activeAccount$","asObservable","activeAccountUnlockedSubject","activeAccountUnlocked$","hasBeenInited","isRecoveredSession","accountDiskCache","concatMap","needsMigration","migrate","setState","createGlobals","initAccountState","updateState","syncAccountFromDisk","storedActiveUser","activeUserId","pushAccounts","diskAccount","getAccountFromDisk","account","setAccountEnvironmentUrls","save","scaffoldNewAccountStorage","setLastActive","setActiveUser","clearDecryptedDataForActiveUser","clean","options","reconcileOptions","defaultInMemoryOptions","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getAccessToken","getTimeoutBasedStorageOptions","getAccount","setAccessToken","saveAccount","getAddEditCipherInfo","addEditCipherInfo","setAddEditCipherInfo","getAlwaysShowDock","getGlobals","defaultOnDiskOptions","alwaysShowDock","setAlwaysShowDock","saveGlobals","getApiKeyClientId","apiKeyClientId","getApiKeyClientSecret","apiKeyClientSecret","getAutoConfirmFingerPrints","autoConfirmFingerPrints","setAutoConfirmFingerprints","autoFillOnPageLoadDefault","setAutoFillOnPageLoadDefault","getBiometricAwaitingAcceptance","biometricAwaitingAcceptance","setBiometricAwaitingAcceptance","getBiometricFingerprintValidated","biometricFingerprintValidated","setBiometricFingerprintValidated","getBiometricText","biometricText","setBiometricText","biometricUnlock","setBiometricUnlock","getIsAuthenticated","getHasPremiumPersonally","getHasPremiumFromOrganization","setHasPremiumPersonally","hasPremiumFromOrganization","getOrganizations","isProviderUser","setHasPremiumFromOrganization","getClearClipboard","defaultOnDiskLocalOptions","clearClipboard","setClearClipboard","getCollapsedGroupings","collapsedGroupings","setCollapsedGroupings","getConvertAccountToKeyConnector","convertAccountToKeyConnector","setConvertAccountToKeyConnector","cryptoMasterKey","nextValue","defaultSecureStorageOptions","saveSecureStorageKey","getCryptoMasterKeyB64","setCryptoMasterKeyB64","getDecodedToken","decodedToken","setDecodedToken","decrypted","getDecryptedCollections","setDecryptedCollections","getDecryptedPasswordGenerationHistory","setDecryptedPasswordGenerationHistory","getDecryptedPinProtected","setDecryptedPinProtected","getDecryptedPolicies","setDecryptedPolicies","decryptedSerialized","getDecryptedSends","setDecryptedSends","defaultUriMatch","setDefaultUriMatch","getDisableAddLoginNotification","disableAddLoginNotification","setDisableAddLoginNotification","getDisableAutoBiometricsPrompt","disableAutoBiometricsPrompt","setDisableAutoBiometricsPrompt","getDisableAutoTotpCopy","disableAutoTotpCopy","setDisableAutoTotpCopy","getDisableBadgeCounter","disableBadgeCounter","setDisableBadgeCounter","getDisableChangedPasswordNotification","disableChangedPasswordNotification","setDisableChangedPasswordNotification","getDisableContextMenuItem","disableContextMenuItem","setDisableContextMenuItem","getDisableFavicon","disableFavicon","setDisableFavicon","getDisableGa","disableGa","setDisableGa","getDontShowCardsCurrentTab","dontShowCardsCurrentTab","setDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","dontShowIdentitiesCurrentTab","setDontShowIdentitiesCurrentTab","getEmail","setEmail","getEmailVerified","setEmailVerified","getEnableAlwaysOnTop","accountPreference","enableAlwaysOnTop","globalPreference","setEnableAlwaysOnTop","getEnableAutoFillOnPageLoad","enableAutoFillOnPageLoad","setEnableAutoFillOnPageLoad","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","enableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","enableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","enableCloseToTray","setEnableCloseToTray","getEnableFullWidth","enableFullWidth","setEnableFullWidth","getEnableGravitars","enableGravitars","setEnableGravitars","getEnableMinimizeToTray","enableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","enableStartToTray","setEnableStartToTray","getEnableTray","enableTray","setEnableTray","defaultOnDiskMemoryOptions","encrypted","getEncryptedCollections","setEncryptedCollections","getEncryptedFolders","setEncryptedFolders","getEncryptedPasswordGenerationHistory","setEncryptedPasswordGenerationHistory","getEncryptedPolicies","setEncryptedPolicies","getEncryptedSends","setEncryptedSends","getEntityId","entityId","setEntityId","getEntityType","entityType","setEntityType","getEnvironmentUrls","getGlobalEnvironmentUrls","setEnvironmentUrls","getEquivalentDomains","setEquivalentDomains","getEventCollection","eventCollection","setEventCollection","getEverBeenUnlocked","everBeenUnlocked","setEverBeenUnlocked","getForcePasswordReset","setForcePasswordReset","getInstalledVersion","installedVersion","setInstalledVersion","getKdfIterations","setKdfIterations","getKdfType","setKdfType","getLastActive","getLastSync","lastSync","setLastSync","getLocale","setLocale","getMainWindowSize","mainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","minimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","neverDomains","getNoAutoPromptBiometrics","noAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","noAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","openAtLogin","setOpenAtLogin","getOrganizationInvitation","organizationInvitation","setOrganizationInvitation","setOrganizations","getPasswordGenerationOptions","passwordGenerationOptions","setPasswordGenerationOptions","getUsernameGenerationOptions","usernameGenerationOptions","setUsernameGenerationOptions","getGeneratorOptions","generatorOptions","setGeneratorOptions","getProtectedPin","protectedPin","setProtectedPin","getProviders","publicKeySerialized","getRefreshToken","setRefreshToken","getRememberedEmail","rememberedEmail","setRememberedEmail","getSecurityStamp","setSecurityStamp","getSettings","setSettings","getSsoCodeVerifier","ssoCodeVerifier","setSsoCodeVerifier","getSsoOrgIdentifier","ssoOrganizationIdentifier","setSsoOrganizationIdentifier","getSsoState","ssoState","setSsoState","getUsesKeyConnector","setUsesKeyConnector","vaultTimeout","setVaultTimeout","getVaultTimeoutAction","accountVaultTimeoutAction","globalVaultTimeoutAction","setVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","setServerConfig","serverConfig","getServerConfig","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","htmlStorageLocation","Local","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deepClone","JSON","parse","stringify","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","defaultOptions","Session","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","stateUpdater","updatedState","withPrototype","converter","originalResult","String","prototype","getOwnPropertyDescriptors","withPrototypeForArrayMembers","memberConstructor","memberConverter","withPrototypeForObjectValues","valuesConstructor","valuesConverter","entries","withPrototypeForMap","TokenService","decoded","setTokens","clientIdClientSecret","setToken","setClientId","setClientSecret","getClientId","getClientSecret","getToken","clearTwoFactorToken","clearToken","storedToken","getTokenExpirationDate","exp","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","round","tokenNeedsRefresh","minutes","email_verified","getName","getIssuer","iss","getIsExternal","amr","v1Keys","autoConfirmFingerprints","enableBiometric","enableGravatars","encOrgKeys","encPrivate","history","lastActive","ssoIdentifier","stamp","usesConnector","v1KeyPrefixes","currentStateVersion","getCurrentStateVersion","Latest","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","Four","getAuthenticatedAccounts","migratedAccount","migrateAccountFrom4To5","setCurrentStateVersion","Five","migrateAccountFrom5To6","Six","clearV1Keys","clearingUserId","keyPrefix","defaultAccount","accountSettings","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","legacyEtmKey","authenticationStatus","authenticatedUserIds","encryptedOrgKeys","newVersion","OrganizationData","SyncService","folderService","collectionService","policyService","sendService","organizationService","providerService","folderApiService","logoutCallback","syncInProgress","_sync","Subject","sync$","toJSON","fullSync","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","refreshIdentityToken","getSync","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","syncUpsertFolder","notification","isEdit","localFolder","remoteFolder","syncDeleteFolder","syncUpsertCipher","shouldUpdate","localCipher","checkCollections","remoteCipher","getFullCipherDetails","syncDeleteCipher","syncUpsertSend","localSend","remoteSend","getSend","sendId","syncDeleteSend","successfully","getAccountRevisionDate","userNeedsMigration","setConvertAccountRequired","removeConvertAccountRequired","eqDomains","global","B32Chars","SteamChars","VerifyOTPRequest","OTP","AnonAddyForwarder","generate","anonaddy","requestInit","redirect","Authorization","website","DuckDuckGoForwarder","address","FastmailForwarder","accountId","getAccountId","using","methodCalls","emailPrefix","fastmail","prefix","methodResponses","created","notCreated","primaryAccounts","FirefoxRelayForwarder","generated_for","full_address","ForwarderOptions","FastmailForwarderOptions","AnonAddyForwarderOptions","SimpleLoginForwarder","Authentication","note","alias","wordCapitalize","wordIncludeNumber","subaddressType","catchallType","forwardedService","forwardedAnonAddyDomain","DecryptParameters","BroadcasterService","subscribers","messageCallback","unsubscribe","modalRef","showPassword","togglePassword","submit","close","modalService","component","protectedFields","showPasswordPrompt","open","allowMultipleModals","onClosedPromise","JslibServicesModule","provide","useValue","useFactory","translationLocale","deps","navigator","language","expired","useClass","makeAndGetAppId","getAnonymousAppId","existingId","guid","logInStrategy","strategy","clearState","saveState","logOut","callback","authingWithApiKey","authingWithSso","authingWithPassword","getAuthStatus","preloginResponse","postPrelogin","startSessionTimeout","clearSessionTimeout","sessionTimeout","P","injector","_folders","_folderViews","folders$","folderViews$","unlocked","updateObservables","getAllDecryptedFromState","values","decryptFolders","updates","cId","foldersMap","decryptFolderPromises","decryptedFolders","noneFolder","useExisting","postFolder","putFolder","deleteFolder","deleteAccount","accountApiService","userVerificationService","verification","verificationRequest","buildRequest","collection","decryptMany","decCollections","decryptedCollections","getAllNested","nodes","collectionCopy","getNested","urlsSubject","scimUrl","setUrlsFromStorage","hasBaseUrl","getNotificationsUrl","notificationsUrl","getWebVaultUrl","webVaultUrl","getSendUrl","getIconsUrl","iconsUrl","getApiUrl","apiUrl","getIdentityUrl","identityUrl","getEventsUrl","eventsUrl","getScimUrl","envUrls","setUrls","formatUrl","scim","getUrls","isCloud","getCode","period","digits","keyB32","isOtpAuth","isSteamAuth","params","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","floor","timeBytes","keyBytes","b32ToBytes","sign","offset","binary","otp","fullCode","trunc","getTimeInterval","l","b32ToHex","cleanedInput","bits","hex","byteIndex","charAt","chunk","signature","hmac","generatePassword","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","getOptions","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","enforcedPolicyOptions","getPasswordGeneratorPolicyOptions","currentPolicy","useUpper","useLower","minNumbers","saveOptions","getHistory","decryptHistory","addHistory","currentHistory","matchesPrevious","unshift","pop","newHistory","encryptHistory","passwordStrength","userInputs","globalUserInputs","finalUserInputs","normalizeOptions","str","num","item","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","generateUsername","generateCatchall","generateSubaddress","generateForwarded","generateWord","word","zeroPad","subaddressEmail","atIndex","emailBeginning","emailEnding","subaddressString","randomString","catchallDomain","startString","forwarder","forwarderOptions","forwardedSimpleLoginApiKey","forwardedAnonAddyApiToken","forwardedFirefoxApiToken","forwardedFastmailApiToken","forwardedDuckDuckGoToken","charSet","width","customUserAgent","isWebClient","isDesktopClient","IEBrowser","ChromeBrowser","EdgeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","UnknownBrowser","VivaldiBrowser","WindowsDesktop","MacOsDesktop","LinuxDesktop","Accept","identityToken","getClientType","qsStringify","getCredentials","responseJson","isJsonResponse","TwoFactorProviders2","HCaptcha_SiteKey","doAuthRefresh","getProfile","getUserSubscription","getTaxInfo","putProfile","putTaxInfo","isDev","postEmailToken","postEmail","postPassword","setPassword","postSetKeyConnectorKey","postSecurityStamp","postPasswordHint","postRegister","postPremium","postIapCheck","postReinstatePremium","postCancelPremium","postAccountStorage","postAccountPayment","postAccountLicense","postAccountKey","postAccountVerifyEmail","postAccountVerifyEmailToken","postAccountVerifyPassword","postAccountRecoverDelete","postAccountRecoverDeleteToken","postAccountKdf","deleteSsoUser","getSsoUserIdentifier","postUserApiKey","postUserRotateApiKey","putUpdateTempPassword","postConvertToKeyConnector","getUserBillingHistory","getUserBillingPayment","postSendAccess","getSendFileDownloadData","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getCipherAdmin","postCipherAdmin","putCipherAdmin","deleteCipherAdmin","deleteManyCiphersAdmin","putCipherCollectionsAdmin","postPurgeCiphers","path","postImportCiphers","postImportOrganizationCiphers","putDeleteCipherAdmin","putDeleteManyCiphersAdmin","putRestoreCipherAdmin","getAttachmentData","emergencyAccessId","deleteCipherAttachmentAdmin","renewAttachmentUploadUrl","postAttachmentFile","getCollectionDetails","getUserCollections","getCollections","getCollectionUsers","postCollection","putCollection","putCollectionUsers","deleteCollection","deleteCollectionUser","getGroupDetails","getGroups","getGroupUsers","postGroup","putGroup","putGroupUsers","deleteGroup","deleteGroupUser","getOrganizationUser","getOrganizationUserGroups","getOrganizationUsers","getOrganizationUserResetPasswordDetails","postOrganizationUserInvite","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserAccept","postOrganizationUserConfirm","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","putOrganizationUser","putOrganizationUserGroups","putOrganizationUserResetPasswordEnrollment","putOrganizationUserResetPassword","deleteOrganizationUser","deleteManyOrganizationUsers","revokeOrganizationUser","revokeManyOrganizationUsers","restoreOrganizationUser","restoreManyOrganizationUsers","getPlans","postPublicImportDirectory","getTaxRates","getSettingsDomains","putSettingsDomains","getTwoFactorProviders","getTwoFactorOrganizationProviders","getTwoFactorAuthenticator","getTwoFactorEmail","getTwoFactorDuo","getTwoFactorOrganizationDuo","getTwoFactorYubiKey","getTwoFactorWebAuthn","getTwoFactorWebAuthnChallenge","getTwoFactorRecover","putTwoFactorAuthenticator","putTwoFactorEmail","putTwoFactorDuo","putTwoFactorOrganizationDuo","putTwoFactorYubiKey","putTwoFactorWebAuthn","deviceResponse","rawId","btoa","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","deleteTwoFactorWebAuthn","putTwoFactorDisable","putTwoFactorOrganizationDisable","postTwoFactorRecover","postTwoFactorEmailSetup","postTwoFactorEmail","getDeviceVerificationSettings","putDeviceVerificationSettings","getEmergencyAccessTrusted","getEmergencyAccessGranted","getEmergencyAccess","getEmergencyGrantorPolicies","putEmergencyAccess","deleteEmergencyAccess","postEmergencyAccessInvite","postEmergencyAccessReinvite","postEmergencyAccessAccept","postEmergencyAccessConfirm","postEmergencyAccessInitiate","postEmergencyAccessApprove","postEmergencyAccessReject","postEmergencyAccessTakeover","postEmergencyAccessPassword","postEmergencyAccessView","getCloudCommunicationsEnabled","getOrganizationConnection","createOrganizationConnection","updateOrganizationConnection","organizationConnectionId","deleteOrganizationConnection","postProviderSetup","getProvider","putProvider","getProviderUsers","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","postProviderAddOrganization","postProviderCreateOrganization","deleteProviderOrganization","getEvents","addEventParameters","getEventsCipher","getEventsOrganization","getEventsOrganizationUser","getEventsProvider","getEventsProviderUser","postEventsCollect","authHeader","getActiveBearerToken","getUserPublicKey","postBitPayInvoice","postSetupPayment","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","getOrganizationExport","getApplicationVersion","preValidateSso","encodeURIComponent","postCreateSponsorship","sponsoredOrgId","isSelfHost","getSponsorshipSyncStatus","deleteRevokeSponsorship","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","postPreValidateSponsorshipToken","sponsorshipToken","postRedeemSponsorship","postResendSponsorshipOffer","doRefreshToken","doApiTokenRefresh","deviceRequest","authed","hasResponse","alterHeaders","requestUrl","URL","href","tokenError","isTextResponse","Message","typeHeader","azureFileUploadService","bitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","_settings","setVaultTimeoutOptions","action","currentAction","isPinLockSet","isBiometricLockSet","policyAppliesToUser","policy","vaultTimeoutSettingsService","lockedCallback","loggedOutCallback","inited","checkOnInterval","startCheck","checkVaultTimeout","setInterval","isViewOpen","shouldLock","executeTimeoutAction","lock","pinSet","authStatus","vaultTimeoutSeconds","getExport","format","getEncryptedExport","getDecryptedExport","getPasswordProtectedExport","clearText","encKeyValidation","encText","jsonDoc","passwordProtected","encKeyValidation_DO_NOT_EDIT","getOrganizationEncryptedExport","getOrganizationDecryptedExport","extension","getFullYear","padNumber","getMonth","getDate","getHours","getMinutes","getSeconds","decFolders","exportCiphers","buildCommonCipher","exportData","exportPromises","decCol","decCipher","collectionsMap","orgKey","padCharacter","numString","login_uri","login_username","login_password","login_totp","syncService","connected","inactive","reconnectTimer","signalrConnection","off","stop","withUrl","accessTokenFactory","skipNegotiation","transport","withHubProtocol","on","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","sync","reconnectFromActivity","disconnectFromInactivity","isAuthenticated","payloadUserId","UserId","myUserId","random","win","crypto","subtle","algorithm","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","ikm","outputByteSize","hkdfParams","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","n","okm","md","valueBytes","toByteString","update","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","hmacFast","bytes","getBytes","compareFast","rand","Uint32Array","putInt32","aesEncrypt","iv","aesDecryptFastParameters","mac","meta","encKeyByteString","macKeyByteString","encKeyB64","macData","macKeyB64","aesDecryptFast","parameters","dataBuffer","decipher","finish","output","aesDecrypt","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","arr","getRandomValues","buf","logMacFailures","plainBuf","encObj","macLen","resolveLegacyKey","fastParams","computedMac","logMacFailed","encThing","macBytes","ivBytes","dataBytes","msg","uploadEvents","collect","eventType","uploadImmediately","orgIds","req","clearEvents","decryptedPolicies","diskPolicies","getMasterPasswordPolicyOptions","minComplexity","requireUpper","requireLower","requireNumbers","requireSpecial","evaluateMasterPassword","newPassword","toLocaleUpperCase","getResetPasswordPolicyOptions","resetPasswordPolicyOptions","mapPoliciesFromToken","policiesResponse","policyType","policyFilter","filteredPolicies","policySet","isExcemptFromPolicies","organization","isExemptFromPolicies","getPolicy","getPolicies","getPoliciesByToken","getPoliciesByInvitedUser","getPolicyForOrganization","getMasterPasswordPoliciesForInvitedUsers","putPolicy","fileData","passwordHash","ArrayBuffer","encryptFileData","parseFile","decSends","sendData","legacyServerSendFileUpload","removePasswordWithServer","loggedInUsingSso","requiredByOrganization","getManagingOrganization","userIsNotUsingKeyConnector","migrateUser","keyConnectorRequest","handleKeyConnectorError","userKeyResponse","keyArr","pubKey","privKey","setPasswordRequest","getConvertAccountRequired","userVerificationApiService","requestClass","alreadyHashed","validateInput","secret","verifyUser","postAccountVerifyOTP","requestOTP","postAccountRequestOTP","getByIdentifier","canManageSponsorships","hasOrganizations","getFormValidationErrors","controls","errors","control","controlErrors","keyError","controlName","errorName","getBilling","getSubscription","getLicense","getAutoEnrollStatus","createLicense","updatePayment","upgrade","updateSubscription","updateSeats","updateStorage","verifyBank","cancel","reinstate","leave","updateLicense","importDirectory","getOrCreateApiKey","getApiKeyInformation","organizationApiKeyType","rotateApiKey","updateTaxInfo","getKeys","updateKeys","getSso","updateSso","configApiService","_serverConfig","serverConfig$","switchMap","timer","E","buildServerConfig","fetchServerConfig","MemoryStorageService","store","BroadcasterMessagingService","broadcasterService","subscriber","arg","command","setDate","toDateTimeLocalString","filterStart","filterEnd","ev","EventOptions","appInfo","getAppInfo","getEventMessage","humanReadableMsg","formatCipherId","getShortId","formatCollectionId","formatGroupId","formatOrgUserId","formatPolicyId","p1","formatProviderUserId","formatProviderOrganizationId","Android","iOS","UWP","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","shortId","cipherInfo","makeAnchor","setAttribute","outerHTML","createElement","innerHTML","pad","norm","abs","HtmlStorageService","localStorage","getItem","sessionStorage","setItem","removeItem","ContainerService","attachToGlobal","bitwardenContainerService","getEncryptService","InitService","notificationsService","vaultTimeoutService","eventLoggingService","themingService","location","origin","ModalService","componentFactoryResolver","applicationRef","el","modalOpen","setupHandlers","onCreated","first","modals","querySelectorAll","modal","show","shown","focus","closed","onClose","PasswordRepromptComponent","PasswordRepromptService","PolicyListService","addPolicies","AccountSettings","Account","StateService","getRememberEmail","rememberEmail","setRememberEmail","FileDownloadBuilder","_request","fileType","downloadMethod","fileNameLower","endsWith","WebFileDownloadService","isSafari","createObjectURL","style","position","appendChild","click","removeChild","ClientType","WebPlatformUtilsService","browserCache","userAgent","chrome","Web","isFirefox","isChrome","isEdge","isOpera","isVivaldi","isMacAppStore","launchUri","sameWindow","rel","supportsWebAuthn","PublicKeyCredential","supportsDuo","showDialog","confirmText","cancelText","bodyIsHtml","iconClasses","bootstrapModal","querySelector","removeAttribute","iconHtmlStr","undefined","confirmed","heightAuto","buttonsStyling","icon","iconHtml","html","titleText","showCancelButton","cancelButtonText","showConfirmButton","confirmButtonText","copyToClipboard","doc","clipboardData","setData","queryCommandSupported","textarea","textContent","copyEl","contains","select","execCommand","debug","console","warn","readFromClipboard","supportsBiometric","authenticateBiometric","CoreModule","parentModule","initService","multi","systemLanguage","localesDirectory","getLocalesJson","_locale","ReplaySubject","supportedTranslationLocales","localeNames","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","p2","p3","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","content","replaceToken","replaceContent","filePath","localesResult","migrationStateFrom1To2","RouterService","router","activatedRoute","titleService","previousUrl","currentUrl","child","firstChild","titleId","snapshot","rawTitle","updateUrl","doNotSaveUrl","newTitle","setTitle","setPreviousUrl","getPreviousUrl","OrganizationCreateModule","OrganizationPermissionsGuard","canActivate","route","createUrlTree","isOwner","permissionsCallback","organizationPermissions","root","queryParamMap","queryParams","itemId","canAccessMembersTab","canManageUsersPassword","canAccessGroupsTab","canManageGroups","canAccessReportingTab","canAccessReports","canAccessBillingTab","canManageBilling","canAccessSettingsTab","canAccessOrgAdmin","PoliciesModule","PolicyRequest","BasePolicy","display","BasePolicyComponent","setValue","policyResponse","loadData","patchValue","buildRequestData","policiesEnabledMap","DisableSendPolicy","DisableSendPolicyComponent","MasterPasswordPolicy","MasterPasswordPolicyComponent","formBuilder","group","showKeyConnectorInfo","passwordScores","PasswordGeneratorPolicy","PasswordGeneratorPolicyComponent","defaultTypes","PersonalOwnershipPolicy","PersonalOwnershipPolicyComponent","RequireSsoPolicy","RequireSsoPolicyComponent","singleOrgEnabled","ResetPasswordPolicy","ResetPasswordPolicyComponent","SendOptionsPolicy","SendOptionsPolicyComponent","disableHideEmail","SingleOrgPolicy","SingleOrgPolicyComponent","TwoFactorAuthenticationPolicy","TwoFactorAuthenticationPolicyComponent","PolicyEditComponent","policyApiService","cdr","onSavedPolicy","ngAfterViewInit","load","factory","resolveComponentFactory","policyComponent","policyFormRef","createComponent","instance","detectChanges","Enabled","formPromise","emit","edit","PoliciesComponent","policyListService","parent","qParams","policyIdFromEvents","orgPolicy","orgPolicies","op","openViewRef","editModalRef","comp","OrganizationUpdateRequest","CountBasedLocalizationKey","singular","plural","count","OrganizationContentSummaryItem","localizationKeyOptions","localizationKey","OrganizationContentSummary","totalItemCount","itemCountByType","DeleteOrganizationComponent","organizationApiService","deleteOrganizationRequestType","organizationContentSummary","onSuccess","buildOrganizationContentSummary","organizationItems","cipherType","getOrganizationItemCountByType","getOrganizationItemLocalizationKeysByType","viewApiKey","AccountComponent","selfHosted","canUseApi","orgShareKey","deleteOrganization","deleteModalRef","navigate","purgeVault","purgeModalRef","apiKeyModalRef","postKey","bind","grantType","apiKeyTitle","apiKeyWarning","apiKeyDescription","rotateApiKeyModalRef","isRotation","recoveryCode","manage","TwoFactorSetupComponent","duoComp","openModal","duoModalRef","onUpdated","updateStatus","filterProvider","routes","children","pathMatch","redirectTo","canManagePolicies","loadChildren","m","OrganizationImportExportModule","OrganizationSettingsRoutingModule","OrganizationSettingsModule","SettingsComponent","destroy$","ngOnDestroy","complete","copy","checkPassword","upgradeOrganization","removeUri","launch","loginUriMatchChanged","addUri","toggleCardNumber","toggleCardCode","organizationChanged","viewHistory","repromptChanged","toggleFavorite","AddEditComponent","auditService","totpService","passwordGenerationService","passwordRepromptService","allowOwnershipAssignment","ownershipOptions","allowPersonal","cloneMode","canEditAnyCollection","editMode","loadCollections","loadCipher","encryptCipher","saveCipher","HasPremiumGuard","routerState","userHasPremium","BreachReportComponent","checkedUsername","ReportBreach","ReportExposedPasswords","ReportInactiveTwoFactor","ReportReusedPasswords","ReportUnsecuredWebsites","ReportWeakPasswords","ReportType","reports","ExposedPasswords","ReusedPasswords","WeakPasswords","UnsecuredWebsites","Inactive2fa","DataBreach","ReportsSharedModule","ReportsHomeComponent","reportRequiresPremium","variant","ReportsLayoutComponent","homepage","ReportsRoutingModule","ReportsModule","CipherReportComponent","requiresPaid","hasLoaded","setCiphers","selectCipher","repromptCipher","childComponent","cipherAddEditModalRef","onSavedCipher","onDeletedCipher","onRestoredCipher","checkAccess","ExposedPasswordsReportComponent","exposedPasswordMap","allCiphers","getAllCiphers","exposedPasswordCiphers","exposedCount","canManageCipher","InactiveTwoFactorReportComponent","services","cipherDocs","load2fa","inactive2faCiphers","docs","service","serviceData","documentation","additionalDomain","ReusedPasswordsReportComponent","ciphersWithPasswords","passwordUseMap","reusedPasswordCiphers","UnsecuredWebsitesReportComponent","unsecuredCiphers","WeakPasswordsReportComponent","passwordStrengthMap","passwordStrengthCache","weakPasswordCiphers","isUserNameNotEmpty","getCacheKey","hasUserName","userInput","atPosition","score","scoreKey","ReportVariant","BitIconComponent","domSanitizer","innerHtml","svg","bypassSecurityTrustHtml","ReportCardComponent","requiresPremium","ReportListComponent","StorageRequest","AdjustStorageComponent","storageGbPrice","onAdjusted","onCanceled","storageAdjustment","storageGbAdjustment","paymentFailed","paymentComponent","handleStripeCardPayment","relativeTo","adjustedStorageTotal","ApiKeyComponent","TransactionType","BillingHistoryComponent","transactionType","billing","paymentMethodClasses","VerifyBankRequest","BitPayInvoiceRequest","AddCreditComponent","showOptions","onAdded","ppLoading","payPalConfig","ppButtonFormAction","ppButtonBusinessId","creditAmount","ppButtonCustomField","subject","returnUrl","ppButtonFormRef","nativeElement","credit","creditAmountNumber","bitPayUrl","formatAmount","floatAmount","parseFloat","toFixed","PaymentRequest","AdjustPaymentComponent","createPaymentToken","paymentToken","taxInfoComponent","taxInfo","changeCountry","hideBank","changeMethod","addCredit","closeAddCredit","changePayment","closePayment","submitTaxInfo","PaymentMethodComponent","firstLoaded","showAdjustPayment","showAddCredit","verifyBankForm","amount1","amount2","forOrganization","billingPromise","orgPromise","paymentSourceInApp","verifyBankPromise","taxFormPromise","isCreditBalance","creditOrBalance","headerClass","paymentSourceClasses","bank","lightInputColor","lightInputPlaceholderColor","darkInputColor","darkInputPlaceholderColor","PaymentComponent","showMethods","hidePaypal","hideCredit","trialFlow","routing_number","account_number","account_holder_name","account_holder_type","currency","btInstance","stripe","stripeElements","stripeCardNumberElement","stripeCardExpiryElement","stripeCardCvcElement","stripeScript","src","async","Stripe","elements","setStripeElement","btScript","StripeElementStyle","color","fontFamily","fontSize","fontSmoothing","invalid","StripeElementClasses","empty","head","btStylesheet","braintree","dropin","authorization","container","paymentOptionPriority","paypal","flow","buttonStyle","label","shape","tagline","createErr","requestPaymentMethod","nonce","handleCardSetup","setupIntent","payment_method","createToken","successCallback","handleCardPayment","paymentIntent","classes","placeholder","mount","takeUntil","PurgeVaultComponent","TaxInfoComponent","onCountryChanged","includeTaxId","pristine","taxRates","taxRate","localTaxRate","getTaxInfoRequest","hasChanged","TwoFactorProviderRequest","TwoFactorBaseComponent","twoFactorProviderType","auth","authResponse","hashedSecret","verificationType","enable","enableFunction","buildRequestModel","UpdateTwoFactorDuoRequest","TwoFactorDuoComponent","processResponse","ikey","skey","DeviceVerificationRequest","UpdateTwoFactorAuthenticatorRequest","TwoFactorAuthenticatorComponent","qrScript","QRious","element","getElementById","UpdateTwoFactorEmailRequest","sendEmail","TwoFactorEmailComponent","emailPromise","sentEmail","print","TwoFactorRecoveryComponent","w","write","onafterprint","formatString","UpdateTwoFactorWebAuthnDeleteRequest","UpdateTwoFactorWebAuthnRequest","readKey","TwoFactorWebAuthnComponent","ngZone","keyIdAvailable","keysConfiguredCount","webAuthnResponse","removePromise","challengePromise","readDevice","webAuthnChallenge","resetWebAuthn","run","webAuthnListening","webAuthnError","listening","configured","UpdateTwoFactorYubioOtpRequest","TwoFactorYubiKeyComponent","disablePromise","existingKey","padRight","character","showPolicyWarning","canAccessPremium","deviceVerificationSettings","enableDeviceVerification","evaluatePolicies","authenticatorModalRef","yubikeyModalRef","emailModalRef","webAuthnModalRef","recoveryModalRef","TwoFactorVerifyComponent","onAuthed","UpdateLicenseComponent","files","updatePromise","LooseComponentsModule","BadgeModule","ButtonModule","CalloutModule","MenuModule","SubmitButtonModule","IconModule","TabsModule","SharedModule","addFieldType","linkedFieldOptions","fieldType","addFieldTypeOptions","addFieldLinkedTypeOption","ngOnChanges","changes","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","newField","removeField","toggleFieldValue","showValue","trackByFunction","drop","previousIndex","currentIndex","linkedFieldOption","i18nKey","TrueFalseValueDirective","elementRef","renderer","trueValue","falseValue","propagateChange","_","onHostChange","checked","writeValue","setProperty","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","AddEditCustomFieldsComponent","onCancelled","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","onGenerateUsername","showCardNumber","showCardCode","currentDate","canUseReprompt","typeOptions","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","uriMatchOptions","autofillOnPageLoadOptions","myEmail","writeableCollections","previousCipherId","share","editCollections","deletePromise","restorePromise","restoreCipher","toggleUriOptions","organizationUseTotp","checkPasswordPromise","showRevisionDate","hasPasswordHistory","viewingPasswordHistory","viewOnly","passwordRevisionDisplayDate","cleanUp","totpUpdateCode","totpTick","totpInterval","canLaunch","typeI18nKey","aType","showGetPremium","clearInterval","totpCode","half","totpCodeFormatted","intervalSeconds","totpSec","totpDash","totpLow","OrganizationBadgeModule","VaultFilterSharedModule","VaultFilterService","_collapsedFilterNodes","collapsedFilterNodes$","buildCollapsedFilterNodes","storeCollapsedFilterNodes","collapsedFilterNodes","ensureVaultFiltersAreExpanded","buildAdminCollections","collectionResponse","collectionDomains","noneCollection","nestedCollections","fullList","nestedList","VaultFilterModule","getFlags","envFlags","flag","flags","EmergencyAccessAcceptRequest","BaseAcceptComponent","requiredParameters","failedShortMessage","failedMessage","errorMessage","authedHandler","unauthedHandler","AcceptEmergencyComponent","actionPromise","OrganizationUserAcceptRequest","AcceptOrganizationComponent","prepareAcceptRequest","orgName","performResetPasswordAutoEnroll","encryptedKey","policyList","PasswordHintRequest","HintComponent","successRoute","onSuccessfulSubmit","pinLock","webVaultHostname","invalidPinAttempts","activeAccountSubscription","handlePinRequiredUnlock","handleMasterPasswordRequiredUnlock","unlockBiometric","biometricLock","doContinue","input","isStable","onStable","take","doUnlockWithPin","failed","setKeyAndContinue","doUnlockWithMasterPassword","passwordValid","decPin","hideInput","vaultUrl","LockComponent","routerService","navigateByUrl","PasswordLogInCredentials","SsoLogInCredentials","CaptchaIFrame","iframeId","errorCallback","infoCallback","parseFunction","parseMessage","connectorLink","sendMessage","iframe","contentWindow","postMessage","base64Encode","fromCharCode","cleanup","removeEventListener","createParams","URLSearchParams","initComponent","addEventListener","validMessage","parsedMessage","height","CaptchaProtectedComponent","setupCaptcha","captcha","showCaptcha","handleCaptchaRequired","twoFactorRoute","forcePasswordResetRoute","alwaysRememberEmail","selfHostedDomain","focusInput","onSuccessfulLoginTwoFactorNavigate","onSuccessfulLoginForceResetNavigate","onSuccessfulLoginNavigate","launchSsoBrowser","ssoRedirectUri","passwordOptions","numbers","codeVerifierHash","codeChallenge","webUrl","LoginComponent","showResetPasswordAutoEnrollWarning","goAfterLogIn","invite","resetPasswordPolicy","enforcedPasswordPolicyOptions","strengthResult","getPasswordStrengthUserInput","masterPasswordScore","policiesData","DeleteRecoverRequest","RecoverDeleteComponent","TwoFactorRecoveryRequest","RecoverTwoFactorComponent","InputsFieldMatch","matchTo","inputsMatchError","inputsDoesntMatchError","fieldMatchTo","formGroup","fieldCtrl","fieldMatchToCtrl","setErrors","RegisterRequest","referenceData","formValidationErrorService","isInTrialFlow","createdAccount","showTerms","showErrorSummary","confirmMasterPassword","hint","validateInputsDoesntMatch","acceptPolicies","acceptPoliciesValidation","validator","validateFormInputsMatch","accountCreated","registerAccount","buildRegisterRequest","successful","captchaRequired","getStrengthResult","passwordStrengthResult","getPasswordScoreText","getErrorToastMessage","shift","errorTag","required","validateRegistration","markAllAsTouched","hasError","errorText","orgInvite","loginResponse","ReferenceEventRequest","PasswordStrengthComponent","showText","passwordScoreColor","scoreWidth","updatePasswordStrength","masterPasswordScoreColor","masterPasswordScoreText","masterPasswordStrengthTimeout","setPasswordScoreText","BitErrorSummary","errorCount","getErrorCount","errorString","form","acc","dirty","untouched","RegisterFormComponent","referenceDataValue","queryParamEmail","RegisterComponent","showCreateOrgMessage","layout","reference","cookie","continuing","leaving","convert","RemovePasswordComponent","OrganizationUserResetPasswordEnrollmentRequest","SetPasswordRequest","strongPassword","setupSubmitActions","performSubmitActions","masterPasswordRetype","syncLoading","resetPasswordAutoEnroll","onSetPasswordSuccess","userEncKey","resetRequest","onSuccessfulChangePassword","confirmField","SetPasswordComponent","loggingIn","changePasswordRoute","checkState","getOrgIdentifierFromState","returnUri","includeUserIdentifier","initiateSsoFormPromise","authorizeUrl","buildAuthorizeUrl","userIdentifier","orgIdFromState","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","SsoComponent","storedIdentifier","ProductType","VerticalStep","subLabel","applyBorder","VerticalStepContentComponent","onSelectStep","selected","selectStep","selectStepByIndex","VerticalStepperComponent","activeClass","isNextButtonHidden","steps","selectedIndex","isStepDisabled","completed","changedBusinessOwned","OrganizationInformationComponent","nameOnly","createOrganization","isProvider","acceptingSponsorship","LogoForbesComponent","LogoUSNewsComponent","EnterpriseContentComponent","TeamsContentComponent","ConfirmationDetailsComponent","OrganizationCreateRequest","OrganizationUpgradeRequest","ProviderOrganizationCreateRequest","clientOwnerEmail","organizationCreateRequest","changedProduct","changedCountry","changedOwnedBusiness","OrganizationPlansComponent","showFree","showCancel","Free","onTrialBillingSuccess","productTypes","singleOrgPolicyBlock","discount","businessOwned","premiumAccessAddon","additionalStorage","additionalSeats","plans","Enterprise","Teams","Families","addValidators","selectedPlan","selectedPlanInterval","selectableProducts","validPlans","familyPlan","selectablePlans","additionalStoragePriceMonthly","seatPriceMonthly","additionalStorageTotal","seatTotal","subtotal","subTotal","freeTrial","taxCharges","taxComponent","total","paymentDesc","userHasBlockingSingleOrgPolicy","doSubmit","collectionCt","createSelfHosted","createCloudHosted","updateOrganization","subLabelText","billingSubLabelText","additionalStorageGb","billingAddressCountry","billingAddressPostalCode","collectionName","tokenResult","taxIdNumber","billingAddressLine1","billingAddressLine2","billingAddressCity","billingAddressState","providerRequest","price","BillingComponent","previousStep","orgInfoForm","stepBack","DefaultContentComponent","Enterprise1ContentComponent","Enterprise2ContentComponent","Teams1ContentComponent","Teams2ContentComponent","LogoCnetComponent","CnetEnterpriseContentComponent","CnetIndividualContentComponent","CnetTeamsContentComponent","AbmEnterpriseContentComponent","AbmTeamsContentComponent","billingSuccess","stepSelectionChange","navigateToOrgVault","navigateToOrgInvite","TrialInitiationComponent","titleCasePipe","orgInfoSubLabel","orgLabel","billingSubLabel","accountCreateOnly","validOrgs","orgInfoFormGroup","referenceDataId","referenceId","setupFamilySponsorship","transform","previouslySelectedIndex","verticalStepper","previous","WebAuthnIFrame","webAuthnNewTab","btnText","allow","webAuthnReady","providerType","selectedProviderType","webAuthnSupported","webAuthn","twoFactorEmail","loginRoute","webAuthnAllow","authing","needsLock","getDefaultProvider","cleanupWebAuthn","providerData","authWebAuthn","Host","sig_request","Signature","submit_callback","sig","Email","doToast","Window","onProviderSelected","onRecoverSelected","getSupportedProviders","choose","recover","TwoFactorOptionsComponent","TwoFactorComponent","anotherMethod","twoFactorOptionsModal","PasswordRequest","currentMasterPassword","newMasterPasswordHash","UpdatePasswordComponent","OrganizationUserResetPasswordRequest","UpdateTempPasswordRequest","newPasswordHash","newEncKey","UpdateTempPasswordComponent","VerifyEmailRequest","VerifyEmailTokenComponent","VerifyDeleteRecoverRequest","VerifyRecoverDeleteComponent","HomeGuard","FrontendLayoutComponent","FooterComponent","MenuItemDirective","role","tabIndex","MenuComponent","ngAfterContentInit","keyManager","menuItems","withWrap","MenuTriggerForDirective","viewContainerRef","overlay","isOpen","hasPopup","defaultMenuConfig","panelClass","hasBackdrop","backdropClass","scrollStrategy","scrollStrategies","reposition","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","withLockedPosition","withFlexibleDimensions","withPush","toggleMenu","destroyMenu","openMenu","disposeAll","menu","overlayRef","templatePortal","attach","closedEventsSub","getClosedEvents","keyDownEventsSub","keydownEvents","onKeydown","detachments","escKey","backdrop","backdropClick","menuClosed","mergeWith","dispose","MenuDividerComponent","NavbarComponent","buildOrganizations","UserLayoutComponent","TabGroupComponent","TabItemComponent","baseClassList","activeClassList","OrganizationSwitcherComponent","activeOrganization","BroadcasterSubscriptionId","OrganizationLayoutComponent","showSettingsTab","showMembersTab","showGroupsTab","showReportsTab","showBillingTab","reportTabLabel","reportRoute","SelectionReadOnlyRequest","check","selectedChanged","filterSelected","EntityUsersComponent","onEditedUsers","organizationUserType","organizationUserStatusType","showSelected","selectedCount","allUsers","loadUsers","users","searchedUsers","searchText","scrollViewportStyle","entity","selections","GroupRequest","selectAll","GroupAddEditComponent","onSavedGroup","onDeletedGroup","access","loadMore","GroupsComponent","didScroll","pageSize","pagedGroupsCount","resetPaging","pagedLength","pagedGroups","pagedSize","addEditModalRef","removeGroup","usersModalRef","entityName","isSearching","isPaging","searching","OrganizationUserBulkRequest","OrganizationUserConfirmRequest","UserConfirmComponent","onConfirmedUser","dontAskAgain","fingerprint","BasePeopleComponent","validationService","searchPipe","userNamePipe","statusMap","pagedUsers","activeUsers","pagedUsersCount","allCount","invitedCount","userStatusType","Invited","acceptedCount","Accepted","confirmedCount","Confirmed","revokedCount","Revoked","showConfirmUsers","showBulkConfirmUsers","getUsers","checkUser","filteredUsers","selectCount","removeUserConfirmationDialog","deleteUser","removeUser","showError","revoke","revokeWarningMessage","revokeUser","restoreUser","reinvite","reinviteUser","confirm","confirmUser","mapIndex","updateUser","publicKeyResponse","autoConfirm","confirmModalRef","getCheckedUsers","OrganizationUserBulkConfirmRequest","publicKeys","fingerprints","statuses","done","excludedUsers","isAccepted","getPublicKeys","entry","getCryptoKey","userIdsWithKeys","postConfirmRequest","deleteUsers","removeUsersWarning","BulkRestoreRevokeComponent","isRevoking","bulkTitle","titleKey","performBulkUserAction","bulkMessage","BulkStatusComponent","EntityEventsComponent","showUser","orgUsersUserIdMap","orgUsersIdMap","ResetPasswordComponent","onPasswordReset","loggedOutWarningName","passwordStrengthComponent","orgSymKey","decPrivateKey","OrganizationUserInviteRequest","emails","OrganizationUserUpdateRequest","NestedCheckboxComponent","onSavedUser","onDeletedUser","parentIndeterminate","parentChecked","checkboxes","pascalize","handleDependentPermissions","UserAddEditComponent","onRevokedUser","onRestoredUser","isRevoked","showCustom","manageAllCollectionsCheckboxes","createNewCollections","editAnyCollection","deleteAnyCollection","manageAssignedCollectionsCheckboxes","editAssignedCollections","deleteAssignedCollections","customUserTypeSelected","setRequestPermissions","clearPermissions","manageResetPassword","manageUsers","OrganizationUserUpdateGroupsRequest","groupIds","UserGroupsComponent","userGroups","ug","bulkConfirm","resetPassword","PeopleComponent","userType","accessEvents","accessGroups","canResetPassword","orgUseResetPassword","orgHasKeys","orgResetPasswordPolicyEnabled","callingUserType","viewEvents","allowResetPassword","orgUser","callingUserHasPermission","showEnrolledStatus","groupsModalRef","bulkRemove","bulkRemoveModalRef","bulkRevoke","bulkRevokeOrRestore","bulkRestore","bulkReinvite","showBulkStatus","bulkConfirmModalRef","eventsModalRef","resetPasswordModalRef","warningMessage","successfullMessage","bulkStatusModalRef","onShown","keyedErrors","keyedFilteredUsers","PipesModule","VaultService","calculateSearchBarLocalizationString","vaultFilter","selectedFolderId","selectedCollection","selectedOrganizationId","myVaultOnly","VaultSharedModule","VaultFilter","selectedFolder","refreshCollectionsAndFolders","resetFilter","selectedCollectionId","resetOrganization","buildFilter","cipherPassesFilter","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","hasUpdatedKey","fileEl","saveCipherAttachment","cipherDomain","downloading","canAccessAttachments","reuploadCipherAttachment","foundAttachment","a2","reupload","showFixOldAttachments","AttachmentsComponent","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","searchPlaceholder","searchPending","searchTimeout","deletedFilter","applyFilter","reload","refresh","indexedCiphers","doSearch","rightClickCipher","addCipher","addCipherOptions","EllipsisPipe","completeWords","ellipsis","OrganizationNameBadgeComponent","onOrganizationClicked","profileName","textColor","emitOnOrganizationClicked","GetOrgNameFromIdPipe","clone","checkCipher","showAddNew","onAttachmentsClicked","onShareClicked","onCollectionsClicked","onCloneClicked","onOrganzationBadgeClicked","pagedCiphers","userHasPremiumAccess","pagedCiphersCount","refreshing","permanent","displayTotpCopyButton","viewPassword","getSelected","getSelectedIds","hasOldAttachments","CiphersComponent","onEventsClicked","canViewAllCollections","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","CollectionsComponent","vaultFilterService","activeFilter","hideFolders","hideCollections","hideFavorites","hideTrash","hideOrganizations","onFilterChange","onAddFolder","onEditFolder","isLoaded","displayCollections","activePersonalOwnershipPolicy","checkForPersonalOwnershipPolicy","activeSingleOrganizationPolicy","checkForSingleOrganizationPolicy","buildNestedFolders","initCollections","buildCollections","toggleFilterNodeCollapseState","node","reloadCollectionsAndFolders","pruneInvalidatedFilterSelections","reloadOrganizations","addFolder","editFolder","pruneInvalidFolderSelection","pruneInvalidCollectionSelection","hasId","hide","onNodeCollapseStateChange","collectionsGrouping","collectionNodes","isCollapsed","toggleCollapse","CollectionFilterComponent","foldersGrouping","folderNodes","nestedFolders","FolderFilterComponent","cipherStatus","StatusFilterComponent","selectedCipherType","typesNode","cipherTypeEnum","TypeFilterComponent","organizationGrouping","displayMode","hasActiveFilter","applyOrganizationFilter","applyMyVaultFilter","clearFilter","EnrollMasterPasswordReset","toastStringRef","keyString","LinkSsoComponent","toggleResetPasswordEnrollment","unlinkSso","OrganizationOptionsComponent","allowEnrollmentChanges","OrganizationFilterComponent","displayText","searchTextChanged","onSearchTextChanged","VaultFilterComponent","BulkDeleteComponent","cipherIds","onDeleted","deleteCiphersAdmin","deleteCiphers","deleteRequest","BulkMoveComponent","onMoved","BulkRestoreComponent","onRestored","BulkShareComponent","onShared","nonShareableCount","shareableCiphers","allCollections","filterCollections","checkedCollectionIds","canSave","bulkMove","bulkShare","BulkActionsComponent","bulkDelete","promptPassword","selectedIds","ciphersComponent","bulkDeleteModalRef","bulkRestoreModalRef","selectedCiphers","bulkShareModalRef","bulkMoveModalRef","VaultComponent","changeDetectorRef","vaultService","trashCleanupWarning","vaultFilterComponent","getCipherIdFromParams","editCipherId","queryParamsHandling","applyVaultFilter","go","filterSearchText","editCipherAttachments","madeAttachmentChanges","attachmentsModalRef","onClosed","editCipherCollections","collectionsModalRef","editCipher","cloneCipher","replaceUrl","VaultRoutingModule","VaultModule","OrganizationReportingModule","OrganizationBillingModule","OrganizationsRoutingModule","PlanSponsorshipType","AcceptFamilySponsorshipComponent","register","OrganizationSponsorshipRedeemRequest","FamiliesForEnterpriseSetupComponent","badToken","showNewOrganization","_selectedFamilyOrganizationId","organizationPlansComponent","onOrganizationCreateSuccess","existingFamilyOrganizations","selectedFamilyOrganizationId","planSponsorshipType","FamiliesForEnterprise","sponsoredOrganizationId","SendAccessView","SendAccess","SendAccessRequest","toggleText","copyText","AccessComponent","sendType","passwordRequired","unavailable","sendText","maskedText","downloadData","accessRequest","keyArray","sendAccess","disableSend","filteredSends","hasSearched","onSuccessfulLoad","applyTextSearch","removePassword","onSuccessfulRemovePassword","onSuccessfulDelete","link","urlB64Key","clearSelections","selectedAll","selectType","selectedType","BrowserPath","DateField","DatePreset","datePipe","onSavedSend","onDeletedSend","copyLink","alertShown","sendLinkBaseUrl","isDateTimeLocalSupported","setDates","loadSend","hasPassword","encryptSend","encSend","uploadPromise","copySuccess","copyLinkToClipboard","typeChanged","toggleOptions","togglePasswordVisible","datesChanged","datesForm","selectedDeletionDatePreset","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","Custom","expirationDatePresets","Never","browserPath","Firefox","Safari","Default","formattedDeletionDate","miliseconds","formattedExpirationDate","safariDeletionTimePresetOptions","safariTimePresetOptions","DeletionDate","safariExpirationTimePresetOptions","ExpriationDate","nextWeek","setInitialFormValues","emitDates","valueChanges","onDeletionDatePresetSelect","clearExpiration","initialDeletionDate","toTimeString","initialExpirationDate","twentyFourHour","noon","midnight","ams","pms","h","hour","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","EffluxDatesComponent","editSend","addSend","SendComponent","sendAddEditModalRef","DeauthorizeSessionsComponent","DeleteAccountComponent","accountService","deleteForm","EmailTokenRequest","EmailRequest","reset","ChangeEmailComponent","tokenSent","showTwoFactorEmailWarning","newEmail","UpdateProfileRequest","ProfileComponent","showChangeEmail","deauthorizeSessions","deauthModalRef","CreateOrganizationComponent","orgPlansComponent","UpdateDomainsRequest","toggleExcluded","customize","DomainRulesComponent","custom","globalDomain","excludedGlobalEquivalentDomains","d2","indexTrackBy","EmergencyAccessAttachmentsComponent","EmergencyAddEditComponent","viewAttachments","EmergencyAccessViewComponent","oldKeyBuffer","keyEncrypted","oldEncKey","cipherData","EmergencyAccessStatusType","EmergencyAccessType","EmergencyAccessConfirmRequest","EmergencyAccessInviteRequest","EmergencyAccessUpdateRequest","EmergencyAccessAddEditComponent","onSaved","View","emergencyAccessType","waitTimes","emergencyAccess","waitTime","waitTimeDays","EmergencyAccessConfirmComponent","onConfirmed","EmergencyAccessPasswordRequest","EmergencyAccessTakeoverComponent","onDone","takeoverResponse","approve","requestAccess","takeover","EmergencyAccessComponent","emergencyAccessStatusType","isOrganizationOwner","trustedContacts","grantedContacts","contact","doConfirmation","granteeId","removeGrantee","removeGrantor","RecoveryInitiated","RecoveryApproved","takeoverModalRef","hours","CUSTOM_VALUE","exceedsMinimumTimout","customTimeInMinutes","MIN_CUSTOM_MINUTES","vaultTimeoutPolicy","vaultTimeoutPolicyHours","vaultTimeoutPolicyMinutes","vaultTimeouts","validatorChange","onChange","current","onTouched","validate","policyError","minTimeoutError","registerOnValidatorChange","VaultTimeoutInputComponent","PreferencesComponent","localeOptions","themeOptions","enableFavicons","startingLocale","startingTheme","valid","vaultTimeoutActionChanged","newValue","FolderWithIdRequest","SendWithIdRequest","UpdateKeyRequest","ChangePasswordComponent","rotateEncKey","rotateEncKeyClicked","updateKey","updateEmergencyAccesses","updateAllResetPasswordKeys","allowedStatuses","filteredAccesses","updateRequest","KdfRequest","ChangeKdfComponent","kdfOptions","recommendedKdfIterations","SecurityKeysComponent","showChangeKdf","viewUserApiKey","viewUserApiKeyModalRef","rotateUserApiKey","rotateUserApiKeyModalRef","SecurityComponent","showChangePassword","SecurityRoutingModule","hasFamilySponsorshipAvailable","hasPremiumFromOrg","hideSubscription","notAllowedValueAsync","valueGetter","caseInsensitive","notAllowedValue","controlValue","resendEmail","SponsoringOrgRowComponent","sponsoringOrg","isSelfHosted","sponsorshipRemoved","statusMessage","statusClass","setStatus","revokeSponsorship","revokeSponsorshipPromise","doRevokeSponsorship","resendEmailPromise","isSentAwaitingSync","toDelete","validUntil","SponsoredFamiliesComponent","availableSponsorshipOrgs","activeSponsorshipOrgs","sponsorshipForm","selectedSponsorshipOrgId","validators","sponsorshipEmail","asyncValidators","updateOn","sponsoredEmail","friendlyName","resetForm","forceReload","allOrgs","sponsorshipEmailControl","anyActiveSponsorships","anyOrgsAvailable","BillingHistoryViewComponent","PremiumComponent","premiumPrice","finalizePremium","paymentResponse","SubscriptionComponent","hasPremium","subscriptionRoute","closeUpdateLicense","downloadLicense","adjustStorage","closeStorage","UserSubscriptionComponent","adjustStorageAdd","showAdjustStorage","showUpdateLicense","reinstatePromise","cancelPromise","licenseString","subscriptionMarkedForCancel","nextInvoice","storagePercentage","storageProgressWidth","SubscriptionRoutingModule","usernameGenerationService","comingFromAddEdit","onSelected","usernameOptions","avoidAmbiguous","usernameWebsite","passTypeOptions","usernameTypeOptions","desc","subaddressOptions","catchallOptions","forwardOptions","passwordOptionsResponse","websiteOption","regenerateWithoutButtonPress","regenerate","regeneratePassword","regenerateUsername","sliderChanged","savePasswordOptions","sliderInput","normalizePasswordOptions","saveUsernameOptions","usernameGeneratingPromise","copyOptions","SelectCopyDirective","onCopy","selection","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","ColorPasswordPipe","generateTemplate","templateGenerator","passwordArray","colorizedPassword","isSpecial","PasswordGeneratorHistoryComponent","lengthChanged","minNumberChanged","minSpecialChanged","GeneratorComponent","findIndex","historyModalRef","ToolsComponent","UpdateKeyComponent","makeRequest","onSavedFolder","onDeletedFolder","FolderAddEditComponent","onSharedCipher","cipherView","ShareComponent","VerifyEmailComponent","showVerifyEmail","showBrowserOutdated","showUpdateKey","showPremiumCallout","filterComponent","isShowingCards","shareCipher","shareModalRef","folderAddEditModalRef","updateKeyModalRef","favorites","flagName","ImportExportModule","OssRoutingModule","useHash","paramsInheritanceStrategy","VerticalStepperModule","TrialInitiationModule","OrganizationManageModule","OrganizationUserModule","OssModule","WildcardRoutingModule","ProviderAddOrganizationRequest","WebProviderService","addOrganizationToProvider","encryptedOrgKey","detachOrganizastion","AddOrganizationComponent","webProviderService","onAddedOrganization","ProviderPermissionsGuard","providerPermissions","ProvidersComponent","addExistingOrganization","DisallowedPlanTypes","ClientsComponent","manageOrganizations","showAddExisting","pagedClientsCount","clients","candidateOrgs","allowedOrgsIds","addableOrganizations","pagedClients","addModalRef","ProviderUserAcceptRequest","AcceptProviderComponent","EventsComponent","providerUsersUserIdMap","providerUsersIdMap","ManageComponent","ProviderUserBulkRequest","ProviderUserConfirmRequest","ProviderUserBulkConfirmRequest","BulkConfirmComponent","BulkRemoveComponent","ProviderUserInviteRequest","ProviderUserUpdateRequest","ProvidersLayoutComponent","showMenuBar","showManageTab","manageRoute","ProviderUpdateRequest","SetupProviderComponent","ProviderSetupRequest","SetupComponent","ProvidersRoutingModule","ProvidersModule","registerComponentFactoryResolver","SecretsManagerModule","AppRoutingModule","toastrService","sanitizer","lastActivity","idleTimer","isIdle","lang","runOutsideAngular","onmousemove","recordActivity","onmousedown","ontouchstart","onclick","onscroll","onkeypress","setFullWidth","idleStateChanged","sanitize","enableHtml","trustedHtml","timeOut","DisablePersonalVaultExportPolicy","DisablePersonalVaultExportPolicyComponent","MaximumVaultTimeoutPolicy","MaximumVaultTimeoutPolicyComponent","AppComponent","ScimConfigApi","scimProvider","ScimConfigRequest","copyScimUrl","rotateScimKey","copyScimKey","ScimComponent","showScimSettings","formData","endpointUrl","connection","setConnectionFormValues","loadApiKey","apiKeyRequest","apiKeyResponse","getScimEndpointUrl","rotatePromise","existingConnectionId","OrganizationSsoRequest","SsoConfigView","openId","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","saml","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpWantAuthnRequestsSigned","idpAllowOutboundLogoutRequests","idpDisableOutboundLogoutRequests","InputStripSpacesDirective","onInput","CopyClickDirective","valueToCopy","onClick","LaunchClickDirective","uriToLaunch","BaseCvaComponent","controlDir","internalControl","onValueChangesInternal","valueAccessor","describedById","showDescribedBy","controlId","helperText","isRequired","hasValidator","onBlurInternal","InputCheckboxComponent","validateKeyConnectorUrl","toggleOpenIdCustomizations","defaultSigningAlgorithm","ssoType","ssoTypeOptions","samlSigningAlgorithms","saml2SigningBehaviourOptions","saml2BindingTypeOptions","saml2NameIdFormatOptions","connectRedirectOptions","destory$","showOpenIdCustomizations","haveTestedKeyConnector","openIdForm","samlForm","ssoConfigForm","newType","updateValueAndValidity","ssoSettings","populateForm","validateForm","readOutErrors","getRawValue","markAsPending","invalidUrl","enableTestKeyConnector","samlSigningAlgorithmOptions","markAsDirty","markAsTouched","ssoConfigView","errorCountText","div","className","innerText","existing","canManageSso","canManageScim","OrganizationsModule","AppModule","bootstrapModule","preserveWhitespaces","AvatarComponent","charCount","fontWeight","dynamic","circle","chars","upperData","getFirstLetters","unicodeSafeSubstring","charObj","getCharText","getSvg","svgHtml","unescape","svgTag","backgroundColor","textTag","characters","CalloutComponent","useAlertRole","calloutStyle","enforcedPolicyMessage","getPasswordScoreAlertDisplay","FallbackSrcDirective","onError","appFallbackSrc","cardIcons","Visa","Mastercard","Amex","Discover","JCB","Maestro","UnionPay","RuPay","Mir","IconComponent","image","fallbackImage","imageEnabled","setLoginIcon","setCardIcon","hostnameUri","isWebsite","ModalRef","_onCreated","_onClose","_onClosed","_onShow","_onShown","onShow","lastResult","toPromise","UserVerificationComponent","disableRequestOTP","sentCode","processChanges","opacity","A11yTitleDirective","appA11yTitle","hasAttribute","ApiActionDirective","appApiAction","AutofocusDirective","appAutofocus","condition","autofocus","InputVerbatimDirective","appInputVerbatim","disableComplete","StopClickDirective","$event","preventDefault","StopPropDirective","stopPropagation","AuthGuard","promptBiometric","LockGuard","loginpage","UnauthGuard","BitwardenToast","toastPackage","BitwardenToastGlobalConfig","toastComponent","BitwardenToastModule","ngModule","default","numberFormats","cardLength","blocks","Other","CreditCardNumberPipe","creditCardNumber","rules","matchingRule","chunks","JslibModule","forRoot","maxOpened","autoDismiss","closeButton","I18nPipe","SearchPipe","prop1","prop2","prop3","UserNamePipe","DynamicModalComponent","cd","focusTrapFactory","loadChildComponent","childComponentType","setComponentParameters","componentRef","focusTrap","focusFirstTabbableElementWhenReady","componentType","componentFactory","modalContentRef","destroy","getFocus","autoFocusEl","ModalInjector","_parentInjector","_additionalTokens","notFoundValue","ModalConfig","modalList","factoryResolvers","modalCount","topModal","modalComponentRef","openInternal","insert","hostView","replaceTopModal","closeAll","attachToDom","createModalComponent","attachView","domElem","rootNodes","detachView","modalEl","dialogEl","zIndex","prepend","closeElement","WeakMap","AbstractThemingService","ValidationService","defaultErrorMessage","validationErrors","getAllMessages","DynamicTreeNode","transformation","storedFolders","orgCiphers","oc","getAllFoldersNested","storedCollections","folderCopy","getFolderNested","AccountService","ApiService","AppIdService","AuthService","CollectionService","CryptoFunctionService","EnvironmentService","EventService","ExportService","FileDownloadService","FolderApiServiceAbstraction","FolderService","InternalFolderService","FormValidationErrorsService","I18nService","KeyConnectorService","LogService","MessagingService","NotificationsService","OrganizationService","OrganizationApiServiceAbstraction","PasswordGenerationService","PlatformUtilsService","PolicyApiServiceAbstraction","PolicyService","InternalPolicyService","ProviderService","SendService","SettingsService","TotpService","TwoFactorService","UserVerificationService","UsernameGenerationService","VaultTimeoutService","VaultTimeoutSettingsService","AuthenticationStatus","AuthenticationType","CipherRepromptType","CipherType","EncryptionType","EventType","FieldType","HashPurpose","KdfType","DEFAULT_KDF_TYPE","PBKDF2_SHA256","DEFAULT_KDF_ITERATIONS","SEND_KDF_ITERATIONS","KeySuffixOptions","LoginLinkedId","CardLinkedId","IdentityLinkedId","OrganizationApiKeyType","OrganizationConnectionType","OrganizationUserStatusType","OrganizationUserType","PaymentMethodType","PlanType","PolicyType","ProviderUserStatusType","ProviderUserType","SecureNoteType","SendType","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","ThemeType","TwoFactorProviderType","UriMatchType","VerificationType","LinkedMetadata","_i18nKey","TreeNode","ServiceUtils","nodeTree","partIndex","delimiter","partName","nestedTraverse","newPartName","getTreeNodeObject","getDomain","nodeURL","Utils","isNode","process","release","isBrowser","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","binaryString","atob","charCodeAt","fromB64ToArray","fromUrlB64ToB64","strUtf8","fromB64toUrlB64","fromBufferToB64","b64Str","encodedString","decodeURIComponent","escape","call","urlB64Str","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","uriString","getUrl","httpUrl","tldEndingRegex","getUrlObject","validIpAddress","urlDomain","pair","source","bgColor","threshold","svgTextFill","bgColorHexNums","ipString","mobile","vendor","opera","hasProtocol","anchor","regexpEmojiPresentation","CardApi","FieldApi","IdentityApi","LoginApi","LoginUriApi","PermissionsApi","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageScim","SecureNoteApi","SendFileApi","SendTextApi","SsoConfigApi","view","AttachmentData","CardData","CipherData","CollectionData","FieldData","IdentityData","LoginData","LoginUriData","PasswordHistoryData","PolicyData","SecureNoteData","Attachment","decryptAttachmentKey","getKeyForDecryption","toAttachmentData","buildDataModel","Card","toCardData","Cipher","decAttachment","decField","decPh","toLoginData","toSecureNoteData","toIdentityData","toFieldData","toPasswordHistoryData","Collection","Domain","dataObj","notEncList","objProp","notEncStringList","viewModel","mapProp","EncArrayBuffer","minimumLength","ENC_TYPE_LENGTH","throwDecryptionError","arrayBuffer","b64","EncString","encryptedStringOrType","initFromData","initFromEncryptedString","parseEncryptedString","decryptedValue","Field","Folder","Identity","Login","toLoginUriData","LoginUri","MasterPasswordPolicyOptions","Organization","isManager","isAdmin","canAccessImportExport","canCreateNewCollections","canDeleteAnyCollection","canEditAssignedCollections","canDeleteAssignedCollections","canViewAssignedCollections","hasProvider","Password","Policy","SecureNote","SendFile","SendText","SymmetricCryptoKey","CardExport","FieldExport","IdentityExport","LoginUriExport","LoginExport","toView","toDomain","SecureNoteExport","CipherExport","CipherWithIdExport","CollectionExport","CollectionWithIdExport","FolderExport","FolderWithIdExport","CipherBulkDeleteRequest","CipherCollectionsRequest","CipherCreateRequest","AttachmentRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","CipherWithIdRequest","FolderRequest","TokenRequestTwoFactor","KeysRequest","OrganizationApiKeyRequest","OrganizationConnectionRequest","OrganizationKeysRequest","OrganizationTaxInfoUpdateRequest","SecretVerificationRequest","SendRequest","fileLength","TaxInfoUpdateRequest","TwoFactorEmailRequest","AttachmentResponse","BaseResponse","propertyName","exactName","otherCasePropertyName","PasswordHistoryResponse","CipherResponse","EmergencyAccessGranteeDetailsResponse","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","EmergencyAccessViewResponse","ErrorResponse","identityResponse","errorModel","responseErrorModel","messages","lastSep","PolicyResponse","AttachmentView","CardView","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","formatYear","CipherView","linkedFieldValue","linkedFieldI18nKey","CollectionView","FieldView","showCount","maskedValue","FolderView","IdentityView","_firstName","_lastName","fullName","fullAddress","fullAddressPart2","addressPart2","ItemView","CanLaunchWhitelist","LoginUriView","_uri","_domain","_hostname","_host","_canLaunch","hostnameOrUri","hostOrUri","LoginView","maskedPassword","PasswordHistoryView","SecureNoteView","SendFileView","SendTextView","SendView","maxAccessCountReached","pendingDelete","LogLevelType","ConsoleLogService","timersMap","Debug","Info","Warning","level","TwoFactorProviders","priority","selectedTwoFactorProviderType","twoFactorProvidersData","providerPriority","_value","setSelectedProvider","clearProviders","styles","primary","secondary","danger","hoverStyles","BadgeDirective","badgeType","hasHoverEffects","nodeName","buttonStyles","ButtonDirective","buttonType","block","defaultIcon","defaultI18n","calloutClass","nextId","BitErrorComponent","displayError","requiredLength","BitFormFieldComponent","ngAfterContentChecked","ariaDescribedBy","InputModule","FormFieldModule","BitHintComponent","BitLabel","PrefixClasses","BitPrefixDirective","BitSuffixDirective","Icon","isIcon","DynamicContentNotAllowedError","svgIcon","strings","BitInputDirective","ngControl","hasPrefix","hasSuffix","ariaInvalid","_required","touched","SubmitButtonComponent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","definition","defineProperty","enumerable","chunkId","miniCssF","globalThis","Function","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","nc","onScriptComplete","prev","doneFns","parentNode","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}